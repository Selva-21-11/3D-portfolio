{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TitleBG = () => {\n  _s();\n  const sceneRef = useRef(null);\n  const rendererRef = useRef(null);\n  const cubeRef = useRef(null);\n  useEffect(() => {\n    // Set up scene, camera, and renderer\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.getElementById('hero').appendChild(renderer.domElement);\n    rendererRef.current = renderer;\n    sceneRef.current = scene;\n\n    // Create some 3D content (like a cube)\n    const geometry = new THREE.BoxGeometry();\n    const material = new THREE.MeshBasicMaterial({\n      color: 0x00ff00\n    });\n    const cube = new THREE.Mesh(geometry, material);\n    cubeRef.current = cube;\n\n    // Move the cube to the center of the scene\n    cube.position.set(0, 0, 0); // Set cube's position to (0, 0, 0), which is the center of the scene\n\n    scene.add(cube);\n\n    // Attempt to restore the camera position from localStorage\n    const savedCameraPosition = JSON.parse(localStorage.getItem('cameraPosition'));\n    if (savedCameraPosition) {\n      camera.position.set(savedCameraPosition.x, savedCameraPosition.y, savedCameraPosition.z);\n    } else {\n      camera.position.z = 5; // Default position\n    }\n\n    // Animation loop\n    const animate = () => {\n      if (cubeRef.current) {\n        cubeRef.current.rotation.x += 0.01;\n        cubeRef.current.rotation.y += 0.01;\n      }\n      renderer.render(scene, camera);\n      requestAnimationFrame(animate);\n    };\n    animate();\n\n    // Save camera position to localStorage when the component unmounts\n    return () => {\n      localStorage.setItem('cameraPosition', JSON.stringify(camera.position));\n      renderer.dispose();\n      geometry.dispose();\n      material.dispose();\n      scene.remove(cubeRef.current);\n      cubeRef.current = null;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(TitleBG, \"WAJ04QmbZ2fIL8crpFQX9XCs6iI=\");\n_c = TitleBG;\nexport default TitleBG;\nvar _c;\n$RefreshReg$(_c, \"TitleBG\");","map":{"version":3,"names":["React","useRef","useEffect","THREE","Fragment","_Fragment","jsxDEV","_jsxDEV","TitleBG","_s","sceneRef","rendererRef","cubeRef","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","document","getElementById","appendChild","domElement","current","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","position","set","add","savedCameraPosition","JSON","parse","localStorage","getItem","x","y","z","animate","rotation","render","requestAnimationFrame","setItem","stringify","dispose","remove","_c","$RefreshReg$"],"sources":["F:/Portfolio/3D-portfolio/src/components/TitleBG.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nconst TitleBG = () => {\r\n  const sceneRef = useRef(null);\r\n  const rendererRef = useRef(null);\r\n  const cubeRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Set up scene, camera, and renderer\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    const renderer = new THREE.WebGLRenderer();\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    document.getElementById('hero').appendChild(renderer.domElement);\r\n    rendererRef.current = renderer;\r\n    sceneRef.current = scene;\r\n\r\n    // Create some 3D content (like a cube)\r\n    const geometry = new THREE.BoxGeometry();\r\n    const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n    const cube = new THREE.Mesh(geometry, material);\r\n    cubeRef.current = cube;\r\n\r\n    // Move the cube to the center of the scene\r\n    cube.position.set(0, 0, 0);  // Set cube's position to (0, 0, 0), which is the center of the scene\r\n\r\n    scene.add(cube);\r\n\r\n    // Attempt to restore the camera position from localStorage\r\n    const savedCameraPosition = JSON.parse(localStorage.getItem('cameraPosition'));\r\n    if (savedCameraPosition) {\r\n      camera.position.set(savedCameraPosition.x, savedCameraPosition.y, savedCameraPosition.z);\r\n    } else {\r\n      camera.position.z = 5; // Default position\r\n    }\r\n\r\n    // Animation loop\r\n    const animate = () => {\r\n      if (cubeRef.current) {\r\n        cubeRef.current.rotation.x += 0.01;\r\n        cubeRef.current.rotation.y += 0.01;\r\n      }\r\n      renderer.render(scene, camera);\r\n      requestAnimationFrame(animate);\r\n    };\r\n    animate();\r\n\r\n    // Save camera position to localStorage when the component unmounts\r\n    return () => {\r\n      localStorage.setItem('cameraPosition', JSON.stringify(camera.position));\r\n      renderer.dispose();\r\n      geometry.dispose();\r\n      material.dispose();\r\n      scene.remove(cubeRef.current);\r\n      cubeRef.current = null;\r\n    };\r\n  }, []);\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default TitleBG;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMU,WAAW,GAAGV,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMW,OAAO,GAAGX,MAAM,CAAC,IAAI,CAAC;EAE5BC,SAAS,CAAC,MAAM;IACd;IACA,MAAMW,KAAK,GAAG,IAAIV,KAAK,CAACW,KAAK,CAAC,CAAC;IAC/B,MAAMC,MAAM,GAAG,IAAIZ,KAAK,CAACa,iBAAiB,CAAC,EAAE,EAAEC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC;IACjG,MAAMC,QAAQ,GAAG,IAAIjB,KAAK,CAACkB,aAAa,CAAC,CAAC;IAC1CD,QAAQ,CAACE,OAAO,CAACL,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACvDI,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAACC,WAAW,CAACL,QAAQ,CAACM,UAAU,CAAC;IAChEf,WAAW,CAACgB,OAAO,GAAGP,QAAQ;IAC9BV,QAAQ,CAACiB,OAAO,GAAGd,KAAK;;IAExB;IACA,MAAMe,QAAQ,GAAG,IAAIzB,KAAK,CAAC0B,WAAW,CAAC,CAAC;IACxC,MAAMC,QAAQ,GAAG,IAAI3B,KAAK,CAAC4B,iBAAiB,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,CAAC;IACjE,MAAMC,IAAI,GAAG,IAAI9B,KAAK,CAAC+B,IAAI,CAACN,QAAQ,EAAEE,QAAQ,CAAC;IAC/ClB,OAAO,CAACe,OAAO,GAAGM,IAAI;;IAEtB;IACAA,IAAI,CAACE,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAE;;IAE7BvB,KAAK,CAACwB,GAAG,CAACJ,IAAI,CAAC;;IAEf;IACA,MAAMK,mBAAmB,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAAC;IAC9E,IAAIJ,mBAAmB,EAAE;MACvBvB,MAAM,CAACoB,QAAQ,CAACC,GAAG,CAACE,mBAAmB,CAACK,CAAC,EAAEL,mBAAmB,CAACM,CAAC,EAAEN,mBAAmB,CAACO,CAAC,CAAC;IAC1F,CAAC,MAAM;MACL9B,MAAM,CAACoB,QAAQ,CAACU,CAAC,GAAG,CAAC,CAAC,CAAC;IACzB;;IAEA;IACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;MACpB,IAAIlC,OAAO,CAACe,OAAO,EAAE;QACnBf,OAAO,CAACe,OAAO,CAACoB,QAAQ,CAACJ,CAAC,IAAI,IAAI;QAClC/B,OAAO,CAACe,OAAO,CAACoB,QAAQ,CAACH,CAAC,IAAI,IAAI;MACpC;MACAxB,QAAQ,CAAC4B,MAAM,CAACnC,KAAK,EAAEE,MAAM,CAAC;MAC9BkC,qBAAqB,CAACH,OAAO,CAAC;IAChC,CAAC;IACDA,OAAO,CAAC,CAAC;;IAET;IACA,OAAO,MAAM;MACXL,YAAY,CAACS,OAAO,CAAC,gBAAgB,EAAEX,IAAI,CAACY,SAAS,CAACpC,MAAM,CAACoB,QAAQ,CAAC,CAAC;MACvEf,QAAQ,CAACgC,OAAO,CAAC,CAAC;MAClBxB,QAAQ,CAACwB,OAAO,CAAC,CAAC;MAClBtB,QAAQ,CAACsB,OAAO,CAAC,CAAC;MAClBvC,KAAK,CAACwC,MAAM,CAACzC,OAAO,CAACe,OAAO,CAAC;MAC7Bf,OAAO,CAACe,OAAO,GAAG,IAAI;IACxB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOpB,OAAA,CAAAF,SAAA,mBAAI,CAAC;AACd,CAAC;AAACI,EAAA,CAzDID,OAAO;AAAA8C,EAAA,GAAP9C,OAAO;AA2Db,eAAeA,OAAO;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}