{"version":3,"file":"907.d4940930b0ba02fb1a11.js","mappings":"mqCAGA,MAAMA,EAAoB,CACxBC,OAAQ,CAAEC,QAAS,EAAGC,EAAG,IACzBC,QAAS,CACPF,QAAS,EACTC,EAAG,EACHE,WAAY,CACVC,SAAU,GACVC,KAAM,UACNC,KAAM,iBACNC,gBAAiB,MAKjBC,EAAe,CACnBT,OAAQ,CAAEC,QAAS,EAAGC,EAAG,IACzBC,QAAS,CACPF,QAAS,EACTC,EAAG,EACHE,WAAY,CAAEC,SAAU,GAAKC,KAAM,aAyFvC,EArFuBI,KACrB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CAAEC,KAAM,GAAIC,MAAO,GAAIC,QAAS,MAClEC,EAAQC,IAAaL,EAAAA,EAAAA,UAAS,IAE/BM,GAAeC,EAAAA,EAAAA,cAAaC,IAChC,MAAM,KAAEP,EAAI,MAAEQ,GAAUD,EAAEE,OAC1BX,GAAaY,GAAQC,EAAAA,EAAA,GAAWD,GAAQ,IAAE,CAACV,GAAOQ,KAAS,GAC1D,IAsBH,OACEI,EAAAA,cAACC,EAAAA,EAAOC,QAAO,CACbC,UAAU,kBACVC,GAAG,UACHC,SAAUhC,EACViC,QAAQ,SACRC,YAAY,UACZC,SAAU,CAAEC,MAAM,EAAMC,OAAQ,KAEhCV,EAAAA,cAACC,EAAAA,EAAOU,IAAG,CAACR,UAAU,kBAAkBE,SAAUtB,GAChDiB,EAAAA,cAAA,MAAIG,UAAU,iBAAgB,gBAC9BH,EAAAA,cAAA,KAAGG,UAAU,uBAAsB,sHAInCH,EAAAA,cAACC,EAAAA,EAAOW,KAAI,CAACT,UAAU,eAAeU,SAnCvBC,UACnBnB,EAAEoB,iBACFvB,EAAU,cAEV,IACE,MAAMwB,QAAiBC,MAAM,GAADC,aAAIC,GAAAA,kBAAoC,wBAAuB,eAAe,CACxGC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUvC,KAGjBwC,QAAaT,EAASU,OAC5BlC,EAAUiC,EAAKE,QAAU,6BAA+B,2BACpDF,EAAKE,SAASzC,EAAY,CAAEE,KAAM,GAAIC,MAAO,GAAIC,QAAS,IAChE,CAAE,MAAOsC,GACPC,QAAQD,MAAM,oBAAqBA,GACnCpC,EAAU,yBACZ,GAkBkEsC,YAAU,EAACzB,SAAUtB,GACjFiB,EAAAA,cAACC,EAAAA,EAAO8B,MAAK,CACXC,KAAK,OACL5C,KAAK,OACL6C,YAAY,YACZrC,MAAOX,EAASG,KAChB8C,SAAUzC,EACV0C,UAAQ,EACR,aAAW,YACX9B,SAAUtB,IAEZiB,EAAAA,cAACC,EAAAA,EAAO8B,MAAK,CACXC,KAAK,QACL5C,KAAK,QACL6C,YAAY,aACZrC,MAAOX,EAASI,MAChB6C,SAAUzC,EACV0C,UAAQ,EACR,aAAW,aACX9B,SAAUtB,IAEZiB,EAAAA,cAACC,EAAAA,EAAOmC,SAAQ,CACdhD,KAAK,UACL6C,YAAY,eACZI,KAAK,IACLzC,MAAOX,EAASK,QAChB4C,SAAUzC,EACV0C,UAAQ,EACR,aAAW,eACX9B,SAAUtB,IAEZiB,EAAAA,cAACC,EAAAA,EAAOqC,OAAM,CAACN,KAAK,SAAS7B,UAAU,cAAcE,SAAUtB,GAAc,iBAI9EQ,GAAUS,EAAAA,cAACC,EAAAA,EAAOsC,EAAC,CAACpC,UAAU,iBAAiBE,SAAUtB,GAAeQ,IAE5D,C","sources":["webpack://my-3d-portfolio/./src/components/ContactSection.js"],"sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { motion } from \"framer-motion\";\n\nconst containerVariants = {\n  hidden: { opacity: 0, y: 60 },\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      duration: 0.8,\n      ease: \"easeOut\",\n      when: \"beforeChildren\",\n      staggerChildren: 0.2,\n    },\n  },\n};\n\nconst itemVariants = {\n  hidden: { opacity: 0, y: 20 },\n  visible: {\n    opacity: 1,\n    y: 0,\n    transition: { duration: 0.6, ease: \"easeOut\" },\n  },\n};\n\nconst ContactSection = () => {\n  const [formData, setFormData] = useState({ name: \"\", email: \"\", message: \"\" });\n  const [status, setStatus] = useState(\"\");\n\n  const handleChange = useCallback((e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({ ...prevData, [name]: value }));\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setStatus(\"Sending...\");\n\n    try {\n      const response = await fetch(`${import.meta.env.VITE_BACKEND_URL || \"http://localhost:5000\"}/send-email`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(formData),\n      });\n\n      const data = await response.json();\n      setStatus(data.success ? \"Message sent successfully!\" : \"Failed to send message.\");\n      if (data.success) setFormData({ name: \"\", email: \"\", message: \"\" });\n    } catch (error) {\n      console.error(\"Submission Error:\", error);\n      setStatus(\"Error sending message.\");\n    }\n  };\n\n  return (\n    <motion.section\n      className=\"contact-section\"\n      id=\"contact\"\n      variants={containerVariants}\n      initial=\"hidden\"\n      whileInView=\"visible\"\n      viewport={{ once: true, amount: 0.1 }}\n    >\n      <motion.div className=\"contact-content\" variants={itemVariants}>\n        <h2 className=\"contact-title\">Get in Touch</h2>\n        <p className=\"contact-description\">\n          Have a project in mind? Want to collaborate? Just say hello!\n          Fill in the form below and Iâ€™ll get back to you soon.\n        </p>\n        <motion.form className=\"contact-form\" onSubmit={handleSubmit} noValidate variants={itemVariants}>\n          <motion.input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Your Name\"\n            value={formData.name}\n            onChange={handleChange}\n            required\n            aria-label=\"Your Name\"\n            variants={itemVariants}\n          />\n          <motion.input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Your Email\"\n            value={formData.email}\n            onChange={handleChange}\n            required\n            aria-label=\"Your Email\"\n            variants={itemVariants}\n          />\n          <motion.textarea\n            name=\"message\"\n            placeholder=\"Your Message\"\n            rows=\"4\"\n            value={formData.message}\n            onChange={handleChange}\n            required\n            aria-label=\"Your Message\"\n            variants={itemVariants}\n          />\n          <motion.button type=\"submit\" className=\"contact-btn\" variants={itemVariants}>\n            Send Message\n          </motion.button>\n        </motion.form>\n        {status && <motion.p className=\"contact-status\" variants={itemVariants}>{status}</motion.p>}\n      </motion.div>\n    </motion.section>\n  );\n};\n\nexport default ContactSection;\n"],"names":["containerVariants","hidden","opacity","y","visible","transition","duration","ease","when","staggerChildren","itemVariants","ContactSection","formData","setFormData","useState","name","email","message","status","setStatus","handleChange","useCallback","e","value","target","prevData","_objectSpread","React","motion","section","className","id","variants","initial","whileInView","viewport","once","amount","div","form","onSubmit","async","preventDefault","response","fetch","concat","import","method","headers","body","JSON","stringify","data","json","success","error","console","noValidate","input","type","placeholder","onChange","required","textarea","rows","button","p"],"sourceRoot":""}