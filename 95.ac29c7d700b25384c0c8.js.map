{"version":3,"file":"95.ac29c7d700b25384c0c8.js","mappings":"wpCAEA,MA8FA,EA9FyBA,KACrB,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,QAC1CC,EAAcC,IAAmBF,EAAAA,EAAAA,UAAS,KAC1CG,EAAeC,IAAoBJ,EAAAA,EAAAA,UAAS,KAC5CK,EAAcC,IAAmBN,EAAAA,EAAAA,UAAS,MAE3CO,EAAQ,CACV,CAAEC,GAAI,EAAGC,KAAM,QAASC,IAAK,mCAC7B,CACIF,GAAI,EACJC,KAAM,QACNC,IAAK,6CACLC,UAAW,oDAEf,CAAEH,GAAI,EAAGC,KAAM,QAASC,IAAK,mCAC7B,CACIF,GAAI,EACJC,KAAM,QACNC,IAAK,6CACLC,UAAW,oDAEf,CAAEH,GAAI,EAAGC,KAAM,SAAUC,IAAK,qDAC9B,CAAEF,GAAI,EAAGC,KAAM,SAAUC,IAAK,uDAGlCE,EAAAA,EAAAA,YAAU,KACNR,EAAiBH,EAAaY,KAAIC,GAAIC,EAAAA,EAAA,GAAUD,GAAI,IAAEE,UAAU,OAEhEC,YAAW,KACP,MAAMC,EAA4B,QAAjBpB,EAAyBS,EAAQA,EAAMY,QAAOL,GAAQA,EAAKL,OAASX,IACrFI,EAAgBgB,GAChBd,EAAiBc,EAASL,KAAIC,GAAIC,EAAAA,EAAA,GAAUD,GAAI,IAAEE,UAAU,MAAU,GACvE,IAAI,GACR,CAAClB,IAEJ,MACMsB,EAAaA,IAAMd,EAAgB,MAEzC,OACIe,EAAAA,cAAA,OAAKC,UAAU,qBACXD,EAAAA,cAAA,OAAKC,UAAU,oBACXD,EAAAA,cAAA,UAAI,WACJA,EAAAA,cAAA,SAAG,gDAGPA,EAAAA,cAAA,OAAKC,UAAU,qBACV,CAAC,MAAO,QAAS,QAAS,UAAUT,KAAIM,GACrCE,EAAAA,cAAA,UACIE,IAAKJ,EACLG,UAAS,iBAAAE,OAAmB1B,IAAiBqB,EAAS,SAAW,IACjEM,QAASA,IAAM1B,EAAgBoB,IAE9BA,EAAOO,OAAO,GAAGC,cAAgBR,EAAOS,MAAM,OAK3DP,EAAAA,cAAA,OAAKC,UAAU,0BACXD,EAAAA,cAAA,OAAKC,UAAU,kBACVnB,EAAcU,KAAIC,GACfO,EAAAA,cAAA,OACIE,IAAKT,EAAKN,GACVc,UAAS,kBAAAE,OAAoBV,EAAKE,SAAW,WAAa,WAC1DS,QAASA,IA5BdX,IAASR,EAAgBQ,GA4BLe,CAAUf,IAEzBO,EAAAA,cAAA,OAAKC,UAAU,wBACK,UAAdR,EAAKL,MAAkC,WAAdK,EAAKL,OAC5BY,EAAAA,cAAA,OAAKX,IAAKI,EAAKJ,IAAKoB,IAAI,mBAEb,UAAdhB,EAAKL,MACFY,EAAAA,cAAA,OAAKX,IAAKI,EAAKH,UAAWmB,IAAI,0BAQrDzB,GACGgB,EAAAA,cAAA,OAAKC,UAAU,kBAAkBG,QAASL,GACtCC,EAAAA,cAAA,OAAKC,UAAU,0BAA0BG,QAAUM,GAAMA,EAAEC,mBAChC,UAAtB3B,EAAaI,KACVY,EAAAA,cAAA,SAAOX,IAAKL,EAAaK,IAAKuB,UAAQ,EAACC,UAAQ,IAE/Cb,EAAAA,cAAA,OAAKX,IAAKL,EAAaK,IAAKoB,IAAI,eAEpCT,EAAAA,cAAA,UAAQC,UAAU,wBAAwBG,QAASL,GAAY,OAIzE,C","sources":["webpack://my-3d-portfolio/./src/components/PortfolioSection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst PortfolioSection = () => {\n    const [activeFilter, setActiveFilter] = useState('all');\n    const [displayItems, setDisplayItems] = useState([]);\n    const [renderedItems, setRenderedItems] = useState([]);\n    const [selectedItem, setSelectedItem] = useState(null);\n\n    const items = [\n        { id: 1, type: 'image', src: 'https://via.placeholder.com/300' },\n        { \n            id: 2, \n            type: 'video', \n            src: 'https://www.w3schools.com/html/mov_bbb.mp4', \n            thumbnail: 'https://via.placeholder.com/300x200?text=Video+1'\n        },\n        { id: 3, type: 'image', src: 'https://via.placeholder.com/300' },\n        { \n            id: 4, \n            type: 'video', \n            src: 'https://www.w3schools.com/html/mov_bbb.mp4', \n            thumbnail: 'https://via.placeholder.com/300x200?text=Video+2'\n        },\n        { id: 5, type: 'poster', src: 'https://via.placeholder.com/300x400?text=Poster+1' },\n        { id: 6, type: 'poster', src: 'https://via.placeholder.com/300x400?text=Poster+2' },\n    ];\n\n    useEffect(() => {\n        setRenderedItems(displayItems.map(item => ({ ...item, removing: true })));\n\n        setTimeout(() => {\n            const filtered = activeFilter === 'all' ? items : items.filter(item => item.type === activeFilter);\n            setDisplayItems(filtered);\n            setRenderedItems(filtered.map(item => ({ ...item, removing: false })));\n        }, 300);\n    }, [activeFilter]);\n\n    const openModal = (item) => setSelectedItem(item);\n    const closeModal = () => setSelectedItem(null);\n\n    return (\n        <div className=\"portfolio-section\">\n            <div className=\"portfolio-header\">\n                <h2>Renders</h2>\n                <p>Explore my image, video, and poster renders</p>\n            </div>\n\n            <div className=\"portfolio-filters\">\n                {['all', 'image', 'video', 'poster'].map(filter => (\n                    <button\n                        key={filter}\n                        className={`filter-button ${activeFilter === filter ? 'active' : ''}`}\n                        onClick={() => setActiveFilter(filter)}\n                    >\n                        {filter.charAt(0).toUpperCase() + filter.slice(1)}\n                    </button>\n                ))}\n            </div>\n\n            <div className=\"portfolio-grid-wrapper\">\n                <div className=\"portfolio-grid\">\n                    {renderedItems.map(item => (\n                        <div\n                            key={item.id}\n                            className={`portfolio-item ${item.removing ? 'fade-out' : 'fade-in'}`}\n                            onClick={() => openModal(item)}\n                        >\n                            <div className=\"portfolio-thumbnail\">\n                                {(item.type === 'image' || item.type === 'poster') && (\n                                    <img src={item.src} alt=\"Portfolio item\" />\n                                )}\n                                {item.type === 'video' && (\n                                    <img src={item.thumbnail} alt=\"Video thumbnail\" />\n                                )}\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n\n            {selectedItem && (\n                <div className=\"portfolio-modal\" onClick={closeModal}>\n                    <div className=\"portfolio-modal-content\" onClick={(e) => e.stopPropagation()}>\n                        {selectedItem.type === 'video' ? (\n                            <video src={selectedItem.src} controls autoPlay />\n                        ) : (\n                            <img src={selectedItem.src} alt=\"Large view\" />\n                        )}\n                        <button className=\"portfolio-modal-close\" onClick={closeModal}>X</button>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default PortfolioSection;\n"],"names":["PortfolioSection","activeFilter","setActiveFilter","useState","displayItems","setDisplayItems","renderedItems","setRenderedItems","selectedItem","setSelectedItem","items","id","type","src","thumbnail","useEffect","map","item","_objectSpread","removing","setTimeout","filtered","filter","closeModal","React","className","key","concat","onClick","charAt","toUpperCase","slice","openModal","alt","e","stopPropagation","controls","autoPlay"],"sourceRoot":""}