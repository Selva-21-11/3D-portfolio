{"version":3,"file":"303.bec550c0db3e86647b33.js","mappings":"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","sources":["webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","webpack://my-3d-portfolio/./src/components/PortfolioSection.js"],"sourcesContent":["\"use client\";\r\nimport { jsx } from 'react/jsx-runtime';\r\nimport * as React from 'react';\r\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\r\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\r\n\r\n/**\r\n * Measurement functionality has to be within a separate component\r\n * to leverage snapshot lifecycle.\r\n */\r\nclass PopChildMeasure extends React.Component {\r\n    getSnapshotBeforeUpdate(prevProps) {\r\n        const element = this.props.childRef.current;\r\n        if (element && prevProps.isPresent && !this.props.isPresent) {\r\n            const size = this.props.sizeRef.current;\r\n            size.height = element.offsetHeight || 0;\r\n            size.width = element.offsetWidth || 0;\r\n            size.top = element.offsetTop;\r\n            size.left = element.offsetLeft;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\r\n     */\r\n    componentDidUpdate() { }\r\n    render() {\r\n        return this.props.children;\r\n    }\r\n}\r\nfunction PopChild({ children, isPresent }) {\r\n    const id = useId();\r\n    const ref = useRef(null);\r\n    const size = useRef({\r\n        width: 0,\r\n        height: 0,\r\n        top: 0,\r\n        left: 0,\r\n    });\r\n    const { nonce } = useContext(MotionConfigContext);\r\n    /**\r\n     * We create and inject a style block so we can apply this explicit\r\n     * sizing in a non-destructive manner by just deleting the style block.\r\n     *\r\n     * We can't apply size via render as the measurement happens\r\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\r\n     * styles directly on the DOM node, we might be overwriting\r\n     * styles set via the style prop.\r\n     */\r\n    useInsertionEffect(() => {\r\n        const { width, height, top, left } = size.current;\r\n        if (isPresent || !ref.current || !width || !height)\r\n            return;\r\n        ref.current.dataset.motionPopId = id;\r\n        const style = document.createElement(\"style\");\r\n        if (nonce)\r\n            style.nonce = nonce;\r\n        document.head.appendChild(style);\r\n        if (style.sheet) {\r\n            style.sheet.insertRule(`\r\n          [data-motion-pop-id=\"${id}\"] {\r\n            position: absolute !important;\r\n            width: ${width}px !important;\r\n            height: ${height}px !important;\r\n            top: ${top}px !important;\r\n            left: ${left}px !important;\r\n          }\r\n        `);\r\n        }\r\n        return () => {\r\n            document.head.removeChild(style);\r\n        };\r\n    }, [isPresent]);\r\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\r\n}\r\n\r\nexport { PopChild };\r\n","\"use client\";\r\nimport { jsx } from 'react/jsx-runtime';\r\nimport * as React from 'react';\r\nimport { useId, useCallback, useMemo } from 'react';\r\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\r\nimport { useConstant } from '../../utils/use-constant.mjs';\r\nimport { PopChild } from './PopChild.mjs';\r\n\r\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\r\n    const presenceChildren = useConstant(newChildrenMap);\r\n    const id = useId();\r\n    const memoizedOnExitComplete = useCallback((childId) => {\r\n        presenceChildren.set(childId, true);\r\n        for (const isComplete of presenceChildren.values()) {\r\n            if (!isComplete)\r\n                return; // can stop searching when any is incomplete\r\n        }\r\n        onExitComplete && onExitComplete();\r\n    }, [presenceChildren, onExitComplete]);\r\n    const context = useMemo(() => ({\r\n        id,\r\n        initial,\r\n        isPresent,\r\n        custom,\r\n        onExitComplete: memoizedOnExitComplete,\r\n        register: (childId) => {\r\n            presenceChildren.set(childId, false);\r\n            return () => presenceChildren.delete(childId);\r\n        },\r\n    }), \r\n    /**\r\n     * If the presence of a child affects the layout of the components around it,\r\n     * we want to make a new context value to ensure they get re-rendered\r\n     * so they can detect that layout change.\r\n     */\r\n    presenceAffectsLayout\r\n        ? [Math.random(), memoizedOnExitComplete]\r\n        : [isPresent, memoizedOnExitComplete]);\r\n    useMemo(() => {\r\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\r\n    }, [isPresent]);\r\n    /**\r\n     * If there's no `motion` components to fire exit animations, we want to remove this\r\n     * component immediately.\r\n     */\r\n    React.useEffect(() => {\r\n        !isPresent &&\r\n            !presenceChildren.size &&\r\n            onExitComplete &&\r\n            onExitComplete();\r\n    }, [isPresent]);\r\n    if (mode === \"popLayout\") {\r\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\r\n    }\r\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\r\n};\r\nfunction newChildrenMap() {\r\n    return new Map();\r\n}\r\n\r\nexport { PresenceChild };\r\n","import { Children, isValidElement } from 'react';\r\n\r\nconst getChildKey = (child) => child.key || \"\";\r\nfunction onlyElements(children) {\r\n    const filtered = [];\r\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\r\n    Children.forEach(children, (child) => {\r\n        if (isValidElement(child))\r\n            filtered.push(child);\r\n    });\r\n    return filtered;\r\n}\r\n\r\nexport { getChildKey, onlyElements };\r\n","\"use client\";\r\nimport { jsx, Fragment } from 'react/jsx-runtime';\r\nimport { useMemo, useRef, useState, useContext } from 'react';\r\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\r\nimport { useConstant } from '../../utils/use-constant.mjs';\r\nimport { PresenceChild } from './PresenceChild.mjs';\r\nimport { usePresence } from './use-presence.mjs';\r\nimport { onlyElements, getChildKey } from './utils.mjs';\r\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\r\n\r\n/**\r\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\r\n *\r\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\r\n *\r\n * Any `motion` components that have an `exit` property defined will animate out when removed from\r\n * the tree.\r\n *\r\n * ```jsx\r\n * import { motion, AnimatePresence } from 'framer-motion'\r\n *\r\n * export const Items = ({ items }) => (\r\n *   <AnimatePresence>\r\n *     {items.map(item => (\r\n *       <motion.div\r\n *         key={item.id}\r\n *         initial={{ opacity: 0 }}\r\n *         animate={{ opacity: 1 }}\r\n *         exit={{ opacity: 0 }}\r\n *       />\r\n *     ))}\r\n *   </AnimatePresence>\r\n * )\r\n * ```\r\n *\r\n * You can sequence exit animations throughout a tree using variants.\r\n *\r\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\r\n * once all `motion` components have finished animating out. Likewise, any components using\r\n * `usePresence` all need to call `safeToRemove`.\r\n *\r\n * @public\r\n */\r\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", propagate = false, }) => {\r\n    const [isParentPresent, safeToRemove] = usePresence(propagate);\r\n    /**\r\n     * Filter any children that aren't ReactElements. We can only track components\r\n     * between renders with a props.key.\r\n     */\r\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\r\n    /**\r\n     * Track the keys of the currently rendered children. This is used to\r\n     * determine which children are exiting.\r\n     */\r\n    const presentKeys = propagate && !isParentPresent ? [] : presentChildren.map(getChildKey);\r\n    /**\r\n     * If `initial={false}` we only want to pass this to components in the first render.\r\n     */\r\n    const isInitialRender = useRef(true);\r\n    /**\r\n     * A ref containing the currently present children. When all exit animations\r\n     * are complete, we use this to re-render the component with the latest children\r\n     * *committed* rather than the latest children *rendered*.\r\n     */\r\n    const pendingPresentChildren = useRef(presentChildren);\r\n    /**\r\n     * Track which exiting children have finished animating out.\r\n     */\r\n    const exitComplete = useConstant(() => new Map());\r\n    /**\r\n     * Save children to render as React state. To ensure this component is concurrent-safe,\r\n     * we check for exiting children via an effect.\r\n     */\r\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\r\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\r\n    useIsomorphicLayoutEffect(() => {\r\n        isInitialRender.current = false;\r\n        pendingPresentChildren.current = presentChildren;\r\n        /**\r\n         * Update complete status of exiting children.\r\n         */\r\n        for (let i = 0; i < renderedChildren.length; i++) {\r\n            const key = getChildKey(renderedChildren[i]);\r\n            if (!presentKeys.includes(key)) {\r\n                if (exitComplete.get(key) !== true) {\r\n                    exitComplete.set(key, false);\r\n                }\r\n            }\r\n            else {\r\n                exitComplete.delete(key);\r\n            }\r\n        }\r\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\r\n    const exitingChildren = [];\r\n    if (presentChildren !== diffedChildren) {\r\n        let nextChildren = [...presentChildren];\r\n        /**\r\n         * Loop through all the currently rendered components and decide which\r\n         * are exiting.\r\n         */\r\n        for (let i = 0; i < renderedChildren.length; i++) {\r\n            const child = renderedChildren[i];\r\n            const key = getChildKey(child);\r\n            if (!presentKeys.includes(key)) {\r\n                nextChildren.splice(i, 0, child);\r\n                exitingChildren.push(child);\r\n            }\r\n        }\r\n        /**\r\n         * If we're in \"wait\" mode, and we have exiting children, we want to\r\n         * only render these until they've all exited.\r\n         */\r\n        if (mode === \"wait\" && exitingChildren.length) {\r\n            nextChildren = exitingChildren;\r\n        }\r\n        setRenderedChildren(onlyElements(nextChildren));\r\n        setDiffedChildren(presentChildren);\r\n        /**\r\n         * Early return to ensure once we've set state with the latest diffed\r\n         * children, we can immediately re-render.\r\n         */\r\n        return;\r\n    }\r\n    if (process.env.NODE_ENV !== \"production\" &&\r\n        mode === \"wait\" &&\r\n        renderedChildren.length > 1) {\r\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\r\n    }\r\n    /**\r\n     * If we've been provided a forceRender function by the LayoutGroupContext,\r\n     * we can use it to force a re-render amongst all surrounding components once\r\n     * all components have finished animating out.\r\n     */\r\n    const { forceRender } = useContext(LayoutGroupContext);\r\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\r\n            const key = getChildKey(child);\r\n            const isPresent = propagate && !isParentPresent\r\n                ? false\r\n                : presentChildren === renderedChildren ||\r\n                    presentKeys.includes(key);\r\n            const onExit = () => {\r\n                if (exitComplete.has(key)) {\r\n                    exitComplete.set(key, true);\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n                let isEveryExitComplete = true;\r\n                exitComplete.forEach((isExitComplete) => {\r\n                    if (!isExitComplete)\r\n                        isEveryExitComplete = false;\r\n                });\r\n                if (isEveryExitComplete) {\r\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\r\n                    setRenderedChildren(pendingPresentChildren.current);\r\n                    propagate && (safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove());\r\n                    onExitComplete && onExitComplete();\r\n                }\r\n            };\r\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\r\n                    ? undefined\r\n                    : false, custom: isPresent ? undefined : custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, children: child }, key));\r\n        }) }));\r\n};\r\n\r\nexport { AnimatePresence };\r\n","import React, { useState, useEffect, useMemo } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\nconst FILTERS = ['all', 'image renders', 'video renders', 'posters', '3d'];\r\n\r\nconst portfolioItems = [\r\n  { id: 1, type: 'image renders', src: './assets/Imagerender1.webp' },\r\n  { id: 5, type: 'image renders', src: './assets/Imagerender2.webp' },\r\n  { id: 6, type: 'image renders', src: './assets/Imagerender2.webp' },\r\n  { id: 7, type: 'image renders', src: './assets/Imagerender2.webp' },\r\n  {\r\n    id: 2,\r\n    type: 'video renders',\r\n    iframe: 'https://www.youtube.com/embed/tZc1T28Oe20?autoplay=1&mute=0&controls=0&modestbranding=0&rel=0&showinfo=1',\r\n    thumbnail: '',\r\n  },\r\n  {\r\n    id: 8,\r\n    type: 'video renders',\r\n    iframe: 'https://www.youtube.com/embed/895sufvfnA0?autoplay=1&mute=0&controls=0&modestbranding=0&rel=0&showinfo=1',\r\n    thumbnail: './assets/Stromscene.png',\r\n  },\r\n  {\r\n    id: 9,\r\n    type: 'video renders',\r\n    iframe: 'https://www.youtube.com/embed/8fPSmTUGj1Q?autoplay=1&mute=0&controls=0&modestbranding=0&rel=0&showinfo=1',\r\n    thumbnail: './assets/perfume.png',\r\n  },\r\n  {\r\n    id: 10,\r\n    type: 'video renders',\r\n    iframe: 'https://www.youtube.com/embed/EVWK63G3Lf8?autoplay=1&mute=0&controls=0&modestbranding=0&rel=0&showinfo=1',\r\n    thumbnail: './assets/Motoranimationthumb.png',\r\n  },\r\n  // { id: 3, type: 'posters', src: './assets/SportsPoster.jpg' },\r\n  { id: 4, type: '3d', iframe: 'https://v3d.net/18s8', thumbnail: './assets/BMW-Config.webp' },\r\n  { id: 11, type: '3d', iframe: 'https://v3d.net/18s1', thumbnail: './assets/Bevelgear.png' },\r\n];\r\n\r\nconst PortfolioSection = () => {\r\n  const [filter, setFilter] = useState('all');\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n\r\n  useEffect(() => {\r\n    document.body.style.overflow = selectedItem ? 'hidden' : 'auto';\r\n  }, [selectedItem]);\r\n\r\n  const filteredItems = useMemo(\r\n    () => (filter === 'all' ? portfolioItems : portfolioItems.filter(item => item.type === filter)),\r\n    [filter]\r\n  );\r\n\r\n  const renderItemContent = (item) => {\r\n    if (item.type === 'image renders' || item.type === 'poster') {\r\n      return <img src={item.src} alt={`${item.type} preview`} loading=\"lazy\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"thumbnail-wrapper\">\r\n        <img src={item.thumbnail} alt={`${item.type} thumbnail`} loading=\"lazy\" />\r\n        {item.type === 'video renders' && <div className=\"play-icon\">▶</div>}\r\n        {item.type === '3d' && <div className=\"model-tag\">3D</div>}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"portfolio-modern-section\"\r\n      initial={{ opacity: 0, y: 80 }}\r\n      whileInView={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 1, ease: 'easeOut' }}\r\n      viewport={{ once: true, amount: 0.3 }}\r\n    >\r\n      {/* Filter Bar */}\r\n      <div className=\"portfolio-filter-bar\">\r\n        {FILTERS.map((type) => (\r\n          <button\r\n            key={type}\r\n            className={`filter-btn ${filter === type ? 'active' : ''}`}\r\n            onClick={() => setFilter(type)}\r\n          >\r\n            {type.charAt(0).toUpperCase() + type.slice(1)}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Grid Items */}\r\n      <motion.div\r\n        className=\"portfolio-grid\"\r\n        variants={{\r\n          animate: { transition: { staggerChildren: 0.1 } },\r\n        }}\r\n        initial=\"initial\"\r\n        animate=\"animate\"\r\n      >\r\n        <AnimatePresence mode=\"wait\">\r\n          {filteredItems.map(item => (\r\n            <motion.div\r\n              key={item.id}\r\n              className=\"portfolio-card\"\r\n              onClick={() =>\r\n                item.type === '3d' ? window.open(item.iframe, '_blank') : setSelectedItem(item)\r\n              }\r\n              variants={{\r\n                initial: { opacity: 0, y: 20, scale: 0.95 },\r\n                animate: { opacity: 1, y: 0, scale: 1 },\r\n                exit: { opacity: 0, y: 20, scale: 0.95 },\r\n              }}\r\n              transition={{ duration: 0.4, ease: 'easeInOut' }}\r\n            >\r\n              {renderItemContent(item)}\r\n            </motion.div>\r\n          ))}\r\n        </AnimatePresence>\r\n      </motion.div>\r\n\r\n      {/* Modal */}\r\n      <AnimatePresence>\r\n        {selectedItem && (\r\n          <motion.div\r\n            className=\"portfolio-modal\"\r\n            onClick={() => setSelectedItem(null)}\r\n            variants={{\r\n              hidden: { opacity: 0 },\r\n              visible: { opacity: 1 },\r\n              exit: { opacity: 0 },\r\n            }}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            exit=\"exit\"\r\n            transition={{ duration: 0.3, ease: 'easeOut' }}\r\n          >\r\n            <motion.div\r\n              className=\"modal-inner\"\r\n              onClick={(e) => e.stopPropagation()}\r\n              variants={{\r\n                hidden: { opacity: 0, scale: 0.95 },\r\n                visible: { opacity: 1, scale: 1 },\r\n                exit: { opacity: 0, scale: 0.95 },\r\n              }}\r\n              initial=\"hidden\"\r\n              animate=\"visible\"\r\n              exit=\"exit\"\r\n              transition={{ duration: 0.3, ease: 'easeOut' }}\r\n            >\r\n{selectedItem.type === 'video renders' || selectedItem.type === '3d' ? (\r\n  <iframe\r\n    src={selectedItem.iframe}\r\n    frameBorder=\"0\"\r\n    allow=\"autoplay; encrypted-media\"\r\n    allowFullScreen\r\n    title={selectedItem.type === '3d' ? '3D Model' : 'Video Player'}\r\n  />\r\n) : (\r\n  <img src={selectedItem.src} alt={`${selectedItem.type} full`} />\r\n)}\r\n\r\n            </motion.div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default PortfolioSection;\r\n"],"names":["PopChildMeasure","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","current","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","id","useId","ref","useRef","nonce","useContext","MotionConfigContext","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","jsx","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","memoizedOnExitComplete","useCallback","childId","set","isComplete","values","context","useMemo","register","delete","Math","random","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","AnimatePresence","propagate","isParentPresent","safeToRemove","presentChildren","presentKeys","map","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","i","length","includes","get","join","exitingChildren","nextChildren","splice","forceRender","LayoutGroupContext","L","Fragment","undefined","has","isEveryExitComplete","isExitComplete","FILTERS","portfolioItems","type","src","iframe","thumbnail","PortfolioSection","filter","setFilter","selectedItem","setSelectedItem","useEffect","body","overflow","filteredItems","item","React","motion","div","className","opacity","y","whileInView","transition","duration","ease","viewport","once","amount","concat","onClick","charAt","toUpperCase","slice","variants","animate","staggerChildren","window","open","scale","exit","alt","loading","renderItemContent","hidden","visible","e","stopPropagation","frameBorder","allow","allowFullScreen","title"],"sourceRoot":""}