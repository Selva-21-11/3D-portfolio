{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { gsap } from 'gsap';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { FilmPass } from 'three/examples/jsm/postprocessing/FilmPass';\nconst TitleBG = () => {\n  _s();\n  const sceneRef = useRef(null);\n  const rendererRef = useRef(null);\n  const cameraRef = useRef(null);\n  const bigSphereRef = useRef(null);\n  const smallSphereRef = useRef(null);\n  const composerRef = useRef(null);\n  useEffect(() => {\n    // Scene and Camera setup\n    const scene = new THREE.Scene();\n    const aspect = window.innerWidth / window.innerHeight;\n    const camera = new THREE.OrthographicCamera(-2 * aspect, 2 * aspect, 2, -2, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.outputEncoding = THREE.sRGBEncoding;\n    document.getElementById('hero').appendChild(renderer.domElement);\n    rendererRef.current = renderer;\n    cameraRef.current = camera;\n    sceneRef.current = scene;\n    camera.position.z = 5;\n\n    // Texture loader and materials with caching\n    const textureLoader = new THREE.TextureLoader();\n    const matcapBigSphere = textureLoader.load('assets/mattext.png'); // Assuming texture is the same\n    const matcapSmallSphere = matcapBigSphere; // Reusing the texture for now\n\n    const bigSphereMaterial = new THREE.MeshMatcapMaterial({\n      matcap: matcapBigSphere\n    });\n    const smallSphereMaterial = new THREE.MeshMatcapMaterial({\n      matcap: matcapSmallSphere\n    });\n\n    // Sphere Geometries\n    const bigSphereGeometry = new THREE.SphereGeometry(1, 32, 32);\n    const smallSphereGeometry = new THREE.SphereGeometry(0.3, 32, 32);\n    const bigSphere = new THREE.Mesh(bigSphereGeometry, bigSphereMaterial);\n    const smallSphere = new THREE.Mesh(smallSphereGeometry, smallSphereMaterial);\n\n    // Set initial scale for animation\n    bigSphere.scale.set(0, 0, 0);\n    smallSphere.scale.set(0, 0, 0);\n    smallSphere.position.set(1, 0, 0);\n    scene.add(bigSphere, smallSphere);\n    bigSphereRef.current = bigSphere;\n    smallSphereRef.current = smallSphere;\n\n    // GSAP Animation for smooth popup effect\n    gsap.timeline({\n      repeat: 0,\n      delay: 0.5\n    }) // Added a slight delay for smoother start\n    .to(bigSphere.scale, {\n      x: 1,\n      y: 1,\n      z: 1,\n      duration: 1.5,\n      ease: 'power3.out'\n    }).to(smallSphere.scale, {\n      x: 1,\n      y: 1,\n      z: 1,\n      duration: 1.5,\n      ease: 'power3.out'\n    }, '<').to(bigSphere.rotation, {\n      x: Math.PI * 0.1,\n      y: Math.PI * 0.1,\n      duration: 1.5,\n      ease: 'power3.inOut'\n    }, '<'); // Add rotation effect for added depth\n\n    // Handle Mouse Move Effect with smoother transition\n    const handleMouseMove = event => {\n      const mouseXPosition = event.clientX / window.innerWidth * 2 - 1;\n      const mouseYPosition = event.clientY / window.innerHeight * 2 - 1;\n      const angleX = mouseXPosition * Math.PI;\n      const angleY = mouseYPosition * Math.PI;\n      const radius = 1;\n      const targetX = radius * Math.cos(angleX);\n      const targetY = radius * Math.sin(angleY);\n      const targetZ = -1;\n      gsap.to(smallSphere.position, {\n        x: targetX,\n        y: targetY,\n        z: targetZ,\n        duration: 0.6,\n        // Smooth out the mouse movement\n        ease: 'power3.out'\n      });\n    };\n    window.addEventListener('mousemove', handleMouseMove);\n\n    // Post-processing setup\n    const composer = new EffectComposer(renderer);\n    composer.addPass(new RenderPass(scene, camera));\n    composer.addPass(new FilmPass(0.2, 0.025, 648, false));\n    composerRef.current = composer;\n\n    // Animation Loop with requestAnimationFrame\n    const animate = () => {\n      composer.render();\n      requestAnimationFrame(animate);\n    };\n    animate();\n\n    // Resize Event Listener with debounce for performance\n    const onWindowResize = () => {\n      const aspect = window.innerWidth / window.innerHeight;\n      camera.left = -2 * aspect;\n      camera.right = 2 * aspect;\n      camera.top = 2;\n      camera.bottom = -2;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    const debounceResize = debounce(onWindowResize, 100); // Debounce resize event for performance\n    window.addEventListener('resize', debounceResize);\n    return () => {\n      // Cleanup on component unmount\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('resize', debounceResize);\n      renderer.dispose();\n      bigSphereGeometry.dispose();\n      bigSphereMaterial.dispose();\n      smallSphereGeometry.dispose();\n      smallSphereMaterial.dispose();\n      scene.clear();\n    };\n  }, []);\n  return null;\n};\n\n// Utility function to debounce resize events\n_s(TitleBG, \"PQQqMr0DFQTW5vKSRBQfYl+2+4U=\");\n_c = TitleBG;\nconst debounce = (func, delay) => {\n  let timer;\n  return function (...args) {\n    if (timer) clearTimeout(timer);\n    timer = setTimeout(() => func(...args), delay);\n  };\n};\nexport default TitleBG;\nvar _c;\n$RefreshReg$(_c, \"TitleBG\");","map":{"version":3,"names":["React","useRef","useEffect","THREE","gsap","EffectComposer","RenderPass","FilmPass","TitleBG","_s","sceneRef","rendererRef","cameraRef","bigSphereRef","smallSphereRef","composerRef","scene","Scene","aspect","window","innerWidth","innerHeight","camera","OrthographicCamera","renderer","WebGLRenderer","antialias","setSize","outputEncoding","sRGBEncoding","document","getElementById","appendChild","domElement","current","position","z","textureLoader","TextureLoader","matcapBigSphere","load","matcapSmallSphere","bigSphereMaterial","MeshMatcapMaterial","matcap","smallSphereMaterial","bigSphereGeometry","SphereGeometry","smallSphereGeometry","bigSphere","Mesh","smallSphere","scale","set","add","timeline","repeat","delay","to","x","y","duration","ease","rotation","Math","PI","handleMouseMove","event","mouseXPosition","clientX","mouseYPosition","clientY","angleX","angleY","radius","targetX","cos","targetY","sin","targetZ","addEventListener","composer","addPass","animate","render","requestAnimationFrame","onWindowResize","left","right","top","bottom","updateProjectionMatrix","debounceResize","debounce","removeEventListener","dispose","clear","_c","func","timer","args","clearTimeout","setTimeout","$RefreshReg$"],"sources":["F:/Portfolio/3D-portfolio/src/components/TitleBG.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { gsap } from 'gsap';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { FilmPass } from 'three/examples/jsm/postprocessing/FilmPass';\n\nconst TitleBG = () => {\n  const sceneRef = useRef(null);\n  const rendererRef = useRef(null);\n  const cameraRef = useRef(null);\n  const bigSphereRef = useRef(null);\n  const smallSphereRef = useRef(null);\n  const composerRef = useRef(null);\n\n  useEffect(() => {\n    // Scene and Camera setup\n    const scene = new THREE.Scene();\n    const aspect = window.innerWidth / window.innerHeight;\n    const camera = new THREE.OrthographicCamera(-2 * aspect, 2 * aspect, 2, -2, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.outputEncoding = THREE.sRGBEncoding;\n    document.getElementById('hero').appendChild(renderer.domElement);\n    rendererRef.current = renderer;\n    cameraRef.current = camera;\n    sceneRef.current = scene;\n    camera.position.z = 5;\n\n    // Texture loader and materials with caching\n    const textureLoader = new THREE.TextureLoader();\n    const matcapBigSphere = textureLoader.load('assets/mattext.png'); // Assuming texture is the same\n    const matcapSmallSphere = matcapBigSphere; // Reusing the texture for now\n\n    const bigSphereMaterial = new THREE.MeshMatcapMaterial({ matcap: matcapBigSphere });\n    const smallSphereMaterial = new THREE.MeshMatcapMaterial({ matcap: matcapSmallSphere });\n\n    // Sphere Geometries\n    const bigSphereGeometry = new THREE.SphereGeometry(1, 32, 32);\n    const smallSphereGeometry = new THREE.SphereGeometry(0.3, 32, 32);\n\n    const bigSphere = new THREE.Mesh(bigSphereGeometry, bigSphereMaterial);\n    const smallSphere = new THREE.Mesh(smallSphereGeometry, smallSphereMaterial);\n\n    // Set initial scale for animation\n    bigSphere.scale.set(0, 0, 0);\n    smallSphere.scale.set(0, 0, 0);\n\n    smallSphere.position.set(1, 0, 0);\n    scene.add(bigSphere, smallSphere);\n    bigSphereRef.current = bigSphere;\n    smallSphereRef.current = smallSphere;\n\n    // GSAP Animation for smooth popup effect\n    gsap.timeline({ repeat: 0, delay: 0.5 }) // Added a slight delay for smoother start\n      .to(bigSphere.scale, { x: 1, y: 1, z: 1, duration: 1.5, ease: 'power3.out' })\n      .to(smallSphere.scale, { x: 1, y: 1, z: 1, duration: 1.5, ease: 'power3.out' }, '<')\n      .to(bigSphere.rotation, { x: Math.PI * 0.1, y: Math.PI * 0.1, duration: 1.5, ease: 'power3.inOut' }, '<');  // Add rotation effect for added depth\n\n    // Handle Mouse Move Effect with smoother transition\n    const handleMouseMove = (event) => {\n      const mouseXPosition = (event.clientX / window.innerWidth) * 2 - 1;\n      const mouseYPosition = (event.clientY / window.innerHeight) * 2 - 1;\n      const angleX = mouseXPosition * Math.PI;\n      const angleY = mouseYPosition * Math.PI;\n      const radius = 1;\n\n      const targetX = radius * Math.cos(angleX);\n      const targetY = radius * Math.sin(angleY);\n      const targetZ = -1;\n\n      gsap.to(smallSphere.position, {\n        x: targetX,\n        y: targetY,\n        z: targetZ,\n        duration: 0.6,  // Smooth out the mouse movement\n        ease: 'power3.out',\n      });\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n\n    // Post-processing setup\n    const composer = new EffectComposer(renderer);\n    composer.addPass(new RenderPass(scene, camera));\n    composer.addPass(new FilmPass(0.2, 0.025, 648, false));\n    composerRef.current = composer;\n\n    // Animation Loop with requestAnimationFrame\n    const animate = () => {\n      composer.render();\n      requestAnimationFrame(animate);\n    };\n    animate();\n\n    // Resize Event Listener with debounce for performance\n    const onWindowResize = () => {\n      const aspect = window.innerWidth / window.innerHeight;\n      camera.left = -2 * aspect;\n      camera.right = 2 * aspect;\n      camera.top = 2;\n      camera.bottom = -2;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n\n    const debounceResize = debounce(onWindowResize, 100); // Debounce resize event for performance\n    window.addEventListener('resize', debounceResize);\n\n    return () => {\n      // Cleanup on component unmount\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('resize', debounceResize);\n      renderer.dispose();\n      bigSphereGeometry.dispose();\n      bigSphereMaterial.dispose();\n      smallSphereGeometry.dispose();\n      smallSphereMaterial.dispose();\n      scene.clear();\n    };\n  }, []);\n\n  return null;\n};\n\n// Utility function to debounce resize events\nconst debounce = (func, delay) => {\n  let timer;\n  return function (...args) {\n    if (timer) clearTimeout(timer);\n    timer = setTimeout(() => func(...args), delay);\n  };\n};\n\nexport default TitleBG;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}