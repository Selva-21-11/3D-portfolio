{"ast":null,"code":"var _jsxFileName = \"F:\\\\Portfolio\\\\3D-portfolio\\\\src\\\\blocks\\\\Components\\\\TiltedCard\\\\TiltedCard.jsx\",\n  _s = $RefreshSig$();\nimport { useRef } from \"react\";\nimport { motion, useMotionValue, useSpring } from \"framer-motion\";\nimport \"./TiltedCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst springValues = {\n  damping: 30,\n  stiffness: 100,\n  mass: 2\n};\nexport default function TiltedCard({\n  imageSrc,\n  altText = \"Tilted card image\",\n  captionText = \"\",\n  containerHeight = \"300px\",\n  containerWidth = \"100%\",\n  imageHeight = \"300px\",\n  imageWidth = \"300px\",\n  scaleOnHover = 1.1,\n  rotateAmplitude = 14,\n  showMobileWarning = true,\n  showTooltip = true,\n  overlayContent = null,\n  displayOverlayContent = false,\n  progress = 0 // New prop for progress value (0-100)\n}) {\n  _s();\n  const ref = useRef(null);\n  const x = useMotionValue();\n  const y = useMotionValue();\n  const rotateX = useSpring(useMotionValue(0), springValues);\n  const rotateY = useSpring(useMotionValue(0), springValues);\n  const handleMouseMove = e => {\n    const rect = ref.current.getBoundingClientRect();\n    const offsetX = e.clientX - rect.left - rect.width / 2;\n    const offsetY = e.clientY - rect.top - rect.height / 2;\n    rotateX.set(-offsetY / rect.height * rotateAmplitude);\n    rotateY.set(offsetX / rect.width * rotateAmplitude);\n    x.set(offsetX);\n    y.set(offsetY);\n  };\n  const handleMouseLeave = () => {\n    rotateX.set(0);\n    rotateY.set(0);\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"tilted-card-container\",\n    style: {\n      height: containerHeight,\n      width: containerWidth\n    },\n    onMouseMove: handleMouseMove,\n    onMouseLeave: handleMouseLeave,\n    ref: ref,\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"tilted-card-inner\",\n      style: {\n        transform: `perspective(800px)`,\n        rotateX,\n        rotateY\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"tilted-card-img\",\n        src: imageSrc,\n        alt: altText,\n        style: {\n          height: imageHeight,\n          width: imageWidth\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tilted-card-overlay\",\n        children: [displayOverlayContent && overlayContent, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            style: {\n              width: `${progress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), captionText && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tilted-card-caption\",\n        children: captionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(TiltedCard, \"KzIdgijpgYW4EyGrMtPB6DjG4So=\", false, function () {\n  return [useMotionValue, useMotionValue, useSpring, useMotionValue, useSpring, useMotionValue];\n});\n_c = TiltedCard;\nvar _c;\n$RefreshReg$(_c, \"TiltedCard\");","map":{"version":3,"names":["useRef","motion","useMotionValue","useSpring","jsxDEV","_jsxDEV","springValues","damping","stiffness","mass","TiltedCard","imageSrc","altText","captionText","containerHeight","containerWidth","imageHeight","imageWidth","scaleOnHover","rotateAmplitude","showMobileWarning","showTooltip","overlayContent","displayOverlayContent","progress","_s","ref","x","y","rotateX","rotateY","handleMouseMove","e","rect","current","getBoundingClientRect","offsetX","clientX","left","width","offsetY","clientY","top","height","set","handleMouseLeave","div","className","style","onMouseMove","onMouseLeave","children","transform","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/Portfolio/3D-portfolio/src/blocks/Components/TiltedCard/TiltedCard.jsx"],"sourcesContent":["import { useRef } from \"react\";\nimport { motion, useMotionValue, useSpring } from \"framer-motion\";\nimport \"./TiltedCard.css\";\n\nconst springValues = {\n  damping: 30,\n  stiffness: 100,\n  mass: 2,\n};\n\nexport default function TiltedCard({\n  imageSrc,\n  altText = \"Tilted card image\",\n  captionText = \"\",\n  containerHeight = \"300px\",\n  containerWidth = \"100%\",\n  imageHeight = \"300px\",\n  imageWidth = \"300px\",\n  scaleOnHover = 1.1,\n  rotateAmplitude = 14,\n  showMobileWarning = true,\n  showTooltip = true,\n  overlayContent = null,\n  displayOverlayContent = false,\n  progress = 0, // New prop for progress value (0-100)\n}) {\n  const ref = useRef(null);\n\n  const x = useMotionValue();\n  const y = useMotionValue();\n  const rotateX = useSpring(useMotionValue(0), springValues);\n  const rotateY = useSpring(useMotionValue(0), springValues);\n\n  const handleMouseMove = (e) => {\n    const rect = ref.current.getBoundingClientRect();\n    const offsetX = e.clientX - rect.left - rect.width / 2;\n    const offsetY = e.clientY - rect.top - rect.height / 2;\n\n    rotateX.set((-offsetY / rect.height) * rotateAmplitude);\n    rotateY.set((offsetX / rect.width) * rotateAmplitude);\n    x.set(offsetX);\n    y.set(offsetY);\n  };\n\n  const handleMouseLeave = () => {\n    rotateX.set(0);\n    rotateY.set(0);\n  };\n\n  return (\n    <motion.div\n      className=\"tilted-card-container\"\n      style={{ height: containerHeight, width: containerWidth }}\n      onMouseMove={handleMouseMove}\n      onMouseLeave={handleMouseLeave}\n      ref={ref}\n    >\n      <motion.div\n        className=\"tilted-card-inner\"\n        style={{\n          transform: `perspective(800px)`,\n          rotateX,\n          rotateY,\n        }}\n      >\n        <img\n          className=\"tilted-card-img\"\n          src={imageSrc}\n          alt={altText}\n          style={{ height: imageHeight, width: imageWidth }}\n        />\n        <div className=\"tilted-card-overlay\">\n          {displayOverlayContent && overlayContent}\n          {/* Progress bar */}\n          <div className=\"progress-bar-container\">\n            <div\n              className=\"progress-bar\"\n              style={{ width: `${progress}%` }}\n            ></div>\n          </div>\n        </div>\n        {captionText && <div className=\"tilted-card-caption\">{captionText}</div>}\n      </motion.div>\n    </motion.div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,SAASC,MAAM,EAAEC,cAAc,EAAEC,SAAS,QAAQ,eAAe;AACjE,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,EAAE;EACXC,SAAS,EAAE,GAAG;EACdC,IAAI,EAAE;AACR,CAAC;AAED,eAAe,SAASC,UAAUA,CAAC;EACjCC,QAAQ;EACRC,OAAO,GAAG,mBAAmB;EAC7BC,WAAW,GAAG,EAAE;EAChBC,eAAe,GAAG,OAAO;EACzBC,cAAc,GAAG,MAAM;EACvBC,WAAW,GAAG,OAAO;EACrBC,UAAU,GAAG,OAAO;EACpBC,YAAY,GAAG,GAAG;EAClBC,eAAe,GAAG,EAAE;EACpBC,iBAAiB,GAAG,IAAI;EACxBC,WAAW,GAAG,IAAI;EAClBC,cAAc,GAAG,IAAI;EACrBC,qBAAqB,GAAG,KAAK;EAC7BC,QAAQ,GAAG,CAAC,CAAE;AAChB,CAAC,EAAE;EAAAC,EAAA;EACD,MAAMC,GAAG,GAAG1B,MAAM,CAAC,IAAI,CAAC;EAExB,MAAM2B,CAAC,GAAGzB,cAAc,CAAC,CAAC;EAC1B,MAAM0B,CAAC,GAAG1B,cAAc,CAAC,CAAC;EAC1B,MAAM2B,OAAO,GAAG1B,SAAS,CAACD,cAAc,CAAC,CAAC,CAAC,EAAEI,YAAY,CAAC;EAC1D,MAAMwB,OAAO,GAAG3B,SAAS,CAACD,cAAc,CAAC,CAAC,CAAC,EAAEI,YAAY,CAAC;EAE1D,MAAMyB,eAAe,GAAIC,CAAC,IAAK;IAC7B,MAAMC,IAAI,GAAGP,GAAG,CAACQ,OAAO,CAACC,qBAAqB,CAAC,CAAC;IAChD,MAAMC,OAAO,GAAGJ,CAAC,CAACK,OAAO,GAAGJ,IAAI,CAACK,IAAI,GAAGL,IAAI,CAACM,KAAK,GAAG,CAAC;IACtD,MAAMC,OAAO,GAAGR,CAAC,CAACS,OAAO,GAAGR,IAAI,CAACS,GAAG,GAAGT,IAAI,CAACU,MAAM,GAAG,CAAC;IAEtDd,OAAO,CAACe,GAAG,CAAE,CAACJ,OAAO,GAAGP,IAAI,CAACU,MAAM,GAAIxB,eAAe,CAAC;IACvDW,OAAO,CAACc,GAAG,CAAER,OAAO,GAAGH,IAAI,CAACM,KAAK,GAAIpB,eAAe,CAAC;IACrDQ,CAAC,CAACiB,GAAG,CAACR,OAAO,CAAC;IACdR,CAAC,CAACgB,GAAG,CAACJ,OAAO,CAAC;EAChB,CAAC;EAED,MAAMK,gBAAgB,GAAGA,CAAA,KAAM;IAC7BhB,OAAO,CAACe,GAAG,CAAC,CAAC,CAAC;IACdd,OAAO,CAACc,GAAG,CAAC,CAAC,CAAC;EAChB,CAAC;EAED,oBACEvC,OAAA,CAACJ,MAAM,CAAC6C,GAAG;IACTC,SAAS,EAAC,uBAAuB;IACjCC,KAAK,EAAE;MAAEL,MAAM,EAAE7B,eAAe;MAAEyB,KAAK,EAAExB;IAAe,CAAE;IAC1DkC,WAAW,EAAElB,eAAgB;IAC7BmB,YAAY,EAAEL,gBAAiB;IAC/BnB,GAAG,EAAEA,GAAI;IAAAyB,QAAA,eAET9C,OAAA,CAACJ,MAAM,CAAC6C,GAAG;MACTC,SAAS,EAAC,mBAAmB;MAC7BC,KAAK,EAAE;QACLI,SAAS,EAAE,oBAAoB;QAC/BvB,OAAO;QACPC;MACF,CAAE;MAAAqB,QAAA,gBAEF9C,OAAA;QACE0C,SAAS,EAAC,iBAAiB;QAC3BM,GAAG,EAAE1C,QAAS;QACd2C,GAAG,EAAE1C,OAAQ;QACboC,KAAK,EAAE;UAAEL,MAAM,EAAE3B,WAAW;UAAEuB,KAAK,EAAEtB;QAAW;MAAE;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eACFrD,OAAA;QAAK0C,SAAS,EAAC,qBAAqB;QAAAI,QAAA,GACjC5B,qBAAqB,IAAID,cAAc,eAExCjB,OAAA;UAAK0C,SAAS,EAAC,wBAAwB;UAAAI,QAAA,eACrC9C,OAAA;YACE0C,SAAS,EAAC,cAAc;YACxBC,KAAK,EAAE;cAAET,KAAK,EAAE,GAAGf,QAAQ;YAAI;UAAE;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EACL7C,WAAW,iBAAIR,OAAA;QAAK0C,SAAS,EAAC,qBAAqB;QAAAI,QAAA,EAAEtC;MAAW;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEjB;AAACjC,EAAA,CA3EuBf,UAAU;EAAA,QAkBtBR,cAAc,EACdA,cAAc,EACRC,SAAS,EAACD,cAAc,EACxBC,SAAS,EAACD,cAAc;AAAA;AAAAyD,EAAA,GArBlBjD,UAAU;AAAA,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}