{"ast":null,"code":"var _jsxFileName = \"F:\\\\Portfolio\\\\3D-portfolio\\\\src\\\\components\\\\3DScene.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Scene3D = () => {\n  _s();\n  useEffect(() => {\n    // Initialize Three.js scene\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    document.body.appendChild(renderer.domElement);\n\n    // Add a cube to the scene as an example 3D object\n    const geometry = new THREE.BoxGeometry();\n    const material = new THREE.MeshBasicMaterial({\n      color: 0x00ff00\n    });\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n    camera.position.z = 5;\n    const animate = function () {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Resize handler\n    window.addEventListener('resize', () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    });\n    return () => {\n      window.removeEventListener('resize', () => {});\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"threejs-scene\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Scene3D, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Scene3D;\nexport default Scene3D;\nvar _c;\n$RefreshReg$(_c, \"Scene3D\");","map":{"version":3,"names":["React","useEffect","THREE","jsxDEV","_jsxDEV","Scene3D","_s","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","document","body","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","position","z","animate","requestAnimationFrame","rotation","x","y","render","addEventListener","aspect","updateProjectionMatrix","removeEventListener","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/Portfolio/3D-portfolio/src/components/3DScene.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nconst Scene3D = () => {\r\n  useEffect(() => {\r\n    // Initialize Three.js scene\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    const renderer = new THREE.WebGLRenderer();\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    document.body.appendChild(renderer.domElement);\r\n\r\n    // Add a cube to the scene as an example 3D object\r\n    const geometry = new THREE.BoxGeometry();\r\n    const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n    const cube = new THREE.Mesh(geometry, material);\r\n    scene.add(cube);\r\n\r\n    camera.position.z = 5;\r\n\r\n    const animate = function () {\r\n      requestAnimationFrame(animate);\r\n\r\n      cube.rotation.x += 0.01;\r\n      cube.rotation.y += 0.01;\r\n\r\n      renderer.render(scene, camera);\r\n    };\r\n\r\n    animate();\r\n\r\n    // Resize handler\r\n    window.addEventListener('resize', () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    });\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', () => {});\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"threejs-scene\">\r\n      {/* The Three.js canvas will be injected here */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scene3D;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpBL,SAAS,CAAC,MAAM;IACd;IACA,MAAMM,KAAK,GAAG,IAAIL,KAAK,CAACM,KAAK,CAAC,CAAC;IAC/B,MAAMC,MAAM,GAAG,IAAIP,KAAK,CAACQ,iBAAiB,CAAC,EAAE,EAAEC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC;IACjG,MAAMC,QAAQ,GAAG,IAAIZ,KAAK,CAACa,aAAa,CAAC,CAAC;IAC1CD,QAAQ,CAACE,OAAO,CAACL,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACvDI,QAAQ,CAACC,IAAI,CAACC,WAAW,CAACL,QAAQ,CAACM,UAAU,CAAC;;IAE9C;IACA,MAAMC,QAAQ,GAAG,IAAInB,KAAK,CAACoB,WAAW,CAAC,CAAC;IACxC,MAAMC,QAAQ,GAAG,IAAIrB,KAAK,CAACsB,iBAAiB,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,CAAC;IACjE,MAAMC,IAAI,GAAG,IAAIxB,KAAK,CAACyB,IAAI,CAACN,QAAQ,EAAEE,QAAQ,CAAC;IAC/ChB,KAAK,CAACqB,GAAG,CAACF,IAAI,CAAC;IAEfjB,MAAM,CAACoB,QAAQ,CAACC,CAAC,GAAG,CAAC;IAErB,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAAY;MAC1BC,qBAAqB,CAACD,OAAO,CAAC;MAE9BL,IAAI,CAACO,QAAQ,CAACC,CAAC,IAAI,IAAI;MACvBR,IAAI,CAACO,QAAQ,CAACE,CAAC,IAAI,IAAI;MAEvBrB,QAAQ,CAACsB,MAAM,CAAC7B,KAAK,EAAEE,MAAM,CAAC;IAChC,CAAC;IAEDsB,OAAO,CAAC,CAAC;;IAET;IACApB,MAAM,CAAC0B,gBAAgB,CAAC,QAAQ,EAAE,MAAM;MACtC5B,MAAM,CAAC6B,MAAM,GAAG3B,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW;MACtDJ,MAAM,CAAC8B,sBAAsB,CAAC,CAAC;MAC/BzB,QAAQ,CAACE,OAAO,CAACL,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACzD,CAAC,CAAC;IAEF,OAAO,MAAM;MACXF,MAAM,CAAC6B,mBAAmB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;IAChD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEpC,OAAA;IAAKqC,SAAS,EAAC;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEzB,CAAC;AAEV,CAAC;AAACvC,EAAA,CA7CID,OAAO;AAAAyC,EAAA,GAAPzC,OAAO;AA+Cb,eAAeA,OAAO;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}