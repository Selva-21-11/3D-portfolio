{"ast":null,"code":"var _jsxFileName = \"F:\\\\Portfolio\\\\3D-portfolio\\\\src\\\\App.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './styles/App.css';\nimport gsap from 'gsap';\nimport { useSpring, animated } from '@react-spring/web';\nimport TitleBG from './components/TitleBG'; // Import TitleBG component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  useEffect(() => {\n    const sections = document.querySelectorAll('section');\n    sections.forEach((section, sectionIndex) => {\n      // Get the light configuration for each section\n      const lightConfig = getLightConfigForSection(sectionIndex);\n      lightConfig.forEach(({\n        color,\n        count,\n        positions\n      }) => {\n        // Create the specified number of lights\n        for (let i = 0; i < count; i++) {\n          const light = document.createElement('div');\n          light.classList.add('light-effect');\n\n          // Set core and emission colors for each light\n          light.style.background = `radial-gradient(circle, ${color} 25%, ${color} 90%)`;\n          light.style.boxShadow = `0 0 250px 150px ${color}`;\n\n          // Control placement of each light based on 'positions'\n          const {\n            positionX,\n            positionY\n          } = positions[i];\n          light.style.left = `${positionX}%`;\n          light.style.top = `${positionY}%`;\n          section.appendChild(light);\n\n          // Animate each light with GSAP\n          animateLightEffect(light);\n        }\n      });\n    });\n  }, []);\n\n  // Function to get light configuration based on the section index\n  const getLightConfigForSection = sectionIndex => {\n    switch (sectionIndex) {\n      case 0:\n        // Hero Section\n        return [{\n          color: 'rgba(0, 255, 255, 0.3)',\n          // Cyan\n          count: 1,\n          positions: [{\n            positionX: 110,\n            positionY: 0\n          }]\n        }];\n      case 1:\n        // About Section\n        return [{\n          color: 'rgba(255, 0, 255, 0.3)',\n          // Magenta\n          count: 1,\n          positions: [{\n            positionX: -15,\n            positionY: 50\n          }]\n        }];\n      case 2:\n        // Portfolio Section\n        return [{\n          color: 'rgba(0, 255, 0, 0.3)',\n          // Green\n          count: 1,\n          positions: [{\n            positionX: 100,\n            positionY: 50\n          }]\n        }];\n      case 3:\n        // Contact Section\n        return [{\n          color: 'rgba(255, 255, 0, 0.3)',\n          // Yellow\n          count: 1,\n          positions: [{\n            positionX: 20,\n            positionY: 30\n          }]\n        }];\n      default:\n        return [];\n    }\n  };\n\n  // Animate light effect using GSAP\n  const animateLightEffect = lightElement => {\n    gsap.to(lightElement, {\n      scale: 'random(1, 1.5)',\n      opacity: 'random(0.4, 1)',\n      x: 'random(-80, 80)',\n      y: 'random(-80, 80)',\n      duration: 4,\n      repeat: -1,\n      yoyo: true,\n      ease: 'power1.inOut'\n    });\n  };\n\n  // Intersection Observer for Section Animations\n  useEffect(() => {\n    const observer = new IntersectionObserver((entries, observer) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          gsap.to(entry.target, {\n            opacity: 1,\n            y: 0,\n            duration: 1.2,\n            ease: 'power3.out'\n          });\n        } else {\n          gsap.set(entry.target, {\n            opacity: 0.5,\n            y: 100\n          });\n        }\n      });\n    }, {\n      threshold: 0.2\n    });\n    const sections = document.querySelectorAll('section');\n    sections.forEach(section => {\n      observer.observe(section);\n      gsap.set(section, {\n        opacity: 0.5,\n        y: 100\n      });\n    });\n    return () => observer.disconnect();\n  }, []);\n  const SplitTextAnimation = ({\n    text\n  }) => {\n    _s();\n    const words = text.split(''); // Split the text into individual characters\n\n    // Spring animation for text\n    const props = useSpring({\n      opacity: 1,\n      transform: 'translateY(0)',\n      from: {\n        opacity: 0,\n        transform: 'translateY(20px)'\n      },\n      config: {\n        mass: 1,\n        tension: 170,\n        friction: 26\n      },\n      reset: true\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"split-text-container\",\n      children: words.map((word, index) => /*#__PURE__*/_jsxDEV(animated.span, {\n        style: {\n          ...props,\n          transitionDelay: `${index * 0.1}s`\n        },\n        children: word\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this);\n  };\n  _s(SplitTextAnimation, \"2eLh5p/G96FiNolTD5G7yAACzvw=\", false, function () {\n    return [useSpring];\n  });\n  const App = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"hero\",\n        id: \"hero\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hero-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: /*#__PURE__*/_jsxDEV(SplitTextAnimation, {\n              text: \"Welcome to My Portfolio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"3D Artist | Animator | Technical Support Engineer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#about\",\n            className: \"btn explore\",\n            children: \"Explore My Work\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  };\n};\n_s2(App, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","gsap","useSpring","animated","TitleBG","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","sections","document","querySelectorAll","forEach","section","sectionIndex","lightConfig","getLightConfigForSection","color","count","positions","i","light","createElement","classList","add","style","background","boxShadow","positionX","positionY","left","top","appendChild","animateLightEffect","lightElement","to","scale","opacity","x","y","duration","repeat","yoyo","ease","observer","IntersectionObserver","entries","entry","isIntersecting","target","set","threshold","observe","disconnect","SplitTextAnimation","text","words","split","props","transform","from","config","mass","tension","friction","reset","className","children","map","word","index","span","transitionDelay","fileName","_jsxFileName","lineNumber","columnNumber","id","href","_c","$RefreshReg$"],"sources":["F:/Portfolio/3D-portfolio/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport './styles/App.css';\r\nimport gsap from 'gsap';\r\nimport { useSpring, animated } from '@react-spring/web';\r\nimport TitleBG from './components/TitleBG';  // Import TitleBG component\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n    const sections = document.querySelectorAll('section');\r\n    sections.forEach((section, sectionIndex) => {\r\n      // Get the light configuration for each section\r\n      const lightConfig = getLightConfigForSection(sectionIndex);\r\n\r\n      lightConfig.forEach(({ color, count, positions }) => {\r\n        // Create the specified number of lights\r\n        for (let i = 0; i < count; i++) {\r\n          const light = document.createElement('div');\r\n          light.classList.add('light-effect');\r\n\r\n          // Set core and emission colors for each light\r\n          light.style.background = `radial-gradient(circle, ${color} 25%, ${color} 90%)`;\r\n          light.style.boxShadow = `0 0 250px 150px ${color}`;\r\n\r\n          // Control placement of each light based on 'positions'\r\n          const { positionX, positionY } = positions[i];\r\n\r\n          light.style.left = `${positionX}%`;\r\n          light.style.top = `${positionY}%`;\r\n\r\n          section.appendChild(light);\r\n\r\n          // Animate each light with GSAP\r\n          animateLightEffect(light);\r\n        }\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  // Function to get light configuration based on the section index\r\n  const getLightConfigForSection = (sectionIndex) => {\r\n    switch (sectionIndex) {\r\n      case 0: // Hero Section\r\n        return [\r\n          {\r\n            color: 'rgba(0, 255, 255, 0.3)', // Cyan\r\n            count: 1,\r\n            positions: [\r\n              { positionX: 110, positionY: 0 },\r\n            ],\r\n          },\r\n        ];\r\n      case 1: // About Section\r\n        return [\r\n          {\r\n            color: 'rgba(255, 0, 255, 0.3)', // Magenta\r\n            count: 1,\r\n            positions: [\r\n              { positionX: -15, positionY: 50 },\r\n            ],\r\n          },\r\n        ];\r\n      case 2: // Portfolio Section\r\n        return [\r\n          {\r\n            color: 'rgba(0, 255, 0, 0.3)', // Green\r\n            count: 1,\r\n            positions: [\r\n              { positionX: 100, positionY: 50 },\r\n            ],\r\n          },\r\n        ];\r\n      case 3: // Contact Section\r\n        return [\r\n          {\r\n            color: 'rgba(255, 255, 0, 0.3)', // Yellow\r\n            count: 1,\r\n            positions: [\r\n              { positionX: 20, positionY: 30 },\r\n            ],\r\n          },\r\n        ];\r\n      default:\r\n        return [];\r\n    }\r\n  };\r\n\r\n  // Animate light effect using GSAP\r\n  const animateLightEffect = (lightElement) => {\r\n    gsap.to(lightElement, {\r\n      scale: 'random(1, 1.5)',\r\n      opacity: 'random(0.4, 1)',\r\n      x: 'random(-80, 80)',\r\n      y: 'random(-80, 80)',\r\n      duration: 4,\r\n      repeat: -1,\r\n      yoyo: true,\r\n      ease: 'power1.inOut',\r\n    });\r\n  };\r\n\r\n  // Intersection Observer for Section Animations\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver((entries, observer) => {\r\n      entries.forEach((entry) => {\r\n        if (entry.isIntersecting) {\r\n          gsap.to(entry.target, {\r\n            opacity: 1,\r\n            y: 0,\r\n            duration: 1.2,\r\n            ease: 'power3.out',\r\n          });\r\n        } else {\r\n          gsap.set(entry.target, {\r\n            opacity: 0.5,\r\n            y: 100,\r\n          });\r\n        }\r\n      });\r\n    }, {\r\n      threshold: 0.2,\r\n    });\r\n\r\n    const sections = document.querySelectorAll('section');\r\n    sections.forEach((section) => {\r\n      observer.observe(section);\r\n      gsap.set(section, { opacity: 0.5, y: 100 });\r\n    });\r\n\r\n    return () => observer.disconnect();\r\n  }, []);\r\n  const SplitTextAnimation = ({ text }) => {\r\n    const words = text.split('');  // Split the text into individual characters\r\n  \r\n    // Spring animation for text\r\n    const props = useSpring({\r\n      opacity: 1,\r\n      transform: 'translateY(0)',\r\n      from: { opacity: 0, transform: 'translateY(20px)' },\r\n      config: { mass: 1, tension: 170, friction: 26 },\r\n      reset: true,\r\n    });\r\n  \r\n    return (\r\n      <div className=\"split-text-container\">\r\n        {words.map((word, index) => (\r\n          <animated.span key={index} style={{ ...props, transitionDelay: `${index * 0.1}s` }}>\r\n            {word}\r\n          </animated.span>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  const App = () => {\r\n    return (\r\n      <div className=\"container\">\r\n        <section className=\"hero\" id=\"hero\">\r\n          <div className=\"hero-content\">\r\n            <h1>\r\n              <SplitTextAnimation text=\"Welcome to My Portfolio\" />\r\n            </h1>\r\n            <p>3D Artist | Animator | Technical Support Engineer</p>\r\n            <a href=\"#about\" className=\"btn explore\">Explore My Work</a>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n    export default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}