{"ast":null,"code":"var _jsxFileName = \"F:\\\\Portfolio\\\\3D-portfolio\\\\src\\\\components\\\\Preloader.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { gsap } from 'gsap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Preloader = () => {\n  _s();\n  const [loadingProgress, setLoadingProgress] = useState(0);\n  useEffect(() => {\n    // Simulate asset loading process with a setTimeout (replace with your actual loading logic)\n    let progress = 0;\n    const interval = setInterval(() => {\n      if (progress < 100) {\n        progress += 1;\n        setLoadingProgress(progress);\n      } else {\n        clearInterval(interval);\n        // Once loading is complete, you can directly hide the preloader here\n      }\n    }, 50); // Simulate loading every 50ms\n\n    // Preloader animation (scale up animation)\n    gsap.fromTo('.loader', {\n      scale: 0\n    }, {\n      scale: 1,\n      duration: 1,\n      ease: 'power3.out'\n    });\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"preloader\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [loadingProgress, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Preloader, \"0gXAbSwToFNnr8Mnm58uWDk1W5k=\");\n_c = Preloader;\nexport default Preloader;\nvar _c;\n$RefreshReg$(_c, \"Preloader\");","map":{"version":3,"names":["React","useEffect","useState","gsap","jsxDEV","_jsxDEV","Preloader","_s","loadingProgress","setLoadingProgress","progress","interval","setInterval","clearInterval","fromTo","scale","duration","ease","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/Portfolio/3D-portfolio/src/components/Preloader.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { gsap } from 'gsap';\r\n\r\nconst Preloader = () => {\r\n  const [loadingProgress, setLoadingProgress] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // Simulate asset loading process with a setTimeout (replace with your actual loading logic)\r\n    let progress = 0;\r\n    const interval = setInterval(() => {\r\n      if (progress < 100) {\r\n        progress += 1;\r\n        setLoadingProgress(progress);\r\n      } else {\r\n        clearInterval(interval);\r\n        // Once loading is complete, you can directly hide the preloader here\r\n      }\r\n    }, 50); // Simulate loading every 50ms\r\n\r\n    // Preloader animation (scale up animation)\r\n    gsap.fromTo('.loader', { scale: 0 }, { scale: 1, duration: 1, ease: 'power3.out' });\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"preloader\">\r\n      <div className=\"loader\">\r\n        <div className=\"spinner\"></div>\r\n        <p>{loadingProgress}%</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAEzDD,SAAS,CAAC,MAAM;IACd;IACA,IAAIS,QAAQ,GAAG,CAAC;IAChB,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAIF,QAAQ,GAAG,GAAG,EAAE;QAClBA,QAAQ,IAAI,CAAC;QACbD,kBAAkB,CAACC,QAAQ,CAAC;MAC9B,CAAC,MAAM;QACLG,aAAa,CAACF,QAAQ,CAAC;QACvB;MACF;IACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;IAER;IACAR,IAAI,CAACW,MAAM,CAAC,SAAS,EAAE;MAAEC,KAAK,EAAE;IAAE,CAAC,EAAE;MAAEA,KAAK,EAAE,CAAC;MAAEC,QAAQ,EAAE,CAAC;MAAEC,IAAI,EAAE;IAAa,CAAC,CAAC;IAEnF,OAAO,MAAMJ,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAKa,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBd,OAAA;MAAKa,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBd,OAAA;QAAKa,SAAS,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC/BlB,OAAA;QAAAc,QAAA,GAAIX,eAAe,EAAC,GAAC;MAAA;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChB,EAAA,CA9BID,SAAS;AAAAkB,EAAA,GAATlB,SAAS;AAgCf,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}