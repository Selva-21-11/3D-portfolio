{"version":3,"file":"922.e446fdc974d289688d62.js","mappings":"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AM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAEzgD,IAAIC,GAAQ,QAGZ,MAAMC,GAAUC,KA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","sources":["webpack://my-3d-portfolio/./node_modules/three/build/three.core.js"],"sourcesContent":["/**\r\n * @license\r\n * Copyright 2010-2025 Three.js Authors\r\n * SPDX-License-Identifier: MIT\r\n */\r\nconst REVISION = '173';\r\n\r\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\r\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\r\nconst CullFaceNone = 0;\r\nconst CullFaceBack = 1;\r\nconst CullFaceFront = 2;\r\nconst CullFaceFrontBack = 3;\r\nconst BasicShadowMap = 0;\r\nconst PCFShadowMap = 1;\r\nconst PCFSoftShadowMap = 2;\r\nconst VSMShadowMap = 3;\r\nconst FrontSide = 0;\r\nconst BackSide = 1;\r\nconst DoubleSide = 2;\r\nconst NoBlending = 0;\r\nconst NormalBlending = 1;\r\nconst AdditiveBlending = 2;\r\nconst SubtractiveBlending = 3;\r\nconst MultiplyBlending = 4;\r\nconst CustomBlending = 5;\r\nconst AddEquation = 100;\r\nconst SubtractEquation = 101;\r\nconst ReverseSubtractEquation = 102;\r\nconst MinEquation = 103;\r\nconst MaxEquation = 104;\r\nconst ZeroFactor = 200;\r\nconst OneFactor = 201;\r\nconst SrcColorFactor = 202;\r\nconst OneMinusSrcColorFactor = 203;\r\nconst SrcAlphaFactor = 204;\r\nconst OneMinusSrcAlphaFactor = 205;\r\nconst DstAlphaFactor = 206;\r\nconst OneMinusDstAlphaFactor = 207;\r\nconst DstColorFactor = 208;\r\nconst OneMinusDstColorFactor = 209;\r\nconst SrcAlphaSaturateFactor = 210;\r\nconst ConstantColorFactor = 211;\r\nconst OneMinusConstantColorFactor = 212;\r\nconst ConstantAlphaFactor = 213;\r\nconst OneMinusConstantAlphaFactor = 214;\r\nconst NeverDepth = 0;\r\nconst AlwaysDepth = 1;\r\nconst LessDepth = 2;\r\nconst LessEqualDepth = 3;\r\nconst EqualDepth = 4;\r\nconst GreaterEqualDepth = 5;\r\nconst GreaterDepth = 6;\r\nconst NotEqualDepth = 7;\r\nconst MultiplyOperation = 0;\r\nconst MixOperation = 1;\r\nconst AddOperation = 2;\r\nconst NoToneMapping = 0;\r\nconst LinearToneMapping = 1;\r\nconst ReinhardToneMapping = 2;\r\nconst CineonToneMapping = 3;\r\nconst ACESFilmicToneMapping = 4;\r\nconst CustomToneMapping = 5;\r\nconst AgXToneMapping = 6;\r\nconst NeutralToneMapping = 7;\r\nconst AttachedBindMode = 'attached';\r\nconst DetachedBindMode = 'detached';\r\n\r\nconst UVMapping = 300;\r\nconst CubeReflectionMapping = 301;\r\nconst CubeRefractionMapping = 302;\r\nconst EquirectangularReflectionMapping = 303;\r\nconst EquirectangularRefractionMapping = 304;\r\nconst CubeUVReflectionMapping = 306;\r\nconst RepeatWrapping = 1000;\r\nconst ClampToEdgeWrapping = 1001;\r\nconst MirroredRepeatWrapping = 1002;\r\nconst NearestFilter = 1003;\r\nconst NearestMipmapNearestFilter = 1004;\r\nconst NearestMipMapNearestFilter = 1004;\r\nconst NearestMipmapLinearFilter = 1005;\r\nconst NearestMipMapLinearFilter = 1005;\r\nconst LinearFilter = 1006;\r\nconst LinearMipmapNearestFilter = 1007;\r\nconst LinearMipMapNearestFilter = 1007;\r\nconst LinearMipmapLinearFilter = 1008;\r\nconst LinearMipMapLinearFilter = 1008;\r\nconst UnsignedByteType = 1009;\r\nconst ByteType = 1010;\r\nconst ShortType = 1011;\r\nconst UnsignedShortType = 1012;\r\nconst IntType = 1013;\r\nconst UnsignedIntType = 1014;\r\nconst FloatType = 1015;\r\nconst HalfFloatType = 1016;\r\nconst UnsignedShort4444Type = 1017;\r\nconst UnsignedShort5551Type = 1018;\r\nconst UnsignedInt248Type = 1020;\r\nconst UnsignedInt5999Type = 35902;\r\nconst AlphaFormat = 1021;\r\nconst RGBFormat = 1022;\r\nconst RGBAFormat = 1023;\r\nconst LuminanceFormat = 1024;\r\nconst LuminanceAlphaFormat = 1025;\r\nconst DepthFormat = 1026;\r\nconst DepthStencilFormat = 1027;\r\nconst RedFormat = 1028;\r\nconst RedIntegerFormat = 1029;\r\nconst RGFormat = 1030;\r\nconst RGIntegerFormat = 1031;\r\nconst RGBIntegerFormat = 1032;\r\nconst RGBAIntegerFormat = 1033;\r\n\r\nconst RGB_S3TC_DXT1_Format = 33776;\r\nconst RGBA_S3TC_DXT1_Format = 33777;\r\nconst RGBA_S3TC_DXT3_Format = 33778;\r\nconst RGBA_S3TC_DXT5_Format = 33779;\r\nconst RGB_PVRTC_4BPPV1_Format = 35840;\r\nconst RGB_PVRTC_2BPPV1_Format = 35841;\r\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\r\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\r\nconst RGB_ETC1_Format = 36196;\r\nconst RGB_ETC2_Format = 37492;\r\nconst RGBA_ETC2_EAC_Format = 37496;\r\nconst RGBA_ASTC_4x4_Format = 37808;\r\nconst RGBA_ASTC_5x4_Format = 37809;\r\nconst RGBA_ASTC_5x5_Format = 37810;\r\nconst RGBA_ASTC_6x5_Format = 37811;\r\nconst RGBA_ASTC_6x6_Format = 37812;\r\nconst RGBA_ASTC_8x5_Format = 37813;\r\nconst RGBA_ASTC_8x6_Format = 37814;\r\nconst RGBA_ASTC_8x8_Format = 37815;\r\nconst RGBA_ASTC_10x5_Format = 37816;\r\nconst RGBA_ASTC_10x6_Format = 37817;\r\nconst RGBA_ASTC_10x8_Format = 37818;\r\nconst RGBA_ASTC_10x10_Format = 37819;\r\nconst RGBA_ASTC_12x10_Format = 37820;\r\nconst RGBA_ASTC_12x12_Format = 37821;\r\nconst RGBA_BPTC_Format = 36492;\r\nconst RGB_BPTC_SIGNED_Format = 36494;\r\nconst RGB_BPTC_UNSIGNED_Format = 36495;\r\nconst RED_RGTC1_Format = 36283;\r\nconst SIGNED_RED_RGTC1_Format = 36284;\r\nconst RED_GREEN_RGTC2_Format = 36285;\r\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\r\nconst LoopOnce = 2200;\r\nconst LoopRepeat = 2201;\r\nconst LoopPingPong = 2202;\r\nconst InterpolateDiscrete = 2300;\r\nconst InterpolateLinear = 2301;\r\nconst InterpolateSmooth = 2302;\r\nconst ZeroCurvatureEnding = 2400;\r\nconst ZeroSlopeEnding = 2401;\r\nconst WrapAroundEnding = 2402;\r\nconst NormalAnimationBlendMode = 2500;\r\nconst AdditiveAnimationBlendMode = 2501;\r\nconst TrianglesDrawMode = 0;\r\nconst TriangleStripDrawMode = 1;\r\nconst TriangleFanDrawMode = 2;\r\nconst BasicDepthPacking = 3200;\r\nconst RGBADepthPacking = 3201;\r\nconst RGBDepthPacking = 3202;\r\nconst RGDepthPacking = 3203;\r\nconst TangentSpaceNormalMap = 0;\r\nconst ObjectSpaceNormalMap = 1;\r\n\r\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\r\nconst NoColorSpace = '';\r\nconst SRGBColorSpace = 'srgb';\r\nconst LinearSRGBColorSpace = 'srgb-linear';\r\n\r\nconst LinearTransfer = 'linear';\r\nconst SRGBTransfer = 'srgb';\r\n\r\nconst ZeroStencilOp = 0;\r\nconst KeepStencilOp = 7680;\r\nconst ReplaceStencilOp = 7681;\r\nconst IncrementStencilOp = 7682;\r\nconst DecrementStencilOp = 7683;\r\nconst IncrementWrapStencilOp = 34055;\r\nconst DecrementWrapStencilOp = 34056;\r\nconst InvertStencilOp = 5386;\r\n\r\nconst NeverStencilFunc = 512;\r\nconst LessStencilFunc = 513;\r\nconst EqualStencilFunc = 514;\r\nconst LessEqualStencilFunc = 515;\r\nconst GreaterStencilFunc = 516;\r\nconst NotEqualStencilFunc = 517;\r\nconst GreaterEqualStencilFunc = 518;\r\nconst AlwaysStencilFunc = 519;\r\n\r\nconst NeverCompare = 512;\r\nconst LessCompare = 513;\r\nconst EqualCompare = 514;\r\nconst LessEqualCompare = 515;\r\nconst GreaterCompare = 516;\r\nconst NotEqualCompare = 517;\r\nconst GreaterEqualCompare = 518;\r\nconst AlwaysCompare = 519;\r\n\r\nconst StaticDrawUsage = 35044;\r\nconst DynamicDrawUsage = 35048;\r\nconst StreamDrawUsage = 35040;\r\nconst StaticReadUsage = 35045;\r\nconst DynamicReadUsage = 35049;\r\nconst StreamReadUsage = 35041;\r\nconst StaticCopyUsage = 35046;\r\nconst DynamicCopyUsage = 35050;\r\nconst StreamCopyUsage = 35042;\r\n\r\nconst GLSL1 = '100';\r\nconst GLSL3 = '300 es';\r\n\r\nconst WebGLCoordinateSystem = 2000;\r\nconst WebGPUCoordinateSystem = 2001;\r\n\r\nconst TimestampQuery = {\r\n\tCOMPUTE: 'compute',\r\n\tRENDER: 'render'\r\n};\r\n\r\n/**\r\n * https://github.com/mrdoob/eventdispatcher.js/\r\n */\r\n\r\nclass EventDispatcher {\r\n\r\n\taddEventListener( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\r\n\t\tconst listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] === undefined ) {\r\n\r\n\t\t\tlisteners[ type ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\r\n\t\t\tlisteners[ type ].push( listener );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\thasEventListener( type, listener ) {\r\n\r\n\t\tconst listeners = this._listeners;\r\n\r\n\t\tif ( listeners === undefined ) return false;\r\n\r\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\r\n\r\n\t}\r\n\r\n\tremoveEventListener( type, listener ) {\r\n\r\n\t\tconst listeners = this._listeners;\r\n\r\n\t\tif ( listeners === undefined ) return;\r\n\r\n\t\tconst listenerArray = listeners[ type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tconst index = listenerArray.indexOf( listener );\r\n\r\n\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\tlistenerArray.splice( index, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispatchEvent( event ) {\r\n\r\n\t\tconst listeners = this._listeners;\r\n\r\n\t\tif ( listeners === undefined ) return;\r\n\r\n\t\tconst listenerArray = listeners[ event.type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tevent.target = this;\r\n\r\n\t\t\t// Make a copy, in case listeners are removed while iterating.\r\n\t\t\tconst array = listenerArray.slice( 0 );\r\n\r\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ].call( this, event );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tevent.target = null;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\r\n\r\nlet _seed = 1234567;\r\n\r\n\r\nconst DEG2RAD = Math.PI / 180;\r\nconst RAD2DEG = 180 / Math.PI;\r\n\r\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\r\nfunction generateUUID() {\r\n\r\n\tconst d0 = Math.random() * 0xffffffff | 0;\r\n\tconst d1 = Math.random() * 0xffffffff | 0;\r\n\tconst d2 = Math.random() * 0xffffffff | 0;\r\n\tconst d3 = Math.random() * 0xffffffff | 0;\r\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\r\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\r\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\r\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\r\n\r\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\r\n\treturn uuid.toLowerCase();\r\n\r\n}\r\n\r\nfunction clamp( value, min, max ) {\r\n\r\n\treturn Math.max( min, Math.min( max, value ) );\r\n\r\n}\r\n\r\n// compute euclidean modulo of m % n\r\n// https://en.wikipedia.org/wiki/Modulo_operation\r\nfunction euclideanModulo( n, m ) {\r\n\r\n\treturn ( ( n % m ) + m ) % m;\r\n\r\n}\r\n\r\n// Linear mapping from range <a1, a2> to range <b1, b2>\r\nfunction mapLinear( x, a1, a2, b1, b2 ) {\r\n\r\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\r\n}\r\n\r\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\r\nfunction inverseLerp( x, y, value ) {\r\n\r\n\tif ( x !== y ) {\r\n\r\n\t\treturn ( value - x ) / ( y - x );\r\n\r\n\t} else {\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n}\r\n\r\n// https://en.wikipedia.org/wiki/Linear_interpolation\r\nfunction lerp( x, y, t ) {\r\n\r\n\treturn ( 1 - t ) * x + t * y;\r\n\r\n}\r\n\r\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\r\nfunction damp( x, y, lambda, dt ) {\r\n\r\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\r\n\r\n}\r\n\r\n// https://www.desmos.com/calculator/vcsjnyz7x4\r\nfunction pingpong( x, length = 1 ) {\r\n\r\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\r\n\r\n}\r\n\r\n// http://en.wikipedia.org/wiki/Smoothstep\r\nfunction smoothstep( x, min, max ) {\r\n\r\n\tif ( x <= min ) return 0;\r\n\tif ( x >= max ) return 1;\r\n\r\n\tx = ( x - min ) / ( max - min );\r\n\r\n\treturn x * x * ( 3 - 2 * x );\r\n\r\n}\r\n\r\nfunction smootherstep( x, min, max ) {\r\n\r\n\tif ( x <= min ) return 0;\r\n\tif ( x >= max ) return 1;\r\n\r\n\tx = ( x - min ) / ( max - min );\r\n\r\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\r\n}\r\n\r\n// Random integer from <low, high> interval\r\nfunction randInt( low, high ) {\r\n\r\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\r\n}\r\n\r\n// Random float from <low, high> interval\r\nfunction randFloat( low, high ) {\r\n\r\n\treturn low + Math.random() * ( high - low );\r\n\r\n}\r\n\r\n// Random float from <-range/2, range/2> interval\r\nfunction randFloatSpread( range ) {\r\n\r\n\treturn range * ( 0.5 - Math.random() );\r\n\r\n}\r\n\r\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\r\nfunction seededRandom( s ) {\r\n\r\n\tif ( s !== undefined ) _seed = s;\r\n\r\n\t// Mulberry32 generator\r\n\r\n\tlet t = _seed += 0x6D2B79F5;\r\n\r\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\r\n\r\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\r\n\r\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\r\n\r\n}\r\n\r\nfunction degToRad( degrees ) {\r\n\r\n\treturn degrees * DEG2RAD;\r\n\r\n}\r\n\r\nfunction radToDeg( radians ) {\r\n\r\n\treturn radians * RAD2DEG;\r\n\r\n}\r\n\r\nfunction isPowerOfTwo( value ) {\r\n\r\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\r\n}\r\n\r\nfunction ceilPowerOfTwo( value ) {\r\n\r\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\r\n\r\n}\r\n\r\nfunction floorPowerOfTwo( value ) {\r\n\r\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\r\n\r\n}\r\n\r\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\r\n\r\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\r\n\r\n\t// rotations are applied to the axes in the order specified by 'order'\r\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\r\n\t// angles are in radians\r\n\r\n\tconst cos = Math.cos;\r\n\tconst sin = Math.sin;\r\n\r\n\tconst c2 = cos( b / 2 );\r\n\tconst s2 = sin( b / 2 );\r\n\r\n\tconst c13 = cos( ( a + c ) / 2 );\r\n\tconst s13 = sin( ( a + c ) / 2 );\r\n\r\n\tconst c1_3 = cos( ( a - c ) / 2 );\r\n\tconst s1_3 = sin( ( a - c ) / 2 );\r\n\r\n\tconst c3_1 = cos( ( c - a ) / 2 );\r\n\tconst s3_1 = sin( ( c - a ) / 2 );\r\n\r\n\tswitch ( order ) {\r\n\r\n\t\tcase 'XYX':\r\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'YZY':\r\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'ZXZ':\r\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'XZX':\r\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'YXY':\r\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'ZYZ':\r\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction denormalize( value, array ) {\r\n\r\n\tswitch ( array.constructor ) {\r\n\r\n\t\tcase Float32Array:\r\n\r\n\t\t\treturn value;\r\n\r\n\t\tcase Uint32Array:\r\n\r\n\t\t\treturn value / 4294967295.0;\r\n\r\n\t\tcase Uint16Array:\r\n\r\n\t\t\treturn value / 65535.0;\r\n\r\n\t\tcase Uint8Array:\r\n\r\n\t\t\treturn value / 255.0;\r\n\r\n\t\tcase Int32Array:\r\n\r\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\r\n\r\n\t\tcase Int16Array:\r\n\r\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\r\n\r\n\t\tcase Int8Array:\r\n\r\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\r\n\r\n\t\tdefault:\r\n\r\n\t\t\tthrow new Error( 'Invalid component type.' );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction normalize( value, array ) {\r\n\r\n\tswitch ( array.constructor ) {\r\n\r\n\t\tcase Float32Array:\r\n\r\n\t\t\treturn value;\r\n\r\n\t\tcase Uint32Array:\r\n\r\n\t\t\treturn Math.round( value * 4294967295.0 );\r\n\r\n\t\tcase Uint16Array:\r\n\r\n\t\t\treturn Math.round( value * 65535.0 );\r\n\r\n\t\tcase Uint8Array:\r\n\r\n\t\t\treturn Math.round( value * 255.0 );\r\n\r\n\t\tcase Int32Array:\r\n\r\n\t\t\treturn Math.round( value * 2147483647.0 );\r\n\r\n\t\tcase Int16Array:\r\n\r\n\t\t\treturn Math.round( value * 32767.0 );\r\n\r\n\t\tcase Int8Array:\r\n\r\n\t\t\treturn Math.round( value * 127.0 );\r\n\r\n\t\tdefault:\r\n\r\n\t\t\tthrow new Error( 'Invalid component type.' );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst MathUtils = {\r\n\tDEG2RAD: DEG2RAD,\r\n\tRAD2DEG: RAD2DEG,\r\n\tgenerateUUID: generateUUID,\r\n\tclamp: clamp,\r\n\teuclideanModulo: euclideanModulo,\r\n\tmapLinear: mapLinear,\r\n\tinverseLerp: inverseLerp,\r\n\tlerp: lerp,\r\n\tdamp: damp,\r\n\tpingpong: pingpong,\r\n\tsmoothstep: smoothstep,\r\n\tsmootherstep: smootherstep,\r\n\trandInt: randInt,\r\n\trandFloat: randFloat,\r\n\trandFloatSpread: randFloatSpread,\r\n\tseededRandom: seededRandom,\r\n\tdegToRad: degToRad,\r\n\tradToDeg: radToDeg,\r\n\tisPowerOfTwo: isPowerOfTwo,\r\n\tceilPowerOfTwo: ceilPowerOfTwo,\r\n\tfloorPowerOfTwo: floorPowerOfTwo,\r\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\r\n\tnormalize: normalize,\r\n\tdenormalize: denormalize\r\n};\r\n\r\nclass Vector2 {\r\n\r\n\tconstructor( x = 0, y = 0 ) {\r\n\r\n\t\tVector2.prototype.isVector2 = true;\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t}\r\n\r\n\tget width() {\r\n\r\n\t\treturn this.x;\r\n\r\n\t}\r\n\r\n\tset width( value ) {\r\n\r\n\t\tthis.x = value;\r\n\r\n\t}\r\n\r\n\tget height() {\r\n\r\n\t\treturn this.y;\r\n\r\n\t}\r\n\r\n\tset height( value ) {\r\n\r\n\t\tthis.y = value;\r\n\r\n\t}\r\n\r\n\tset( x, y ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetScalar( scalar ) {\r\n\r\n\t\tthis.x = scalar;\r\n\t\tthis.y = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetX( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetY( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetComponent( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetComponent( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.x, this.y );\r\n\r\n\t}\r\n\r\n\tcopy( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tadd( v ) {\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScalar( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScaledVector( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsub( v ) {\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsubScalar( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsubVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiply( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyScalar( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdivide( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdivideScalar( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t}\r\n\r\n\tapplyMatrix3( m ) {\r\n\r\n\t\tconst x = this.x, y = this.y;\r\n\t\tconst e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\r\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmin( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmax( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclamp( min, max ) {\r\n\r\n\t\t// assumes min < max, componentwise\r\n\r\n\t\tthis.x = clamp( this.x, min.x, max.x );\r\n\t\tthis.y = clamp( this.y, min.y, max.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclampScalar( minVal, maxVal ) {\r\n\r\n\t\tthis.x = clamp( this.x, minVal, maxVal );\r\n\t\tthis.y = clamp( this.y, minVal, maxVal );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclampLength( min, max ) {\r\n\r\n\t\tconst length = this.length();\r\n\r\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\r\n\r\n\t}\r\n\r\n\tfloor() {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tceil() {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tround() {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\troundToZero() {\r\n\r\n\t\tthis.x = Math.trunc( this.x );\r\n\t\tthis.y = Math.trunc( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tnegate() {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdot( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t}\r\n\r\n\tcross( v ) {\r\n\r\n\t\treturn this.x * v.y - this.y * v.x;\r\n\r\n\t}\r\n\r\n\tlengthSq() {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t}\r\n\r\n\tlength() {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t}\r\n\r\n\tmanhattanLength() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\r\n\t}\r\n\r\n\tnormalize() {\r\n\r\n\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t}\r\n\r\n\tangle() {\r\n\r\n\t\t// computes the angle in radians with respect to the positive x-axis\r\n\r\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\r\n\r\n\t\treturn angle;\r\n\r\n\t}\r\n\r\n\tangleTo( v ) {\r\n\r\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\r\n\r\n\t\tif ( denominator === 0 ) return Math.PI / 2;\r\n\r\n\t\tconst theta = this.dot( v ) / denominator;\r\n\r\n\t\t// clamp, to handle numerical problems\r\n\r\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\r\n\r\n\t}\r\n\r\n\tdistanceTo( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t}\r\n\r\n\tdistanceToSquared( v ) {\r\n\r\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\r\n\t\treturn dx * dx + dy * dy;\r\n\r\n\t}\r\n\r\n\tmanhattanDistanceTo( v ) {\r\n\r\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\r\n\r\n\t}\r\n\r\n\tsetLength( length ) {\r\n\r\n\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t}\r\n\r\n\tlerp( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlerpVectors( v1, v2, alpha ) {\r\n\r\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\r\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\tfromBufferAttribute( attribute, index ) {\r\n\r\n\t\tthis.x = attribute.getX( index );\r\n\t\tthis.y = attribute.getY( index );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trotateAround( center, angle ) {\r\n\r\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\r\n\r\n\t\tconst x = this.x - center.x;\r\n\t\tconst y = this.y - center.y;\r\n\r\n\t\tthis.x = x * c - y * s + center.x;\r\n\t\tthis.y = x * s + y * c + center.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trandom() {\r\n\r\n\t\tthis.x = Math.random();\r\n\t\tthis.y = Math.random();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t*[ Symbol.iterator ]() {\r\n\r\n\t\tyield this.x;\r\n\t\tyield this.y;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Matrix3 {\r\n\r\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n\t\tMatrix3.prototype.isMatrix3 = true;\r\n\r\n\t\tthis.elements = [\r\n\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t];\r\n\r\n\t\tif ( n11 !== undefined ) {\r\n\r\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\r\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\r\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tidentity() {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( m ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst me = m.elements;\r\n\r\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\r\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\r\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\textractBasis( xAxis, yAxis, zAxis ) {\r\n\r\n\t\txAxis.setFromMatrix3Column( this, 0 );\r\n\t\tyAxis.setFromMatrix3Column( this, 1 );\r\n\t\tzAxis.setFromMatrix3Column( this, 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromMatrix4( m ) {\r\n\r\n\t\tconst me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\r\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\r\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiply( m ) {\r\n\r\n\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t}\r\n\r\n\tpremultiply( m ) {\r\n\r\n\t\treturn this.multiplyMatrices( m, this );\r\n\r\n\t}\r\n\r\n\tmultiplyMatrices( a, b ) {\r\n\r\n\t\tconst ae = a.elements;\r\n\t\tconst be = b.elements;\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\r\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\r\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\r\n\r\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\r\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\r\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\r\n\r\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\r\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\r\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\r\n\r\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\r\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\r\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\r\n\r\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\r\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\r\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyScalar( s ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdeterminant() {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\r\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\r\n\t}\r\n\r\n\tinvert() {\r\n\r\n\t\tconst te = this.elements,\r\n\r\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\r\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\r\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\r\n\r\n\t\t\tt11 = n33 * n22 - n32 * n23,\r\n\t\t\tt12 = n32 * n13 - n33 * n12,\r\n\t\t\tt13 = n23 * n12 - n22 * n13,\r\n\r\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\r\n\r\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\r\n\r\n\t\tconst detInv = 1 / det;\r\n\r\n\t\tte[ 0 ] = t11 * detInv;\r\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\r\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\r\n\r\n\t\tte[ 3 ] = t12 * detInv;\r\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\r\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\r\n\r\n\t\tte[ 6 ] = t13 * detInv;\r\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\r\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttranspose() {\r\n\r\n\t\tlet tmp;\r\n\t\tconst m = this.elements;\r\n\r\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetNormalMatrix( matrix4 ) {\r\n\r\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\r\n\r\n\t}\r\n\r\n\ttransposeIntoArray( r ) {\r\n\r\n\t\tconst m = this.elements;\r\n\r\n\t\tr[ 0 ] = m[ 0 ];\r\n\t\tr[ 1 ] = m[ 3 ];\r\n\t\tr[ 2 ] = m[ 6 ];\r\n\t\tr[ 3 ] = m[ 1 ];\r\n\t\tr[ 4 ] = m[ 4 ];\r\n\t\tr[ 5 ] = m[ 7 ];\r\n\t\tr[ 6 ] = m[ 2 ];\r\n\t\tr[ 7 ] = m[ 5 ];\r\n\t\tr[ 8 ] = m[ 8 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\r\n\r\n\t\tconst c = Math.cos( rotation );\r\n\t\tconst s = Math.sin( rotation );\r\n\r\n\t\tthis.set(\r\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\r\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\r\n\t\t\t0, 0, 1\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tscale( sx, sy ) {\r\n\r\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trotate( theta ) {\r\n\r\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttranslate( tx, ty ) {\r\n\r\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// for 2D Transforms\r\n\r\n\tmakeTranslation( x, y ) {\r\n\r\n\t\tif ( x.isVector2 ) {\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t1, 0, x.x,\r\n\t\t\t\t0, 1, x.y,\r\n\t\t\t\t0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t1, 0, x,\r\n\t\t\t\t0, 1, y,\r\n\t\t\t\t0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotation( theta ) {\r\n\r\n\t\t// counterclockwise\r\n\r\n\t\tconst c = Math.cos( theta );\r\n\t\tconst s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tc, - s, 0,\r\n\t\t\ts, c, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeScale( x, y ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tx, 0, 0,\r\n\t\t\t0, y, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tequals( matrix ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst me = matrix.elements;\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tthis.elements[ i ] = array[ i + offset ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\tarray[ offset + 8 ] = te[ 8 ];\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().fromArray( this.elements );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _m3 = /*@__PURE__*/ new Matrix3();\r\n\r\nfunction arrayNeedsUint32( array ) {\r\n\r\n\t// assumes larger values usually on last\r\n\r\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\r\n\r\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\r\n\r\n\t}\r\n\r\n\treturn false;\r\n\r\n}\r\n\r\nconst TYPED_ARRAYS = {\r\n\tInt8Array: Int8Array,\r\n\tUint8Array: Uint8Array,\r\n\tUint8ClampedArray: Uint8ClampedArray,\r\n\tInt16Array: Int16Array,\r\n\tUint16Array: Uint16Array,\r\n\tInt32Array: Int32Array,\r\n\tUint32Array: Uint32Array,\r\n\tFloat32Array: Float32Array,\r\n\tFloat64Array: Float64Array\r\n};\r\n\r\nfunction getTypedArray( type, buffer ) {\r\n\r\n\treturn new TYPED_ARRAYS[ type ]( buffer );\r\n\r\n}\r\n\r\nfunction createElementNS( name ) {\r\n\r\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\r\n\r\n}\r\n\r\nfunction createCanvasElement() {\r\n\r\n\tconst canvas = createElementNS( 'canvas' );\r\n\tcanvas.style.display = 'block';\r\n\treturn canvas;\r\n\r\n}\r\n\r\nconst _cache = {};\r\n\r\nfunction warnOnce( message ) {\r\n\r\n\tif ( message in _cache ) return;\r\n\r\n\t_cache[ message ] = true;\r\n\r\n\tconsole.warn( message );\r\n\r\n}\r\n\r\nfunction probeAsync( gl, sync, interval ) {\r\n\r\n\treturn new Promise( function ( resolve, reject ) {\r\n\r\n\t\tfunction probe() {\r\n\r\n\t\t\tswitch ( gl.clientWaitSync( sync, gl.SYNC_FLUSH_COMMANDS_BIT, 0 ) ) {\r\n\r\n\t\t\t\tcase gl.WAIT_FAILED:\r\n\t\t\t\t\treject();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase gl.TIMEOUT_EXPIRED:\r\n\t\t\t\t\tsetTimeout( probe, interval );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tresolve();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tsetTimeout( probe, interval );\r\n\r\n\t} );\r\n\r\n}\r\n\r\nfunction toNormalizedProjectionMatrix( projectionMatrix ) {\r\n\r\n\tconst m = projectionMatrix.elements;\r\n\r\n\t// Convert [-1, 1] to [0, 1] projection matrix\r\n\tm[ 2 ] = 0.5 * m[ 2 ] + 0.5 * m[ 3 ];\r\n\tm[ 6 ] = 0.5 * m[ 6 ] + 0.5 * m[ 7 ];\r\n\tm[ 10 ] = 0.5 * m[ 10 ] + 0.5 * m[ 11 ];\r\n\tm[ 14 ] = 0.5 * m[ 14 ] + 0.5 * m[ 15 ];\r\n\r\n}\r\n\r\nfunction toReversedProjectionMatrix( projectionMatrix ) {\r\n\r\n\tconst m = projectionMatrix.elements;\r\n\tconst isPerspectiveMatrix = m[ 11 ] === - 1;\r\n\r\n\t// Reverse [0, 1] projection matrix\r\n\tif ( isPerspectiveMatrix ) {\r\n\r\n\t\tm[ 10 ] = - m[ 10 ] - 1;\r\n\t\tm[ 14 ] = - m[ 14 ];\r\n\r\n\t} else {\r\n\r\n\t\tm[ 10 ] = - m[ 10 ];\r\n\t\tm[ 14 ] = - m[ 14 ] + 1;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst LINEAR_REC709_TO_XYZ = /*@__PURE__*/ new Matrix3().set(\r\n\t0.4123908, 0.3575843, 0.1804808,\r\n\t0.2126390, 0.7151687, 0.0721923,\r\n\t0.0193308, 0.1191948, 0.9505322\r\n);\r\n\r\nconst XYZ_TO_LINEAR_REC709 = /*@__PURE__*/ new Matrix3().set(\r\n\t3.2409699, - 1.5373832, - 0.4986108,\r\n\t- 0.9692436, 1.8759675, 0.0415551,\r\n\t0.0556301, - 0.2039770, 1.0569715\r\n);\r\n\r\nfunction createColorManagement() {\r\n\r\n\tconst ColorManagement = {\r\n\r\n\t\tenabled: true,\r\n\r\n\t\tworkingColorSpace: LinearSRGBColorSpace,\r\n\r\n\t\t/**\r\n\t\t * Implementations of supported color spaces.\r\n\t\t *\r\n\t\t * Required:\r\n\t\t *\t- primaries: chromaticity coordinates [ rx ry gx gy bx by ]\r\n\t\t *\t- whitePoint: reference white [ x y ]\r\n\t\t *\t- transfer: transfer function (pre-defined)\r\n\t\t *\t- toXYZ: Matrix3 RGB to XYZ transform\r\n\t\t *\t- fromXYZ: Matrix3 XYZ to RGB transform\r\n\t\t *\t- luminanceCoefficients: RGB luminance coefficients\r\n\t\t *\r\n\t\t * Optional:\r\n\t\t *  - outputColorSpaceConfig: { drawingBufferColorSpace: ColorSpace }\r\n\t\t *  - workingColorSpaceConfig: { unpackColorSpace: ColorSpace }\r\n\t\t *\r\n\t\t * Reference:\r\n\t\t * - https://www.russellcottrell.com/photo/matrixCalculator.htm\r\n\t\t */\r\n\t\tspaces: {},\r\n\r\n\t\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\r\n\r\n\t\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\r\n\r\n\t\t\t\treturn color;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.spaces[ sourceColorSpace ].transfer === SRGBTransfer ) {\r\n\r\n\t\t\t\tcolor.r = SRGBToLinear( color.r );\r\n\t\t\t\tcolor.g = SRGBToLinear( color.g );\r\n\t\t\t\tcolor.b = SRGBToLinear( color.b );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.spaces[ sourceColorSpace ].primaries !== this.spaces[ targetColorSpace ].primaries ) {\r\n\r\n\t\t\t\tcolor.applyMatrix3( this.spaces[ sourceColorSpace ].toXYZ );\r\n\t\t\t\tcolor.applyMatrix3( this.spaces[ targetColorSpace ].fromXYZ );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.spaces[ targetColorSpace ].transfer === SRGBTransfer ) {\r\n\r\n\t\t\t\tcolor.r = LinearToSRGB( color.r );\r\n\t\t\t\tcolor.g = LinearToSRGB( color.g );\r\n\t\t\t\tcolor.b = LinearToSRGB( color.b );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn color;\r\n\r\n\t\t},\r\n\r\n\t\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\r\n\r\n\t\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\r\n\r\n\t\t},\r\n\r\n\t\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\r\n\r\n\t\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\r\n\r\n\t\t},\r\n\r\n\t\tgetPrimaries: function ( colorSpace ) {\r\n\r\n\t\t\treturn this.spaces[ colorSpace ].primaries;\r\n\r\n\t\t},\r\n\r\n\t\tgetTransfer: function ( colorSpace ) {\r\n\r\n\t\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\r\n\r\n\t\t\treturn this.spaces[ colorSpace ].transfer;\r\n\r\n\t\t},\r\n\r\n\t\tgetLuminanceCoefficients: function ( target, colorSpace = this.workingColorSpace ) {\r\n\r\n\t\t\treturn target.fromArray( this.spaces[ colorSpace ].luminanceCoefficients );\r\n\r\n\t\t},\r\n\r\n\t\tdefine: function ( colorSpaces ) {\r\n\r\n\t\t\tObject.assign( this.spaces, colorSpaces );\r\n\r\n\t\t},\r\n\r\n\t\t// Internal APIs\r\n\r\n\t\t_getMatrix: function ( targetMatrix, sourceColorSpace, targetColorSpace ) {\r\n\r\n\t\t\treturn targetMatrix\r\n\t\t\t\t.copy( this.spaces[ sourceColorSpace ].toXYZ )\r\n\t\t\t\t.multiply( this.spaces[ targetColorSpace ].fromXYZ );\r\n\r\n\t\t},\r\n\r\n\t\t_getDrawingBufferColorSpace: function ( colorSpace ) {\r\n\r\n\t\t\treturn this.spaces[ colorSpace ].outputColorSpaceConfig.drawingBufferColorSpace;\r\n\r\n\t\t},\r\n\r\n\t\t_getUnpackColorSpace: function ( colorSpace = this.workingColorSpace ) {\r\n\r\n\t\t\treturn this.spaces[ colorSpace ].workingColorSpaceConfig.unpackColorSpace;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t/******************************************************************************\r\n\t * sRGB definitions\r\n\t */\r\n\r\n\tconst REC709_PRIMARIES = [ 0.640, 0.330, 0.300, 0.600, 0.150, 0.060 ];\r\n\tconst REC709_LUMINANCE_COEFFICIENTS = [ 0.2126, 0.7152, 0.0722 ];\r\n\tconst D65 = [ 0.3127, 0.3290 ];\r\n\r\n\tColorManagement.define( {\r\n\r\n\t\t[ LinearSRGBColorSpace ]: {\r\n\t\t\tprimaries: REC709_PRIMARIES,\r\n\t\t\twhitePoint: D65,\r\n\t\t\ttransfer: LinearTransfer,\r\n\t\t\ttoXYZ: LINEAR_REC709_TO_XYZ,\r\n\t\t\tfromXYZ: XYZ_TO_LINEAR_REC709,\r\n\t\t\tluminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\r\n\t\t\tworkingColorSpaceConfig: { unpackColorSpace: SRGBColorSpace },\r\n\t\t\toutputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\r\n\t\t},\r\n\r\n\t\t[ SRGBColorSpace ]: {\r\n\t\t\tprimaries: REC709_PRIMARIES,\r\n\t\t\twhitePoint: D65,\r\n\t\t\ttransfer: SRGBTransfer,\r\n\t\t\ttoXYZ: LINEAR_REC709_TO_XYZ,\r\n\t\t\tfromXYZ: XYZ_TO_LINEAR_REC709,\r\n\t\t\tluminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\r\n\t\t\toutputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\r\n\t\t},\r\n\r\n\t} );\r\n\r\n\treturn ColorManagement;\r\n\r\n}\r\n\r\nconst ColorManagement = /*@__PURE__*/ createColorManagement();\r\n\r\nfunction SRGBToLinear( c ) {\r\n\r\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\r\n\r\n}\r\n\r\nfunction LinearToSRGB( c ) {\r\n\r\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\r\n\r\n}\r\n\r\nlet _canvas;\r\n\r\nclass ImageUtils {\r\n\r\n\tstatic getDataURL( image ) {\r\n\r\n\t\tif ( /^data:/i.test( image.src ) ) {\r\n\r\n\t\t\treturn image.src;\r\n\r\n\t\t}\r\n\r\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\r\n\r\n\t\t\treturn image.src;\r\n\r\n\t\t}\r\n\r\n\t\tlet canvas;\r\n\r\n\t\tif ( image instanceof HTMLCanvasElement ) {\r\n\r\n\t\t\tcanvas = image;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\r\n\r\n\t\t\t_canvas.width = image.width;\r\n\t\t\t_canvas.height = image.height;\r\n\r\n\t\t\tconst context = _canvas.getContext( '2d' );\r\n\r\n\t\t\tif ( image instanceof ImageData ) {\r\n\r\n\t\t\t\tcontext.putImageData( image, 0, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcanvas = _canvas;\r\n\r\n\t\t}\r\n\r\n\t\treturn canvas.toDataURL( 'image/png' );\r\n\r\n\t}\r\n\r\n\tstatic sRGBToLinear( image ) {\r\n\r\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\r\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\r\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\r\n\r\n\t\t\tconst canvas = createElementNS( 'canvas' );\r\n\r\n\t\t\tcanvas.width = image.width;\r\n\t\t\tcanvas.height = image.height;\r\n\r\n\t\t\tconst context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\r\n\r\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\r\n\t\t\tconst data = imageData.data;\r\n\r\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\r\n\r\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcontext.putImageData( imageData, 0, 0 );\r\n\r\n\t\t\treturn canvas;\r\n\r\n\t\t} else if ( image.data ) {\r\n\r\n\t\t\tconst data = image.data.slice( 0 );\r\n\r\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\r\n\r\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\r\n\r\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// assuming float\r\n\r\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdata: data,\r\n\t\t\t\twidth: image.width,\r\n\t\t\t\theight: image.height\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\r\n\t\t\treturn image;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nlet _sourceId = 0;\r\n\r\nclass Source {\r\n\r\n\tconstructor( data = null ) {\r\n\r\n\t\tthis.isSource = true;\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\r\n\r\n\t\tthis.uuid = generateUUID();\r\n\r\n\t\tthis.data = data;\r\n\t\tthis.dataReady = true;\r\n\r\n\t\tthis.version = 0;\r\n\r\n\t}\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\r\n\r\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\r\n\r\n\t\t\treturn meta.images[ this.uuid ];\r\n\r\n\t\t}\r\n\r\n\t\tconst output = {\r\n\t\t\tuuid: this.uuid,\r\n\t\t\turl: ''\r\n\t\t};\r\n\r\n\t\tconst data = this.data;\r\n\r\n\t\tif ( data !== null ) {\r\n\r\n\t\t\tlet url;\r\n\r\n\t\t\tif ( Array.isArray( data ) ) {\r\n\r\n\t\t\t\t// cube texture\r\n\r\n\t\t\t\turl = [];\r\n\r\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\r\n\r\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// texture\r\n\r\n\t\t\t\turl = serializeImage( data );\r\n\r\n\t\t\t}\r\n\r\n\t\t\toutput.url = url;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! isRootObject ) {\r\n\r\n\t\t\tmeta.images[ this.uuid ] = output;\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction serializeImage( image ) {\r\n\r\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\r\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\r\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\r\n\r\n\t\t// default images\r\n\r\n\t\treturn ImageUtils.getDataURL( image );\r\n\r\n\t} else {\r\n\r\n\t\tif ( image.data ) {\r\n\r\n\t\t\t// images of DataTexture\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdata: Array.from( image.data ),\r\n\t\t\t\twidth: image.width,\r\n\t\t\t\theight: image.height,\r\n\t\t\t\ttype: image.data.constructor.name\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\r\n\t\t\treturn {};\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nlet _textureId = 0;\r\n\r\nclass Texture extends EventDispatcher {\r\n\r\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isTexture = true;\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\r\n\r\n\t\tthis.uuid = generateUUID();\r\n\r\n\t\tthis.name = '';\r\n\r\n\t\tthis.source = new Source( image );\r\n\t\tthis.mipmaps = [];\r\n\r\n\t\tthis.mapping = mapping;\r\n\t\tthis.channel = 0;\r\n\r\n\t\tthis.wrapS = wrapS;\r\n\t\tthis.wrapT = wrapT;\r\n\r\n\t\tthis.magFilter = magFilter;\r\n\t\tthis.minFilter = minFilter;\r\n\r\n\t\tthis.anisotropy = anisotropy;\r\n\r\n\t\tthis.format = format;\r\n\t\tthis.internalFormat = null;\r\n\t\tthis.type = type;\r\n\r\n\t\tthis.offset = new Vector2( 0, 0 );\r\n\t\tthis.repeat = new Vector2( 1, 1 );\r\n\t\tthis.center = new Vector2( 0, 0 );\r\n\t\tthis.rotation = 0;\r\n\r\n\t\tthis.matrixAutoUpdate = true;\r\n\t\tthis.matrix = new Matrix3();\r\n\r\n\t\tthis.generateMipmaps = true;\r\n\t\tthis.premultiplyAlpha = false;\r\n\t\tthis.flipY = true;\r\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\r\n\t\tthis.colorSpace = colorSpace;\r\n\r\n\t\tthis.userData = {};\r\n\r\n\t\tthis.version = 0;\r\n\t\tthis.onUpdate = null;\r\n\r\n\t\tthis.renderTarget = null; // assign texture to a render target\r\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\r\n\t\tthis.pmremVersion = 0; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\r\n\r\n\t}\r\n\r\n\tget image() {\r\n\r\n\t\treturn this.source.data;\r\n\r\n\t}\r\n\r\n\tset image( value = null ) {\r\n\r\n\t\tthis.source.data = value;\r\n\r\n\t}\r\n\r\n\tupdateMatrix() {\r\n\r\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.source = source.source;\r\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\r\n\t\tthis.mapping = source.mapping;\r\n\t\tthis.channel = source.channel;\r\n\r\n\t\tthis.wrapS = source.wrapS;\r\n\t\tthis.wrapT = source.wrapT;\r\n\r\n\t\tthis.magFilter = source.magFilter;\r\n\t\tthis.minFilter = source.minFilter;\r\n\r\n\t\tthis.anisotropy = source.anisotropy;\r\n\r\n\t\tthis.format = source.format;\r\n\t\tthis.internalFormat = source.internalFormat;\r\n\t\tthis.type = source.type;\r\n\r\n\t\tthis.offset.copy( source.offset );\r\n\t\tthis.repeat.copy( source.repeat );\r\n\t\tthis.center.copy( source.center );\r\n\t\tthis.rotation = source.rotation;\r\n\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\tthis.matrix.copy( source.matrix );\r\n\r\n\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\tthis.flipY = source.flipY;\r\n\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\t\tthis.colorSpace = source.colorSpace;\r\n\r\n\t\tthis.renderTarget = source.renderTarget;\r\n\t\tthis.isRenderTargetTexture = source.isRenderTargetTexture;\r\n\r\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n\t\tthis.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\r\n\r\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\r\n\r\n\t\t\treturn meta.textures[ this.uuid ];\r\n\r\n\t\t}\r\n\r\n\t\tconst output = {\r\n\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.6,\r\n\t\t\t\ttype: 'Texture',\r\n\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t},\r\n\r\n\t\t\tuuid: this.uuid,\r\n\t\t\tname: this.name,\r\n\r\n\t\t\timage: this.source.toJSON( meta ).uuid,\r\n\r\n\t\t\tmapping: this.mapping,\r\n\t\t\tchannel: this.channel,\r\n\r\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\toffset: [ this.offset.x, this.offset.y ],\r\n\t\t\tcenter: [ this.center.x, this.center.y ],\r\n\t\t\trotation: this.rotation,\r\n\r\n\t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\r\n\t\t\tformat: this.format,\r\n\t\t\tinternalFormat: this.internalFormat,\r\n\t\t\ttype: this.type,\r\n\t\t\tcolorSpace: this.colorSpace,\r\n\r\n\t\t\tminFilter: this.minFilter,\r\n\t\t\tmagFilter: this.magFilter,\r\n\t\t\tanisotropy: this.anisotropy,\r\n\r\n\t\t\tflipY: this.flipY,\r\n\r\n\t\t\tgenerateMipmaps: this.generateMipmaps,\r\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\r\n\t\t\tunpackAlignment: this.unpackAlignment\r\n\r\n\t\t};\r\n\r\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\r\n\r\n\t\tif ( ! isRootObject ) {\r\n\r\n\t\t\tmeta.textures[ this.uuid ] = output;\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n\ttransformUv( uv ) {\r\n\r\n\t\tif ( this.mapping !== UVMapping ) return uv;\r\n\r\n\t\tuv.applyMatrix3( this.matrix );\r\n\r\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapS ) {\r\n\r\n\t\t\t\tcase RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapT ) {\r\n\r\n\t\t\t\tcase RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.flipY ) {\r\n\r\n\t\t\tuv.y = 1 - uv.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn uv;\r\n\r\n\t}\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) {\r\n\r\n\t\t\tthis.version ++;\r\n\t\t\tthis.source.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tset needsPMREMUpdate( value ) {\r\n\r\n\t\tif ( value === true ) {\r\n\r\n\t\t\tthis.pmremVersion ++;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nTexture.DEFAULT_IMAGE = null;\r\nTexture.DEFAULT_MAPPING = UVMapping;\r\nTexture.DEFAULT_ANISOTROPY = 1;\r\n\r\nclass Vector4 {\r\n\r\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\r\n\r\n\t\tVector4.prototype.isVector4 = true;\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\r\n\t}\r\n\r\n\tget width() {\r\n\r\n\t\treturn this.z;\r\n\r\n\t}\r\n\r\n\tset width( value ) {\r\n\r\n\t\tthis.z = value;\r\n\r\n\t}\r\n\r\n\tget height() {\r\n\r\n\t\treturn this.w;\r\n\r\n\t}\r\n\r\n\tset height( value ) {\r\n\r\n\t\tthis.w = value;\r\n\r\n\t}\r\n\r\n\tset( x, y, z, w ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetScalar( scalar ) {\r\n\r\n\t\tthis.x = scalar;\r\n\t\tthis.y = scalar;\r\n\t\tthis.z = scalar;\r\n\t\tthis.w = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetX( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetY( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetZ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetW( w ) {\r\n\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetComponent( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tcase 3: this.w = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetComponent( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tcase 3: return this.w;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\r\n\t}\r\n\r\n\tcopy( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tadd( v ) {\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\t\tthis.w += v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScalar( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\t\tthis.w += s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\t\tthis.w = a.w + b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScaledVector( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\t\tthis.w += v.w * s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsub( v ) {\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\t\tthis.w -= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsubScalar( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\t\tthis.w -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsubVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\t\tthis.w = a.w - b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiply( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\t\tthis.w *= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyScalar( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\t\tthis.w *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( m ) {\r\n\r\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\r\n\t\tconst e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdivide( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\t\tthis.z /= v.z;\r\n\t\tthis.w /= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdivideScalar( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t}\r\n\r\n\tsetAxisAngleFromQuaternion( q ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\r\n\t\t// q is assumed to be normalized\r\n\r\n\t\tthis.w = 2 * Math.acos( q.w );\r\n\r\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\r\n\r\n\t\tif ( s < 0.0001 ) {\r\n\r\n\t\t\tthis.x = 1;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = q.x / s;\r\n\t\t\tthis.y = q.y / s;\r\n\t\t\tthis.z = q.z / s;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetAxisAngleFromRotationMatrix( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tlet angle, x, y, z; // variables for result\r\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\r\n\t\t\tte = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\r\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\r\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\r\n\t\t\t// singularity found\r\n\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t// in leading diagonal and zero in other terms\r\n\r\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\r\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\r\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\r\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\r\n\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\r\n\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// otherwise this singularity is angle = 180\r\n\r\n\t\t\tangle = Math.PI;\r\n\r\n\t\t\tconst xx = ( m11 + 1 ) / 2;\r\n\t\t\tconst yy = ( m22 + 1 ) / 2;\r\n\t\t\tconst zz = ( m33 + 1 ) / 2;\r\n\t\t\tconst xy = ( m12 + m21 ) / 4;\r\n\t\t\tconst xz = ( m13 + m31 ) / 4;\r\n\t\t\tconst yz = ( m23 + m32 ) / 4;\r\n\r\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\r\n\t\t\t\t// m11 is the largest diagonal term\r\n\r\n\t\t\t\tif ( xx < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\tz = xz / x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( yy > zz ) {\r\n\r\n\t\t\t\t// m22 is the largest diagonal term\r\n\r\n\t\t\t\tif ( yy < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\tz = yz / y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\r\n\t\t\t\tif ( zz < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\ty = yz / z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.set( x, y, z, angle );\r\n\r\n\t\t\treturn this; // return 180 deg rotation\r\n\r\n\t\t}\r\n\r\n\t\t// as we have reached here there are no singularities so we can handle normally\r\n\r\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\r\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\r\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\r\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\r\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromMatrixPosition( m ) {\r\n\r\n\t\tconst e = m.elements;\r\n\r\n\t\tthis.x = e[ 12 ];\r\n\t\tthis.y = e[ 13 ];\r\n\t\tthis.z = e[ 14 ];\r\n\t\tthis.w = e[ 15 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmin( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\t\tthis.z = Math.min( this.z, v.z );\r\n\t\tthis.w = Math.min( this.w, v.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmax( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\t\tthis.z = Math.max( this.z, v.z );\r\n\t\tthis.w = Math.max( this.w, v.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclamp( min, max ) {\r\n\r\n\t\t// assumes min < max, componentwise\r\n\r\n\t\tthis.x = clamp( this.x, min.x, max.x );\r\n\t\tthis.y = clamp( this.y, min.y, max.y );\r\n\t\tthis.z = clamp( this.z, min.z, max.z );\r\n\t\tthis.w = clamp( this.w, min.w, max.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclampScalar( minVal, maxVal ) {\r\n\r\n\t\tthis.x = clamp( this.x, minVal, maxVal );\r\n\t\tthis.y = clamp( this.y, minVal, maxVal );\r\n\t\tthis.z = clamp( this.z, minVal, maxVal );\r\n\t\tthis.w = clamp( this.w, minVal, maxVal );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclampLength( min, max ) {\r\n\r\n\t\tconst length = this.length();\r\n\r\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\r\n\r\n\t}\r\n\r\n\tfloor() {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\t\tthis.w = Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tceil() {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\t\tthis.w = Math.ceil( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tround() {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\t\tthis.w = Math.round( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\troundToZero() {\r\n\r\n\t\tthis.x = Math.trunc( this.x );\r\n\t\tthis.y = Math.trunc( this.y );\r\n\t\tthis.z = Math.trunc( this.z );\r\n\t\tthis.w = Math.trunc( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tnegate() {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\t\tthis.w = - this.w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdot( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n\t}\r\n\r\n\tlengthSq() {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\r\n\t}\r\n\r\n\tlength() {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n\t}\r\n\r\n\tmanhattanLength() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\r\n\t}\r\n\r\n\tnormalize() {\r\n\r\n\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t}\r\n\r\n\tsetLength( length ) {\r\n\r\n\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t}\r\n\r\n\tlerp( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlerpVectors( v1, v2, alpha ) {\r\n\r\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\r\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\r\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\r\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\t\tthis.w = array[ offset + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\t\tarray[ offset + 3 ] = this.w;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\tfromBufferAttribute( attribute, index ) {\r\n\r\n\t\tthis.x = attribute.getX( index );\r\n\t\tthis.y = attribute.getY( index );\r\n\t\tthis.z = attribute.getZ( index );\r\n\t\tthis.w = attribute.getW( index );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trandom() {\r\n\r\n\t\tthis.x = Math.random();\r\n\t\tthis.y = Math.random();\r\n\t\tthis.z = Math.random();\r\n\t\tthis.w = Math.random();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t*[ Symbol.iterator ]() {\r\n\r\n\t\tyield this.x;\r\n\t\tyield this.y;\r\n\t\tyield this.z;\r\n\t\tyield this.w;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/*\r\n In options, we can specify:\r\n * Texture parameters for an auto-generated target texture\r\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\r\n*/\r\nclass RenderTarget extends EventDispatcher {\r\n\r\n\tconstructor( width = 1, height = 1, options = {} ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isRenderTarget = true;\r\n\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\tthis.depth = 1;\r\n\r\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\r\n\t\tthis.scissorTest = false;\r\n\r\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\r\n\r\n\t\tconst image = { width: width, height: height, depth: 1 };\r\n\r\n\t\toptions = Object.assign( {\r\n\t\t\tgenerateMipmaps: false,\r\n\t\t\tinternalFormat: null,\r\n\t\t\tminFilter: LinearFilter,\r\n\t\t\tdepthBuffer: true,\r\n\t\t\tstencilBuffer: false,\r\n\t\t\tresolveDepthBuffer: true,\r\n\t\t\tresolveStencilBuffer: true,\r\n\t\t\tdepthTexture: null,\r\n\t\t\tsamples: 0,\r\n\t\t\tcount: 1\r\n\t\t}, options );\r\n\r\n\t\tconst texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\r\n\r\n\t\ttexture.flipY = false;\r\n\t\ttexture.generateMipmaps = options.generateMipmaps;\r\n\t\ttexture.internalFormat = options.internalFormat;\r\n\r\n\t\tthis.textures = [];\r\n\r\n\t\tconst count = options.count;\r\n\t\tfor ( let i = 0; i < count; i ++ ) {\r\n\r\n\t\t\tthis.textures[ i ] = texture.clone();\r\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\r\n\t\t\tthis.textures[ i ].renderTarget = this;\r\n\r\n\t\t}\r\n\r\n\t\tthis.depthBuffer = options.depthBuffer;\r\n\t\tthis.stencilBuffer = options.stencilBuffer;\r\n\r\n\t\tthis.resolveDepthBuffer = options.resolveDepthBuffer;\r\n\t\tthis.resolveStencilBuffer = options.resolveStencilBuffer;\r\n\r\n\t\tthis._depthTexture = null;\r\n\t\tthis.depthTexture = options.depthTexture;\r\n\r\n\t\tthis.samples = options.samples;\r\n\r\n\t}\r\n\r\n\tget texture() {\r\n\r\n\t\treturn this.textures[ 0 ];\r\n\r\n\t}\r\n\r\n\tset texture( value ) {\r\n\r\n\t\tthis.textures[ 0 ] = value;\r\n\r\n\t}\r\n\r\n\tset depthTexture( current ) {\r\n\r\n\t\tif ( this._depthTexture !== null ) this._depthTexture.renderTarget = null;\r\n\t\tif ( current !== null ) current.renderTarget = this;\r\n\r\n\t\tthis._depthTexture = current;\r\n\r\n\t}\r\n\r\n\tget depthTexture() {\r\n\r\n\t\treturn this._depthTexture;\r\n\r\n\t}\r\n\r\n\tsetSize( width, height, depth = 1 ) {\r\n\r\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\r\n\r\n\t\t\tthis.width = width;\r\n\t\t\tthis.height = height;\r\n\t\t\tthis.depth = depth;\r\n\r\n\t\t\tfor ( let i = 0, il = this.textures.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tthis.textures[ i ].image.width = width;\r\n\t\t\t\tthis.textures[ i ].image.height = height;\r\n\t\t\t\tthis.textures[ i ].image.depth = depth;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.dispose();\r\n\r\n\t\t}\r\n\r\n\t\tthis.viewport.set( 0, 0, width, height );\r\n\t\tthis.scissor.set( 0, 0, width, height );\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.width = source.width;\r\n\t\tthis.height = source.height;\r\n\t\tthis.depth = source.depth;\r\n\r\n\t\tthis.scissor.copy( source.scissor );\r\n\t\tthis.scissorTest = source.scissorTest;\r\n\r\n\t\tthis.viewport.copy( source.viewport );\r\n\r\n\t\tthis.textures.length = 0;\r\n\r\n\t\tfor ( let i = 0, il = source.textures.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.textures[ i ] = source.textures[ i ].clone();\r\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\r\n\t\t\tthis.textures[ i ].renderTarget = this;\r\n\r\n\t\t}\r\n\r\n\t\t// ensure image object is not shared, see #20328\r\n\r\n\t\tconst image = Object.assign( {}, source.texture.image );\r\n\t\tthis.texture.source = new Source( image );\r\n\r\n\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\r\n\t\tthis.resolveDepthBuffer = source.resolveDepthBuffer;\r\n\t\tthis.resolveStencilBuffer = source.resolveStencilBuffer;\r\n\r\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\r\n\r\n\t\tthis.samples = source.samples;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass WebGLRenderTarget extends RenderTarget {\r\n\r\n\tconstructor( width = 1, height = 1, options = {} ) {\r\n\r\n\t\tsuper( width, height, options );\r\n\r\n\t\tthis.isWebGLRenderTarget = true;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass DataArrayTexture extends Texture {\r\n\r\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\r\n\r\n\t\tsuper( null );\r\n\r\n\t\tthis.isDataArrayTexture = true;\r\n\r\n\t\tthis.image = { data, width, height, depth };\r\n\r\n\t\tthis.magFilter = NearestFilter;\r\n\t\tthis.minFilter = NearestFilter;\r\n\r\n\t\tthis.wrapR = ClampToEdgeWrapping;\r\n\r\n\t\tthis.generateMipmaps = false;\r\n\t\tthis.flipY = false;\r\n\t\tthis.unpackAlignment = 1;\r\n\r\n\t\tthis.layerUpdates = new Set();\r\n\r\n\t}\r\n\r\n\taddLayerUpdate( layerIndex ) {\r\n\r\n\t\tthis.layerUpdates.add( layerIndex );\r\n\r\n\t}\r\n\r\n\tclearLayerUpdates() {\r\n\r\n\t\tthis.layerUpdates.clear();\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\r\n\r\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\r\n\r\n\t\tsuper( width, height, options );\r\n\r\n\t\tthis.isWebGLArrayRenderTarget = true;\r\n\r\n\t\tthis.depth = depth;\r\n\r\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\r\n\r\n\t\tthis.texture.isRenderTargetTexture = true;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Data3DTexture extends Texture {\r\n\r\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\r\n\r\n\t\t// We're going to add .setXXX() methods for setting properties later.\r\n\t\t// Users can still set in Data3DTexture directly.\r\n\t\t//\r\n\t\t//\tconst texture = new THREE.Data3DTexture( data, width, height, depth );\r\n\t\t// \ttexture.anisotropy = 16;\r\n\t\t//\r\n\t\t// See #14839\r\n\r\n\t\tsuper( null );\r\n\r\n\t\tthis.isData3DTexture = true;\r\n\r\n\t\tthis.image = { data, width, height, depth };\r\n\r\n\t\tthis.magFilter = NearestFilter;\r\n\t\tthis.minFilter = NearestFilter;\r\n\r\n\t\tthis.wrapR = ClampToEdgeWrapping;\r\n\r\n\t\tthis.generateMipmaps = false;\r\n\t\tthis.flipY = false;\r\n\t\tthis.unpackAlignment = 1;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\r\n\r\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\r\n\r\n\t\tsuper( width, height, options );\r\n\r\n\t\tthis.isWebGL3DRenderTarget = true;\r\n\r\n\t\tthis.depth = depth;\r\n\r\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\r\n\r\n\t\tthis.texture.isRenderTargetTexture = true;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Quaternion {\r\n\r\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\r\n\r\n\t\tthis.isQuaternion = true;\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._w = w;\r\n\r\n\t}\r\n\r\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\r\n\r\n\t\t// fuzz-free, array-based Quaternion SLERP operation\r\n\r\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\r\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\r\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\r\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\r\n\r\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\r\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\r\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\r\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\r\n\r\n\t\tif ( t === 0 ) {\r\n\r\n\t\t\tdst[ dstOffset + 0 ] = x0;\r\n\t\t\tdst[ dstOffset + 1 ] = y0;\r\n\t\t\tdst[ dstOffset + 2 ] = z0;\r\n\t\t\tdst[ dstOffset + 3 ] = w0;\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( t === 1 ) {\r\n\r\n\t\t\tdst[ dstOffset + 0 ] = x1;\r\n\t\t\tdst[ dstOffset + 1 ] = y1;\r\n\t\t\tdst[ dstOffset + 2 ] = z1;\r\n\t\t\tdst[ dstOffset + 3 ] = w1;\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\r\n\r\n\t\t\tlet s = 1 - t;\r\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\r\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\r\n\t\t\t\tsqrSin = 1 - cos * cos;\r\n\r\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\r\n\t\t\tif ( sqrSin > Number.EPSILON ) {\r\n\r\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\r\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\r\n\r\n\t\t\t\ts = Math.sin( s * len ) / sin;\r\n\t\t\t\tt = Math.sin( t * len ) / sin;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst tDir = t * dir;\r\n\r\n\t\t\tx0 = x0 * s + x1 * tDir;\r\n\t\t\ty0 = y0 * s + y1 * tDir;\r\n\t\t\tz0 = z0 * s + z1 * tDir;\r\n\t\t\tw0 = w0 * s + w1 * tDir;\r\n\r\n\t\t\t// Normalize in case we just did a lerp:\r\n\t\t\tif ( s === 1 - t ) {\r\n\r\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\r\n\r\n\t\t\t\tx0 *= f;\r\n\t\t\t\ty0 *= f;\r\n\t\t\t\tz0 *= f;\r\n\t\t\t\tw0 *= f;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tdst[ dstOffset ] = x0;\r\n\t\tdst[ dstOffset + 1 ] = y0;\r\n\t\tdst[ dstOffset + 2 ] = z0;\r\n\t\tdst[ dstOffset + 3 ] = w0;\r\n\r\n\t}\r\n\r\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\r\n\r\n\t\tconst x0 = src0[ srcOffset0 ];\r\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\r\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\r\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\r\n\r\n\t\tconst x1 = src1[ srcOffset1 ];\r\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\r\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\r\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\r\n\r\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\r\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\r\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\r\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\r\n\r\n\t\treturn dst;\r\n\r\n\t}\r\n\r\n\tget x() {\r\n\r\n\t\treturn this._x;\r\n\r\n\t}\r\n\r\n\tset x( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\tget y() {\r\n\r\n\t\treturn this._y;\r\n\r\n\t}\r\n\r\n\tset y( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\tget z() {\r\n\r\n\t\treturn this._z;\r\n\r\n\t}\r\n\r\n\tset z( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\tget w() {\r\n\r\n\t\treturn this._w;\r\n\r\n\t}\r\n\r\n\tset w( value ) {\r\n\r\n\t\tthis._w = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\tset( x, y, z, w ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._w = w;\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\r\n\t}\r\n\r\n\tcopy( quaternion ) {\r\n\r\n\t\tthis._x = quaternion.x;\r\n\t\tthis._y = quaternion.y;\r\n\t\tthis._z = quaternion.z;\r\n\t\tthis._w = quaternion.w;\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromEuler( euler, update = true ) {\r\n\r\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\r\n\r\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t//\tcontent/SpinCalc.m\r\n\r\n\t\tconst cos = Math.cos;\r\n\t\tconst sin = Math.sin;\r\n\r\n\t\tconst c1 = cos( x / 2 );\r\n\t\tconst c2 = cos( y / 2 );\r\n\t\tconst c3 = cos( z / 2 );\r\n\r\n\t\tconst s1 = sin( x / 2 );\r\n\t\tconst s2 = sin( y / 2 );\r\n\t\tconst s3 = sin( z / 2 );\r\n\r\n\t\tswitch ( order ) {\r\n\r\n\t\t\tcase 'XYZ':\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'YXZ':\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ZXY':\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ZYX':\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'YZX':\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'XZY':\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\r\n\r\n\t\t}\r\n\r\n\t\tif ( update === true ) this._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromAxisAngle( axis, angle ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\r\n\t\tthis._x = axis.x * s;\r\n\t\tthis._y = axis.y * s;\r\n\t\tthis._z = axis.z * s;\r\n\t\tthis._w = Math.cos( halfAngle );\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromRotationMatrix( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tconst te = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\r\n\t\t\ttrace = m11 + m22 + m33;\r\n\r\n\t\tif ( trace > 0 ) {\r\n\r\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\r\n\r\n\t\t\tthis._w = 0.25 / s;\r\n\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\r\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\r\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\r\n\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\tthis._x = 0.25 * s;\r\n\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\r\n\t\t} else if ( m22 > m33 ) {\r\n\r\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\r\n\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\tthis._y = 0.25 * s;\r\n\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\r\n\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\tthis._z = 0.25 * s;\r\n\r\n\t\t}\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromUnitVectors( vFrom, vTo ) {\r\n\r\n\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\r\n\t\tlet r = vFrom.dot( vTo ) + 1;\r\n\r\n\t\tif ( r < Number.EPSILON ) {\r\n\r\n\t\t\t// vFrom and vTo point in opposite directions\r\n\r\n\t\t\tr = 0;\r\n\r\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\r\n\t\t\t\tthis._x = - vFrom.y;\r\n\t\t\t\tthis._y = vFrom.x;\r\n\t\t\t\tthis._z = 0;\r\n\t\t\t\tthis._w = r;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = - vFrom.z;\r\n\t\t\t\tthis._z = vFrom.y;\r\n\t\t\t\tthis._w = r;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\r\n\r\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\r\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\r\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\r\n\t\t\tthis._w = r;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.normalize();\r\n\r\n\t}\r\n\r\n\tangleTo( q ) {\r\n\r\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\r\n\r\n\t}\r\n\r\n\trotateTowards( q, step ) {\r\n\r\n\t\tconst angle = this.angleTo( q );\r\n\r\n\t\tif ( angle === 0 ) return this;\r\n\r\n\t\tconst t = Math.min( 1, step / angle );\r\n\r\n\t\tthis.slerp( q, t );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tidentity() {\r\n\r\n\t\treturn this.set( 0, 0, 0, 1 );\r\n\r\n\t}\r\n\r\n\tinvert() {\r\n\r\n\t\t// quaternion is assumed to have unit length\r\n\r\n\t\treturn this.conjugate();\r\n\r\n\t}\r\n\r\n\tconjugate() {\r\n\r\n\t\tthis._x *= - 1;\r\n\t\tthis._y *= - 1;\r\n\t\tthis._z *= - 1;\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdot( v ) {\r\n\r\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\r\n\t}\r\n\r\n\tlengthSq() {\r\n\r\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n\t}\r\n\r\n\tlength() {\r\n\r\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\r\n\t}\r\n\r\n\tnormalize() {\r\n\r\n\t\tlet l = this.length();\r\n\r\n\t\tif ( l === 0 ) {\r\n\r\n\t\t\tthis._x = 0;\r\n\t\t\tthis._y = 0;\r\n\t\t\tthis._z = 0;\r\n\t\t\tthis._w = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tl = 1 / l;\r\n\r\n\t\t\tthis._x = this._x * l;\r\n\t\t\tthis._y = this._y * l;\r\n\t\t\tthis._z = this._z * l;\r\n\t\t\tthis._w = this._w * l;\r\n\r\n\t\t}\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiply( q ) {\r\n\r\n\t\treturn this.multiplyQuaternions( this, q );\r\n\r\n\t}\r\n\r\n\tpremultiply( q ) {\r\n\r\n\t\treturn this.multiplyQuaternions( q, this );\r\n\r\n\t}\r\n\r\n\tmultiplyQuaternions( a, b ) {\r\n\r\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tslerp( qb, t ) {\r\n\r\n\t\tif ( t === 0 ) return this;\r\n\t\tif ( t === 1 ) return this.copy( qb );\r\n\r\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\r\n\r\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n\t\tif ( cosHalfTheta < 0 ) {\r\n\r\n\t\t\tthis._w = - qb._w;\r\n\t\t\tthis._x = - qb._x;\r\n\t\t\tthis._y = - qb._y;\r\n\t\t\tthis._z = - qb._z;\r\n\r\n\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.copy( qb );\r\n\r\n\t\t}\r\n\r\n\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\r\n\t\t\tthis._w = w;\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\r\n\r\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\r\n\r\n\t\t\tconst s = 1 - t;\r\n\t\t\tthis._w = s * w + t * this._w;\r\n\t\t\tthis._x = s * x + t * this._x;\r\n\t\t\tthis._y = s * y + t * this._y;\r\n\t\t\tthis._z = s * z + t * this._z;\r\n\r\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\r\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\r\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\r\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tslerpQuaternions( qa, qb, t ) {\r\n\r\n\t\treturn this.copy( qa ).slerp( qb, t );\r\n\r\n\t}\r\n\r\n\trandom() {\r\n\r\n\t\t// sets this quaternion to a uniform random unit quaternnion\r\n\r\n\t\t// Ken Shoemake\r\n\t\t// Uniform random rotations\r\n\t\t// D. Kirk, editor, Graphics Gems III, pages 124-132. Academic Press, New York, 1992.\r\n\r\n\t\tconst theta1 = 2 * Math.PI * Math.random();\r\n\t\tconst theta2 = 2 * Math.PI * Math.random();\r\n\r\n\t\tconst x0 = Math.random();\r\n\t\tconst r1 = Math.sqrt( 1 - x0 );\r\n\t\tconst r2 = Math.sqrt( x0 );\r\n\r\n\t\treturn this.set(\r\n\t\t\tr1 * Math.sin( theta1 ),\r\n\t\t\tr1 * Math.cos( theta1 ),\r\n\t\t\tr2 * Math.sin( theta2 ),\r\n\t\t\tr2 * Math.cos( theta2 ),\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tequals( quaternion ) {\r\n\r\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tthis._x = array[ offset ];\r\n\t\tthis._y = array[ offset + 1 ];\r\n\t\tthis._z = array[ offset + 2 ];\r\n\t\tthis._w = array[ offset + 3 ];\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._w;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\tfromBufferAttribute( attribute, index ) {\r\n\r\n\t\tthis._x = attribute.getX( index );\r\n\t\tthis._y = attribute.getY( index );\r\n\t\tthis._z = attribute.getZ( index );\r\n\t\tthis._w = attribute.getW( index );\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\treturn this.toArray();\r\n\r\n\t}\r\n\r\n\t_onChange( callback ) {\r\n\r\n\t\tthis._onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t_onChangeCallback() {}\r\n\r\n\t*[ Symbol.iterator ]() {\r\n\r\n\t\tyield this._x;\r\n\t\tyield this._y;\r\n\t\tyield this._z;\r\n\t\tyield this._w;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Vector3 {\r\n\r\n\tconstructor( x = 0, y = 0, z = 0 ) {\r\n\r\n\t\tVector3.prototype.isVector3 = true;\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\r\n\t}\r\n\r\n\tset( x, y, z ) {\r\n\r\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetScalar( scalar ) {\r\n\r\n\t\tthis.x = scalar;\r\n\t\tthis.y = scalar;\r\n\t\tthis.z = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetX( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetY( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetZ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetComponent( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetComponent( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\r\n\t}\r\n\r\n\tcopy( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tadd( v ) {\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScalar( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScaledVector( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsub( v ) {\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsubScalar( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsubVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiply( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyScalar( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyVectors( a, b ) {\r\n\r\n\t\tthis.x = a.x * b.x;\r\n\t\tthis.y = a.y * b.y;\r\n\t\tthis.z = a.z * b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyEuler( euler ) {\r\n\r\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\r\n\r\n\t}\r\n\r\n\tapplyAxisAngle( axis, angle ) {\r\n\r\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\r\n\r\n\t}\r\n\r\n\tapplyMatrix3( m ) {\r\n\r\n\t\tconst x = this.x, y = this.y, z = this.z;\r\n\t\tconst e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyNormalMatrix( m ) {\r\n\r\n\t\treturn this.applyMatrix3( m ).normalize();\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( m ) {\r\n\r\n\t\tconst x = this.x, y = this.y, z = this.z;\r\n\t\tconst e = m.elements;\r\n\r\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\r\n\r\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\r\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\r\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyQuaternion( q ) {\r\n\r\n\t\t// quaternion q is assumed to have unit length\r\n\r\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\r\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\r\n\r\n\t\t// t = 2 * cross( q.xyz, v );\r\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\r\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\r\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\r\n\r\n\t\t// v + q.w * t + cross( q.xyz, t );\r\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\r\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\r\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tproject( camera ) {\r\n\r\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\r\n\r\n\t}\r\n\r\n\tunproject( camera ) {\r\n\r\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\r\n\r\n\t}\r\n\r\n\ttransformDirection( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t// vector interpreted as a direction\r\n\r\n\t\tconst x = this.x, y = this.y, z = this.z;\r\n\t\tconst e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\r\n\t\treturn this.normalize();\r\n\r\n\t}\r\n\r\n\tdivide( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\t\tthis.z /= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdivideScalar( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t}\r\n\r\n\tmin( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\t\tthis.z = Math.min( this.z, v.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmax( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\t\tthis.z = Math.max( this.z, v.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclamp( min, max ) {\r\n\r\n\t\t// assumes min < max, componentwise\r\n\r\n\t\tthis.x = clamp( this.x, min.x, max.x );\r\n\t\tthis.y = clamp( this.y, min.y, max.y );\r\n\t\tthis.z = clamp( this.z, min.z, max.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclampScalar( minVal, maxVal ) {\r\n\r\n\t\tthis.x = clamp( this.x, minVal, maxVal );\r\n\t\tthis.y = clamp( this.y, minVal, maxVal );\r\n\t\tthis.z = clamp( this.z, minVal, maxVal );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclampLength( min, max ) {\r\n\r\n\t\tconst length = this.length();\r\n\r\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\r\n\r\n\t}\r\n\r\n\tfloor() {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tceil() {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tround() {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\troundToZero() {\r\n\r\n\t\tthis.x = Math.trunc( this.x );\r\n\t\tthis.y = Math.trunc( this.y );\r\n\t\tthis.z = Math.trunc( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tnegate() {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdot( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t}\r\n\r\n\t// TODO lengthSquared?\r\n\r\n\tlengthSq() {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n\t}\r\n\r\n\tlength() {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n\t}\r\n\r\n\tmanhattanLength() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\r\n\t}\r\n\r\n\tnormalize() {\r\n\r\n\t\treturn this.divideScalar( this.length() || 1 );\r\n\r\n\t}\r\n\r\n\tsetLength( length ) {\r\n\r\n\t\treturn this.normalize().multiplyScalar( length );\r\n\r\n\t}\r\n\r\n\tlerp( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlerpVectors( v1, v2, alpha ) {\r\n\r\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\r\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\r\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcross( v ) {\r\n\r\n\t\treturn this.crossVectors( this, v );\r\n\r\n\t}\r\n\r\n\tcrossVectors( a, b ) {\r\n\r\n\t\tconst ax = a.x, ay = a.y, az = a.z;\r\n\t\tconst bx = b.x, by = b.y, bz = b.z;\r\n\r\n\t\tthis.x = ay * bz - az * by;\r\n\t\tthis.y = az * bx - ax * bz;\r\n\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tprojectOnVector( v ) {\r\n\r\n\t\tconst denominator = v.lengthSq();\r\n\r\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\r\n\r\n\t\tconst scalar = v.dot( this ) / denominator;\r\n\r\n\t\treturn this.copy( v ).multiplyScalar( scalar );\r\n\r\n\t}\r\n\r\n\tprojectOnPlane( planeNormal ) {\r\n\r\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\r\n\r\n\t\treturn this.sub( _vector$c );\r\n\r\n\t}\r\n\r\n\treflect( normal ) {\r\n\r\n\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t// normal is assumed to have unit length\r\n\r\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\r\n\t}\r\n\r\n\tangleTo( v ) {\r\n\r\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\r\n\r\n\t\tif ( denominator === 0 ) return Math.PI / 2;\r\n\r\n\t\tconst theta = this.dot( v ) / denominator;\r\n\r\n\t\t// clamp, to handle numerical problems\r\n\r\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\r\n\r\n\t}\r\n\r\n\tdistanceTo( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t}\r\n\r\n\tdistanceToSquared( v ) {\r\n\r\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\r\n\t}\r\n\r\n\tmanhattanDistanceTo( v ) {\r\n\r\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\r\n\r\n\t}\r\n\r\n\tsetFromSpherical( s ) {\r\n\r\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\r\n\r\n\t}\r\n\r\n\tsetFromSphericalCoords( radius, phi, theta ) {\r\n\r\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\r\n\r\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\r\n\t\tthis.y = Math.cos( phi ) * radius;\r\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromCylindrical( c ) {\r\n\r\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\r\n\r\n\t}\r\n\r\n\tsetFromCylindricalCoords( radius, theta, y ) {\r\n\r\n\t\tthis.x = radius * Math.sin( theta );\r\n\t\tthis.y = y;\r\n\t\tthis.z = radius * Math.cos( theta );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromMatrixPosition( m ) {\r\n\r\n\t\tconst e = m.elements;\r\n\r\n\t\tthis.x = e[ 12 ];\r\n\t\tthis.y = e[ 13 ];\r\n\t\tthis.z = e[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromMatrixScale( m ) {\r\n\r\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\r\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\r\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\r\n\r\n\t\tthis.x = sx;\r\n\t\tthis.y = sy;\r\n\t\tthis.z = sz;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromMatrixColumn( m, index ) {\r\n\r\n\t\treturn this.fromArray( m.elements, index * 4 );\r\n\r\n\t}\r\n\r\n\tsetFromMatrix3Column( m, index ) {\r\n\r\n\t\treturn this.fromArray( m.elements, index * 3 );\r\n\r\n\t}\r\n\r\n\tsetFromEuler( e ) {\r\n\r\n\t\tthis.x = e._x;\r\n\t\tthis.y = e._y;\r\n\t\tthis.z = e._z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromColor( c ) {\r\n\r\n\t\tthis.x = c.r;\r\n\t\tthis.y = c.g;\r\n\t\tthis.z = c.b;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\tfromBufferAttribute( attribute, index ) {\r\n\r\n\t\tthis.x = attribute.getX( index );\r\n\t\tthis.y = attribute.getY( index );\r\n\t\tthis.z = attribute.getZ( index );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trandom() {\r\n\r\n\t\tthis.x = Math.random();\r\n\t\tthis.y = Math.random();\r\n\t\tthis.z = Math.random();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trandomDirection() {\r\n\r\n\t\t// https://mathworld.wolfram.com/SpherePointPicking.html\r\n\r\n\t\tconst theta = Math.random() * Math.PI * 2;\r\n\t\tconst u = Math.random() * 2 - 1;\r\n\t\tconst c = Math.sqrt( 1 - u * u );\r\n\r\n\t\tthis.x = c * Math.cos( theta );\r\n\t\tthis.y = u;\r\n\t\tthis.z = c * Math.sin( theta );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t*[ Symbol.iterator ]() {\r\n\r\n\t\tyield this.x;\r\n\t\tyield this.y;\r\n\t\tyield this.z;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _vector$c = /*@__PURE__*/ new Vector3();\r\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\r\n\r\nclass Box3 {\r\n\r\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\r\n\r\n\t\tthis.isBox3 = true;\r\n\r\n\t\tthis.min = min;\r\n\t\tthis.max = max;\r\n\r\n\t}\r\n\r\n\tset( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromArray( array ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\r\n\r\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromBufferAttribute( attribute ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromPoints( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromCenterAndSize( center, size ) {\r\n\r\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\r\n\r\n\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromObject( object, precise = false ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\treturn this.expandByObject( object, precise );\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\tcopy( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeEmpty() {\r\n\r\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\r\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tisEmpty() {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\r\n\t}\r\n\r\n\tgetCenter( target ) {\r\n\r\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t}\r\n\r\n\tgetSize( target ) {\r\n\r\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\r\n\r\n\t}\r\n\r\n\texpandByPoint( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\texpandByVector( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\texpandByScalar( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\texpandByObject( object, precise = false ) {\r\n\r\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t// accounting for both the object's, and children's, world transforms\r\n\r\n\t\tobject.updateWorldMatrix( false, false );\r\n\r\n\t\tconst geometry = object.geometry;\r\n\r\n\t\tif ( geometry !== undefined ) {\r\n\r\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\r\n\r\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\r\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\r\n\r\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\r\n\r\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tif ( object.isMesh === true ) {\r\n\r\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\r\n\t\t\t\t\tthis.expandByPoint( _vector$b );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( object.boundingBox !== undefined ) {\r\n\r\n\t\t\t\t\t// object-level bounding box\r\n\r\n\t\t\t\t\tif ( object.boundingBox === null ) {\r\n\r\n\t\t\t\t\t\tobject.computeBoundingBox();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_box$4.copy( object.boundingBox );\r\n\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// geometry-level bounding box\r\n\r\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\r\n\r\n\t\t\t\t\t\tgeometry.computeBoundingBox();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\t\tthis.union( _box$4 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst children = object.children;\r\n\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.expandByObject( children[ i ], precise );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcontainsPoint( point ) {\r\n\r\n\t\treturn point.x >= this.min.x && point.x <= this.max.x &&\r\n\t\t\tpoint.y >= this.min.y && point.y <= this.max.y &&\r\n\t\t\tpoint.z >= this.min.z && point.z <= this.max.z;\r\n\r\n\t}\r\n\r\n\tcontainsBox( box ) {\r\n\r\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\r\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\r\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\r\n\r\n\t}\r\n\r\n\tgetParameter( point, target ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\treturn target.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tintersectsBox( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\t\treturn box.max.x >= this.min.x && box.min.x <= this.max.x &&\r\n\t\t\tbox.max.y >= this.min.y && box.min.y <= this.max.y &&\r\n\t\t\tbox.max.z >= this.min.z && box.min.z <= this.max.z;\r\n\r\n\t}\r\n\r\n\tintersectsSphere( sphere ) {\r\n\r\n\t\t// Find the point on the AABB closest to the sphere center.\r\n\t\tthis.clampPoint( sphere.center, _vector$b );\r\n\r\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\r\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\r\n\r\n\t}\r\n\r\n\tintersectsPlane( plane ) {\r\n\r\n\t\t// We compute the minimum and maximum dot product values. If those values\r\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\r\n\r\n\t\tlet min, max;\r\n\r\n\t\tif ( plane.normal.x > 0 ) {\r\n\r\n\t\t\tmin = plane.normal.x * this.min.x;\r\n\t\t\tmax = plane.normal.x * this.max.x;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmin = plane.normal.x * this.max.x;\r\n\t\t\tmax = plane.normal.x * this.min.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( plane.normal.y > 0 ) {\r\n\r\n\t\t\tmin += plane.normal.y * this.min.y;\r\n\t\t\tmax += plane.normal.y * this.max.y;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmin += plane.normal.y * this.max.y;\r\n\t\t\tmax += plane.normal.y * this.min.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( plane.normal.z > 0 ) {\r\n\r\n\t\t\tmin += plane.normal.z * this.min.z;\r\n\t\t\tmax += plane.normal.z * this.max.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmin += plane.normal.z * this.max.z;\r\n\t\t\tmax += plane.normal.z * this.min.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\r\n\r\n\t}\r\n\r\n\tintersectsTriangle( triangle ) {\r\n\r\n\t\tif ( this.isEmpty() ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\t// compute box center and extents\r\n\t\tthis.getCenter( _center );\r\n\t\t_extents.subVectors( this.max, _center );\r\n\r\n\t\t// translate triangle to aabb origin\r\n\t\t_v0$2.subVectors( triangle.a, _center );\r\n\t\t_v1$7.subVectors( triangle.b, _center );\r\n\t\t_v2$4.subVectors( triangle.c, _center );\r\n\r\n\t\t// compute edge vectors for triangle\r\n\t\t_f0.subVectors( _v1$7, _v0$2 );\r\n\t\t_f1.subVectors( _v2$4, _v1$7 );\r\n\t\t_f2.subVectors( _v0$2, _v2$4 );\r\n\r\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\r\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\r\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\r\n\t\tlet axes = [\r\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\r\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\r\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\r\n\t\t];\r\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\t// test 3 face normals from the aabb\r\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\r\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\t// finally testing the face normal of the triangle\r\n\t\t// use already existing triangle edge vectors here\r\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\r\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\r\n\r\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\r\n\r\n\t}\r\n\r\n\tclampPoint( point, target ) {\r\n\r\n\t\treturn target.copy( point ).clamp( this.min, this.max );\r\n\r\n\t}\r\n\r\n\tdistanceToPoint( point ) {\r\n\r\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\r\n\r\n\t}\r\n\r\n\tgetBoundingSphere( target ) {\r\n\r\n\t\tif ( this.isEmpty() ) {\r\n\r\n\t\t\ttarget.makeEmpty();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.getCenter( target.center );\r\n\r\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\r\n\r\n\t\t}\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tintersect( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\r\n\t\tif ( this.isEmpty() ) this.makeEmpty();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tunion( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( matrix ) {\r\n\r\n\t\t// transform of empty box is an empty box.\r\n\t\tif ( this.isEmpty() ) return this;\r\n\r\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\r\n\r\n\t\tthis.setFromPoints( _points );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttranslate( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _points = [\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3(),\r\n\t/*@__PURE__*/ new Vector3()\r\n];\r\n\r\nconst _vector$b = /*@__PURE__*/ new Vector3();\r\n\r\nconst _box$4 = /*@__PURE__*/ new Box3();\r\n\r\n// triangle centered vertices\r\n\r\nconst _v0$2 = /*@__PURE__*/ new Vector3();\r\nconst _v1$7 = /*@__PURE__*/ new Vector3();\r\nconst _v2$4 = /*@__PURE__*/ new Vector3();\r\n\r\n// triangle edge vectors\r\n\r\nconst _f0 = /*@__PURE__*/ new Vector3();\r\nconst _f1 = /*@__PURE__*/ new Vector3();\r\nconst _f2 = /*@__PURE__*/ new Vector3();\r\n\r\nconst _center = /*@__PURE__*/ new Vector3();\r\nconst _extents = /*@__PURE__*/ new Vector3();\r\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\r\nconst _testAxis = /*@__PURE__*/ new Vector3();\r\n\r\nfunction satForAxes( axes, v0, v1, v2, extents ) {\r\n\r\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\r\n\r\n\t\t_testAxis.fromArray( axes, i );\r\n\t\t// project the aabb onto the separating axis\r\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\r\n\t\t// project all 3 vertices of the triangle onto the separating axis\r\n\t\tconst p0 = v0.dot( _testAxis );\r\n\t\tconst p1 = v1.dot( _testAxis );\r\n\t\tconst p2 = v2.dot( _testAxis );\r\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\r\n\r\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\r\n\t\t\t// the axis is separating and we can exit\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn true;\r\n\r\n}\r\n\r\nconst _box$3 = /*@__PURE__*/ new Box3();\r\nconst _v1$6 = /*@__PURE__*/ new Vector3();\r\nconst _v2$3 = /*@__PURE__*/ new Vector3();\r\n\r\nclass Sphere {\r\n\r\n\tconstructor( center = new Vector3(), radius = - 1 ) {\r\n\r\n\t\tthis.isSphere = true;\r\n\r\n\t\tthis.center = center;\r\n\t\tthis.radius = radius;\r\n\r\n\t}\r\n\r\n\tset( center, radius ) {\r\n\r\n\t\tthis.center.copy( center );\r\n\t\tthis.radius = radius;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromPoints( points, optionalCenter ) {\r\n\r\n\t\tconst center = this.center;\r\n\r\n\t\tif ( optionalCenter !== undefined ) {\r\n\r\n\t\t\tcenter.copy( optionalCenter );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\r\n\r\n\t\t}\r\n\r\n\t\tlet maxRadiusSq = 0;\r\n\r\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( sphere ) {\r\n\r\n\t\tthis.center.copy( sphere.center );\r\n\t\tthis.radius = sphere.radius;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tisEmpty() {\r\n\r\n\t\treturn ( this.radius < 0 );\r\n\r\n\t}\r\n\r\n\tmakeEmpty() {\r\n\r\n\t\tthis.center.set( 0, 0, 0 );\r\n\t\tthis.radius = - 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcontainsPoint( point ) {\r\n\r\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\r\n\t}\r\n\r\n\tdistanceToPoint( point ) {\r\n\r\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\r\n\t}\r\n\r\n\tintersectsSphere( sphere ) {\r\n\r\n\t\tconst radiusSum = this.radius + sphere.radius;\r\n\r\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\r\n\t}\r\n\r\n\tintersectsBox( box ) {\r\n\r\n\t\treturn box.intersectsSphere( this );\r\n\r\n\t}\r\n\r\n\tintersectsPlane( plane ) {\r\n\r\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\r\n\r\n\t}\r\n\r\n\tclampPoint( point, target ) {\r\n\r\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\r\n\r\n\t\ttarget.copy( point );\r\n\r\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\r\n\t\t\ttarget.sub( this.center ).normalize();\r\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\r\n\r\n\t\t}\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tgetBoundingBox( target ) {\r\n\r\n\t\tif ( this.isEmpty() ) {\r\n\r\n\t\t\t// Empty sphere produces empty bounding box\r\n\t\t\ttarget.makeEmpty();\r\n\t\t\treturn target;\r\n\r\n\t\t}\r\n\r\n\t\ttarget.set( this.center, this.center );\r\n\t\ttarget.expandByScalar( this.radius );\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( matrix ) {\r\n\r\n\t\tthis.center.applyMatrix4( matrix );\r\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttranslate( offset ) {\r\n\r\n\t\tthis.center.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\texpandByPoint( point ) {\r\n\r\n\t\tif ( this.isEmpty() ) {\r\n\r\n\t\t\tthis.center.copy( point );\r\n\r\n\t\t\tthis.radius = 0;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\t_v1$6.subVectors( point, this.center );\r\n\r\n\t\tconst lengthSq = _v1$6.lengthSq();\r\n\r\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\r\n\r\n\t\t\t// calculate the minimal sphere\r\n\r\n\t\t\tconst length = Math.sqrt( lengthSq );\r\n\r\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\r\n\r\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\r\n\r\n\t\t\tthis.radius += delta;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tunion( sphere ) {\r\n\r\n\t\tif ( sphere.isEmpty() ) {\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.isEmpty() ) {\r\n\r\n\t\t\tthis.copy( sphere );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.center.equals( sphere.center ) === true ) {\r\n\r\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\r\n\r\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\r\n\r\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( sphere ) {\r\n\r\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _vector$a = /*@__PURE__*/ new Vector3();\r\nconst _segCenter = /*@__PURE__*/ new Vector3();\r\nconst _segDir = /*@__PURE__*/ new Vector3();\r\nconst _diff = /*@__PURE__*/ new Vector3();\r\n\r\nconst _edge1 = /*@__PURE__*/ new Vector3();\r\nconst _edge2 = /*@__PURE__*/ new Vector3();\r\nconst _normal$1 = /*@__PURE__*/ new Vector3();\r\n\r\nclass Ray {\r\n\r\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\r\n\r\n\t\tthis.origin = origin;\r\n\t\tthis.direction = direction;\r\n\r\n\t}\r\n\r\n\tset( origin, direction ) {\r\n\r\n\t\tthis.origin.copy( origin );\r\n\t\tthis.direction.copy( direction );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( ray ) {\r\n\r\n\t\tthis.origin.copy( ray.origin );\r\n\t\tthis.direction.copy( ray.direction );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tat( t, target ) {\r\n\r\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\r\n\r\n\t}\r\n\r\n\tlookAt( v ) {\r\n\r\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trecast( t ) {\r\n\r\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclosestPointToPoint( point, target ) {\r\n\r\n\t\ttarget.subVectors( point, this.origin );\r\n\r\n\t\tconst directionDistance = target.dot( this.direction );\r\n\r\n\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\treturn target.copy( this.origin );\r\n\r\n\t\t}\r\n\r\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\r\n\r\n\t}\r\n\r\n\tdistanceToPoint( point ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\r\n\t}\r\n\r\n\tdistanceSqToPoint( point ) {\r\n\r\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\r\n\r\n\t\t// point behind the ray\r\n\r\n\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\treturn this.origin.distanceToSquared( point );\r\n\r\n\t\t}\r\n\r\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\r\n\r\n\t\treturn _vector$a.distanceToSquared( point );\r\n\r\n\t}\r\n\r\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\r\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\r\n\t\t// It returns the min distance between the ray and the segment\r\n\t\t// defined by v0 and v1\r\n\t\t// It can also set two optional targets :\r\n\t\t// - The closest point on the ray\r\n\t\t// - The closest point on the segment\r\n\r\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t_diff.copy( this.origin ).sub( _segCenter );\r\n\r\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\tconst a01 = - this.direction.dot( _segDir );\r\n\t\tconst b0 = _diff.dot( this.direction );\r\n\t\tconst b1 = - _diff.dot( _segDir );\r\n\t\tconst c = _diff.lengthSq();\r\n\t\tconst det = Math.abs( 1 - a01 * a01 );\r\n\t\tlet s0, s1, sqrDist, extDet;\r\n\r\n\t\tif ( det > 0 ) {\r\n\r\n\t\t\t// The ray and segment are not parallel.\r\n\r\n\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\textDet = segExtent * det;\r\n\r\n\t\t\tif ( s0 >= 0 ) {\r\n\r\n\t\t\t\tif ( s1 >= - extDet ) {\r\n\r\n\t\t\t\t\tif ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\r\n\t\t\t\t\t\tconst invDet = 1 / det;\r\n\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 1\r\n\r\n\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// region 5\r\n\r\n\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( s1 <= - extDet ) {\r\n\r\n\t\t\t\t\t// region 4\r\n\r\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t} else if ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t// region 3\r\n\r\n\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// region 2\r\n\r\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Ray and segment are parallel.\r\n\r\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t}\r\n\r\n\t\tif ( optionalPointOnRay ) {\r\n\r\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( optionalPointOnSegment ) {\r\n\r\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\r\n\r\n\t\t}\r\n\r\n\t\treturn sqrDist;\r\n\r\n\t}\r\n\r\n\tintersectSphere( sphere, target ) {\r\n\r\n\t\t_vector$a.subVectors( sphere.center, this.origin );\r\n\t\tconst tca = _vector$a.dot( this.direction );\r\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\r\n\t\tconst radius2 = sphere.radius * sphere.radius;\r\n\r\n\t\tif ( d2 > radius2 ) return null;\r\n\r\n\t\tconst thc = Math.sqrt( radius2 - d2 );\r\n\r\n\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\tconst t0 = tca - thc;\r\n\r\n\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\tconst t1 = tca + thc;\r\n\r\n\t\t// test to see if t1 is behind the ray - if so, return null\r\n\t\tif ( t1 < 0 ) return null;\r\n\r\n\t\t// test to see if t0 is behind the ray:\r\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\tif ( t0 < 0 ) return this.at( t1, target );\r\n\r\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\treturn this.at( t0, target );\r\n\r\n\t}\r\n\r\n\tintersectsSphere( sphere ) {\r\n\r\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\r\n\r\n\t}\r\n\r\n\tdistanceToPlane( plane ) {\r\n\r\n\t\tconst denominator = plane.normal.dot( this.direction );\r\n\r\n\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t// line is coplanar, return origin\r\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\r\n\t\t\t\treturn 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\r\n\t\t// Return if the ray never intersects the plane\r\n\r\n\t\treturn t >= 0 ? t : null;\r\n\r\n\t}\r\n\r\n\tintersectPlane( plane, target ) {\r\n\r\n\t\tconst t = this.distanceToPlane( plane );\r\n\r\n\t\tif ( t === null ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.at( t, target );\r\n\r\n\t}\r\n\r\n\tintersectsPlane( plane ) {\r\n\r\n\t\t// check if the ray lies on the plane first\r\n\r\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\r\n\r\n\t\tif ( distToPoint === 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\tconst denominator = plane.normal.dot( this.direction );\r\n\r\n\t\tif ( denominator * distToPoint < 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tintersectBox( box, target ) {\r\n\r\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\r\n\t\tconst invdirx = 1 / this.direction.x,\r\n\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\tinvdirz = 1 / this.direction.z;\r\n\r\n\t\tconst origin = this.origin;\r\n\r\n\t\tif ( invdirx >= 0 ) {\r\n\r\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\r\n\t\t}\r\n\r\n\t\tif ( invdiry >= 0 ) {\r\n\r\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\r\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\r\n\r\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\r\n\r\n\t\tif ( invdirz >= 0 ) {\r\n\r\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\r\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\r\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\r\n\t\t//return point closest to the ray (positive side)\r\n\r\n\t\tif ( tmax < 0 ) return null;\r\n\r\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\r\n\r\n\t}\r\n\r\n\tintersectsBox( box ) {\r\n\r\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\r\n\r\n\t}\r\n\r\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\r\n\r\n\t\t// Compute the offset origin, edges, and normal.\r\n\r\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\r\n\r\n\t\t_edge1.subVectors( b, a );\r\n\t\t_edge2.subVectors( c, a );\r\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\r\n\r\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\tlet DdN = this.direction.dot( _normal$1 );\r\n\t\tlet sign;\r\n\r\n\t\tif ( DdN > 0 ) {\r\n\r\n\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\tsign = 1;\r\n\r\n\t\t} else if ( DdN < 0 ) {\r\n\r\n\t\t\tsign = - 1;\r\n\t\t\tDdN = - DdN;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t_diff.subVectors( this.origin, a );\r\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\r\n\r\n\t\t// b1 < 0, no intersection\r\n\t\tif ( DdQxE2 < 0 ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\r\n\r\n\t\t// b2 < 0, no intersection\r\n\t\tif ( DdE1xQ < 0 ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t// b1+b2 > 1, no intersection\r\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t// Line intersects triangle, check if ray does.\r\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\r\n\r\n\t\t// t < 0, no intersection\r\n\t\tif ( QdN < 0 ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t// Ray intersects triangle.\r\n\t\treturn this.at( QdN / DdN, target );\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( matrix4 ) {\r\n\r\n\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\tthis.direction.transformDirection( matrix4 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( ray ) {\r\n\r\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Matrix4 {\r\n\r\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\t\tMatrix4.prototype.isMatrix4 = true;\r\n\r\n\t\tthis.elements = [\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t];\r\n\r\n\t\tif ( n11 !== undefined ) {\r\n\r\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tidentity() {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new Matrix4().fromArray( this.elements );\r\n\r\n\t}\r\n\r\n\tcopy( m ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst me = m.elements;\r\n\r\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\r\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\r\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\r\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopyPosition( m ) {\r\n\r\n\t\tconst te = this.elements, me = m.elements;\r\n\r\n\t\tte[ 12 ] = me[ 12 ];\r\n\t\tte[ 13 ] = me[ 13 ];\r\n\t\tte[ 14 ] = me[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromMatrix3( m ) {\r\n\r\n\t\tconst me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\r\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\r\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\textractBasis( xAxis, yAxis, zAxis ) {\r\n\r\n\t\txAxis.setFromMatrixColumn( this, 0 );\r\n\t\tyAxis.setFromMatrixColumn( this, 1 );\r\n\t\tzAxis.setFromMatrixColumn( this, 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeBasis( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tthis.set(\r\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\textractRotation( m ) {\r\n\r\n\t\t// this method does not support reflection matrices\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst me = m.elements;\r\n\r\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\r\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\r\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\r\n\r\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\t\tte[ 3 ] = 0;\r\n\r\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\t\tte[ 7 ] = 0;\r\n\r\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotationFromEuler( euler ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\r\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\r\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\r\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\r\n\r\n\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - c * f;\r\n\t\t\tte[ 8 ] = d;\r\n\r\n\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\tte[ 9 ] = - b * c;\r\n\r\n\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\tte[ 8 ] = a * d;\r\n\r\n\t\t\tte[ 1 ] = a * f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b;\r\n\r\n\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\tte[ 4 ] = - a * f;\r\n\t\t\tte[ 8 ] = de + cf * b;\r\n\r\n\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = df - ce * b;\r\n\r\n\t\t\tte[ 2 ] = - a * d;\r\n\t\t\tte[ 6 ] = b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\tte[ 8 ] = ae * d + bf;\r\n\r\n\t\t\tte[ 1 ] = c * f;\r\n\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\tte[ 9 ] = af * d - be;\r\n\r\n\t\t\tte[ 2 ] = - d;\r\n\t\t\tte[ 6 ] = b * c;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\tte[ 8 ] = bc * f + ad;\r\n\r\n\t\t\tte[ 1 ] = f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b * e;\r\n\r\n\t\t\tte[ 2 ] = - d * e;\r\n\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\tte[ 10 ] = ac - bd * f;\r\n\r\n\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - f;\r\n\t\t\tte[ 8 ] = d * e;\r\n\r\n\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = ad * f - bc;\r\n\r\n\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\tte[ 6 ] = b * e;\r\n\t\t\tte[ 10 ] = bd * f + ac;\r\n\r\n\t\t}\r\n\r\n\t\t// bottom row\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// last column\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotationFromQuaternion( q ) {\r\n\r\n\t\treturn this.compose( _zero, q, _one );\r\n\r\n\t}\r\n\r\n\tlookAt( eye, target, up ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\t_z.subVectors( eye, target );\r\n\r\n\t\tif ( _z.lengthSq() === 0 ) {\r\n\r\n\t\t\t// eye and target are in the same position\r\n\r\n\t\t\t_z.z = 1;\r\n\r\n\t\t}\r\n\r\n\t\t_z.normalize();\r\n\t\t_x.crossVectors( up, _z );\r\n\r\n\t\tif ( _x.lengthSq() === 0 ) {\r\n\r\n\t\t\t// up and z are parallel\r\n\r\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\r\n\r\n\t\t\t\t_z.x += 0.0001;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_z.z += 0.0001;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_z.normalize();\r\n\t\t\t_x.crossVectors( up, _z );\r\n\r\n\t\t}\r\n\r\n\t\t_x.normalize();\r\n\t\t_y.crossVectors( _z, _x );\r\n\r\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\r\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\r\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiply( m ) {\r\n\r\n\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t}\r\n\r\n\tpremultiply( m ) {\r\n\r\n\t\treturn this.multiplyMatrices( m, this );\r\n\r\n\t}\r\n\r\n\tmultiplyMatrices( a, b ) {\r\n\r\n\t\tconst ae = a.elements;\r\n\t\tconst be = b.elements;\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\r\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\r\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyScalar( s ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdeterminant() {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\r\n\t\t//TODO: make this more efficient\r\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n\t\treturn (\r\n\t\t\tn41 * (\r\n\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t - n12 * n23 * n34\r\n\t\t\t) +\r\n\t\t\tn42 * (\r\n\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t - n14 * n23 * n31\r\n\t\t\t) +\r\n\t\t\tn43 * (\r\n\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t - n12 * n24 * n31\r\n\t\t\t) +\r\n\t\t\tn44 * (\r\n\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t + n12 * n23 * n31\r\n\t\t\t)\r\n\r\n\t\t);\r\n\r\n\t}\r\n\r\n\ttranspose() {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tlet tmp;\r\n\r\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\r\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetPosition( x, y, z ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tif ( x.isVector3 ) {\r\n\r\n\t\t\tte[ 12 ] = x.x;\r\n\t\t\tte[ 13 ] = x.y;\r\n\t\t\tte[ 14 ] = x.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tte[ 12 ] = x;\r\n\t\t\tte[ 13 ] = y;\r\n\t\t\tte[ 14 ] = z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tinvert() {\r\n\r\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\tconst te = this.elements,\r\n\r\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\r\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\r\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\r\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\r\n\r\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\r\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\r\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\r\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\r\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\r\n\r\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\r\n\r\n\t\tconst detInv = 1 / det;\r\n\r\n\t\tte[ 0 ] = t11 * detInv;\r\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\r\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\r\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\r\n\r\n\t\tte[ 4 ] = t12 * detInv;\r\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\r\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\r\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\r\n\r\n\t\tte[ 8 ] = t13 * detInv;\r\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\r\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\r\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\r\n\r\n\t\tte[ 12 ] = t14 * detInv;\r\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\r\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\r\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tscale( v ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst x = v.x, y = v.y, z = v.z;\r\n\r\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetMaxScaleOnAxis() {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\r\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\r\n\r\n\t}\r\n\r\n\tmakeTranslation( x, y, z ) {\r\n\r\n\t\tif ( x.isVector3 ) {\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t1, 0, 0, x.x,\r\n\t\t\t\t0, 1, 0, x.y,\r\n\t\t\t\t0, 0, 1, x.z,\r\n\t\t\t\t0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.set(\r\n\r\n\t\t\t\t1, 0, 0, x,\r\n\t\t\t\t0, 1, 0, y,\r\n\t\t\t\t0, 0, 1, z,\r\n\t\t\t\t0, 0, 0, 1\r\n\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotationX( theta ) {\r\n\r\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, c, - s, 0,\r\n\t\t\t0, s, c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotationY( theta ) {\r\n\r\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t c, 0, s, 0,\r\n\t\t\t 0, 1, 0, 0,\r\n\t\t\t- s, 0, c, 0,\r\n\t\t\t 0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotationZ( theta ) {\r\n\r\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tc, - s, 0, 0,\r\n\t\t\ts, c, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeRotationAxis( axis, angle ) {\r\n\r\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n\t\tconst c = Math.cos( angle );\r\n\t\tconst s = Math.sin( angle );\r\n\t\tconst t = 1 - c;\r\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\r\n\t\tconst tx = t * x, ty = t * y;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeScale( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tx, 0, 0, 0,\r\n\t\t\t0, y, 0, 0,\r\n\t\t\t0, 0, z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, yx, zx, 0,\r\n\t\t\txy, 1, zy, 0,\r\n\t\t\txz, yz, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcompose( position, quaternion, scale ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\r\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\r\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\r\n\r\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\r\n\t\tte[ 1 ] = ( xy + wz ) * sx;\r\n\t\tte[ 2 ] = ( xz - wy ) * sx;\r\n\t\tte[ 3 ] = 0;\r\n\r\n\t\tte[ 4 ] = ( xy - wz ) * sy;\r\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\r\n\t\tte[ 6 ] = ( yz + wx ) * sy;\r\n\t\tte[ 7 ] = 0;\r\n\r\n\t\tte[ 8 ] = ( xz + wy ) * sz;\r\n\t\tte[ 9 ] = ( yz - wx ) * sz;\r\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\tte[ 12 ] = position.x;\r\n\t\tte[ 13 ] = position.y;\r\n\t\tte[ 14 ] = position.z;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdecompose( position, quaternion, scale ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\r\n\t\t// if determine is negative, we need to invert one scale\r\n\t\tconst det = this.determinant();\r\n\t\tif ( det < 0 ) sx = - sx;\r\n\r\n\t\tposition.x = te[ 12 ];\r\n\t\tposition.y = te[ 13 ];\r\n\t\tposition.z = te[ 14 ];\r\n\r\n\t\t// scale the rotation part\r\n\t\t_m1$2.copy( this );\r\n\r\n\t\tconst invSX = 1 / sx;\r\n\t\tconst invSY = 1 / sy;\r\n\t\tconst invSZ = 1 / sz;\r\n\r\n\t\t_m1$2.elements[ 0 ] *= invSX;\r\n\t\t_m1$2.elements[ 1 ] *= invSX;\r\n\t\t_m1$2.elements[ 2 ] *= invSX;\r\n\r\n\t\t_m1$2.elements[ 4 ] *= invSY;\r\n\t\t_m1$2.elements[ 5 ] *= invSY;\r\n\t\t_m1$2.elements[ 6 ] *= invSY;\r\n\r\n\t\t_m1$2.elements[ 8 ] *= invSZ;\r\n\t\t_m1$2.elements[ 9 ] *= invSZ;\r\n\t\t_m1$2.elements[ 10 ] *= invSZ;\r\n\r\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\r\n\r\n\t\tscale.x = sx;\r\n\t\tscale.y = sy;\r\n\t\tscale.z = sz;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst x = 2 * near / ( right - left );\r\n\t\tconst y = 2 * near / ( top - bottom );\r\n\r\n\t\tconst a = ( right + left ) / ( right - left );\r\n\t\tconst b = ( top + bottom ) / ( top - bottom );\r\n\r\n\t\tlet c, d;\r\n\r\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\r\n\r\n\t\t\tc = - ( far + near ) / ( far - near );\r\n\t\t\td = ( - 2 * far * near ) / ( far - near );\r\n\r\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\r\n\r\n\t\t\tc = - far / ( far - near );\r\n\t\t\td = ( - far * near ) / ( far - near );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\r\n\r\n\t\t}\r\n\r\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst w = 1.0 / ( right - left );\r\n\t\tconst h = 1.0 / ( top - bottom );\r\n\t\tconst p = 1.0 / ( far - near );\r\n\r\n\t\tconst x = ( right + left ) * w;\r\n\t\tconst y = ( top + bottom ) * h;\r\n\r\n\t\tlet z, zInv;\r\n\r\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\r\n\r\n\t\t\tz = ( far + near ) * p;\r\n\t\t\tzInv = - 2 * p;\r\n\r\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\r\n\r\n\t\t\tz = near * p;\r\n\t\t\tzInv = - 1 * p;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\r\n\r\n\t\t}\r\n\r\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\r\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\r\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\r\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( matrix ) {\r\n\r\n\t\tconst te = this.elements;\r\n\t\tconst me = matrix.elements;\r\n\r\n\t\tfor ( let i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tfor ( let i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\tthis.elements[ i ] = array[ i + offset ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\r\n\t\tarray[ offset + 8 ] = te[ 8 ];\r\n\t\tarray[ offset + 9 ] = te[ 9 ];\r\n\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\r\n\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _v1$5 = /*@__PURE__*/ new Vector3();\r\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\r\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\r\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\r\nconst _x = /*@__PURE__*/ new Vector3();\r\nconst _y = /*@__PURE__*/ new Vector3();\r\nconst _z = /*@__PURE__*/ new Vector3();\r\n\r\nconst _matrix$2 = /*@__PURE__*/ new Matrix4();\r\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\r\n\r\nclass Euler {\r\n\r\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\r\n\r\n\t\tthis.isEuler = true;\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._order = order;\r\n\r\n\t}\r\n\r\n\tget x() {\r\n\r\n\t\treturn this._x;\r\n\r\n\t}\r\n\r\n\tset x( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\tget y() {\r\n\r\n\t\treturn this._y;\r\n\r\n\t}\r\n\r\n\tset y( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\tget z() {\r\n\r\n\t\treturn this._z;\r\n\r\n\t}\r\n\r\n\tset z( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\tget order() {\r\n\r\n\t\treturn this._order;\r\n\r\n\t}\r\n\r\n\tset order( value ) {\r\n\r\n\t\tthis._order = value;\r\n\t\tthis._onChangeCallback();\r\n\r\n\t}\r\n\r\n\tset( x, y, z, order = this._order ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._order = order;\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\r\n\r\n\t}\r\n\r\n\tcopy( euler ) {\r\n\r\n\t\tthis._x = euler._x;\r\n\t\tthis._y = euler._y;\r\n\t\tthis._z = euler._z;\r\n\t\tthis._order = euler._order;\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tconst te = m.elements;\r\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\tswitch ( order ) {\r\n\r\n\t\t\tcase 'XYZ':\r\n\r\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'YXZ':\r\n\r\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\r\n\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ZXY':\r\n\r\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\r\n\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._y = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ZYX':\r\n\r\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'YZX':\r\n\r\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'XZY':\r\n\r\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\r\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._y = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\r\n\r\n\t\t}\r\n\r\n\t\tthis._order = order;\r\n\r\n\t\tif ( update === true ) this._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromQuaternion( q, order, update ) {\r\n\r\n\t\t_matrix$2.makeRotationFromQuaternion( q );\r\n\r\n\t\treturn this.setFromRotationMatrix( _matrix$2, order, update );\r\n\r\n\t}\r\n\r\n\tsetFromVector3( v, order = this._order ) {\r\n\r\n\t\treturn this.set( v.x, v.y, v.z, order );\r\n\r\n\t}\r\n\r\n\treorder( newOrder ) {\r\n\r\n\t\t// WARNING: this discards revolution information -bhouston\r\n\r\n\t\t_quaternion$3.setFromEuler( this );\r\n\r\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\r\n\r\n\t}\r\n\r\n\tequals( euler ) {\r\n\r\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\r\n\t}\r\n\r\n\tfromArray( array ) {\r\n\r\n\t\tthis._x = array[ 0 ];\r\n\t\tthis._y = array[ 1 ];\r\n\t\tthis._z = array[ 2 ];\r\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\r\n\t\tthis._onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._order;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\t_onChange( callback ) {\r\n\r\n\t\tthis._onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t_onChangeCallback() {}\r\n\r\n\t*[ Symbol.iterator ]() {\r\n\r\n\t\tyield this._x;\r\n\t\tyield this._y;\r\n\t\tyield this._z;\r\n\t\tyield this._order;\r\n\r\n\t}\r\n\r\n}\r\n\r\nEuler.DEFAULT_ORDER = 'XYZ';\r\n\r\nclass Layers {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.mask = 1 | 0;\r\n\r\n\t}\r\n\r\n\tset( channel ) {\r\n\r\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\r\n\r\n\t}\r\n\r\n\tenable( channel ) {\r\n\r\n\t\tthis.mask |= 1 << channel | 0;\r\n\r\n\t}\r\n\r\n\tenableAll() {\r\n\r\n\t\tthis.mask = 0xffffffff | 0;\r\n\r\n\t}\r\n\r\n\ttoggle( channel ) {\r\n\r\n\t\tthis.mask ^= 1 << channel | 0;\r\n\r\n\t}\r\n\r\n\tdisable( channel ) {\r\n\r\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\r\n\r\n\t}\r\n\r\n\tdisableAll() {\r\n\r\n\t\tthis.mask = 0;\r\n\r\n\t}\r\n\r\n\ttest( layers ) {\r\n\r\n\t\treturn ( this.mask & layers.mask ) !== 0;\r\n\r\n\t}\r\n\r\n\tisEnabled( channel ) {\r\n\r\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\r\n\r\n\t}\r\n\r\n}\r\n\r\nlet _object3DId = 0;\r\n\r\nconst _v1$4 = /*@__PURE__*/ new Vector3();\r\nconst _q1 = /*@__PURE__*/ new Quaternion();\r\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\r\nconst _target = /*@__PURE__*/ new Vector3();\r\n\r\nconst _position$3 = /*@__PURE__*/ new Vector3();\r\nconst _scale$2 = /*@__PURE__*/ new Vector3();\r\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\r\n\r\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\r\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\r\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\r\n\r\nconst _addedEvent = { type: 'added' };\r\nconst _removedEvent = { type: 'removed' };\r\n\r\nconst _childaddedEvent = { type: 'childadded', child: null };\r\nconst _childremovedEvent = { type: 'childremoved', child: null };\r\n\r\nclass Object3D extends EventDispatcher {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isObject3D = true;\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\r\n\r\n\t\tthis.uuid = generateUUID();\r\n\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Object3D';\r\n\r\n\t\tthis.parent = null;\r\n\t\tthis.children = [];\r\n\r\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\r\n\r\n\t\tconst position = new Vector3();\r\n\t\tconst rotation = new Euler();\r\n\t\tconst quaternion = new Quaternion();\r\n\t\tconst scale = new Vector3( 1, 1, 1 );\r\n\r\n\t\tfunction onRotationChange() {\r\n\r\n\t\t\tquaternion.setFromEuler( rotation, false );\r\n\r\n\t\t}\r\n\r\n\t\tfunction onQuaternionChange() {\r\n\r\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\r\n\t\t}\r\n\r\n\t\trotation._onChange( onRotationChange );\r\n\t\tquaternion._onChange( onQuaternionChange );\r\n\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tposition: {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: position\r\n\t\t\t},\r\n\t\t\trotation: {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: rotation\r\n\t\t\t},\r\n\t\t\tquaternion: {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: quaternion\r\n\t\t\t},\r\n\t\t\tscale: {\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: scale\r\n\t\t\t},\r\n\t\t\tmodelViewMatrix: {\r\n\t\t\t\tvalue: new Matrix4()\r\n\t\t\t},\r\n\t\t\tnormalMatrix: {\r\n\t\t\t\tvalue: new Matrix3()\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis.matrix = new Matrix4();\r\n\t\tthis.matrixWorld = new Matrix4();\r\n\r\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\r\n\r\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\r\n\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\tthis.layers = new Layers();\r\n\t\tthis.visible = true;\r\n\r\n\t\tthis.castShadow = false;\r\n\t\tthis.receiveShadow = false;\r\n\r\n\t\tthis.frustumCulled = true;\r\n\t\tthis.renderOrder = 0;\r\n\r\n\t\tthis.animations = [];\r\n\r\n\t\tthis.userData = {};\r\n\r\n\t}\r\n\r\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\r\n\r\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\r\n\r\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\r\n\r\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\r\n\r\n\tapplyMatrix4( matrix ) {\r\n\r\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\r\n\r\n\t\tthis.matrix.premultiply( matrix );\r\n\r\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\r\n\t}\r\n\r\n\tapplyQuaternion( q ) {\r\n\r\n\t\tthis.quaternion.premultiply( q );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetRotationFromAxisAngle( axis, angle ) {\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\r\n\t}\r\n\r\n\tsetRotationFromEuler( euler ) {\r\n\r\n\t\tthis.quaternion.setFromEuler( euler, true );\r\n\r\n\t}\r\n\r\n\tsetRotationFromMatrix( m ) {\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\r\n\t}\r\n\r\n\tsetRotationFromQuaternion( q ) {\r\n\r\n\t\t// assumes q is normalized\r\n\r\n\t\tthis.quaternion.copy( q );\r\n\r\n\t}\r\n\r\n\trotateOnAxis( axis, angle ) {\r\n\r\n\t\t// rotate object on axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\t_q1.setFromAxisAngle( axis, angle );\r\n\r\n\t\tthis.quaternion.multiply( _q1 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trotateOnWorldAxis( axis, angle ) {\r\n\r\n\t\t// rotate object on axis in world space\r\n\t\t// axis is assumed to be normalized\r\n\t\t// method assumes no rotated parent\r\n\r\n\t\t_q1.setFromAxisAngle( axis, angle );\r\n\r\n\t\tthis.quaternion.premultiply( _q1 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trotateX( angle ) {\r\n\r\n\t\treturn this.rotateOnAxis( _xAxis, angle );\r\n\r\n\t}\r\n\r\n\trotateY( angle ) {\r\n\r\n\t\treturn this.rotateOnAxis( _yAxis, angle );\r\n\r\n\t}\r\n\r\n\trotateZ( angle ) {\r\n\r\n\t\treturn this.rotateOnAxis( _zAxis, angle );\r\n\r\n\t}\r\n\r\n\ttranslateOnAxis( axis, distance ) {\r\n\r\n\t\t// translate object by distance along axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\r\n\r\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttranslateX( distance ) {\r\n\r\n\t\treturn this.translateOnAxis( _xAxis, distance );\r\n\r\n\t}\r\n\r\n\ttranslateY( distance ) {\r\n\r\n\t\treturn this.translateOnAxis( _yAxis, distance );\r\n\r\n\t}\r\n\r\n\ttranslateZ( distance ) {\r\n\r\n\t\treturn this.translateOnAxis( _zAxis, distance );\r\n\r\n\t}\r\n\r\n\tlocalToWorld( vector ) {\r\n\r\n\t\tthis.updateWorldMatrix( true, false );\r\n\r\n\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\r\n\t}\r\n\r\n\tworldToLocal( vector ) {\r\n\r\n\t\tthis.updateWorldMatrix( true, false );\r\n\r\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\r\n\r\n\t}\r\n\r\n\tlookAt( x, y, z ) {\r\n\r\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\r\n\r\n\t\tif ( x.isVector3 ) {\r\n\r\n\t\t\t_target.copy( x );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_target.set( x, y, z );\r\n\r\n\t\t}\r\n\r\n\t\tconst parent = this.parent;\r\n\r\n\t\tthis.updateWorldMatrix( true, false );\r\n\r\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tif ( this.isCamera || this.isLight ) {\r\n\r\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\r\n\r\n\t\t}\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\r\n\r\n\t\tif ( parent ) {\r\n\r\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\r\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\r\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tadd( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.add( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object === this ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object && object.isObject3D ) {\r\n\r\n\t\t\tobject.removeFromParent();\r\n\t\t\tobject.parent = this;\r\n\t\t\tthis.children.push( object );\r\n\r\n\t\t\tobject.dispatchEvent( _addedEvent );\r\n\r\n\t\t\t_childaddedEvent.child = object;\r\n\t\t\tthis.dispatchEvent( _childaddedEvent );\r\n\t\t\t_childaddedEvent.child = null;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tremove( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.remove( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tconst index = this.children.indexOf( object );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tobject.parent = null;\r\n\t\t\tthis.children.splice( index, 1 );\r\n\r\n\t\t\tobject.dispatchEvent( _removedEvent );\r\n\r\n\t\t\t_childremovedEvent.child = object;\r\n\t\t\tthis.dispatchEvent( _childremovedEvent );\r\n\t\t\t_childremovedEvent.child = null;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tremoveFromParent() {\r\n\r\n\t\tconst parent = this.parent;\r\n\r\n\t\tif ( parent !== null ) {\r\n\r\n\t\t\tparent.remove( this );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclear() {\r\n\r\n\t\treturn this.remove( ... this.children );\r\n\r\n\t}\r\n\r\n\tattach( object ) {\r\n\r\n\t\t// adds object as a child of this, while maintaining the object's world transform\r\n\r\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\r\n\r\n\t\tthis.updateWorldMatrix( true, false );\r\n\r\n\t\t_m1$1.copy( this.matrixWorld ).invert();\r\n\r\n\t\tif ( object.parent !== null ) {\r\n\r\n\t\t\tobject.parent.updateWorldMatrix( true, false );\r\n\r\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\tobject.applyMatrix4( _m1$1 );\r\n\r\n\t\tobject.removeFromParent();\r\n\t\tobject.parent = this;\r\n\t\tthis.children.push( object );\r\n\r\n\t\tobject.updateWorldMatrix( false, true );\r\n\r\n\t\tobject.dispatchEvent( _addedEvent );\r\n\r\n\t\t_childaddedEvent.child = object;\r\n\t\tthis.dispatchEvent( _childaddedEvent );\r\n\t\t_childaddedEvent.child = null;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetObjectById( id ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'id', id );\r\n\r\n\t}\r\n\r\n\tgetObjectByName( name ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'name', name );\r\n\r\n\t}\r\n\r\n\tgetObjectByProperty( name, value ) {\r\n\r\n\t\tif ( this[ name ] === value ) return this;\r\n\r\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst child = this.children[ i ];\r\n\t\t\tconst object = child.getObjectByProperty( name, value );\r\n\r\n\t\t\tif ( object !== undefined ) {\r\n\r\n\t\t\t\treturn object;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t}\r\n\r\n\tgetObjectsByProperty( name, value, result = [] ) {\r\n\r\n\t\tif ( this[ name ] === value ) result.push( this );\r\n\r\n\t\tconst children = this.children;\r\n\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\tgetWorldPosition( target ) {\r\n\r\n\t\tthis.updateWorldMatrix( true, false );\r\n\r\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t}\r\n\r\n\tgetWorldQuaternion( target ) {\r\n\r\n\t\tthis.updateWorldMatrix( true, false );\r\n\r\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tgetWorldScale( target ) {\r\n\r\n\t\tthis.updateWorldMatrix( true, false );\r\n\r\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tgetWorldDirection( target ) {\r\n\r\n\t\tthis.updateWorldMatrix( true, false );\r\n\r\n\t\tconst e = this.matrixWorld.elements;\r\n\r\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\r\n\r\n\t}\r\n\r\n\traycast( /* raycaster, intersects */ ) {}\r\n\r\n\ttraverse( callback ) {\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tconst children = this.children;\r\n\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverse( callback );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ttraverseVisible( callback ) {\r\n\r\n\t\tif ( this.visible === false ) return;\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tconst children = this.children;\r\n\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverseVisible( callback );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ttraverseAncestors( callback ) {\r\n\r\n\t\tconst parent = this.parent;\r\n\r\n\t\tif ( parent !== null ) {\r\n\r\n\t\t\tcallback( parent );\r\n\r\n\t\t\tparent.traverseAncestors( callback );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdateMatrix() {\r\n\r\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\r\n\t\tthis.matrixWorldNeedsUpdate = true;\r\n\r\n\t}\r\n\r\n\tupdateMatrixWorld( force ) {\r\n\r\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\r\n\r\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\r\n\r\n\t\t\tif ( this.matrixWorldAutoUpdate === true ) {\r\n\r\n\t\t\t\tif ( this.parent === null ) {\r\n\r\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t\tforce = true;\r\n\r\n\t\t}\r\n\r\n\t\t// make sure descendants are updated if required\r\n\r\n\t\tconst children = this.children;\r\n\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst child = children[ i ];\r\n\r\n\t\t\tchild.updateMatrixWorld( force );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdateWorldMatrix( updateParents, updateChildren ) {\r\n\r\n\t\tconst parent = this.parent;\r\n\r\n\t\tif ( updateParents === true && parent !== null ) {\r\n\r\n\t\t\tparent.updateWorldMatrix( true, false );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\r\n\r\n\t\tif ( this.matrixWorldAutoUpdate === true ) {\r\n\r\n\t\t\tif ( this.parent === null ) {\r\n\r\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// make sure descendants are updated\r\n\r\n\t\tif ( updateChildren === true ) {\r\n\r\n\t\t\tconst children = this.children;\r\n\r\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = children[ i ];\r\n\r\n\t\t\t\tchild.updateWorldMatrix( false, true );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\t// meta is a string when called from JSON.stringify\r\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\r\n\r\n\t\tconst output = {};\r\n\r\n\t\t// meta is a hash used to collect geometries, materials.\r\n\t\t// not providing it implies that this is the root object\r\n\t\t// being serialized.\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\t// initialize meta obj\r\n\t\t\tmeta = {\r\n\t\t\t\tgeometries: {},\r\n\t\t\t\tmaterials: {},\r\n\t\t\t\ttextures: {},\r\n\t\t\t\timages: {},\r\n\t\t\t\tshapes: {},\r\n\t\t\t\tskeletons: {},\r\n\t\t\t\tanimations: {},\r\n\t\t\t\tnodes: {}\r\n\t\t\t};\r\n\r\n\t\t\toutput.metadata = {\r\n\t\t\t\tversion: 4.6,\r\n\t\t\t\ttype: 'Object',\r\n\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// standard Object3D serialization\r\n\r\n\t\tconst object = {};\r\n\r\n\t\tobject.uuid = this.uuid;\r\n\t\tobject.type = this.type;\r\n\r\n\t\tif ( this.name !== '' ) object.name = this.name;\r\n\t\tif ( this.castShadow === true ) object.castShadow = true;\r\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\r\n\t\tif ( this.visible === false ) object.visible = false;\r\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\r\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\r\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\r\n\r\n\t\tobject.layers = this.layers.mask;\r\n\t\tobject.matrix = this.matrix.toArray();\r\n\t\tobject.up = this.up.toArray();\r\n\r\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\r\n\r\n\t\t// object specific properties\r\n\r\n\t\tif ( this.isInstancedMesh ) {\r\n\r\n\t\t\tobject.type = 'InstancedMesh';\r\n\t\t\tobject.count = this.count;\r\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\r\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.isBatchedMesh ) {\r\n\r\n\t\t\tobject.type = 'BatchedMesh';\r\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\r\n\t\t\tobject.sortObjects = this.sortObjects;\r\n\r\n\t\t\tobject.drawRanges = this._drawRanges;\r\n\t\t\tobject.reservedRanges = this._reservedRanges;\r\n\r\n\t\t\tobject.visibility = this._visibility;\r\n\t\t\tobject.active = this._active;\r\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\r\n\t\t\t\tboxInitialized: bound.boxInitialized,\r\n\t\t\t\tboxMin: bound.box.min.toArray(),\r\n\t\t\t\tboxMax: bound.box.max.toArray(),\r\n\r\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\r\n\t\t\t\tsphereRadius: bound.sphere.radius,\r\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\r\n\t\t\t} ) );\r\n\r\n\t\t\tobject.maxInstanceCount = this._maxInstanceCount;\r\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\r\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\r\n\r\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\r\n\t\t\tobject.geometryCount = this._geometryCount;\r\n\r\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\r\n\r\n\t\t\tif ( this._colorsTexture !== null ) object.colorsTexture = this._colorsTexture.toJSON( meta );\r\n\r\n\t\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\t\tobject.boundingSphere = {\r\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\r\n\t\t\t\t\tradius: object.boundingSphere.radius\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\t\tobject.boundingBox = {\r\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\r\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tfunction serialize( library, element ) {\r\n\r\n\t\t\tif ( library[ element.uuid ] === undefined ) {\r\n\r\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn element.uuid;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.isScene ) {\r\n\r\n\t\t\tif ( this.background ) {\r\n\r\n\t\t\t\tif ( this.background.isColor ) {\r\n\r\n\t\t\t\t\tobject.background = this.background.toJSON();\r\n\r\n\t\t\t\t} else if ( this.background.isTexture ) {\r\n\r\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\r\n\r\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\r\n\r\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\r\n\r\n\t\t\tconst parameters = this.geometry.parameters;\r\n\r\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\r\n\r\n\t\t\t\tconst shapes = parameters.shapes;\r\n\r\n\t\t\t\tif ( Array.isArray( shapes ) ) {\r\n\r\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tconst shape = shapes[ i ];\r\n\r\n\t\t\t\t\t\tserialize( meta.shapes, shape );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tserialize( meta.shapes, shapes );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.isSkinnedMesh ) {\r\n\r\n\t\t\tobject.bindMode = this.bindMode;\r\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\r\n\r\n\t\t\tif ( this.skeleton !== undefined ) {\r\n\r\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\r\n\r\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.material !== undefined ) {\r\n\r\n\t\t\tif ( Array.isArray( this.material ) ) {\r\n\r\n\t\t\t\tconst uuids = [];\r\n\r\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tobject.material = uuids;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( this.children.length > 0 ) {\r\n\r\n\t\t\tobject.children = [];\r\n\r\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\r\n\r\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( this.animations.length > 0 ) {\r\n\r\n\t\t\tobject.animations = [];\r\n\r\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\r\n\r\n\t\t\t\tconst animation = this.animations[ i ];\r\n\r\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\tconst geometries = extractFromCache( meta.geometries );\r\n\t\t\tconst materials = extractFromCache( meta.materials );\r\n\t\t\tconst textures = extractFromCache( meta.textures );\r\n\t\t\tconst images = extractFromCache( meta.images );\r\n\t\t\tconst shapes = extractFromCache( meta.shapes );\r\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\r\n\t\t\tconst animations = extractFromCache( meta.animations );\r\n\t\t\tconst nodes = extractFromCache( meta.nodes );\r\n\r\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n\t\t\tif ( images.length > 0 ) output.images = images;\r\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\r\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\r\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\r\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\r\n\r\n\t\t}\r\n\r\n\t\toutput.object = object;\r\n\r\n\t\treturn output;\r\n\r\n\t\t// extract data from the cache hash\r\n\t\t// remove metadata on each item\r\n\t\t// and return as array\r\n\t\tfunction extractFromCache( cache ) {\r\n\r\n\t\t\tconst values = [];\r\n\t\t\tfor ( const key in cache ) {\r\n\r\n\t\t\t\tconst data = cache[ key ];\r\n\t\t\t\tdelete data.metadata;\r\n\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn values;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclone( recursive ) {\r\n\r\n\t\treturn new this.constructor().copy( this, recursive );\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive = true ) {\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.up.copy( source.up );\r\n\r\n\t\tthis.position.copy( source.position );\r\n\t\tthis.rotation.order = source.rotation.order;\r\n\t\tthis.quaternion.copy( source.quaternion );\r\n\t\tthis.scale.copy( source.scale );\r\n\r\n\t\tthis.matrix.copy( source.matrix );\r\n\t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\r\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\r\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\r\n\t\tthis.layers.mask = source.layers.mask;\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.receiveShadow = source.receiveShadow;\r\n\r\n\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\tthis.renderOrder = source.renderOrder;\r\n\r\n\t\tthis.animations = source.animations.slice();\r\n\r\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\r\n\r\n\t\t\t\tconst child = source.children[ i ];\r\n\t\t\t\tthis.add( child.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\r\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\r\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\r\n\r\nconst _v0$1 = /*@__PURE__*/ new Vector3();\r\nconst _v1$3 = /*@__PURE__*/ new Vector3();\r\nconst _v2$2 = /*@__PURE__*/ new Vector3();\r\nconst _v3$2 = /*@__PURE__*/ new Vector3();\r\n\r\nconst _vab = /*@__PURE__*/ new Vector3();\r\nconst _vac = /*@__PURE__*/ new Vector3();\r\nconst _vbc = /*@__PURE__*/ new Vector3();\r\nconst _vap = /*@__PURE__*/ new Vector3();\r\nconst _vbp = /*@__PURE__*/ new Vector3();\r\nconst _vcp = /*@__PURE__*/ new Vector3();\r\n\r\nconst _v40 = /*@__PURE__*/ new Vector4();\r\nconst _v41 = /*@__PURE__*/ new Vector4();\r\nconst _v42 = /*@__PURE__*/ new Vector4();\r\n\r\nclass Triangle {\r\n\r\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\r\n\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\r\n\t}\r\n\r\n\tstatic getNormal( a, b, c, target ) {\r\n\r\n\t\ttarget.subVectors( c, b );\r\n\t\t_v0$1.subVectors( a, b );\r\n\t\ttarget.cross( _v0$1 );\r\n\r\n\t\tconst targetLengthSq = target.lengthSq();\r\n\t\tif ( targetLengthSq > 0 ) {\r\n\r\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn target.set( 0, 0, 0 );\r\n\r\n\t}\r\n\r\n\t// static/instance method to calculate barycentric coordinates\r\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\n\tstatic getBarycoord( point, a, b, c, target ) {\r\n\r\n\t\t_v0$1.subVectors( c, a );\r\n\t\t_v1$3.subVectors( b, a );\r\n\t\t_v2$2.subVectors( point, a );\r\n\r\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\r\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\r\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\r\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\r\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\r\n\r\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\r\n\t\t// collinear or singular triangle\r\n\t\tif ( denom === 0 ) {\r\n\r\n\t\t\ttarget.set( 0, 0, 0 );\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tconst invDenom = 1 / denom;\r\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\r\n\t\t// barycentric coordinates must always sum to 1\r\n\t\treturn target.set( 1 - u - v, v, u );\r\n\r\n\t}\r\n\r\n\tstatic containsPoint( point, a, b, c ) {\r\n\r\n\t\t// if the triangle is degenerate then we can't contain a point\r\n\t\tif ( this.getBarycoord( point, a, b, c, _v3$2 ) === null ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn ( _v3$2.x >= 0 ) && ( _v3$2.y >= 0 ) && ( ( _v3$2.x + _v3$2.y ) <= 1 );\r\n\r\n\t}\r\n\r\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\r\n\r\n\t\tif ( this.getBarycoord( point, p1, p2, p3, _v3$2 ) === null ) {\r\n\r\n\t\t\ttarget.x = 0;\r\n\t\t\ttarget.y = 0;\r\n\t\t\tif ( 'z' in target ) target.z = 0;\r\n\t\t\tif ( 'w' in target ) target.w = 0;\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\ttarget.setScalar( 0 );\r\n\t\ttarget.addScaledVector( v1, _v3$2.x );\r\n\t\ttarget.addScaledVector( v2, _v3$2.y );\r\n\t\ttarget.addScaledVector( v3, _v3$2.z );\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tstatic getInterpolatedAttribute( attr, i1, i2, i3, barycoord, target ) {\r\n\r\n\t\t_v40.setScalar( 0 );\r\n\t\t_v41.setScalar( 0 );\r\n\t\t_v42.setScalar( 0 );\r\n\r\n\t\t_v40.fromBufferAttribute( attr, i1 );\r\n\t\t_v41.fromBufferAttribute( attr, i2 );\r\n\t\t_v42.fromBufferAttribute( attr, i3 );\r\n\r\n\t\ttarget.setScalar( 0 );\r\n\t\ttarget.addScaledVector( _v40, barycoord.x );\r\n\t\ttarget.addScaledVector( _v41, barycoord.y );\r\n\t\ttarget.addScaledVector( _v42, barycoord.z );\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tstatic isFrontFacing( a, b, c, direction ) {\r\n\r\n\t\t_v0$1.subVectors( c, b );\r\n\t\t_v1$3.subVectors( a, b );\r\n\r\n\t\t// strictly front facing\r\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\r\n\r\n\t}\r\n\r\n\tset( a, b, c ) {\r\n\r\n\t\tthis.a.copy( a );\r\n\t\tthis.b.copy( b );\r\n\t\tthis.c.copy( c );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\r\n\r\n\t\tthis.a.copy( points[ i0 ] );\r\n\t\tthis.b.copy( points[ i1 ] );\r\n\t\tthis.c.copy( points[ i2 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\r\n\r\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\r\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\r\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\tcopy( triangle ) {\r\n\r\n\t\tthis.a.copy( triangle.a );\r\n\t\tthis.b.copy( triangle.b );\r\n\t\tthis.c.copy( triangle.c );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetArea() {\r\n\r\n\t\t_v0$1.subVectors( this.c, this.b );\r\n\t\t_v1$3.subVectors( this.a, this.b );\r\n\r\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\r\n\r\n\t}\r\n\r\n\tgetMidpoint( target ) {\r\n\r\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\r\n\t}\r\n\r\n\tgetNormal( target ) {\r\n\r\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\r\n\r\n\t}\r\n\r\n\tgetPlane( target ) {\r\n\r\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\r\n\t}\r\n\r\n\tgetBarycoord( point, target ) {\r\n\r\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\r\n\r\n\t}\r\n\r\n\tgetInterpolation( point, v1, v2, v3, target ) {\r\n\r\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\r\n\r\n\t}\r\n\r\n\tcontainsPoint( point ) {\r\n\r\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\r\n\t}\r\n\r\n\tisFrontFacing( direction ) {\r\n\r\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\r\n\r\n\t}\r\n\r\n\tintersectsBox( box ) {\r\n\r\n\t\treturn box.intersectsTriangle( this );\r\n\r\n\t}\r\n\r\n\tclosestPointToPoint( p, target ) {\r\n\r\n\t\tconst a = this.a, b = this.b, c = this.c;\r\n\t\tlet v, w;\r\n\r\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\r\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\r\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\r\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\r\n\t\t// the point lies in with the minimum amount of redundant computation.\r\n\r\n\t\t_vab.subVectors( b, a );\r\n\t\t_vac.subVectors( c, a );\r\n\t\t_vap.subVectors( p, a );\r\n\t\tconst d1 = _vab.dot( _vap );\r\n\t\tconst d2 = _vac.dot( _vap );\r\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\r\n\r\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\r\n\t\t\treturn target.copy( a );\r\n\r\n\t\t}\r\n\r\n\t\t_vbp.subVectors( p, b );\r\n\t\tconst d3 = _vab.dot( _vbp );\r\n\t\tconst d4 = _vac.dot( _vbp );\r\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\r\n\r\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\r\n\t\t\treturn target.copy( b );\r\n\r\n\t\t}\r\n\r\n\t\tconst vc = d1 * d4 - d3 * d2;\r\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\r\n\r\n\t\t\tv = d1 / ( d1 - d3 );\r\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\r\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\r\n\r\n\t\t}\r\n\r\n\t\t_vcp.subVectors( p, c );\r\n\t\tconst d5 = _vab.dot( _vcp );\r\n\t\tconst d6 = _vac.dot( _vcp );\r\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\r\n\r\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\r\n\t\t\treturn target.copy( c );\r\n\r\n\t\t}\r\n\r\n\t\tconst vb = d5 * d2 - d1 * d6;\r\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\r\n\r\n\t\t\tw = d2 / ( d2 - d6 );\r\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\r\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\r\n\r\n\t\t}\r\n\r\n\t\tconst va = d3 * d6 - d5 * d4;\r\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\r\n\r\n\t\t\t_vbc.subVectors( c, b );\r\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\r\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\r\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\r\n\r\n\t\t}\r\n\r\n\t\t// face region\r\n\t\tconst denom = 1 / ( va + vb + vc );\r\n\t\t// u = va * denom\r\n\t\tv = vb * denom;\r\n\t\tw = vc * denom;\r\n\r\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\r\n\r\n\t}\r\n\r\n\tequals( triangle ) {\r\n\r\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\r\nconst _hslA = { h: 0, s: 0, l: 0 };\r\nconst _hslB = { h: 0, s: 0, l: 0 };\r\n\r\nfunction hue2rgb( p, q, t ) {\r\n\r\n\tif ( t < 0 ) t += 1;\r\n\tif ( t > 1 ) t -= 1;\r\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\tif ( t < 1 / 2 ) return q;\r\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\treturn p;\r\n\r\n}\r\n\r\nclass Color {\r\n\r\n\tconstructor( r, g, b ) {\r\n\r\n\t\tthis.isColor = true;\r\n\r\n\t\tthis.r = 1;\r\n\t\tthis.g = 1;\r\n\t\tthis.b = 1;\r\n\r\n\t\treturn this.set( r, g, b );\r\n\r\n\t}\r\n\r\n\tset( r, g, b ) {\r\n\r\n\t\tif ( g === undefined && b === undefined ) {\r\n\r\n\t\t\t// r is THREE.Color, hex or string\r\n\r\n\t\t\tconst value = r;\r\n\r\n\t\t\tif ( value && value.isColor ) {\r\n\r\n\t\t\t\tthis.copy( value );\r\n\r\n\t\t\t} else if ( typeof value === 'number' ) {\r\n\r\n\t\t\t\tthis.setHex( value );\r\n\r\n\t\t\t} else if ( typeof value === 'string' ) {\r\n\r\n\t\t\t\tthis.setStyle( value );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.setRGB( r, g, b );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetScalar( scalar ) {\r\n\r\n\t\tthis.r = scalar;\r\n\t\tthis.g = scalar;\r\n\t\tthis.b = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\r\n\r\n\t\thex = Math.floor( hex );\r\n\r\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\tthis.b = ( hex & 255 ) / 255;\r\n\r\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\r\n\r\n\t\tthis.r = r;\r\n\t\tthis.g = g;\r\n\t\tthis.b = b;\r\n\r\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\th = euclideanModulo( h, 1 );\r\n\t\ts = clamp( s, 0, 1 );\r\n\t\tl = clamp( l, 0, 1 );\r\n\r\n\t\tif ( s === 0 ) {\r\n\r\n\t\t\tthis.r = this.g = this.b = l;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\tconst q = ( 2 * l ) - p;\r\n\r\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\r\n\t\t}\r\n\r\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\r\n\r\n\t\tfunction handleAlpha( string ) {\r\n\r\n\t\t\tif ( string === undefined ) return;\r\n\r\n\t\t\tif ( parseFloat( string ) < 1 ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tlet m;\r\n\r\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\r\n\r\n\t\t\t// rgb / hsl\r\n\r\n\t\t\tlet color;\r\n\t\t\tconst name = m[ 1 ];\r\n\t\t\tconst components = m[ 2 ];\r\n\r\n\t\t\tswitch ( name ) {\r\n\r\n\t\t\t\tcase 'rgb':\r\n\t\t\t\tcase 'rgba':\r\n\r\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\r\n\r\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this.setRGB(\r\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\r\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\r\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\r\n\t\t\t\t\t\t\tcolorSpace\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\r\n\r\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this.setRGB(\r\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\r\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\r\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\r\n\t\t\t\t\t\t\tcolorSpace\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'hsl':\r\n\t\t\t\tcase 'hsla':\r\n\r\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\r\n\r\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this.setHSL(\r\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\r\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\r\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\r\n\t\t\t\t\t\t\tcolorSpace\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\r\n\r\n\t\t\t// hex color\r\n\r\n\t\t\tconst hex = m[ 1 ];\r\n\t\t\tconst size = hex.length;\r\n\r\n\t\t\tif ( size === 3 ) {\r\n\r\n\t\t\t\t// #ff0\r\n\t\t\t\treturn this.setRGB(\r\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\r\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\r\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\r\n\t\t\t\t\tcolorSpace\r\n\t\t\t\t);\r\n\r\n\t\t\t} else if ( size === 6 ) {\r\n\r\n\t\t\t\t// #ff0000\r\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( style && style.length > 0 ) {\r\n\r\n\t\t\treturn this.setColorName( style, colorSpace );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\r\n\r\n\t\t// color keywords\r\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\r\n\r\n\t\tif ( hex !== undefined ) {\r\n\r\n\t\t\t// red\r\n\t\t\tthis.setHex( hex, colorSpace );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// unknown color\r\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\r\n\t}\r\n\r\n\tcopy( color ) {\r\n\r\n\t\tthis.r = color.r;\r\n\t\tthis.g = color.g;\r\n\t\tthis.b = color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopySRGBToLinear( color ) {\r\n\r\n\t\tthis.r = SRGBToLinear( color.r );\r\n\t\tthis.g = SRGBToLinear( color.g );\r\n\t\tthis.b = SRGBToLinear( color.b );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopyLinearToSRGB( color ) {\r\n\r\n\t\tthis.r = LinearToSRGB( color.r );\r\n\t\tthis.g = LinearToSRGB( color.g );\r\n\t\tthis.b = LinearToSRGB( color.b );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tconvertSRGBToLinear() {\r\n\r\n\t\tthis.copySRGBToLinear( this );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tconvertLinearToSRGB() {\r\n\r\n\t\tthis.copyLinearToSRGB( this );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetHex( colorSpace = SRGBColorSpace ) {\r\n\r\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\r\n\r\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\r\n\r\n\t}\r\n\r\n\tgetHexString( colorSpace = SRGBColorSpace ) {\r\n\r\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\r\n\r\n\t}\r\n\r\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\r\n\r\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\r\n\r\n\t\tconst max = Math.max( r, g, b );\r\n\t\tconst min = Math.min( r, g, b );\r\n\r\n\t\tlet hue, saturation;\r\n\t\tconst lightness = ( min + max ) / 2.0;\r\n\r\n\t\tif ( min === max ) {\r\n\r\n\t\t\thue = 0;\r\n\t\t\tsaturation = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst delta = max - min;\r\n\r\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\r\n\t\t\tswitch ( max ) {\r\n\r\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\r\n\t\t\t}\r\n\r\n\t\t\thue /= 6;\r\n\r\n\t\t}\r\n\r\n\t\ttarget.h = hue;\r\n\t\ttarget.s = saturation;\r\n\t\ttarget.l = lightness;\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\r\n\r\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\r\n\r\n\t\ttarget.r = _color.r;\r\n\t\ttarget.g = _color.g;\r\n\t\ttarget.b = _color.b;\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tgetStyle( colorSpace = SRGBColorSpace ) {\r\n\r\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\r\n\r\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\r\n\r\n\t\tif ( colorSpace !== SRGBColorSpace ) {\r\n\r\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\r\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\r\n\r\n\t\t}\r\n\r\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\r\n\r\n\t}\r\n\r\n\toffsetHSL( h, s, l ) {\r\n\r\n\t\tthis.getHSL( _hslA );\r\n\r\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\r\n\r\n\t}\r\n\r\n\tadd( color ) {\r\n\r\n\t\tthis.r += color.r;\r\n\t\tthis.g += color.g;\r\n\t\tthis.b += color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddColors( color1, color2 ) {\r\n\r\n\t\tthis.r = color1.r + color2.r;\r\n\t\tthis.g = color1.g + color2.g;\r\n\t\tthis.b = color1.b + color2.b;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScalar( s ) {\r\n\r\n\t\tthis.r += s;\r\n\t\tthis.g += s;\r\n\t\tthis.b += s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsub( color ) {\r\n\r\n\t\tthis.r = Math.max( 0, this.r - color.r );\r\n\t\tthis.g = Math.max( 0, this.g - color.g );\r\n\t\tthis.b = Math.max( 0, this.b - color.b );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiply( color ) {\r\n\r\n\t\tthis.r *= color.r;\r\n\t\tthis.g *= color.g;\r\n\t\tthis.b *= color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmultiplyScalar( s ) {\r\n\r\n\t\tthis.r *= s;\r\n\t\tthis.g *= s;\r\n\t\tthis.b *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlerp( color, alpha ) {\r\n\r\n\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlerpColors( color1, color2, alpha ) {\r\n\r\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\r\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\r\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlerpHSL( color, alpha ) {\r\n\r\n\t\tthis.getHSL( _hslA );\r\n\t\tcolor.getHSL( _hslB );\r\n\r\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\r\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\r\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\r\n\r\n\t\tthis.setHSL( h, s, l );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromVector3( v ) {\r\n\r\n\t\tthis.r = v.x;\r\n\t\tthis.g = v.y;\r\n\t\tthis.b = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyMatrix3( m ) {\r\n\r\n\t\tconst r = this.r, g = this.g, b = this.b;\r\n\t\tconst e = m.elements;\r\n\r\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\r\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\r\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( c ) {\r\n\r\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tthis.r = array[ offset ];\r\n\t\tthis.g = array[ offset + 1 ];\r\n\t\tthis.b = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tarray[ offset ] = this.r;\r\n\t\tarray[ offset + 1 ] = this.g;\r\n\t\tarray[ offset + 2 ] = this.b;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\tfromBufferAttribute( attribute, index ) {\r\n\r\n\t\tthis.r = attribute.getX( index );\r\n\t\tthis.g = attribute.getY( index );\r\n\t\tthis.b = attribute.getZ( index );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\treturn this.getHex();\r\n\r\n\t}\r\n\r\n\t*[ Symbol.iterator ]() {\r\n\r\n\t\tyield this.r;\r\n\t\tyield this.g;\r\n\t\tyield this.b;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _color = /*@__PURE__*/ new Color();\r\n\r\nColor.NAMES = _colorKeywords;\r\n\r\nlet _materialId = 0;\r\n\r\nclass Material extends EventDispatcher {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMaterial = true;\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\r\n\r\n\t\tthis.uuid = generateUUID();\r\n\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Material';\r\n\r\n\t\tthis.blending = NormalBlending;\r\n\t\tthis.side = FrontSide;\r\n\t\tthis.vertexColors = false;\r\n\r\n\t\tthis.opacity = 1;\r\n\t\tthis.transparent = false;\r\n\t\tthis.alphaHash = false;\r\n\r\n\t\tthis.blendSrc = SrcAlphaFactor;\r\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\r\n\t\tthis.blendEquation = AddEquation;\r\n\t\tthis.blendSrcAlpha = null;\r\n\t\tthis.blendDstAlpha = null;\r\n\t\tthis.blendEquationAlpha = null;\r\n\t\tthis.blendColor = new Color( 0, 0, 0 );\r\n\t\tthis.blendAlpha = 0;\r\n\r\n\t\tthis.depthFunc = LessEqualDepth;\r\n\t\tthis.depthTest = true;\r\n\t\tthis.depthWrite = true;\r\n\r\n\t\tthis.stencilWriteMask = 0xff;\r\n\t\tthis.stencilFunc = AlwaysStencilFunc;\r\n\t\tthis.stencilRef = 0;\r\n\t\tthis.stencilFuncMask = 0xff;\r\n\t\tthis.stencilFail = KeepStencilOp;\r\n\t\tthis.stencilZFail = KeepStencilOp;\r\n\t\tthis.stencilZPass = KeepStencilOp;\r\n\t\tthis.stencilWrite = false;\r\n\r\n\t\tthis.clippingPlanes = null;\r\n\t\tthis.clipIntersection = false;\r\n\t\tthis.clipShadows = false;\r\n\r\n\t\tthis.shadowSide = null;\r\n\r\n\t\tthis.colorWrite = true;\r\n\r\n\t\tthis.precision = null; // override the renderer's default precision for this material\r\n\r\n\t\tthis.polygonOffset = false;\r\n\t\tthis.polygonOffsetFactor = 0;\r\n\t\tthis.polygonOffsetUnits = 0;\r\n\r\n\t\tthis.dithering = false;\r\n\r\n\t\tthis.alphaToCoverage = false;\r\n\t\tthis.premultipliedAlpha = false;\r\n\t\tthis.forceSinglePass = false;\r\n\r\n\t\tthis.visible = true;\r\n\r\n\t\tthis.toneMapped = true;\r\n\r\n\t\tthis.userData = {};\r\n\r\n\t\tthis.version = 0;\r\n\r\n\t\tthis._alphaTest = 0;\r\n\r\n\t}\r\n\r\n\tget alphaTest() {\r\n\r\n\t\treturn this._alphaTest;\r\n\r\n\t}\r\n\r\n\tset alphaTest( value ) {\r\n\r\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\r\n\r\n\t\t\tthis.version ++;\r\n\r\n\t\t}\r\n\r\n\t\tthis._alphaTest = value;\r\n\r\n\t}\r\n\r\n\t// onBeforeRender and onBeforeCompile only supported in WebGLRenderer\r\n\r\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\r\n\r\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\r\n\r\n\tcustomProgramCacheKey() {\r\n\r\n\t\treturn this.onBeforeCompile.toString();\r\n\r\n\t}\r\n\r\n\tsetValues( values ) {\r\n\r\n\t\tif ( values === undefined ) return;\r\n\r\n\t\tfor ( const key in values ) {\r\n\r\n\t\t\tconst newValue = values[ key ];\r\n\r\n\t\t\tif ( newValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst currentValue = this[ key ];\r\n\r\n\t\t\tif ( currentValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( currentValue && currentValue.isColor ) {\r\n\r\n\t\t\t\tcurrentValue.set( newValue );\r\n\r\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\r\n\r\n\t\t\t\tcurrentValue.copy( newValue );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis[ key ] = newValue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\r\n\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\tmeta = {\r\n\t\t\t\ttextures: {},\r\n\t\t\t\timages: {}\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tconst data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.6,\r\n\t\t\t\ttype: 'Material',\r\n\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard Material serialization\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\r\n\r\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\r\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\r\n\r\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\r\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\r\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\r\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\r\n\t\tif ( this.emissiveIntensity !== undefined && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\r\n\r\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\r\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\r\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\r\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\r\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\r\n\r\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\r\n\r\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\r\n\r\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\r\n\r\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\r\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.dispersion !== undefined ) data.dispersion = this.dispersion;\r\n\r\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\r\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\r\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\r\n\r\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\r\n\r\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\r\n\r\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\r\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\r\n\r\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\r\n\r\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\r\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n\r\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\r\n\r\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\r\n\r\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\r\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\r\n\r\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\tdata.bumpScale = this.bumpScale;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\r\n\r\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\tdata.normalMapType = this.normalMapType;\r\n\t\t\tdata.normalScale = this.normalScale.toArray();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\r\n\r\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\tdata.displacementBias = this.displacementBias;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\r\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\r\n\r\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\r\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\r\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\r\n\r\n\t\tif ( this.envMap && this.envMap.isTexture ) {\r\n\r\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n\r\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.envMapRotation !== undefined ) data.envMapRotation = this.envMapRotation.toArray();\r\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\r\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\r\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\r\n\r\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\r\n\r\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\r\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\r\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\r\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\r\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\r\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\r\n\r\n\t\tif ( this.size !== undefined ) data.size = this.size;\r\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\r\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\r\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\r\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\r\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\r\n\r\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\tif ( this.transparent === true ) data.transparent = true;\r\n\r\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\r\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\r\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\r\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\r\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\r\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\r\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\r\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\r\n\r\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\r\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\r\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\r\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\r\n\r\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\r\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\r\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\r\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\r\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\r\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\r\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\r\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\r\n\r\n\t\t// rotation (SpriteMaterial)\r\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\r\n\r\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\r\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\r\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\r\n\r\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\r\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\r\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\r\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\r\n\r\n\t\tif ( this.dithering === true ) data.dithering = true;\r\n\r\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\r\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\r\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\r\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\r\n\r\n\t\tif ( this.wireframe === true ) data.wireframe = true;\r\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\r\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\r\n\r\n\t\tif ( this.flatShading === true ) data.flatShading = true;\r\n\r\n\t\tif ( this.visible === false ) data.visible = false;\r\n\r\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\r\n\r\n\t\tif ( this.fog === false ) data.fog = false;\r\n\r\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\r\n\r\n\t\t// TODO: Copied from Object3D.toJSON\r\n\r\n\t\tfunction extractFromCache( cache ) {\r\n\r\n\t\t\tconst values = [];\r\n\r\n\t\t\tfor ( const key in cache ) {\r\n\r\n\t\t\t\tconst data = cache[ key ];\r\n\t\t\t\tdelete data.metadata;\r\n\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn values;\r\n\r\n\t\t}\r\n\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\tconst textures = extractFromCache( meta.textures );\r\n\t\t\tconst images = extractFromCache( meta.images );\r\n\r\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\r\n\t\t\tif ( images.length > 0 ) data.images = images;\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.blending = source.blending;\r\n\t\tthis.side = source.side;\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\r\n\t\tthis.opacity = source.opacity;\r\n\t\tthis.transparent = source.transparent;\r\n\r\n\t\tthis.blendSrc = source.blendSrc;\r\n\t\tthis.blendDst = source.blendDst;\r\n\t\tthis.blendEquation = source.blendEquation;\r\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\t\tthis.blendColor.copy( source.blendColor );\r\n\t\tthis.blendAlpha = source.blendAlpha;\r\n\r\n\t\tthis.depthFunc = source.depthFunc;\r\n\t\tthis.depthTest = source.depthTest;\r\n\t\tthis.depthWrite = source.depthWrite;\r\n\r\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\r\n\t\tthis.stencilFunc = source.stencilFunc;\r\n\t\tthis.stencilRef = source.stencilRef;\r\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\r\n\t\tthis.stencilFail = source.stencilFail;\r\n\t\tthis.stencilZFail = source.stencilZFail;\r\n\t\tthis.stencilZPass = source.stencilZPass;\r\n\t\tthis.stencilWrite = source.stencilWrite;\r\n\r\n\t\tconst srcPlanes = source.clippingPlanes;\r\n\t\tlet dstPlanes = null;\r\n\r\n\t\tif ( srcPlanes !== null ) {\r\n\r\n\t\t\tconst n = srcPlanes.length;\r\n\t\t\tdstPlanes = new Array( n );\r\n\r\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\r\n\r\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.clippingPlanes = dstPlanes;\r\n\t\tthis.clipIntersection = source.clipIntersection;\r\n\t\tthis.clipShadows = source.clipShadows;\r\n\r\n\t\tthis.shadowSide = source.shadowSide;\r\n\r\n\t\tthis.colorWrite = source.colorWrite;\r\n\r\n\t\tthis.precision = source.precision;\r\n\r\n\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\r\n\t\tthis.dithering = source.dithering;\r\n\r\n\t\tthis.alphaTest = source.alphaTest;\r\n\t\tthis.alphaHash = source.alphaHash;\r\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\r\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\r\n\t\tthis.forceSinglePass = source.forceSinglePass;\r\n\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\tthis.toneMapped = source.toneMapped;\r\n\r\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t}\r\n\r\n\tonBuild( /* shaderobject, renderer */ ) {\r\n\r\n\t\tconsole.warn( 'Material: onBuild() has been removed.' ); // @deprecated, r166\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass MeshBasicMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshBasicMaterial = true;\r\n\r\n\t\tthis.type = 'MeshBasicMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff ); // emissive\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\r\n\t\tthis.specularMap = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.envMap = null;\r\n\t\tthis.envMapRotation = new Euler();\r\n\t\tthis.combine = MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\r\n\t\tthis.fog = true;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\t\tthis.specularMap = source.specularMap;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.envMapRotation.copy( source.envMapRotation );\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\t\tthis.fog = source.fog;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\r\n\r\nconst _tables = /*@__PURE__*/ _generateTables();\r\n\r\nfunction _generateTables() {\r\n\r\n\t// float32 to float16 helpers\r\n\r\n\tconst buffer = new ArrayBuffer( 4 );\r\n\tconst floatView = new Float32Array( buffer );\r\n\tconst uint32View = new Uint32Array( buffer );\r\n\r\n\tconst baseTable = new Uint32Array( 512 );\r\n\tconst shiftTable = new Uint32Array( 512 );\r\n\r\n\tfor ( let i = 0; i < 256; ++ i ) {\r\n\r\n\t\tconst e = i - 127;\r\n\r\n\t\t// very small number (0, -0)\r\n\r\n\t\tif ( e < - 27 ) {\r\n\r\n\t\t\tbaseTable[ i ] = 0x0000;\r\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\r\n\t\t\tshiftTable[ i ] = 24;\r\n\t\t\tshiftTable[ i | 0x100 ] = 24;\r\n\r\n\t\t\t// small number (denorm)\r\n\r\n\t\t} else if ( e < - 14 ) {\r\n\r\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\r\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\r\n\t\t\tshiftTable[ i ] = - e - 1;\r\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\r\n\r\n\t\t\t// normal number\r\n\r\n\t\t} else if ( e <= 15 ) {\r\n\r\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\r\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\r\n\t\t\tshiftTable[ i ] = 13;\r\n\t\t\tshiftTable[ i | 0x100 ] = 13;\r\n\r\n\t\t\t// large number (Infinity, -Infinity)\r\n\r\n\t\t} else if ( e < 128 ) {\r\n\r\n\t\t\tbaseTable[ i ] = 0x7c00;\r\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\r\n\t\t\tshiftTable[ i ] = 24;\r\n\t\t\tshiftTable[ i | 0x100 ] = 24;\r\n\r\n\t\t\t// stay (NaN, Infinity, -Infinity)\r\n\r\n\t\t} else {\r\n\r\n\t\t\tbaseTable[ i ] = 0x7c00;\r\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\r\n\t\t\tshiftTable[ i ] = 13;\r\n\t\t\tshiftTable[ i | 0x100 ] = 13;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// float16 to float32 helpers\r\n\r\n\tconst mantissaTable = new Uint32Array( 2048 );\r\n\tconst exponentTable = new Uint32Array( 64 );\r\n\tconst offsetTable = new Uint32Array( 64 );\r\n\r\n\tfor ( let i = 1; i < 1024; ++ i ) {\r\n\r\n\t\tlet m = i << 13; // zero pad mantissa bits\r\n\t\tlet e = 0; // zero exponent\r\n\r\n\t\t// normalized\r\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\r\n\r\n\t\t\tm <<= 1;\r\n\t\t\te -= 0x00800000; // decrement exponent\r\n\r\n\t\t}\r\n\r\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\r\n\t\te += 0x38800000; // adjust bias\r\n\r\n\t\tmantissaTable[ i ] = m | e;\r\n\r\n\t}\r\n\r\n\tfor ( let i = 1024; i < 2048; ++ i ) {\r\n\r\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\r\n\r\n\t}\r\n\r\n\tfor ( let i = 1; i < 31; ++ i ) {\r\n\r\n\t\texponentTable[ i ] = i << 23;\r\n\r\n\t}\r\n\r\n\texponentTable[ 31 ] = 0x47800000;\r\n\texponentTable[ 32 ] = 0x80000000;\r\n\r\n\tfor ( let i = 33; i < 63; ++ i ) {\r\n\r\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\r\n\r\n\t}\r\n\r\n\texponentTable[ 63 ] = 0xc7800000;\r\n\r\n\tfor ( let i = 1; i < 64; ++ i ) {\r\n\r\n\t\tif ( i !== 32 ) {\r\n\r\n\t\t\toffsetTable[ i ] = 1024;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn {\r\n\t\tfloatView: floatView,\r\n\t\tuint32View: uint32View,\r\n\t\tbaseTable: baseTable,\r\n\t\tshiftTable: shiftTable,\r\n\t\tmantissaTable: mantissaTable,\r\n\t\texponentTable: exponentTable,\r\n\t\toffsetTable: offsetTable\r\n\t};\r\n\r\n}\r\n\r\n// float32 to float16\r\n\r\nfunction toHalfFloat( val ) {\r\n\r\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\r\n\r\n\tval = clamp( val, - 65504, 65504 );\r\n\r\n\t_tables.floatView[ 0 ] = val;\r\n\tconst f = _tables.uint32View[ 0 ];\r\n\tconst e = ( f >> 23 ) & 0x1ff;\r\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\r\n\r\n}\r\n\r\n// float16 to float32\r\n\r\nfunction fromHalfFloat( val ) {\r\n\r\n\tconst m = val >> 10;\r\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\r\n\treturn _tables.floatView[ 0 ];\r\n\r\n}\r\n\r\nconst DataUtils = {\r\n\ttoHalfFloat: toHalfFloat,\r\n\tfromHalfFloat: fromHalfFloat,\r\n};\r\n\r\nconst _vector$9 = /*@__PURE__*/ new Vector3();\r\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\r\n\r\nlet _id$2 = 0;\r\n\r\nclass BufferAttribute {\r\n\r\n\tconstructor( array, itemSize, normalized = false ) {\r\n\r\n\t\tif ( Array.isArray( array ) ) {\r\n\r\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.isBufferAttribute = true;\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: _id$2 ++ } );\r\n\r\n\t\tthis.name = '';\r\n\r\n\t\tthis.array = array;\r\n\t\tthis.itemSize = itemSize;\r\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\r\n\t\tthis.normalized = normalized;\r\n\r\n\t\tthis.usage = StaticDrawUsage;\r\n\t\tthis.updateRanges = [];\r\n\t\tthis.gpuType = FloatType;\r\n\r\n\t\tthis.version = 0;\r\n\r\n\t}\r\n\r\n\tonUploadCallback() {}\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t}\r\n\r\n\tsetUsage( value ) {\r\n\r\n\t\tthis.usage = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddUpdateRange( start, count ) {\r\n\r\n\t\tthis.updateRanges.push( { start, count } );\r\n\r\n\t}\r\n\r\n\tclearUpdateRanges() {\r\n\r\n\t\tthis.updateRanges.length = 0;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.name = source.name;\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.itemSize = source.itemSize;\r\n\t\tthis.count = source.count;\r\n\t\tthis.normalized = source.normalized;\r\n\r\n\t\tthis.usage = source.usage;\r\n\t\tthis.gpuType = source.gpuType;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopyAt( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.itemSize;\r\n\t\tindex2 *= attribute.itemSize;\r\n\r\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopyArray( array ) {\r\n\r\n\t\tthis.array.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyMatrix3( m ) {\r\n\r\n\t\tif ( this.itemSize === 2 ) {\r\n\r\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\r\n\t\t\t\t_vector2$1.applyMatrix3( m );\r\n\r\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( this.itemSize === 3 ) {\r\n\r\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\r\n\t\t\t\t_vector$9.applyMatrix3( m );\r\n\r\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( m ) {\r\n\r\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\r\n\r\n\t\t\t_vector$9.fromBufferAttribute( this, i );\r\n\r\n\t\t\t_vector$9.applyMatrix4( m );\r\n\r\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyNormalMatrix( m ) {\r\n\r\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\r\n\r\n\t\t\t_vector$9.fromBufferAttribute( this, i );\r\n\r\n\t\t\t_vector$9.applyNormalMatrix( m );\r\n\r\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttransformDirection( m ) {\r\n\r\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\r\n\r\n\t\t\t_vector$9.fromBufferAttribute( this, i );\r\n\r\n\t\t\t_vector$9.transformDirection( m );\r\n\r\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tset( value, offset = 0 ) {\r\n\r\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetComponent( index, component ) {\r\n\r\n\t\tlet value = this.array[ index * this.itemSize + component ];\r\n\r\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n\tsetComponent( index, component, value ) {\r\n\r\n\t\tif ( this.normalized ) value = normalize( value, this.array );\r\n\r\n\t\tthis.array[ index * this.itemSize + component ] = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetX( index ) {\r\n\r\n\t\tlet x = this.array[ index * this.itemSize ];\r\n\r\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\r\n\r\n\t\treturn x;\r\n\r\n\t}\r\n\r\n\tsetX( index, x ) {\r\n\r\n\t\tif ( this.normalized ) x = normalize( x, this.array );\r\n\r\n\t\tthis.array[ index * this.itemSize ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetY( index ) {\r\n\r\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\r\n\r\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\r\n\r\n\t\treturn y;\r\n\r\n\t}\r\n\r\n\tsetY( index, y ) {\r\n\r\n\t\tif ( this.normalized ) y = normalize( y, this.array );\r\n\r\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetZ( index ) {\r\n\r\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\r\n\r\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\r\n\r\n\t\treturn z;\r\n\r\n\t}\r\n\r\n\tsetZ( index, z ) {\r\n\r\n\t\tif ( this.normalized ) z = normalize( z, this.array );\r\n\r\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetW( index ) {\r\n\r\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\r\n\r\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\r\n\r\n\t\treturn w;\r\n\r\n\t}\r\n\r\n\tsetW( index, w ) {\r\n\r\n\t\tif ( this.normalized ) w = normalize( w, this.array );\r\n\r\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetXY( index, x, y ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tif ( this.normalized ) {\r\n\r\n\t\t\tx = normalize( x, this.array );\r\n\t\t\ty = normalize( y, this.array );\r\n\r\n\t\t}\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetXYZ( index, x, y, z ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tif ( this.normalized ) {\r\n\r\n\t\t\tx = normalize( x, this.array );\r\n\t\t\ty = normalize( y, this.array );\r\n\t\t\tz = normalize( z, this.array );\r\n\r\n\t\t}\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetXYZW( index, x, y, z, w ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tif ( this.normalized ) {\r\n\r\n\t\t\tx = normalize( x, this.array );\r\n\t\t\ty = normalize( y, this.array );\r\n\t\t\tz = normalize( z, this.array );\r\n\t\t\tw = normalize( w, this.array );\r\n\r\n\t\t}\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\t\tthis.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tonUpload( callback ) {\r\n\r\n\t\tthis.onUploadCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = {\r\n\t\t\titemSize: this.itemSize,\r\n\t\t\ttype: this.array.constructor.name,\r\n\t\t\tarray: Array.from( this.array ),\r\n\t\t\tnormalized: this.normalized\r\n\t\t};\r\n\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\n//\r\n\r\nclass Int8BufferAttribute extends BufferAttribute {\r\n\r\n\tconstructor( array, itemSize, normalized ) {\r\n\r\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Uint8BufferAttribute extends BufferAttribute {\r\n\r\n\tconstructor( array, itemSize, normalized ) {\r\n\r\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\r\n\r\n\tconstructor( array, itemSize, normalized ) {\r\n\r\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Int16BufferAttribute extends BufferAttribute {\r\n\r\n\tconstructor( array, itemSize, normalized ) {\r\n\r\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Uint16BufferAttribute extends BufferAttribute {\r\n\r\n\tconstructor( array, itemSize, normalized ) {\r\n\r\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Int32BufferAttribute extends BufferAttribute {\r\n\r\n\tconstructor( array, itemSize, normalized ) {\r\n\r\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Uint32BufferAttribute extends BufferAttribute {\r\n\r\n\tconstructor( array, itemSize, normalized ) {\r\n\r\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Float16BufferAttribute extends BufferAttribute {\r\n\r\n\tconstructor( array, itemSize, normalized ) {\r\n\r\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\r\n\r\n\t\tthis.isFloat16BufferAttribute = true;\r\n\r\n\t}\r\n\r\n\tgetX( index ) {\r\n\r\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\r\n\r\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\r\n\r\n\t\treturn x;\r\n\r\n\t}\r\n\r\n\tsetX( index, x ) {\r\n\r\n\t\tif ( this.normalized ) x = normalize( x, this.array );\r\n\r\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetY( index ) {\r\n\r\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\r\n\r\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\r\n\r\n\t\treturn y;\r\n\r\n\t}\r\n\r\n\tsetY( index, y ) {\r\n\r\n\t\tif ( this.normalized ) y = normalize( y, this.array );\r\n\r\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetZ( index ) {\r\n\r\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\r\n\r\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\r\n\r\n\t\treturn z;\r\n\r\n\t}\r\n\r\n\tsetZ( index, z ) {\r\n\r\n\t\tif ( this.normalized ) z = normalize( z, this.array );\r\n\r\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetW( index ) {\r\n\r\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\r\n\r\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\r\n\r\n\t\treturn w;\r\n\r\n\t}\r\n\r\n\tsetW( index, w ) {\r\n\r\n\t\tif ( this.normalized ) w = normalize( w, this.array );\r\n\r\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetXY( index, x, y ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tif ( this.normalized ) {\r\n\r\n\t\t\tx = normalize( x, this.array );\r\n\t\t\ty = normalize( y, this.array );\r\n\r\n\t\t}\r\n\r\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\r\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetXYZ( index, x, y, z ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tif ( this.normalized ) {\r\n\r\n\t\t\tx = normalize( x, this.array );\r\n\t\t\ty = normalize( y, this.array );\r\n\t\t\tz = normalize( z, this.array );\r\n\r\n\t\t}\r\n\r\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\r\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\r\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetXYZW( index, x, y, z, w ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tif ( this.normalized ) {\r\n\r\n\t\t\tx = normalize( x, this.array );\r\n\t\t\ty = normalize( y, this.array );\r\n\t\t\tz = normalize( z, this.array );\r\n\t\t\tw = normalize( w, this.array );\r\n\r\n\t\t}\r\n\r\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\r\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\r\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\r\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\nclass Float32BufferAttribute extends BufferAttribute {\r\n\r\n\tconstructor( array, itemSize, normalized ) {\r\n\r\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\r\n\r\n\t}\r\n\r\n}\r\n\r\nlet _id$1 = 0;\r\n\r\nconst _m1 = /*@__PURE__*/ new Matrix4();\r\nconst _obj = /*@__PURE__*/ new Object3D();\r\nconst _offset = /*@__PURE__*/ new Vector3();\r\nconst _box$2 = /*@__PURE__*/ new Box3();\r\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\r\nconst _vector$8 = /*@__PURE__*/ new Vector3();\r\n\r\nclass BufferGeometry extends EventDispatcher {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isBufferGeometry = true;\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\r\n\r\n\t\tthis.uuid = generateUUID();\r\n\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'BufferGeometry';\r\n\r\n\t\tthis.index = null;\r\n\t\tthis.indirect = null;\r\n\t\tthis.attributes = {};\r\n\r\n\t\tthis.morphAttributes = {};\r\n\t\tthis.morphTargetsRelative = false;\r\n\r\n\t\tthis.groups = [];\r\n\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\r\n\t\tthis.drawRange = { start: 0, count: Infinity };\r\n\r\n\t\tthis.userData = {};\r\n\r\n\t}\r\n\r\n\tgetIndex() {\r\n\r\n\t\treturn this.index;\r\n\r\n\t}\r\n\r\n\tsetIndex( index ) {\r\n\r\n\t\tif ( Array.isArray( index ) ) {\r\n\r\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.index = index;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetIndirect( indirect ) {\r\n\r\n\t\tthis.indirect = indirect;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetIndirect() {\r\n\r\n\t\treturn this.indirect;\r\n\r\n\t}\r\n\r\n\tgetAttribute( name ) {\r\n\r\n\t\treturn this.attributes[ name ];\r\n\r\n\t}\r\n\r\n\tsetAttribute( name, attribute ) {\r\n\r\n\t\tthis.attributes[ name ] = attribute;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdeleteAttribute( name ) {\r\n\r\n\t\tdelete this.attributes[ name ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\thasAttribute( name ) {\r\n\r\n\t\treturn this.attributes[ name ] !== undefined;\r\n\r\n\t}\r\n\r\n\taddGroup( start, count, materialIndex = 0 ) {\r\n\r\n\t\tthis.groups.push( {\r\n\r\n\t\t\tstart: start,\r\n\t\t\tcount: count,\r\n\t\t\tmaterialIndex: materialIndex\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tclearGroups() {\r\n\r\n\t\tthis.groups = [];\r\n\r\n\t}\r\n\r\n\tsetDrawRange( start, count ) {\r\n\r\n\t\tthis.drawRange.start = start;\r\n\t\tthis.drawRange.count = count;\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( matrix ) {\r\n\r\n\t\tconst position = this.attributes.position;\r\n\r\n\t\tif ( position !== undefined ) {\r\n\r\n\t\t\tposition.applyMatrix4( matrix );\r\n\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tconst normal = this.attributes.normal;\r\n\r\n\t\tif ( normal !== undefined ) {\r\n\r\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\r\n\r\n\t\t\tnormal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tconst tangent = this.attributes.tangent;\r\n\r\n\t\tif ( tangent !== undefined ) {\r\n\r\n\t\t\ttangent.transformDirection( matrix );\r\n\r\n\t\t\ttangent.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyQuaternion( q ) {\r\n\r\n\t\t_m1.makeRotationFromQuaternion( q );\r\n\r\n\t\tthis.applyMatrix4( _m1 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trotateX( angle ) {\r\n\r\n\t\t// rotate geometry around world x-axis\r\n\r\n\t\t_m1.makeRotationX( angle );\r\n\r\n\t\tthis.applyMatrix4( _m1 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trotateY( angle ) {\r\n\r\n\t\t// rotate geometry around world y-axis\r\n\r\n\t\t_m1.makeRotationY( angle );\r\n\r\n\t\tthis.applyMatrix4( _m1 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\trotateZ( angle ) {\r\n\r\n\t\t// rotate geometry around world z-axis\r\n\r\n\t\t_m1.makeRotationZ( angle );\r\n\r\n\t\tthis.applyMatrix4( _m1 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttranslate( x, y, z ) {\r\n\r\n\t\t// translate geometry\r\n\r\n\t\t_m1.makeTranslation( x, y, z );\r\n\r\n\t\tthis.applyMatrix4( _m1 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tscale( x, y, z ) {\r\n\r\n\t\t// scale geometry\r\n\r\n\t\t_m1.makeScale( x, y, z );\r\n\r\n\t\tthis.applyMatrix4( _m1 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlookAt( vector ) {\r\n\r\n\t\t_obj.lookAt( vector );\r\n\r\n\t\t_obj.updateMatrix();\r\n\r\n\t\tthis.applyMatrix4( _obj.matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcenter() {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tthis.boundingBox.getCenter( _offset ).negate();\r\n\r\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromPoints( points ) {\r\n\r\n\t\tconst positionAttribute = this.getAttribute( 'position' );\r\n\r\n\t\tif ( positionAttribute === undefined ) {\r\n\r\n\t\t\tconst position = [];\r\n\r\n\t\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst point = points[ i ];\r\n\t\t\t\tposition.push( point.x, point.y, point.z || 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst l = Math.min( points.length, positionAttribute.count ); // make sure data do not exceed buffer size\r\n\r\n\t\t\tfor ( let i = 0; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst point = points[ i ];\r\n\t\t\t\tpositionAttribute.setXYZ( i, point.x, point.y, point.z || 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( points.length > positionAttribute.count ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tpositionAttribute.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcomputeBoundingBox() {\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new Box3();\r\n\r\n\t\t}\r\n\r\n\t\tconst position = this.attributes.position;\r\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\r\n\r\n\t\tif ( position && position.isGLBufferAttribute ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.', this );\r\n\r\n\t\t\tthis.boundingBox.set(\r\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\r\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\r\n\t\t\t);\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( position !== undefined ) {\r\n\r\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\r\n\r\n\t\t\t// process morph attributes if present\r\n\r\n\t\t\tif ( morphAttributesPosition ) {\r\n\r\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\r\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\r\n\r\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\r\n\r\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\r\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\r\n\r\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\r\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\r\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.boundingBox.makeEmpty();\r\n\r\n\t\t}\r\n\r\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcomputeBoundingSphere() {\r\n\r\n\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\tthis.boundingSphere = new Sphere();\r\n\r\n\t\t}\r\n\r\n\t\tconst position = this.attributes.position;\r\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\r\n\r\n\t\tif ( position && position.isGLBufferAttribute ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.', this );\r\n\r\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( position ) {\r\n\r\n\t\t\t// first, find the center of the bounding sphere\r\n\r\n\t\t\tconst center = this.boundingSphere.center;\r\n\r\n\t\t\t_box$2.setFromBufferAttribute( position );\r\n\r\n\t\t\t// process morph attributes if present\r\n\r\n\t\t\tif ( morphAttributesPosition ) {\r\n\r\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\r\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\r\n\r\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\r\n\r\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\r\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\r\n\r\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\r\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\r\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_box$2.getCenter( center );\r\n\r\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\r\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\r\n\t\t\tlet maxRadiusSq = 0;\r\n\r\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\r\n\r\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\r\n\r\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// process morph attributes if present\r\n\r\n\t\t\tif ( morphAttributesPosition ) {\r\n\r\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\r\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\r\n\r\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\r\n\r\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\r\n\r\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\r\n\t\t\t\t\t\t\t_vector$8.add( _offset );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcomputeTangents() {\r\n\r\n\t\tconst index = this.index;\r\n\t\tconst attributes = this.attributes;\r\n\r\n\t\t// based on http://www.terathon.com/code/tangent.html\r\n\t\t// (per vertex tangents)\r\n\r\n\t\tif ( index === null ||\r\n\t\t\t attributes.position === undefined ||\r\n\t\t\t attributes.normal === undefined ||\r\n\t\t\t attributes.uv === undefined ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tconst positionAttribute = attributes.position;\r\n\t\tconst normalAttribute = attributes.normal;\r\n\t\tconst uvAttribute = attributes.uv;\r\n\r\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\r\n\r\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * positionAttribute.count ), 4 ) );\r\n\r\n\t\t}\r\n\r\n\t\tconst tangentAttribute = this.getAttribute( 'tangent' );\r\n\r\n\t\tconst tan1 = [], tan2 = [];\r\n\r\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\r\n\r\n\t\t\ttan1[ i ] = new Vector3();\r\n\t\t\ttan2[ i ] = new Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tconst vA = new Vector3(),\r\n\t\t\tvB = new Vector3(),\r\n\t\t\tvC = new Vector3(),\r\n\r\n\t\t\tuvA = new Vector2(),\r\n\t\t\tuvB = new Vector2(),\r\n\t\t\tuvC = new Vector2(),\r\n\r\n\t\t\tsdir = new Vector3(),\r\n\t\t\ttdir = new Vector3();\r\n\r\n\t\tfunction handleTriangle( a, b, c ) {\r\n\r\n\t\t\tvA.fromBufferAttribute( positionAttribute, a );\r\n\t\t\tvB.fromBufferAttribute( positionAttribute, b );\r\n\t\t\tvC.fromBufferAttribute( positionAttribute, c );\r\n\r\n\t\t\tuvA.fromBufferAttribute( uvAttribute, a );\r\n\t\t\tuvB.fromBufferAttribute( uvAttribute, b );\r\n\t\t\tuvC.fromBufferAttribute( uvAttribute, c );\r\n\r\n\t\t\tvB.sub( vA );\r\n\t\t\tvC.sub( vA );\r\n\r\n\t\t\tuvB.sub( uvA );\r\n\t\t\tuvC.sub( uvA );\r\n\r\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\r\n\r\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\r\n\r\n\t\t\tif ( ! isFinite( r ) ) return;\r\n\r\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\r\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\r\n\r\n\t\t\ttan1[ a ].add( sdir );\r\n\t\t\ttan1[ b ].add( sdir );\r\n\t\t\ttan1[ c ].add( sdir );\r\n\r\n\t\t\ttan2[ a ].add( tdir );\r\n\t\t\ttan2[ b ].add( tdir );\r\n\t\t\ttan2[ c ].add( tdir );\r\n\r\n\t\t}\r\n\r\n\t\tlet groups = this.groups;\r\n\r\n\t\tif ( groups.length === 0 ) {\r\n\r\n\t\t\tgroups = [ {\r\n\t\t\t\tstart: 0,\r\n\t\t\t\tcount: index.count\r\n\t\t\t} ];\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\r\n\r\n\t\t\tconst group = groups[ i ];\r\n\r\n\t\t\tconst start = group.start;\r\n\t\t\tconst count = group.count;\r\n\r\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\r\n\r\n\t\t\t\thandleTriangle(\r\n\t\t\t\t\tindex.getX( j + 0 ),\r\n\t\t\t\t\tindex.getX( j + 1 ),\r\n\t\t\t\t\tindex.getX( j + 2 )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\r\n\t\tconst n = new Vector3(), n2 = new Vector3();\r\n\r\n\t\tfunction handleVertex( v ) {\r\n\r\n\t\t\tn.fromBufferAttribute( normalAttribute, v );\r\n\t\t\tn2.copy( n );\r\n\r\n\t\t\tconst t = tan1[ v ];\r\n\r\n\t\t\t// Gram-Schmidt orthogonalize\r\n\r\n\t\t\ttmp.copy( t );\r\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\r\n\r\n\t\t\t// Calculate handedness\r\n\r\n\t\t\ttmp2.crossVectors( n2, t );\r\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\r\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\r\n\r\n\t\t\ttangentAttribute.setXYZW( v, tmp.x, tmp.y, tmp.z, w );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\r\n\r\n\t\t\tconst group = groups[ i ];\r\n\r\n\t\t\tconst start = group.start;\r\n\t\t\tconst count = group.count;\r\n\r\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\r\n\r\n\t\t\t\thandleVertex( index.getX( j + 0 ) );\r\n\t\t\t\thandleVertex( index.getX( j + 1 ) );\r\n\t\t\t\thandleVertex( index.getX( j + 2 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcomputeVertexNormals() {\r\n\r\n\t\tconst index = this.index;\r\n\t\tconst positionAttribute = this.getAttribute( 'position' );\r\n\r\n\t\tif ( positionAttribute !== undefined ) {\r\n\r\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\r\n\r\n\t\t\tif ( normalAttribute === undefined ) {\r\n\r\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\r\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// reset existing normals to zero\r\n\r\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\r\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\r\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\r\n\r\n\t\t\t// indexed elements\r\n\r\n\t\t\tif ( index ) {\r\n\r\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tconst vA = index.getX( i + 0 );\r\n\t\t\t\t\tconst vB = index.getX( i + 1 );\r\n\t\t\t\t\tconst vC = index.getX( i + 2 );\r\n\r\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\r\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\r\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\r\n\r\n\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\r\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\r\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\r\n\r\n\t\t\t\t\tnA.add( cb );\r\n\t\t\t\t\tnB.add( cb );\r\n\t\t\t\t\tnC.add( cb );\r\n\r\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\r\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\r\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\r\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\r\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\r\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\r\n\r\n\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\r\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\r\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.normalizeNormals();\r\n\r\n\t\t\tnormalAttribute.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tnormalizeNormals() {\r\n\r\n\t\tconst normals = this.attributes.normal;\r\n\r\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\r\n\r\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\r\n\r\n\t\t\t_vector$8.normalize();\r\n\r\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ttoNonIndexed() {\r\n\r\n\t\tfunction convertBufferAttribute( attribute, indices ) {\r\n\r\n\t\t\tconst array = attribute.array;\r\n\t\t\tconst itemSize = attribute.itemSize;\r\n\t\t\tconst normalized = attribute.normalized;\r\n\r\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\r\n\r\n\t\t\tlet index = 0, index2 = 0;\r\n\r\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\r\n\r\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tindex = indices[ i ] * itemSize;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\r\n\r\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( this.index === null ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tconst geometry2 = new BufferGeometry();\r\n\r\n\t\tconst indices = this.index.array;\r\n\t\tconst attributes = this.attributes;\r\n\r\n\t\t// attributes\r\n\r\n\t\tfor ( const name in attributes ) {\r\n\r\n\t\t\tconst attribute = attributes[ name ];\r\n\r\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\r\n\r\n\t\t\tgeometry2.setAttribute( name, newAttribute );\r\n\r\n\t\t}\r\n\r\n\t\t// morph attributes\r\n\r\n\t\tconst morphAttributes = this.morphAttributes;\r\n\r\n\t\tfor ( const name in morphAttributes ) {\r\n\r\n\t\t\tconst morphArray = [];\r\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\r\n\r\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tconst attribute = morphAttribute[ i ];\r\n\r\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\r\n\r\n\t\t\t\tmorphArray.push( newAttribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\r\n\r\n\t\t}\r\n\r\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\r\n\r\n\t\t// groups\r\n\r\n\t\tconst groups = this.groups;\r\n\r\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst group = groups[ i ];\r\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry2;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.6,\r\n\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard BufferGeometry serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tconst parameters = this.parameters;\r\n\r\n\t\t\tfor ( const key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\r\n\r\n\t\tdata.data = { attributes: {} };\r\n\r\n\t\tconst index = this.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tdata.data.index = {\r\n\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tconst attributes = this.attributes;\r\n\r\n\t\tfor ( const key in attributes ) {\r\n\r\n\t\t\tconst attribute = attributes[ key ];\r\n\r\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\r\n\r\n\t\t}\r\n\r\n\t\tconst morphAttributes = {};\r\n\t\tlet hasMorphAttributes = false;\r\n\r\n\t\tfor ( const key in this.morphAttributes ) {\r\n\r\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\r\n\r\n\t\t\tconst array = [];\r\n\r\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tconst attribute = attributeArray[ i ];\r\n\r\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( array.length > 0 ) {\r\n\r\n\t\t\t\tmorphAttributes[ key ] = array;\r\n\r\n\t\t\t\thasMorphAttributes = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( hasMorphAttributes ) {\r\n\r\n\t\t\tdata.data.morphAttributes = morphAttributes;\r\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\r\n\r\n\t\t}\r\n\r\n\t\tconst groups = this.groups;\r\n\r\n\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\r\n\t\t}\r\n\r\n\t\tconst boundingSphere = this.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\t// reset\r\n\r\n\t\tthis.index = null;\r\n\t\tthis.attributes = {};\r\n\t\tthis.morphAttributes = {};\r\n\t\tthis.groups = [];\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\r\n\t\t// used for storing cloned, shared data\r\n\r\n\t\tconst data = {};\r\n\r\n\t\t// name\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\t// index\r\n\r\n\t\tconst index = source.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tthis.setIndex( index.clone( data ) );\r\n\r\n\t\t}\r\n\r\n\t\t// attributes\r\n\r\n\t\tconst attributes = source.attributes;\r\n\r\n\t\tfor ( const name in attributes ) {\r\n\r\n\t\t\tconst attribute = attributes[ name ];\r\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\r\n\r\n\t\t}\r\n\r\n\t\t// morph attributes\r\n\r\n\t\tconst morphAttributes = source.morphAttributes;\r\n\r\n\t\tfor ( const name in morphAttributes ) {\r\n\r\n\t\t\tconst array = [];\r\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\r\n\r\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphAttributes[ name ] = array;\r\n\r\n\t\t}\r\n\r\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\r\n\r\n\t\t// groups\r\n\r\n\t\tconst groups = source.groups;\r\n\r\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst group = groups[ i ];\r\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\r\n\r\n\t\t}\r\n\r\n\t\t// bounding box\r\n\r\n\t\tconst boundingBox = source.boundingBox;\r\n\r\n\t\tif ( boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\t// bounding sphere\r\n\r\n\t\tconst boundingSphere = source.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\t// draw range\r\n\r\n\t\tthis.drawRange.start = source.drawRange.start;\r\n\t\tthis.drawRange.count = source.drawRange.count;\r\n\r\n\t\t// user data\r\n\r\n\t\tthis.userData = source.userData;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\r\nconst _ray$3 = /*@__PURE__*/ new Ray();\r\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\r\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\r\n\r\nconst _vA$1 = /*@__PURE__*/ new Vector3();\r\nconst _vB$1 = /*@__PURE__*/ new Vector3();\r\nconst _vC$1 = /*@__PURE__*/ new Vector3();\r\n\r\nconst _tempA = /*@__PURE__*/ new Vector3();\r\nconst _morphA = /*@__PURE__*/ new Vector3();\r\n\r\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\r\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\r\n\r\nclass Mesh extends Object3D {\r\n\r\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMesh = true;\r\n\r\n\t\tthis.type = 'Mesh';\r\n\r\n\t\tthis.geometry = geometry;\r\n\t\tthis.material = material;\r\n\r\n\t\tthis.updateMorphTargets();\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tif ( source.morphTargetInfluences !== undefined ) {\r\n\r\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\r\n\r\n\t\t}\r\n\r\n\t\tif ( source.morphTargetDictionary !== undefined ) {\r\n\r\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\r\n\r\n\t\t}\r\n\r\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\r\n\t\tthis.geometry = source.geometry;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tupdateMorphTargets() {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\r\n\t\tconst morphAttributes = geometry.morphAttributes;\r\n\t\tconst keys = Object.keys( morphAttributes );\r\n\r\n\t\tif ( keys.length > 0 ) {\r\n\r\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\r\n\r\n\t\t\tif ( morphAttribute !== undefined ) {\r\n\r\n\t\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\r\n\r\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\r\n\r\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetVertexPosition( index, target ) {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst position = geometry.attributes.position;\r\n\t\tconst morphPosition = geometry.morphAttributes.position;\r\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\r\n\r\n\t\ttarget.fromBufferAttribute( position, index );\r\n\r\n\t\tconst morphInfluences = this.morphTargetInfluences;\r\n\r\n\t\tif ( morphPosition && morphInfluences ) {\r\n\r\n\t\t\t_morphA.set( 0, 0, 0 );\r\n\r\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tconst influence = morphInfluences[ i ];\r\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\r\n\r\n\t\t\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\r\n\r\n\t\t\t\tif ( morphTargetsRelative ) {\r\n\r\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttarget.add( _morphA );\r\n\r\n\t\t}\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\traycast( raycaster, intersects ) {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst material = this.material;\r\n\t\tconst matrixWorld = this.matrixWorld;\r\n\r\n\t\tif ( material === undefined ) return;\r\n\r\n\t\t// test with bounding sphere in world space\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t_sphere$6.copy( geometry.boundingSphere );\r\n\t\t_sphere$6.applyMatrix4( matrixWorld );\r\n\r\n\t\t// check distance from ray origin to bounding sphere\r\n\r\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\r\n\r\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\r\n\r\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\r\n\r\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\r\n\r\n\t\t}\r\n\r\n\t\t// convert ray to local space of mesh\r\n\r\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\r\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\r\n\r\n\t\t// test with bounding box in local space\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\r\n\r\n\t\t}\r\n\r\n\t\t// test for intersections with geometry\r\n\r\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\r\n\r\n\t}\r\n\r\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\r\n\r\n\t\tlet intersection;\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst material = this.material;\r\n\r\n\t\tconst index = geometry.index;\r\n\t\tconst position = geometry.attributes.position;\r\n\t\tconst uv = geometry.attributes.uv;\r\n\t\tconst uv1 = geometry.attributes.uv1;\r\n\t\tconst normal = geometry.attributes.normal;\r\n\t\tconst groups = geometry.groups;\r\n\t\tconst drawRange = geometry.drawRange;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\t// indexed buffer geometry\r\n\r\n\t\t\tif ( Array.isArray( material ) ) {\r\n\r\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tconst group = groups[ i ];\r\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\r\n\r\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\r\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\r\n\r\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\tconst a = index.getX( j );\r\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\r\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\r\n\r\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\r\n\r\n\t\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\r\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\r\n\t\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\r\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tconst a = index.getX( i );\r\n\t\t\t\t\tconst b = index.getX( i + 1 );\r\n\t\t\t\t\tconst c = index.getX( i + 2 );\r\n\r\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\r\n\r\n\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\r\n\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( position !== undefined ) {\r\n\r\n\t\t\t// non-indexed buffer geometry\r\n\r\n\t\t\tif ( Array.isArray( material ) ) {\r\n\r\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tconst group = groups[ i ];\r\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\r\n\r\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\r\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\r\n\r\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\tconst a = j;\r\n\t\t\t\t\t\tconst b = j + 1;\r\n\t\t\t\t\t\tconst c = j + 2;\r\n\r\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\r\n\r\n\t\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\r\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\r\n\t\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\r\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tconst a = i;\r\n\t\t\t\t\tconst b = i + 1;\r\n\t\t\t\t\tconst c = i + 2;\r\n\r\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\r\n\r\n\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\r\n\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction checkIntersection$1( object, material, raycaster, ray, pA, pB, pC, point ) {\r\n\r\n\tlet intersect;\r\n\r\n\tif ( material.side === BackSide ) {\r\n\r\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\r\n\r\n\t} else {\r\n\r\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\r\n\r\n\t}\r\n\r\n\tif ( intersect === null ) return null;\r\n\r\n\t_intersectionPointWorld.copy( point );\r\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\r\n\r\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\r\n\r\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\r\n\r\n\treturn {\r\n\t\tdistance: distance,\r\n\t\tpoint: _intersectionPointWorld.clone(),\r\n\t\tobject: object\r\n\t};\r\n\r\n}\r\n\r\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\r\n\r\n\tobject.getVertexPosition( a, _vA$1 );\r\n\tobject.getVertexPosition( b, _vB$1 );\r\n\tobject.getVertexPosition( c, _vC$1 );\r\n\r\n\tconst intersection = checkIntersection$1( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\r\n\r\n\tif ( intersection ) {\r\n\r\n\t\tconst barycoord = new Vector3();\r\n\t\tTriangle.getBarycoord( _intersectionPoint, _vA$1, _vB$1, _vC$1, barycoord );\r\n\r\n\t\tif ( uv ) {\r\n\r\n\t\t\tintersection.uv = Triangle.getInterpolatedAttribute( uv, a, b, c, barycoord, new Vector2() );\r\n\r\n\t\t}\r\n\r\n\t\tif ( uv1 ) {\r\n\r\n\t\t\tintersection.uv1 = Triangle.getInterpolatedAttribute( uv1, a, b, c, barycoord, new Vector2() );\r\n\r\n\t\t}\r\n\r\n\t\tif ( normal ) {\r\n\r\n\t\t\tintersection.normal = Triangle.getInterpolatedAttribute( normal, a, b, c, barycoord, new Vector3() );\r\n\r\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\r\n\r\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst face = {\r\n\t\t\ta: a,\r\n\t\t\tb: b,\r\n\t\t\tc: c,\r\n\t\t\tnormal: new Vector3(),\r\n\t\t\tmaterialIndex: 0\r\n\t\t};\r\n\r\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\r\n\r\n\t\tintersection.face = face;\r\n\t\tintersection.barycoord = barycoord;\r\n\r\n\t}\r\n\r\n\treturn intersection;\r\n\r\n}\r\n\r\nclass BoxGeometry extends BufferGeometry {\r\n\r\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'BoxGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\tdepth: depth,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tdepthSegments: depthSegments\r\n\t\t};\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\t// segments\r\n\r\n\t\twidthSegments = Math.floor( widthSegments );\r\n\t\theightSegments = Math.floor( heightSegments );\r\n\t\tdepthSegments = Math.floor( depthSegments );\r\n\r\n\t\t// buffers\r\n\r\n\t\tconst indices = [];\r\n\t\tconst vertices = [];\r\n\t\tconst normals = [];\r\n\t\tconst uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tlet numberOfVertices = 0;\r\n\t\tlet groupStart = 0;\r\n\r\n\t\t// build each side of the box geometry\r\n\r\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\r\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\r\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\r\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\r\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\r\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\r\n\r\n\t\t\tconst segmentWidth = width / gridX;\r\n\t\t\tconst segmentHeight = height / gridY;\r\n\r\n\t\t\tconst widthHalf = width / 2;\r\n\t\t\tconst heightHalf = height / 2;\r\n\t\t\tconst depthHalf = depth / 2;\r\n\r\n\t\t\tconst gridX1 = gridX + 1;\r\n\t\t\tconst gridY1 = gridY + 1;\r\n\r\n\t\t\tlet vertexCounter = 0;\r\n\t\t\tlet groupCount = 0;\r\n\r\n\t\t\tconst vector = new Vector3();\r\n\r\n\t\t\t// generate vertices, normals and uvs\r\n\r\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\r\n\r\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\r\n\r\n\t\t\t\t\t// set values to correct vector component\r\n\r\n\t\t\t\t\tvector[ u ] = x * udir;\r\n\t\t\t\t\tvector[ v ] = y * vdir;\r\n\t\t\t\t\tvector[ w ] = depthHalf;\r\n\r\n\t\t\t\t\t// now apply vector to vertex buffer\r\n\r\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\r\n\r\n\t\t\t\t\t// set values to correct vector component\r\n\r\n\t\t\t\t\tvector[ u ] = 0;\r\n\t\t\t\t\tvector[ v ] = 0;\r\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\r\n\r\n\t\t\t\t\t// now apply vector to normal buffer\r\n\r\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\r\n\r\n\t\t\t\t\t// uvs\r\n\r\n\t\t\t\t\tuvs.push( ix / gridX );\r\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\r\n\r\n\t\t\t\t\t// counters\r\n\r\n\t\t\t\t\tvertexCounter += 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// indices\r\n\r\n\t\t\t// 1. you need three indices to draw a single face\r\n\t\t\t// 2. a single segment consists of two faces\r\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\r\n\r\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\r\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\t\t// faces\r\n\r\n\t\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t\t\t// increase counter\r\n\r\n\t\t\t\t\tgroupCount += 6;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// add a group to the geometry. this will ensure multi material support\r\n\r\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\r\n\r\n\t\t\t// calculate new start value for groups\r\n\r\n\t\t\tgroupStart += groupCount;\r\n\r\n\t\t\t// update total number of vertices\r\n\r\n\t\t\tnumberOfVertices += vertexCounter;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Uniform Utilities\r\n */\r\n\r\nfunction cloneUniforms( src ) {\r\n\r\n\tconst dst = {};\r\n\r\n\tfor ( const u in src ) {\r\n\r\n\t\tdst[ u ] = {};\r\n\r\n\t\tfor ( const p in src[ u ] ) {\r\n\r\n\t\t\tconst property = src[ u ][ p ];\r\n\r\n\t\t\tif ( property && ( property.isColor ||\r\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\r\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\r\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\r\n\r\n\t\t\t\tif ( property.isRenderTargetTexture ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\r\n\t\t\t\t\tdst[ u ][ p ] = null;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( Array.isArray( property ) ) {\r\n\r\n\t\t\t\tdst[ u ][ p ] = property.slice();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdst[ u ][ p ] = property;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn dst;\r\n\r\n}\r\n\r\nfunction mergeUniforms( uniforms ) {\r\n\r\n\tconst merged = {};\r\n\r\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\r\n\r\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\r\n\r\n\t\tfor ( const p in tmp ) {\r\n\r\n\t\t\tmerged[ p ] = tmp[ p ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn merged;\r\n\r\n}\r\n\r\nfunction cloneUniformsGroups( src ) {\r\n\r\n\tconst dst = [];\r\n\r\n\tfor ( let u = 0; u < src.length; u ++ ) {\r\n\r\n\t\tdst.push( src[ u ].clone() );\r\n\r\n\t}\r\n\r\n\treturn dst;\r\n\r\n}\r\n\r\nfunction getUnlitUniformColorSpace( renderer ) {\r\n\r\n\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\r\n\tif ( currentRenderTarget === null ) {\r\n\r\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\r\n\t\treturn renderer.outputColorSpace;\r\n\r\n\t}\r\n\r\n\t// https://github.com/mrdoob/three.js/issues/27868\r\n\tif ( currentRenderTarget.isXRRenderTarget === true ) {\r\n\r\n\t\treturn currentRenderTarget.texture.colorSpace;\r\n\r\n\t}\r\n\r\n\treturn ColorManagement.workingColorSpace;\r\n\r\n}\r\n\r\n// Legacy\r\n\r\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\r\n\r\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\r\n\r\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\r\n\r\nclass ShaderMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isShaderMaterial = true;\r\n\r\n\t\tthis.type = 'ShaderMaterial';\r\n\r\n\t\tthis.defines = {};\r\n\t\tthis.uniforms = {};\r\n\t\tthis.uniformsGroups = [];\r\n\r\n\t\tthis.vertexShader = default_vertex;\r\n\t\tthis.fragmentShader = default_fragment;\r\n\r\n\t\tthis.linewidth = 1;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\r\n\t\tthis.fog = false; // set to use scene fog\r\n\t\tthis.lights = false; // set to use scene lights\r\n\t\tthis.clipping = false; // set to use user-defined clipping planes\r\n\r\n\t\tthis.forceSinglePass = true;\r\n\r\n\t\tthis.extensions = {\r\n\t\t\tclipCullDistance: false, // set to use vertex shader clipping\r\n\t\t\tmultiDraw: false // set to use vertex shader multi_draw / enable gl_DrawID\r\n\t\t};\r\n\r\n\t\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\t\tthis.defaultAttributeValues = {\r\n\t\t\t'color': [ 1, 1, 1 ],\r\n\t\t\t'uv': [ 0, 0 ],\r\n\t\t\t'uv1': [ 0, 0 ]\r\n\t\t};\r\n\r\n\t\tthis.index0AttributeName = undefined;\r\n\t\tthis.uniformsNeedUpdate = false;\r\n\r\n\t\tthis.glslVersion = null;\r\n\r\n\t\tif ( parameters !== undefined ) {\r\n\r\n\t\t\tthis.setValues( parameters );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.fragmentShader = source.fragmentShader;\r\n\t\tthis.vertexShader = source.vertexShader;\r\n\r\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\r\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\r\n\r\n\t\tthis.defines = Object.assign( {}, source.defines );\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\t\tthis.fog = source.fog;\r\n\t\tthis.lights = source.lights;\r\n\t\tthis.clipping = source.clipping;\r\n\r\n\t\tthis.extensions = Object.assign( {}, source.extensions );\r\n\r\n\t\tthis.glslVersion = source.glslVersion;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst data = super.toJSON( meta );\r\n\r\n\t\tdata.glslVersion = this.glslVersion;\r\n\t\tdata.uniforms = {};\r\n\r\n\t\tfor ( const name in this.uniforms ) {\r\n\r\n\t\t\tconst uniform = this.uniforms[ name ];\r\n\t\t\tconst value = uniform.value;\r\n\r\n\t\t\tif ( value && value.isTexture ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 't',\r\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value && value.isColor ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'c',\r\n\t\t\t\t\tvalue: value.getHex()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value && value.isVector2 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'v2',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value && value.isVector3 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'v3',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value && value.isVector4 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'v4',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value && value.isMatrix3 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'm3',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else if ( value && value.isMatrix4 ) {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\ttype: 'm4',\r\n\t\t\t\t\tvalue: value.toArray()\r\n\t\t\t\t};\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdata.uniforms[ name ] = {\r\n\t\t\t\t\tvalue: value\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\r\n\r\n\t\tdata.vertexShader = this.vertexShader;\r\n\t\tdata.fragmentShader = this.fragmentShader;\r\n\r\n\t\tdata.lights = this.lights;\r\n\t\tdata.clipping = this.clipping;\r\n\r\n\t\tconst extensions = {};\r\n\r\n\t\tfor ( const key in this.extensions ) {\r\n\r\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Camera extends Object3D {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isCamera = true;\r\n\r\n\t\tthis.type = 'Camera';\r\n\r\n\t\tthis.matrixWorldInverse = new Matrix4();\r\n\r\n\t\tthis.projectionMatrix = new Matrix4();\r\n\t\tthis.projectionMatrixInverse = new Matrix4();\r\n\r\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n\r\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\r\n\r\n\t\tthis.coordinateSystem = source.coordinateSystem;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetWorldDirection( target ) {\r\n\r\n\t\treturn super.getWorldDirection( target ).negate();\r\n\r\n\t}\r\n\r\n\tupdateMatrixWorld( force ) {\r\n\r\n\t\tsuper.updateMatrixWorld( force );\r\n\r\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\r\n\r\n\t}\r\n\r\n\tupdateWorldMatrix( updateParents, updateChildren ) {\r\n\r\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\r\n\r\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _v3$1 = /*@__PURE__*/ new Vector3();\r\nconst _minTarget = /*@__PURE__*/ new Vector2();\r\nconst _maxTarget = /*@__PURE__*/ new Vector2();\r\n\r\n\r\nclass PerspectiveCamera extends Camera {\r\n\r\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isPerspectiveCamera = true;\r\n\r\n\t\tthis.type = 'PerspectiveCamera';\r\n\r\n\t\tthis.fov = fov;\r\n\t\tthis.zoom = 1;\r\n\r\n\t\tthis.near = near;\r\n\t\tthis.far = far;\r\n\t\tthis.focus = 10;\r\n\r\n\t\tthis.aspect = aspect;\r\n\t\tthis.view = null;\r\n\r\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\r\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.fov = source.fov;\r\n\t\tthis.zoom = source.zoom;\r\n\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\t\tthis.focus = source.focus;\r\n\r\n\t\tthis.aspect = source.aspect;\r\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\r\n\r\n\t\tthis.filmGauge = source.filmGauge;\r\n\t\tthis.filmOffset = source.filmOffset;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\r\n\t *\r\n\t * The default film gauge is 35, so that the focal length can be specified for\r\n\t * a 35mm (full frame) camera.\r\n\t *\r\n\t * @param {number} focalLength - Values for focal length and film gauge must have the same unit.\r\n\t */\r\n\tsetFocalLength( focalLength ) {\r\n\r\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\r\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\r\n\r\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates the focal length from the current .fov and .filmGauge.\r\n\t *\r\n\t * @returns {number}\r\n\t */\r\n\tgetFocalLength() {\r\n\r\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\r\n\r\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\r\n\r\n\t}\r\n\r\n\tgetEffectiveFOV() {\r\n\r\n\t\treturn RAD2DEG * 2 * Math.atan(\r\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\r\n\r\n\t}\r\n\r\n\tgetFilmWidth() {\r\n\r\n\t\t// film not completely covered in portrait format (aspect < 1)\r\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\r\n\r\n\t}\r\n\r\n\tgetFilmHeight() {\r\n\r\n\t\t// film not completely covered in landscape format (aspect > 1)\r\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the 2D bounds of the camera's viewable rectangle at a given distance along the viewing direction.\r\n\t * Sets minTarget and maxTarget to the coordinates of the lower-left and upper-right corners of the view rectangle.\r\n\t *\r\n\t * @param {number} distance\r\n\t * @param {Vector2} minTarget\r\n\t * @param {Vector2} maxTarget\r\n\t */\r\n\tgetViewBounds( distance, minTarget, maxTarget ) {\r\n\r\n\t\t_v3$1.set( - 1, - 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\r\n\r\n\t\tminTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\r\n\r\n\t\t_v3$1.set( 1, 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\r\n\r\n\t\tmaxTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Computes the width and height of the camera's viewable rectangle at a given distance along the viewing direction.\r\n\t *\r\n\t * @param {number} distance\r\n\t * @param {Vector2} target - Vector2 target used to store result where x is width and y is height.\r\n\t * @returns {Vector2}\r\n\t */\r\n\tgetViewSize( distance, target ) {\r\n\r\n\t\tthis.getViewBounds( distance, _minTarget, _maxTarget );\r\n\r\n\t\treturn target.subVectors( _maxTarget, _minTarget );\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\r\n\t * multi-monitor/multi-machine setups.\r\n\t *\r\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n\t * the monitors are in grid like this\r\n\t *\r\n\t *   +---+---+---+\r\n\t *   | A | B | C |\r\n\t *   +---+---+---+\r\n\t *   | D | E | F |\r\n\t *   +---+---+---+\r\n\t *\r\n\t * then for each monitor you would call it like this\r\n\t *\r\n\t *   const w = 1920;\r\n\t *   const h = 1080;\r\n\t *   const fullWidth = w * 3;\r\n\t *   const fullHeight = h * 2;\r\n\t *\r\n\t *   --A--\r\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n\t *   --B--\r\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n\t *   --C--\r\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n\t *   --D--\r\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n\t *   --E--\r\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n\t *   --F--\r\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n\t *\r\n\t *   Note there is no reason monitors have to be the same size or in a grid.\r\n\t *\r\n\t * @param {number} fullWidth\r\n\t * @param {number} fullHeight\r\n\t * @param {number} x\r\n\t * @param {number} y\r\n\t * @param {number} width\r\n\t * @param {number} height\r\n\t */\r\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\t\tthis.aspect = fullWidth / fullHeight;\r\n\r\n\t\tif ( this.view === null ) {\r\n\r\n\t\t\tthis.view = {\r\n\t\t\t\tenabled: true,\r\n\t\t\t\tfullWidth: 1,\r\n\t\t\t\tfullHeight: 1,\r\n\t\t\t\toffsetX: 0,\r\n\t\t\t\toffsetY: 0,\r\n\t\t\t\twidth: 1,\r\n\t\t\t\theight: 1\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tthis.view.enabled = true;\r\n\t\tthis.view.fullWidth = fullWidth;\r\n\t\tthis.view.fullHeight = fullHeight;\r\n\t\tthis.view.offsetX = x;\r\n\t\tthis.view.offsetY = y;\r\n\t\tthis.view.width = width;\r\n\t\tthis.view.height = height;\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\tclearViewOffset() {\r\n\r\n\t\tif ( this.view !== null ) {\r\n\r\n\t\t\tthis.view.enabled = false;\r\n\r\n\t\t}\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\tupdateProjectionMatrix() {\r\n\r\n\t\tconst near = this.near;\r\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\r\n\t\tlet height = 2 * top;\r\n\t\tlet width = this.aspect * height;\r\n\t\tlet left = - 0.5 * width;\r\n\t\tconst view = this.view;\r\n\r\n\t\tif ( this.view !== null && this.view.enabled ) {\r\n\r\n\t\t\tconst fullWidth = view.fullWidth,\r\n\t\t\t\tfullHeight = view.fullHeight;\r\n\r\n\t\t\tleft += view.offsetX * width / fullWidth;\r\n\t\t\ttop -= view.offsetY * height / fullHeight;\r\n\t\t\twidth *= view.width / fullWidth;\r\n\t\t\theight *= view.height / fullHeight;\r\n\r\n\t\t}\r\n\r\n\t\tconst skew = this.filmOffset;\r\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\r\n\r\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\r\n\r\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst data = super.toJSON( meta );\r\n\r\n\t\tdata.object.fov = this.fov;\r\n\t\tdata.object.zoom = this.zoom;\r\n\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\t\tdata.object.focus = this.focus;\r\n\r\n\t\tdata.object.aspect = this.aspect;\r\n\r\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\r\n\r\n\t\tdata.object.filmGauge = this.filmGauge;\r\n\t\tdata.object.filmOffset = this.filmOffset;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst fov = - 90; // negative fov is not an error\r\nconst aspect = 1;\r\n\r\nclass CubeCamera extends Object3D {\r\n\r\n\tconstructor( near, far, renderTarget ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'CubeCamera';\r\n\r\n\t\tthis.renderTarget = renderTarget;\r\n\t\tthis.coordinateSystem = null;\r\n\t\tthis.activeMipmapLevel = 0;\r\n\r\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPX.layers = this.layers;\r\n\t\tthis.add( cameraPX );\r\n\r\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNX.layers = this.layers;\r\n\t\tthis.add( cameraNX );\r\n\r\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPY.layers = this.layers;\r\n\t\tthis.add( cameraPY );\r\n\r\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNY.layers = this.layers;\r\n\t\tthis.add( cameraNY );\r\n\r\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPZ.layers = this.layers;\r\n\t\tthis.add( cameraPZ );\r\n\r\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNZ.layers = this.layers;\r\n\t\tthis.add( cameraNZ );\r\n\r\n\t}\r\n\r\n\tupdateCoordinateSystem() {\r\n\r\n\t\tconst coordinateSystem = this.coordinateSystem;\r\n\r\n\t\tconst cameras = this.children.concat();\r\n\r\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\r\n\r\n\t\tfor ( const camera of cameras ) this.remove( camera );\r\n\r\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\r\n\r\n\t\t\tcameraPX.up.set( 0, 1, 0 );\r\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\r\n\r\n\t\t\tcameraNX.up.set( 0, 1, 0 );\r\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\r\n\r\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\r\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\r\n\r\n\t\t\tcameraNY.up.set( 0, 0, 1 );\r\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\r\n\r\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\r\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\r\n\r\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\r\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\r\n\r\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\r\n\r\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\r\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\r\n\r\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\r\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\r\n\r\n\t\t\tcameraPY.up.set( 0, 0, 1 );\r\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\r\n\r\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\r\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\r\n\r\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\r\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\r\n\r\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\r\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( const camera of cameras ) {\r\n\r\n\t\t\tthis.add( camera );\r\n\r\n\t\t\tcamera.updateMatrixWorld();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdate( renderer, scene ) {\r\n\r\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\r\n\t\tconst { renderTarget, activeMipmapLevel } = this;\r\n\r\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\r\n\r\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\r\n\r\n\t\t\tthis.updateCoordinateSystem();\r\n\r\n\t\t}\r\n\r\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\r\n\r\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\r\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\r\n\r\n\t\tconst currentXrEnabled = renderer.xr.enabled;\r\n\r\n\t\trenderer.xr.enabled = false;\r\n\r\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\r\n\r\n\t\trenderTarget.texture.generateMipmaps = false;\r\n\r\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\r\n\t\trenderer.render( scene, cameraPX );\r\n\r\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\r\n\t\trenderer.render( scene, cameraNX );\r\n\r\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\r\n\t\trenderer.render( scene, cameraPY );\r\n\r\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\r\n\t\trenderer.render( scene, cameraNY );\r\n\r\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\r\n\t\trenderer.render( scene, cameraPZ );\r\n\r\n\t\t// mipmaps are generated during the last call of render()\r\n\t\t// at this point, all sides of the cube render target are defined\r\n\r\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\r\n\r\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\r\n\t\trenderer.render( scene, cameraNZ );\r\n\r\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\r\n\r\n\t\trenderer.xr.enabled = currentXrEnabled;\r\n\r\n\t\trenderTarget.texture.needsPMREMUpdate = true;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass CubeTexture extends Texture {\r\n\r\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\r\n\r\n\t\timages = images !== undefined ? images : [];\r\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\r\n\r\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\r\n\r\n\t\tthis.isCubeTexture = true;\r\n\r\n\t\tthis.flipY = false;\r\n\r\n\t}\r\n\r\n\tget images() {\r\n\r\n\t\treturn this.image;\r\n\r\n\t}\r\n\r\n\tset images( value ) {\r\n\r\n\t\tthis.image = value;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\r\n\r\n\tconstructor( size = 1, options = {} ) {\r\n\r\n\t\tsuper( size, size, options );\r\n\r\n\t\tthis.isWebGLCubeRenderTarget = true;\r\n\r\n\t\tconst image = { width: size, height: size, depth: 1 };\r\n\t\tconst images = [ image, image, image, image, image, image ];\r\n\r\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\r\n\r\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\r\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\r\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\r\n\r\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\r\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\r\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\r\n\r\n\t\tthis.texture.isRenderTargetTexture = true;\r\n\r\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\r\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\r\n\r\n\t}\r\n\r\n\tfromEquirectangularTexture( renderer, texture ) {\r\n\r\n\t\tthis.texture.type = texture.type;\r\n\t\tthis.texture.colorSpace = texture.colorSpace;\r\n\r\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\r\n\t\tthis.texture.minFilter = texture.minFilter;\r\n\t\tthis.texture.magFilter = texture.magFilter;\r\n\r\n\t\tconst shader = {\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\ttEquirect: { value: null },\r\n\t\t\t},\r\n\r\n\t\t\tvertexShader: /* glsl */`\r\n\r\n\t\t\t\tvarying vec3 vWorldDirection;\r\n\r\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\r\n\r\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvoid main() {\r\n\r\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\r\n\r\n\t\t\t\t\t#include <begin_vertex>\r\n\t\t\t\t\t#include <project_vertex>\r\n\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\r\n\t\t\tfragmentShader: /* glsl */`\r\n\r\n\t\t\t\tuniform sampler2D tEquirect;\r\n\r\n\t\t\t\tvarying vec3 vWorldDirection;\r\n\r\n\t\t\t\t#include <common>\r\n\r\n\t\t\t\tvoid main() {\r\n\r\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\r\n\r\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\r\n\r\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\r\n\r\n\t\t\t\t}\r\n\t\t\t`\r\n\t\t};\r\n\r\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\r\n\r\n\t\tconst material = new ShaderMaterial( {\r\n\r\n\t\t\tname: 'CubemapFromEquirect',\r\n\r\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\r\n\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\tfragmentShader: shader.fragmentShader,\r\n\t\t\tside: BackSide,\r\n\t\t\tblending: NoBlending\r\n\r\n\t\t} );\r\n\r\n\t\tmaterial.uniforms.tEquirect.value = texture;\r\n\r\n\t\tconst mesh = new Mesh( geometry, material );\r\n\r\n\t\tconst currentMinFilter = texture.minFilter;\r\n\r\n\t\t// Avoid blurred poles\r\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\r\n\r\n\t\tconst camera = new CubeCamera( 1, 10, this );\r\n\t\tcamera.update( renderer, mesh );\r\n\r\n\t\ttexture.minFilter = currentMinFilter;\r\n\r\n\t\tmesh.geometry.dispose();\r\n\t\tmesh.material.dispose();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclear( renderer, color, depth, stencil ) {\r\n\r\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\r\n\r\n\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\trenderer.setRenderTarget( this, i );\r\n\r\n\t\t\trenderer.clear( color, depth, stencil );\r\n\r\n\t\t}\r\n\r\n\t\trenderer.setRenderTarget( currentRenderTarget );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Group extends Object3D {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isGroup = true;\r\n\r\n\t\tthis.type = 'Group';\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _moveEvent = { type: 'move' };\r\n\r\nclass WebXRController {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis._targetRay = null;\r\n\t\tthis._grip = null;\r\n\t\tthis._hand = null;\r\n\r\n\t}\r\n\r\n\tgetHandSpace() {\r\n\r\n\t\tif ( this._hand === null ) {\r\n\r\n\t\t\tthis._hand = new Group();\r\n\t\t\tthis._hand.matrixAutoUpdate = false;\r\n\t\t\tthis._hand.visible = false;\r\n\r\n\t\t\tthis._hand.joints = {};\r\n\t\t\tthis._hand.inputState = { pinching: false };\r\n\r\n\t\t}\r\n\r\n\t\treturn this._hand;\r\n\r\n\t}\r\n\r\n\tgetTargetRaySpace() {\r\n\r\n\t\tif ( this._targetRay === null ) {\r\n\r\n\t\t\tthis._targetRay = new Group();\r\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\r\n\t\t\tthis._targetRay.visible = false;\r\n\t\t\tthis._targetRay.hasLinearVelocity = false;\r\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\r\n\t\t\tthis._targetRay.hasAngularVelocity = false;\r\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\r\n\r\n\t\t}\r\n\r\n\t\treturn this._targetRay;\r\n\r\n\t}\r\n\r\n\tgetGripSpace() {\r\n\r\n\t\tif ( this._grip === null ) {\r\n\r\n\t\t\tthis._grip = new Group();\r\n\t\t\tthis._grip.matrixAutoUpdate = false;\r\n\t\t\tthis._grip.visible = false;\r\n\t\t\tthis._grip.hasLinearVelocity = false;\r\n\t\t\tthis._grip.linearVelocity = new Vector3();\r\n\t\t\tthis._grip.hasAngularVelocity = false;\r\n\t\t\tthis._grip.angularVelocity = new Vector3();\r\n\r\n\t\t}\r\n\r\n\t\treturn this._grip;\r\n\r\n\t}\r\n\r\n\tdispatchEvent( event ) {\r\n\r\n\t\tif ( this._targetRay !== null ) {\r\n\r\n\t\t\tthis._targetRay.dispatchEvent( event );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this._grip !== null ) {\r\n\r\n\t\t\tthis._grip.dispatchEvent( event );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this._hand !== null ) {\r\n\r\n\t\t\tthis._hand.dispatchEvent( event );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tconnect( inputSource ) {\r\n\r\n\t\tif ( inputSource && inputSource.hand ) {\r\n\r\n\t\t\tconst hand = this._hand;\r\n\r\n\t\t\tif ( hand ) {\r\n\r\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\r\n\r\n\t\t\t\t\t// Initialize hand with joints when connected\r\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdisconnect( inputSource ) {\r\n\r\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\r\n\r\n\t\tif ( this._targetRay !== null ) {\r\n\r\n\t\t\tthis._targetRay.visible = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this._grip !== null ) {\r\n\r\n\t\t\tthis._grip.visible = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this._hand !== null ) {\r\n\r\n\t\t\tthis._hand.visible = false;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tupdate( inputSource, frame, referenceSpace ) {\r\n\r\n\t\tlet inputPose = null;\r\n\t\tlet gripPose = null;\r\n\t\tlet handPose = null;\r\n\r\n\t\tconst targetRay = this._targetRay;\r\n\t\tconst grip = this._grip;\r\n\t\tconst hand = this._hand;\r\n\r\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\r\n\r\n\t\t\tif ( hand && inputSource.hand ) {\r\n\r\n\t\t\t\thandPose = true;\r\n\r\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\r\n\r\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\r\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\r\n\r\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\r\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\r\n\r\n\t\t\t\t\tif ( jointPose !== null ) {\r\n\r\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\r\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\r\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\r\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tjoint.visible = jointPose !== null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Custom events\r\n\r\n\t\t\t\t// Check pinchz\r\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\r\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\r\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\r\n\r\n\t\t\t\tconst distanceToPinch = 0.02;\r\n\t\t\t\tconst threshold = 0.005;\r\n\r\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\r\n\r\n\t\t\t\t\thand.inputState.pinching = false;\r\n\t\t\t\t\tthis.dispatchEvent( {\r\n\t\t\t\t\t\ttype: 'pinchend',\r\n\t\t\t\t\t\thandedness: inputSource.handedness,\r\n\t\t\t\t\t\ttarget: this\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\r\n\r\n\t\t\t\t\thand.inputState.pinching = true;\r\n\t\t\t\t\tthis.dispatchEvent( {\r\n\t\t\t\t\t\ttype: 'pinchstart',\r\n\t\t\t\t\t\thandedness: inputSource.handedness,\r\n\t\t\t\t\t\ttarget: this\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\r\n\r\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\r\n\r\n\t\t\t\t\tif ( gripPose !== null ) {\r\n\r\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\r\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\r\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\r\n\r\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\r\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\r\n\r\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\r\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( targetRay !== null ) {\r\n\r\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\r\n\r\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\r\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\r\n\r\n\t\t\t\t\tinputPose = gripPose;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( inputPose !== null ) {\r\n\r\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\r\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\r\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\r\n\r\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\r\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\r\n\r\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\r\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t}\r\n\r\n\t\tif ( targetRay !== null ) {\r\n\r\n\t\t\ttargetRay.visible = ( inputPose !== null );\r\n\r\n\t\t}\r\n\r\n\t\tif ( grip !== null ) {\r\n\r\n\t\t\tgrip.visible = ( gripPose !== null );\r\n\r\n\t\t}\r\n\r\n\t\tif ( hand !== null ) {\r\n\r\n\t\t\thand.visible = ( handPose !== null );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// private method\r\n\r\n\t_getHandJoint( hand, inputjoint ) {\r\n\r\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\r\n\r\n\t\t\tconst joint = new Group();\r\n\t\t\tjoint.matrixAutoUpdate = false;\r\n\t\t\tjoint.visible = false;\r\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\r\n\r\n\t\t\thand.add( joint );\r\n\r\n\t\t}\r\n\r\n\t\treturn hand.joints[ inputjoint.jointName ];\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass FogExp2 {\r\n\r\n\tconstructor( color, density = 0.00025 ) {\r\n\r\n\t\tthis.isFogExp2 = true;\r\n\r\n\t\tthis.name = '';\r\n\r\n\t\tthis.color = new Color( color );\r\n\t\tthis.density = density;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new FogExp2( this.color, this.density );\r\n\r\n\t}\r\n\r\n\ttoJSON( /* meta */ ) {\r\n\r\n\t\treturn {\r\n\t\t\ttype: 'FogExp2',\r\n\t\t\tname: this.name,\r\n\t\t\tcolor: this.color.getHex(),\r\n\t\t\tdensity: this.density\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Fog {\r\n\r\n\tconstructor( color, near = 1, far = 1000 ) {\r\n\r\n\t\tthis.isFog = true;\r\n\r\n\t\tthis.name = '';\r\n\r\n\t\tthis.color = new Color( color );\r\n\r\n\t\tthis.near = near;\r\n\t\tthis.far = far;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new Fog( this.color, this.near, this.far );\r\n\r\n\t}\r\n\r\n\ttoJSON( /* meta */ ) {\r\n\r\n\t\treturn {\r\n\t\t\ttype: 'Fog',\r\n\t\t\tname: this.name,\r\n\t\t\tcolor: this.color.getHex(),\r\n\t\t\tnear: this.near,\r\n\t\t\tfar: this.far\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Scene extends Object3D {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isScene = true;\r\n\r\n\t\tthis.type = 'Scene';\r\n\r\n\t\tthis.background = null;\r\n\t\tthis.environment = null;\r\n\t\tthis.fog = null;\r\n\r\n\t\tthis.backgroundBlurriness = 0;\r\n\t\tthis.backgroundIntensity = 1;\r\n\t\tthis.backgroundRotation = new Euler();\r\n\r\n\t\tthis.environmentIntensity = 1;\r\n\t\tthis.environmentRotation = new Euler();\r\n\r\n\t\tthis.overrideMaterial = null;\r\n\r\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\r\n\r\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tif ( source.background !== null ) this.background = source.background.clone();\r\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\r\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n\r\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\r\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\r\n\t\tthis.backgroundRotation.copy( source.backgroundRotation );\r\n\r\n\t\tthis.environmentIntensity = source.environmentIntensity;\r\n\t\tthis.environmentRotation.copy( source.environmentRotation );\r\n\r\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst data = super.toJSON( meta );\r\n\r\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\r\n\r\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\r\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\r\n\t\tdata.object.backgroundRotation = this.backgroundRotation.toArray();\r\n\r\n\t\tif ( this.environmentIntensity !== 1 ) data.object.environmentIntensity = this.environmentIntensity;\r\n\t\tdata.object.environmentRotation = this.environmentRotation.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass InterleavedBuffer {\r\n\r\n\tconstructor( array, stride ) {\r\n\r\n\t\tthis.isInterleavedBuffer = true;\r\n\r\n\t\tthis.array = array;\r\n\t\tthis.stride = stride;\r\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\r\n\r\n\t\tthis.usage = StaticDrawUsage;\r\n\t\tthis.updateRanges = [];\r\n\r\n\t\tthis.version = 0;\r\n\r\n\t\tthis.uuid = generateUUID();\r\n\r\n\t}\r\n\r\n\tonUploadCallback() {}\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t}\r\n\r\n\tsetUsage( value ) {\r\n\r\n\t\tthis.usage = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddUpdateRange( start, count ) {\r\n\r\n\t\tthis.updateRanges.push( { start, count } );\r\n\r\n\t}\r\n\r\n\tclearUpdateRanges() {\r\n\r\n\t\tthis.updateRanges.length = 0;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.count = source.count;\r\n\t\tthis.stride = source.stride;\r\n\t\tthis.usage = source.usage;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopyAt( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.stride;\r\n\t\tindex2 *= attribute.stride;\r\n\r\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tset( value, offset = 0 ) {\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone( data ) {\r\n\r\n\t\tif ( data.arrayBuffers === undefined ) {\r\n\r\n\t\t\tdata.arrayBuffers = {};\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.array.buffer._uuid === undefined ) {\r\n\r\n\t\t\tthis.array.buffer._uuid = generateUUID();\r\n\r\n\t\t}\r\n\r\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\r\n\r\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\r\n\r\n\t\t}\r\n\r\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\r\n\r\n\t\tconst ib = new this.constructor( array, this.stride );\r\n\t\tib.setUsage( this.usage );\r\n\r\n\t\treturn ib;\r\n\r\n\t}\r\n\r\n\tonUpload( callback ) {\r\n\r\n\t\tthis.onUploadCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON( data ) {\r\n\r\n\t\tif ( data.arrayBuffers === undefined ) {\r\n\r\n\t\t\tdata.arrayBuffers = {};\r\n\r\n\t\t}\r\n\r\n\t\t// generate UUID for array buffer if necessary\r\n\r\n\t\tif ( this.array.buffer._uuid === undefined ) {\r\n\r\n\t\t\tthis.array.buffer._uuid = generateUUID();\r\n\r\n\t\t}\r\n\r\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\r\n\r\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\treturn {\r\n\t\t\tuuid: this.uuid,\r\n\t\t\tbuffer: this.array.buffer._uuid,\r\n\t\t\ttype: this.array.constructor.name,\r\n\t\t\tstride: this.stride\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _vector$7 = /*@__PURE__*/ new Vector3();\r\n\r\nclass InterleavedBufferAttribute {\r\n\r\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\r\n\r\n\t\tthis.isInterleavedBufferAttribute = true;\r\n\r\n\t\tthis.name = '';\r\n\r\n\t\tthis.data = interleavedBuffer;\r\n\t\tthis.itemSize = itemSize;\r\n\t\tthis.offset = offset;\r\n\r\n\t\tthis.normalized = normalized;\r\n\r\n\t}\r\n\r\n\tget count() {\r\n\r\n\t\treturn this.data.count;\r\n\r\n\t}\r\n\r\n\tget array() {\r\n\r\n\t\treturn this.data.array;\r\n\r\n\t}\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tthis.data.needsUpdate = value;\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( m ) {\r\n\r\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\r\n\r\n\t\t\t_vector$7.fromBufferAttribute( this, i );\r\n\r\n\t\t\t_vector$7.applyMatrix4( m );\r\n\r\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tapplyNormalMatrix( m ) {\r\n\r\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\r\n\r\n\t\t\t_vector$7.fromBufferAttribute( this, i );\r\n\r\n\t\t\t_vector$7.applyNormalMatrix( m );\r\n\r\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttransformDirection( m ) {\r\n\r\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\r\n\r\n\t\t\t_vector$7.fromBufferAttribute( this, i );\r\n\r\n\t\t\t_vector$7.transformDirection( m );\r\n\r\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetComponent( index, component ) {\r\n\r\n\t\tlet value = this.array[ index * this.data.stride + this.offset + component ];\r\n\r\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n\tsetComponent( index, component, value ) {\r\n\r\n\t\tif ( this.normalized ) value = normalize( value, this.array );\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + component ] = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetX( index, x ) {\r\n\r\n\t\tif ( this.normalized ) x = normalize( x, this.array );\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetY( index, y ) {\r\n\r\n\t\tif ( this.normalized ) y = normalize( y, this.array );\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetZ( index, z ) {\r\n\r\n\t\tif ( this.normalized ) z = normalize( z, this.array );\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetW( index, w ) {\r\n\r\n\t\tif ( this.normalized ) w = normalize( w, this.array );\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetX( index ) {\r\n\r\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\r\n\r\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\r\n\r\n\t\treturn x;\r\n\r\n\t}\r\n\r\n\tgetY( index ) {\r\n\r\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n\r\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\r\n\r\n\t\treturn y;\r\n\r\n\t}\r\n\r\n\tgetZ( index ) {\r\n\r\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n\r\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\r\n\r\n\t\treturn z;\r\n\r\n\t}\r\n\r\n\tgetW( index ) {\r\n\r\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n\r\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\r\n\r\n\t\treturn w;\r\n\r\n\t}\r\n\r\n\tsetXY( index, x, y ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tif ( this.normalized ) {\r\n\r\n\t\t\tx = normalize( x, this.array );\r\n\t\t\ty = normalize( y, this.array );\r\n\r\n\t\t}\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetXYZ( index, x, y, z ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tif ( this.normalized ) {\r\n\r\n\t\t\tx = normalize( x, this.array );\r\n\t\t\ty = normalize( y, this.array );\r\n\t\t\tz = normalize( z, this.array );\r\n\r\n\t\t}\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetXYZW( index, x, y, z, w ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tif ( this.normalized ) {\r\n\r\n\t\t\tx = normalize( x, this.array );\r\n\t\t\ty = normalize( y, this.array );\r\n\t\t\tz = normalize( z, this.array );\r\n\t\t\tw = normalize( w, this.array );\r\n\r\n\t\t}\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\t\tthis.data.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone( data ) {\r\n\r\n\t\tif ( data === undefined ) {\r\n\r\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\r\n\r\n\t\t\tconst array = [];\r\n\r\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\r\n\r\n\t\t\t\tconst index = i * this.data.stride + this.offset;\r\n\r\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\r\n\r\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( data.interleavedBuffers === undefined ) {\r\n\r\n\t\t\t\tdata.interleavedBuffers = {};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\r\n\r\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ttoJSON( data ) {\r\n\r\n\t\tif ( data === undefined ) {\r\n\r\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\r\n\r\n\t\t\tconst array = [];\r\n\r\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\r\n\r\n\t\t\t\tconst index = i * this.data.stride + this.offset;\r\n\r\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\r\n\r\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\r\n\r\n\t\t\treturn {\r\n\t\t\t\titemSize: this.itemSize,\r\n\t\t\t\ttype: this.array.constructor.name,\r\n\t\t\t\tarray: array,\r\n\t\t\t\tnormalized: this.normalized\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// save as true interleaved attribute\r\n\r\n\t\t\tif ( data.interleavedBuffers === undefined ) {\r\n\r\n\t\t\t\tdata.interleavedBuffers = {};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\r\n\r\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tisInterleavedBufferAttribute: true,\r\n\t\t\t\titemSize: this.itemSize,\r\n\t\t\t\tdata: this.data.uuid,\r\n\t\t\t\toffset: this.offset,\r\n\t\t\t\tnormalized: this.normalized\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass SpriteMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isSpriteMaterial = true;\r\n\r\n\t\tthis.type = 'SpriteMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff );\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.rotation = 0;\r\n\r\n\t\tthis.sizeAttenuation = true;\r\n\r\n\t\tthis.transparent = true;\r\n\r\n\t\tthis.fog = true;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.rotation = source.rotation;\r\n\r\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\r\n\t\tthis.fog = source.fog;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nlet _geometry;\r\n\r\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\r\nconst _worldScale = /*@__PURE__*/ new Vector3();\r\nconst _mvPosition = /*@__PURE__*/ new Vector3();\r\n\r\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\r\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\r\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\r\n\r\nconst _vA = /*@__PURE__*/ new Vector3();\r\nconst _vB = /*@__PURE__*/ new Vector3();\r\nconst _vC = /*@__PURE__*/ new Vector3();\r\n\r\nconst _uvA = /*@__PURE__*/ new Vector2();\r\nconst _uvB = /*@__PURE__*/ new Vector2();\r\nconst _uvC = /*@__PURE__*/ new Vector2();\r\n\r\nclass Sprite extends Object3D {\r\n\r\n\tconstructor( material = new SpriteMaterial() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isSprite = true;\r\n\r\n\t\tthis.type = 'Sprite';\r\n\r\n\t\tif ( _geometry === undefined ) {\r\n\r\n\t\t\t_geometry = new BufferGeometry();\r\n\r\n\t\t\tconst float32Array = new Float32Array( [\r\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\r\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\r\n\t\t\t\t0.5, 0.5, 0, 1, 1,\r\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\r\n\t\t\t] );\r\n\r\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\r\n\r\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\r\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\r\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\r\n\r\n\t\t}\r\n\r\n\t\tthis.geometry = _geometry;\r\n\t\tthis.material = material;\r\n\r\n\t\tthis.center = new Vector2( 0.5, 0.5 );\r\n\r\n\t}\r\n\r\n\traycast( raycaster, intersects ) {\r\n\r\n\t\tif ( raycaster.camera === null ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\r\n\r\n\t\t}\r\n\r\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\r\n\r\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\r\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\r\n\r\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\r\n\r\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\r\n\r\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\r\n\r\n\t\t}\r\n\r\n\t\tconst rotation = this.material.rotation;\r\n\t\tlet sin, cos;\r\n\r\n\t\tif ( rotation !== 0 ) {\r\n\r\n\t\t\tcos = Math.cos( rotation );\r\n\t\t\tsin = Math.sin( rotation );\r\n\r\n\t\t}\r\n\r\n\t\tconst center = this.center;\r\n\r\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\r\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\r\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\r\n\r\n\t\t_uvA.set( 0, 0 );\r\n\t\t_uvB.set( 1, 0 );\r\n\t\t_uvC.set( 1, 1 );\r\n\r\n\t\t// check first triangle\r\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\r\n\r\n\t\tif ( intersect === null ) {\r\n\r\n\t\t\t// check second triangle\r\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\r\n\t\t\t_uvB.set( 0, 1 );\r\n\r\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\r\n\t\t\tif ( intersect === null ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\r\n\r\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\r\n\t\tintersects.push( {\r\n\r\n\t\t\tdistance: distance,\r\n\t\t\tpoint: _intersectPoint.clone(),\r\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\r\n\t\t\tface: null,\r\n\t\t\tobject: this\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\r\n\r\n\t\tthis.material = source.material;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\r\n\r\n\t// compute position in camera space\r\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\r\n\r\n\t// to check if rotation is not zero\r\n\tif ( sin !== undefined ) {\r\n\r\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\r\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\r\n\r\n\t} else {\r\n\r\n\t\t_rotatedPosition.copy( _alignedPosition );\r\n\r\n\t}\r\n\r\n\r\n\tvertexPosition.copy( mvPosition );\r\n\tvertexPosition.x += _rotatedPosition.x;\r\n\tvertexPosition.y += _rotatedPosition.y;\r\n\r\n\t// transform to world space\r\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\r\n\r\n}\r\n\r\nconst _v1$2 = /*@__PURE__*/ new Vector3();\r\nconst _v2$1 = /*@__PURE__*/ new Vector3();\r\n\r\nclass LOD extends Object3D {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._currentLevel = 0;\r\n\r\n\t\tthis.type = 'LOD';\r\n\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tlevels: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\tisLOD: {\r\n\t\t\t\tvalue: true,\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis.autoUpdate = true;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source, false );\r\n\r\n\t\tconst levels = source.levels;\r\n\r\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst level = levels[ i ];\r\n\r\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\r\n\r\n\t\t}\r\n\r\n\t\tthis.autoUpdate = source.autoUpdate;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\r\n\r\n\t\tdistance = Math.abs( distance );\r\n\r\n\t\tconst levels = this.levels;\r\n\r\n\t\tlet l;\r\n\r\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\t\tif ( distance < levels[ l ].distance ) {\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\r\n\r\n\t\tthis.add( object );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tremoveLevel( distance ) {\r\n\r\n\t\tconst levels = this.levels;\r\n\r\n\t\tfor ( let i = 0; i < levels.length; i ++ ) {\r\n\r\n\t\t\tif ( levels[ i ].distance === distance ) {\r\n\r\n\t\t\t\tconst removedElements = levels.splice( i, 1 );\r\n\t\t\t\tthis.remove( removedElements[ 0 ].object );\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tgetCurrentLevel() {\r\n\r\n\t\treturn this._currentLevel;\r\n\r\n\t}\r\n\r\n\r\n\r\n\tgetObjectForDistance( distance ) {\r\n\r\n\t\tconst levels = this.levels;\r\n\r\n\t\tif ( levels.length > 0 ) {\r\n\r\n\t\t\tlet i, l;\r\n\r\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tlet levelDistance = levels[ i ].distance;\r\n\r\n\t\t\t\tif ( levels[ i ].object.visible ) {\r\n\r\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( distance < levelDistance ) {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn levels[ i - 1 ].object;\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\traycast( raycaster, intersects ) {\r\n\r\n\t\tconst levels = this.levels;\r\n\r\n\t\tif ( levels.length > 0 ) {\r\n\r\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\r\n\r\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdate( camera ) {\r\n\r\n\t\tconst levels = this.levels;\r\n\r\n\t\tif ( levels.length > 1 ) {\r\n\r\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\r\n\r\n\t\t\tlevels[ 0 ].object.visible = true;\r\n\r\n\t\t\tlet i, l;\r\n\r\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tlet levelDistance = levels[ i ].distance;\r\n\r\n\t\t\t\tif ( levels[ i ].object.visible ) {\r\n\r\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( distance >= levelDistance ) {\r\n\r\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._currentLevel = i - 1;\r\n\r\n\t\t\tfor ( ; i < l; i ++ ) {\r\n\r\n\t\t\t\tlevels[ i ].object.visible = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst data = super.toJSON( meta );\r\n\r\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\r\n\r\n\t\tdata.object.levels = [];\r\n\r\n\t\tconst levels = this.levels;\r\n\r\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst level = levels[ i ];\r\n\r\n\t\t\tdata.object.levels.push( {\r\n\t\t\t\tobject: level.object.uuid,\r\n\t\t\t\tdistance: level.distance,\r\n\t\t\t\thysteresis: level.hysteresis\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _basePosition = /*@__PURE__*/ new Vector3();\r\n\r\nconst _skinIndex = /*@__PURE__*/ new Vector4();\r\nconst _skinWeight = /*@__PURE__*/ new Vector4();\r\n\r\nconst _vector3 = /*@__PURE__*/ new Vector3();\r\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\r\nconst _vertex = /*@__PURE__*/ new Vector3();\r\n\r\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\r\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\r\nconst _ray$2 = /*@__PURE__*/ new Ray();\r\n\r\nclass SkinnedMesh extends Mesh {\r\n\r\n\tconstructor( geometry, material ) {\r\n\r\n\t\tsuper( geometry, material );\r\n\r\n\t\tthis.isSkinnedMesh = true;\r\n\r\n\t\tthis.type = 'SkinnedMesh';\r\n\r\n\t\tthis.bindMode = AttachedBindMode;\r\n\t\tthis.bindMatrix = new Matrix4();\r\n\t\tthis.bindMatrixInverse = new Matrix4();\r\n\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\r\n\t}\r\n\r\n\tcomputeBoundingBox() {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new Box3();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingBox.makeEmpty();\r\n\r\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\r\n\r\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\r\n\r\n\t\t\tthis.getVertexPosition( i, _vertex );\r\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcomputeBoundingSphere() {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\r\n\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\tthis.boundingSphere = new Sphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingSphere.makeEmpty();\r\n\r\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\r\n\r\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\r\n\r\n\t\t\tthis.getVertexPosition( i, _vertex );\r\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.bindMode = source.bindMode;\r\n\t\tthis.bindMatrix.copy( source.bindMatrix );\r\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\r\n\r\n\t\tthis.skeleton = source.skeleton;\r\n\r\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\r\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\traycast( raycaster, intersects ) {\r\n\r\n\t\tconst material = this.material;\r\n\t\tconst matrixWorld = this.matrixWorld;\r\n\r\n\t\tif ( material === undefined ) return;\r\n\r\n\t\t// test with bounding sphere in world space\r\n\r\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\r\n\r\n\t\t_sphere$5.copy( this.boundingSphere );\r\n\t\t_sphere$5.applyMatrix4( matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$5 ) === false ) return;\r\n\r\n\t\t// convert ray to local space of skinned mesh\r\n\r\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\r\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\r\n\r\n\t\t// test with bounding box in local space\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\r\n\r\n\t\t}\r\n\r\n\t\t// test for intersections with geometry\r\n\r\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\r\n\r\n\t}\r\n\r\n\tgetVertexPosition( index, target ) {\r\n\r\n\t\tsuper.getVertexPosition( index, target );\r\n\r\n\t\tthis.applyBoneTransform( index, target );\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tbind( skeleton, bindMatrix ) {\r\n\r\n\t\tthis.skeleton = skeleton;\r\n\r\n\t\tif ( bindMatrix === undefined ) {\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.skeleton.calculateInverses();\r\n\r\n\t\t\tbindMatrix = this.matrixWorld;\r\n\r\n\t\t}\r\n\r\n\t\tthis.bindMatrix.copy( bindMatrix );\r\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\r\n\r\n\t}\r\n\r\n\tpose() {\r\n\r\n\t\tthis.skeleton.pose();\r\n\r\n\t}\r\n\r\n\tnormalizeSkinWeights() {\r\n\r\n\t\tconst vector = new Vector4();\r\n\r\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\r\n\r\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\r\n\r\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\r\n\r\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\r\n\r\n\t\t\tif ( scale !== Infinity ) {\r\n\r\n\t\t\t\tvector.multiplyScalar( scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\r\n\r\n\t\t\t}\r\n\r\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdateMatrixWorld( force ) {\r\n\r\n\t\tsuper.updateMatrixWorld( force );\r\n\r\n\t\tif ( this.bindMode === AttachedBindMode ) {\r\n\r\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\r\n\r\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\r\n\r\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tapplyBoneTransform( index, vector ) {\r\n\r\n\t\tconst skeleton = this.skeleton;\r\n\t\tconst geometry = this.geometry;\r\n\r\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\r\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\r\n\r\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\r\n\r\n\t\tvector.set( 0, 0, 0 );\r\n\r\n\t\tfor ( let i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\tconst weight = _skinWeight.getComponent( i );\r\n\r\n\t\t\tif ( weight !== 0 ) {\r\n\r\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\r\n\r\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\r\n\r\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Bone extends Object3D {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isBone = true;\r\n\r\n\t\tthis.type = 'Bone';\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass DataTexture extends Texture {\r\n\r\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\r\n\r\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\r\n\r\n\t\tthis.isDataTexture = true;\r\n\r\n\t\tthis.image = { data: data, width: width, height: height };\r\n\r\n\t\tthis.generateMipmaps = false;\r\n\t\tthis.flipY = false;\r\n\t\tthis.unpackAlignment = 1;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\r\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\r\n\r\nclass Skeleton {\r\n\r\n\tconstructor( bones = [], boneInverses = [] ) {\r\n\r\n\t\tthis.uuid = generateUUID();\r\n\r\n\t\tthis.bones = bones.slice( 0 );\r\n\t\tthis.boneInverses = boneInverses;\r\n\t\tthis.boneMatrices = null;\r\n\r\n\t\tthis.boneTexture = null;\r\n\r\n\t\tthis.init();\r\n\r\n\t}\r\n\r\n\tinit() {\r\n\r\n\t\tconst bones = this.bones;\r\n\t\tconst boneInverses = this.boneInverses;\r\n\r\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\r\n\r\n\t\t// calculate inverse bone matrices if necessary\r\n\r\n\t\tif ( boneInverses.length === 0 ) {\r\n\r\n\t\t\tthis.calculateInverses();\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// handle special case\r\n\r\n\t\t\tif ( bones.length !== boneInverses.length ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\r\n\r\n\t\t\t\tthis.boneInverses = [];\r\n\r\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcalculateInverses() {\r\n\r\n\t\tthis.boneInverses.length = 0;\r\n\r\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\tconst inverse = new Matrix4();\r\n\r\n\t\t\tif ( this.bones[ i ] ) {\r\n\r\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.boneInverses.push( inverse );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpose() {\r\n\r\n\t\t// recover the bind-time world matrices\r\n\r\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\tconst bone = this.bones[ i ];\r\n\r\n\t\t\tif ( bone ) {\r\n\r\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// compute the local matrices, positions, rotations and scales\r\n\r\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\tconst bone = this.bones[ i ];\r\n\r\n\t\t\tif ( bone ) {\r\n\r\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\r\n\r\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\r\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tconst bones = this.bones;\r\n\t\tconst boneInverses = this.boneInverses;\r\n\t\tconst boneMatrices = this.boneMatrices;\r\n\t\tconst boneTexture = this.boneTexture;\r\n\r\n\t\t// flatten bone matrices to array\r\n\r\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\r\n\r\n\t\t\t// compute the offset between the current and the original transform\r\n\r\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\r\n\r\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\r\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( boneTexture !== null ) {\r\n\r\n\t\t\tboneTexture.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new Skeleton( this.bones, this.boneInverses );\r\n\r\n\t}\r\n\r\n\tcomputeBoneTexture() {\r\n\r\n\t\t// layout (1 matrix = 4 pixels)\r\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\r\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n\t\tsize = Math.ceil( size / 4 ) * 4;\r\n\t\tsize = Math.max( size, 4 );\r\n\r\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\r\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\r\n\r\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\r\n\t\tboneTexture.needsUpdate = true;\r\n\r\n\t\tthis.boneMatrices = boneMatrices;\r\n\t\tthis.boneTexture = boneTexture;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetBoneByName( name ) {\r\n\r\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\r\n\r\n\t\t\tconst bone = this.bones[ i ];\r\n\r\n\t\t\tif ( bone.name === name ) {\r\n\r\n\t\t\t\treturn bone;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t}\r\n\r\n\tdispose( ) {\r\n\r\n\t\tif ( this.boneTexture !== null ) {\r\n\r\n\t\t\tthis.boneTexture.dispose();\r\n\r\n\t\t\tthis.boneTexture = null;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfromJSON( json, bones ) {\r\n\r\n\t\tthis.uuid = json.uuid;\r\n\r\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst uuid = json.bones[ i ];\r\n\t\t\tlet bone = bones[ uuid ];\r\n\r\n\t\t\tif ( bone === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\r\n\t\t\t\tbone = new Bone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.bones.push( bone );\r\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\tthis.init();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.6,\r\n\t\t\t\ttype: 'Skeleton',\r\n\t\t\t\tgenerator: 'Skeleton.toJSON'\r\n\t\t\t},\r\n\t\t\tbones: [],\r\n\t\t\tboneInverses: []\r\n\t\t};\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\r\n\t\tconst bones = this.bones;\r\n\t\tconst boneInverses = this.boneInverses;\r\n\r\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst bone = bones[ i ];\r\n\t\t\tdata.bones.push( bone.uuid );\r\n\r\n\t\t\tconst boneInverse = boneInverses[ i ];\r\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass InstancedBufferAttribute extends BufferAttribute {\r\n\r\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\r\n\r\n\t\tsuper( array, itemSize, normalized );\r\n\r\n\t\tthis.isInstancedBufferAttribute = true;\r\n\r\n\t\tthis.meshPerAttribute = meshPerAttribute;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\r\n\r\n\t\tdata.isInstancedBufferAttribute = true;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\r\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\r\n\r\nconst _instanceIntersects = [];\r\n\r\nconst _box3 = /*@__PURE__*/ new Box3();\r\nconst _identity = /*@__PURE__*/ new Matrix4();\r\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\r\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\r\n\r\nclass InstancedMesh extends Mesh {\r\n\r\n\tconstructor( geometry, material, count ) {\r\n\r\n\t\tsuper( geometry, material );\r\n\r\n\t\tthis.isInstancedMesh = true;\r\n\r\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\r\n\t\tthis.instanceColor = null;\r\n\t\tthis.morphTexture = null;\r\n\r\n\t\tthis.count = count;\r\n\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\r\n\t\tfor ( let i = 0; i < count; i ++ ) {\r\n\r\n\t\t\tthis.setMatrixAt( i, _identity );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcomputeBoundingBox() {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst count = this.count;\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new Box3();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingBox === null ) {\r\n\r\n\t\t\tgeometry.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingBox.makeEmpty();\r\n\r\n\t\tfor ( let i = 0; i < count; i ++ ) {\r\n\r\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\r\n\r\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\r\n\r\n\t\t\tthis.boundingBox.union( _box3 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcomputeBoundingSphere() {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst count = this.count;\r\n\r\n\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\tthis.boundingSphere = new Sphere();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingSphere === null ) {\r\n\r\n\t\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingSphere.makeEmpty();\r\n\r\n\t\tfor ( let i = 0; i < count; i ++ ) {\r\n\r\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\r\n\r\n\t\t\t_sphere$4.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\r\n\r\n\t\t\tthis.boundingSphere.union( _sphere$4 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\r\n\r\n\t\tif ( source.morphTexture !== null ) this.morphTexture = source.morphTexture.clone();\r\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\r\n\r\n\t\tthis.count = source.count;\r\n\r\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\r\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetColorAt( index, color ) {\r\n\r\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\r\n\r\n\t}\r\n\r\n\tgetMatrixAt( index, matrix ) {\r\n\r\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\r\n\r\n\t}\r\n\r\n\tgetMorphAt( index, object ) {\r\n\r\n\t\tconst objectInfluences = object.morphTargetInfluences;\r\n\r\n\t\tconst array = this.morphTexture.source.data.data;\r\n\r\n\t\tconst len = objectInfluences.length + 1; // All influences + the baseInfluenceSum\r\n\r\n\t\tconst dataIndex = index * len + 1; // Skip the baseInfluenceSum at the beginning\r\n\r\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\r\n\r\n\t\t\tobjectInfluences[ i ] = array[ dataIndex + i ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\traycast( raycaster, intersects ) {\r\n\r\n\t\tconst matrixWorld = this.matrixWorld;\r\n\t\tconst raycastTimes = this.count;\r\n\r\n\t\t_mesh$1.geometry = this.geometry;\r\n\t\t_mesh$1.material = this.material;\r\n\r\n\t\tif ( _mesh$1.material === undefined ) return;\r\n\r\n\t\t// test with bounding sphere first\r\n\r\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\r\n\r\n\t\t_sphere$4.copy( this.boundingSphere );\r\n\t\t_sphere$4.applyMatrix4( matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\r\n\r\n\t\t// now test each instance\r\n\r\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\r\n\r\n\t\t\t// calculate the world matrix for each instance\r\n\r\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\r\n\r\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\r\n\r\n\t\t\t// the mesh represents this single instance\r\n\r\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\r\n\r\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\r\n\r\n\t\t\t// process the result of raycast\r\n\r\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\r\n\t\t\t\tintersect.instanceId = instanceId;\r\n\t\t\t\tintersect.object = this;\r\n\t\t\t\tintersects.push( intersect );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_instanceIntersects.length = 0;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetColorAt( index, color ) {\r\n\r\n\t\tif ( this.instanceColor === null ) {\r\n\r\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ).fill( 1 ), 3 );\r\n\r\n\t\t}\r\n\r\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\r\n\r\n\t}\r\n\r\n\tsetMatrixAt( index, matrix ) {\r\n\r\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\r\n\r\n\t}\r\n\r\n\tsetMorphAt( index, object ) {\r\n\r\n\t\tconst objectInfluences = object.morphTargetInfluences;\r\n\r\n\t\tconst len = objectInfluences.length + 1; // morphBaseInfluence + all influences\r\n\r\n\t\tif ( this.morphTexture === null ) {\r\n\r\n\t\t\tthis.morphTexture = new DataTexture( new Float32Array( len * this.count ), len, this.count, RedFormat, FloatType );\r\n\r\n\t\t}\r\n\r\n\t\tconst array = this.morphTexture.source.data.data;\r\n\r\n\t\tlet morphInfluencesSum = 0;\r\n\r\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\r\n\r\n\t\t\tmorphInfluencesSum += objectInfluences[ i ];\r\n\r\n\t\t}\r\n\r\n\t\tconst morphBaseInfluence = this.geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\r\n\r\n\t\tconst dataIndex = len * index;\r\n\r\n\t\tarray[ dataIndex ] = morphBaseInfluence;\r\n\r\n\t\tarray.set( objectInfluences, dataIndex + 1 );\r\n\r\n\t}\r\n\r\n\tupdateMorphTargets() {\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t\tif ( this.morphTexture !== null ) {\r\n\r\n\t\t\tthis.morphTexture.dispose();\r\n\t\t\tthis.morphTexture = null;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _vector1 = /*@__PURE__*/ new Vector3();\r\nconst _vector2 = /*@__PURE__*/ new Vector3();\r\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\r\n\r\nclass Plane {\r\n\r\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\r\n\r\n\t\tthis.isPlane = true;\r\n\r\n\t\t// normal is assumed to be normalized\r\n\r\n\t\tthis.normal = normal;\r\n\t\tthis.constant = constant;\r\n\r\n\t}\r\n\r\n\tset( normal, constant ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = constant;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetComponents( x, y, z, w ) {\r\n\r\n\t\tthis.normal.set( x, y, z );\r\n\t\tthis.constant = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = - point.dot( this.normal );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromCoplanarPoints( a, b, c ) {\r\n\r\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\r\n\r\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( plane ) {\r\n\r\n\t\tthis.normal.copy( plane.normal );\r\n\t\tthis.constant = plane.constant;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tnormalize() {\r\n\r\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\r\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\r\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\tthis.constant *= inverseNormalLength;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tnegate() {\r\n\r\n\t\tthis.constant *= - 1;\r\n\t\tthis.normal.negate();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdistanceToPoint( point ) {\r\n\r\n\t\treturn this.normal.dot( point ) + this.constant;\r\n\r\n\t}\r\n\r\n\tdistanceToSphere( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\r\n\t}\r\n\r\n\tprojectPoint( point, target ) {\r\n\r\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\r\n\r\n\t}\r\n\r\n\tintersectLine( line, target ) {\r\n\r\n\t\tconst direction = line.delta( _vector1 );\r\n\r\n\t\tconst denominator = this.normal.dot( direction );\r\n\r\n\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t// line is coplanar, return origin\r\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\r\n\t\t\t\treturn target.copy( line.start );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\r\n\t\tif ( t < 0 || t > 1 ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\r\n\r\n\t}\r\n\r\n\tintersectsLine( line ) {\r\n\r\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\r\n\t\tconst startSign = this.distanceToPoint( line.start );\r\n\t\tconst endSign = this.distanceToPoint( line.end );\r\n\r\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\r\n\t}\r\n\r\n\tintersectsBox( box ) {\r\n\r\n\t\treturn box.intersectsPlane( this );\r\n\r\n\t}\r\n\r\n\tintersectsSphere( sphere ) {\r\n\r\n\t\treturn sphere.intersectsPlane( this );\r\n\r\n\t}\r\n\r\n\tcoplanarPoint( target ) {\r\n\r\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\r\n\r\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\r\n\r\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\r\n\r\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\tthis.constant = - referencePoint.dot( normal );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttranslate( offset ) {\r\n\r\n\t\tthis.constant -= offset.dot( this.normal );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( plane ) {\r\n\r\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\r\nconst _vector$6 = /*@__PURE__*/ new Vector3();\r\n\r\nclass Frustum {\r\n\r\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\r\n\r\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\r\n\r\n\t}\r\n\r\n\tset( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\t\tconst planes = this.planes;\r\n\r\n\t\tplanes[ 0 ].copy( p0 );\r\n\t\tplanes[ 1 ].copy( p1 );\r\n\t\tplanes[ 2 ].copy( p2 );\r\n\t\tplanes[ 3 ].copy( p3 );\r\n\t\tplanes[ 4 ].copy( p4 );\r\n\t\tplanes[ 5 ].copy( p5 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( frustum ) {\r\n\r\n\t\tconst planes = this.planes;\r\n\r\n\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\r\n\r\n\t\tconst planes = this.planes;\r\n\t\tconst me = m.elements;\r\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\r\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\r\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\r\n\r\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\r\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\r\n\r\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tintersectsObject( object ) {\r\n\r\n\t\tif ( object.boundingSphere !== undefined ) {\r\n\r\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\r\n\r\n\t\t\t_sphere$3.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst geometry = object.geometry;\r\n\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.intersectsSphere( _sphere$3 );\r\n\r\n\t}\r\n\r\n\tintersectsSprite( sprite ) {\r\n\r\n\t\t_sphere$3.center.set( 0, 0, 0 );\r\n\t\t_sphere$3.radius = 0.7071067811865476;\r\n\t\t_sphere$3.applyMatrix4( sprite.matrixWorld );\r\n\r\n\t\treturn this.intersectsSphere( _sphere$3 );\r\n\r\n\t}\r\n\r\n\tintersectsSphere( sphere ) {\r\n\r\n\t\tconst planes = this.planes;\r\n\t\tconst center = sphere.center;\r\n\t\tconst negRadius = - sphere.radius;\r\n\r\n\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\r\n\r\n\t\t\tif ( distance < negRadius ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tintersectsBox( box ) {\r\n\r\n\t\tconst planes = this.planes;\r\n\r\n\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tconst plane = planes[ i ];\r\n\r\n\t\t\t// corner at max distance\r\n\r\n\t\t\t_vector$6.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t_vector$6.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t_vector$6.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\r\n\t\t\tif ( plane.distanceToPoint( _vector$6 ) < 0 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tcontainsPoint( point ) {\r\n\r\n\t\tconst planes = this.planes;\r\n\r\n\t\tfor ( let i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction ascIdSort( a, b ) {\r\n\r\n\treturn a - b;\r\n\r\n}\r\n\r\nfunction sortOpaque( a, b ) {\r\n\r\n\treturn a.z - b.z;\r\n\r\n}\r\n\r\nfunction sortTransparent( a, b ) {\r\n\r\n\treturn b.z - a.z;\r\n\r\n}\r\n\r\nclass MultiDrawRenderList {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.index = 0;\r\n\t\tthis.pool = [];\r\n\t\tthis.list = [];\r\n\r\n\t}\r\n\r\n\tpush( start, count, z, index ) {\r\n\r\n\t\tconst pool = this.pool;\r\n\t\tconst list = this.list;\r\n\t\tif ( this.index >= pool.length ) {\r\n\r\n\t\t\tpool.push( {\r\n\r\n\t\t\t\tstart: - 1,\r\n\t\t\t\tcount: - 1,\r\n\t\t\t\tz: - 1,\r\n\t\t\t\tindex: - 1,\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tconst item = pool[ this.index ];\r\n\t\tlist.push( item );\r\n\t\tthis.index ++;\r\n\r\n\t\titem.start = start;\r\n\t\titem.count = count;\r\n\t\titem.z = z;\r\n\t\titem.index = index;\r\n\r\n\t}\r\n\r\n\treset() {\r\n\r\n\t\tthis.list.length = 0;\r\n\t\tthis.index = 0;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\r\nconst _whiteColor = /*@__PURE__*/ new Color( 1, 1, 1 );\r\nconst _frustum = /*@__PURE__*/ new Frustum();\r\nconst _box$1 = /*@__PURE__*/ new Box3();\r\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\r\nconst _vector$5 = /*@__PURE__*/ new Vector3();\r\nconst _forward = /*@__PURE__*/ new Vector3();\r\nconst _temp = /*@__PURE__*/ new Vector3();\r\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\r\nconst _mesh = /*@__PURE__*/ new Mesh();\r\nconst _batchIntersects = [];\r\n\r\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\r\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\r\n\r\n\tconst itemSize = target.itemSize;\r\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\r\n\r\n\t\t// use the component getters and setters if the array data cannot\r\n\t\t// be copied directly\r\n\t\tconst vertexCount = src.count;\r\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\r\n\r\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\r\n\r\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\t// faster copy approach using typed array set function\r\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\r\n\r\n\t}\r\n\r\n\ttarget.needsUpdate = true;\r\n\r\n}\r\n\r\n// safely copies array contents to a potentially smaller array\r\nfunction copyArrayContents( src, target ) {\r\n\r\n\tif ( src.constructor !== target.constructor ) {\r\n\r\n\t\t// if arrays are of a different type (eg due to index size increasing) then data must be per-element copied\r\n\t\tconst len = Math.min( src.length, target.length );\r\n\t\tfor ( let i = 0; i < len; i ++ ) {\r\n\r\n\t\t\ttarget[ i ] = src[ i ];\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\t// if the arrays use the same data layout we can use a fast block copy\r\n\t\tconst len = Math.min( src.length, target.length );\r\n\t\ttarget.set( new src.constructor( src.buffer, 0, len ) );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass BatchedMesh extends Mesh {\r\n\r\n\tget maxInstanceCount() {\r\n\r\n\t\treturn this._maxInstanceCount;\r\n\r\n\t}\r\n\r\n\tget instanceCount() {\r\n\r\n\t\treturn this._instanceInfo.length - this._availableInstanceIds.length;\r\n\r\n\t}\r\n\r\n\tget unusedVertexCount() {\r\n\r\n\t\treturn this._maxVertexCount - this._nextVertexStart;\r\n\r\n\t}\r\n\r\n\tget unusedIndexCount() {\r\n\r\n\t\treturn this._maxIndexCount - this._nextIndexStart;\r\n\r\n\t}\r\n\r\n\tconstructor( maxInstanceCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\r\n\r\n\t\tsuper( new BufferGeometry(), material );\r\n\r\n\t\tthis.isBatchedMesh = true;\r\n\t\tthis.perObjectFrustumCulled = true;\r\n\t\tthis.sortObjects = true;\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\tthis.customSort = null;\r\n\r\n\t\t// stores visible, active, and geometry id per instance and reserved buffer ranges for geometries\r\n\t\tthis._instanceInfo = [];\r\n\t\tthis._geometryInfo = [];\r\n\r\n\t\t// instance, geometry ids that have been set as inactive, and are available to be overwritten\r\n\t\tthis._availableInstanceIds = [];\r\n\t\tthis._availableGeometryIds = [];\r\n\r\n\t\t// used to track where the next point is that geometry should be inserted\r\n\t\tthis._nextIndexStart = 0;\r\n\t\tthis._nextVertexStart = 0;\r\n\t\tthis._geometryCount = 0;\r\n\r\n\t\t// flags\r\n\t\tthis._visibilityChanged = true;\r\n\t\tthis._geometryInitialized = false;\r\n\r\n\t\t// cached user options\r\n\t\tthis._maxInstanceCount = maxInstanceCount;\r\n\t\tthis._maxVertexCount = maxVertexCount;\r\n\t\tthis._maxIndexCount = maxIndexCount;\r\n\r\n\t\t// buffers for multi draw\r\n\t\tthis._multiDrawCounts = new Int32Array( maxInstanceCount );\r\n\t\tthis._multiDrawStarts = new Int32Array( maxInstanceCount );\r\n\t\tthis._multiDrawCount = 0;\r\n\t\tthis._multiDrawInstances = null;\r\n\r\n\t\t// Local matrix per geometry by using data texture\r\n\t\tthis._matricesTexture = null;\r\n\t\tthis._indirectTexture = null;\r\n\t\tthis._colorsTexture = null;\r\n\r\n\t\tthis._initMatricesTexture();\r\n\t\tthis._initIndirectTexture();\r\n\r\n\t}\r\n\r\n\t_initMatricesTexture() {\r\n\r\n\t\t// layout (1 matrix = 4 pixels)\r\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\r\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\r\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\r\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\r\n\r\n\t\tlet size = Math.sqrt( this._maxInstanceCount * 4 ); // 4 pixels needed for 1 matrix\r\n\t\tsize = Math.ceil( size / 4 ) * 4;\r\n\t\tsize = Math.max( size, 4 );\r\n\r\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\r\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\r\n\r\n\t\tthis._matricesTexture = matricesTexture;\r\n\r\n\t}\r\n\r\n\t_initIndirectTexture() {\r\n\r\n\t\tlet size = Math.sqrt( this._maxInstanceCount );\r\n\t\tsize = Math.ceil( size );\r\n\r\n\t\tconst indirectArray = new Uint32Array( size * size );\r\n\t\tconst indirectTexture = new DataTexture( indirectArray, size, size, RedIntegerFormat, UnsignedIntType );\r\n\r\n\t\tthis._indirectTexture = indirectTexture;\r\n\r\n\t}\r\n\r\n\t_initColorsTexture() {\r\n\r\n\t\tlet size = Math.sqrt( this._maxInstanceCount );\r\n\t\tsize = Math.ceil( size );\r\n\r\n\t\t// 4 floats per RGBA pixel initialized to white\r\n\t\tconst colorsArray = new Float32Array( size * size * 4 ).fill( 1 );\r\n\t\tconst colorsTexture = new DataTexture( colorsArray, size, size, RGBAFormat, FloatType );\r\n\t\tcolorsTexture.colorSpace = ColorManagement.workingColorSpace;\r\n\r\n\t\tthis._colorsTexture = colorsTexture;\r\n\r\n\t}\r\n\r\n\t_initializeGeometry( reference ) {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst maxVertexCount = this._maxVertexCount;\r\n\t\tconst maxIndexCount = this._maxIndexCount;\r\n\t\tif ( this._geometryInitialized === false ) {\r\n\r\n\t\t\tfor ( const attributeName in reference.attributes ) {\r\n\r\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\r\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\r\n\r\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\r\n\t\t\t\tconst dstAttribute = new BufferAttribute( dstArray, itemSize, normalized );\r\n\r\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( reference.getIndex() !== null ) {\r\n\r\n\t\t\t\t// Reserve last u16 index for primitive restart.\r\n\t\t\t\tconst indexArray = maxVertexCount > 65535\r\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\r\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\r\n\r\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._geometryInitialized = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Make sure the geometry is compatible with the existing combined geometry attributes\r\n\t_validateGeometry( geometry ) {\r\n\r\n\t\t// check to ensure the geometries are using consistent attributes and indices\r\n\t\tconst batchGeometry = this.geometry;\r\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.BatchedMesh: All geometries must consistently have \"index\".' );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\r\n\r\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\r\n\r\n\t\t\t\tthrow new Error( `THREE.BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\r\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\r\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\r\n\r\n\t\t\t\tthrow new Error( 'THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvalidateInstanceId( instanceId ) {\r\n\r\n\t\tconst instanceInfo = this._instanceInfo;\r\n\t\tif ( instanceId < 0 || instanceId >= instanceInfo.length || instanceInfo[ instanceId ].active === false ) {\r\n\r\n\t\t\tthrow new Error( `THREE.BatchedMesh: Invalid instanceId ${instanceId}. Instance is either out of range or has been deleted.` );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvalidateGeometryId( geometryId ) {\r\n\r\n\t\tconst geometryInfoList = this._geometryInfo;\r\n\t\tif ( geometryId < 0 || geometryId >= geometryInfoList.length || geometryInfoList[ geometryId ].active === false ) {\r\n\r\n\t\t\tthrow new Error( `THREE.BatchedMesh: Invalid geometryId ${geometryId}. Geometry is either out of range or has been deleted.` );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tsetCustomSort( func ) {\r\n\r\n\t\tthis.customSort = func;\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcomputeBoundingBox() {\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new Box3();\r\n\r\n\t\t}\r\n\r\n\t\tconst boundingBox = this.boundingBox;\r\n\t\tconst instanceInfo = this._instanceInfo;\r\n\r\n\t\tboundingBox.makeEmpty();\r\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\r\n\r\n\t\t\tif ( instanceInfo[ i ].active === false ) continue;\r\n\r\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\r\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\r\n\t\t\tthis.getBoundingBoxAt( geometryId, _box$1 ).applyMatrix4( _matrix$1 );\r\n\t\t\tboundingBox.union( _box$1 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcomputeBoundingSphere() {\r\n\r\n\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\tthis.boundingSphere = new Sphere();\r\n\r\n\t\t}\r\n\r\n\t\tconst boundingSphere = this.boundingSphere;\r\n\t\tconst instanceInfo = this._instanceInfo;\r\n\r\n\t\tboundingSphere.makeEmpty();\r\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\r\n\r\n\t\t\tif ( instanceInfo[ i ].active === false ) continue;\r\n\r\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\r\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\r\n\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\r\n\t\t\tboundingSphere.union( _sphere$2 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\taddInstance( geometryId ) {\r\n\r\n\t\tconst atCapacity = this._instanceInfo.length >= this.maxInstanceCount;\r\n\r\n\t\t// ensure we're not over geometry\r\n\t\tif ( atCapacity && this._availableInstanceIds.length === 0 ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Maximum item count reached.' );\r\n\r\n\t\t}\r\n\r\n\t\tconst instanceInfo = {\r\n\t\t\tvisible: true,\r\n\t\t\tactive: true,\r\n\t\t\tgeometryIndex: geometryId,\r\n\t\t};\r\n\r\n\t\tlet drawId = null;\r\n\r\n\t\t// Prioritize using previously freed instance ids\r\n\t\tif ( this._availableInstanceIds.length > 0 ) {\r\n\r\n\t\t\tthis._availableInstanceIds.sort( ascIdSort );\r\n\r\n\t\t\tdrawId = this._availableInstanceIds.shift();\r\n\t\t\tthis._instanceInfo[ drawId ] = instanceInfo;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tdrawId = this._instanceInfo.length;\r\n\t\t\tthis._instanceInfo.push( instanceInfo );\r\n\r\n\t\t}\r\n\r\n\t\tconst matricesTexture = this._matricesTexture;\r\n\t\t_matrix$1.identity().toArray( matricesTexture.image.data, drawId * 16 );\r\n\t\tmatricesTexture.needsUpdate = true;\r\n\r\n\t\tconst colorsTexture = this._colorsTexture;\r\n\t\tif ( colorsTexture ) {\r\n\r\n\t\t\t_whiteColor.toArray( colorsTexture.image.data, drawId * 4 );\r\n\t\t\tcolorsTexture.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tthis._visibilityChanged = true;\r\n\t\treturn drawId;\r\n\r\n\t}\r\n\r\n\taddGeometry( geometry, reservedVertexCount = - 1, reservedIndexCount = - 1 ) {\r\n\r\n\t\tthis._initializeGeometry( geometry );\r\n\r\n\t\tthis._validateGeometry( geometry );\r\n\r\n\t\tconst geometryInfo = {\r\n\t\t\t// geometry information\r\n\t\t\tvertexStart: - 1,\r\n\t\t\tvertexCount: - 1,\r\n\t\t\treservedVertexCount: - 1,\r\n\r\n\t\t\tindexStart: - 1,\r\n\t\t\tindexCount: - 1,\r\n\t\t\treservedIndexCount: - 1,\r\n\r\n\t\t\t// draw range information\r\n\t\t\tstart: - 1,\r\n\t\t\tcount: - 1,\r\n\r\n\t\t\t// state\r\n\t\t\tboundingBox: null,\r\n\t\t\tboundingSphere: null,\r\n\t\t\tactive: true,\r\n\t\t};\r\n\r\n\t\tconst geometryInfoList = this._geometryInfo;\r\n\t\tgeometryInfo.vertexStart = this._nextVertexStart;\r\n\t\tgeometryInfo.reservedVertexCount = reservedVertexCount === - 1 ? geometry.getAttribute( 'position' ).count : reservedVertexCount;\r\n\r\n\t\tconst index = geometry.getIndex();\r\n\t\tconst hasIndex = index !== null;\r\n\t\tif ( hasIndex ) {\r\n\r\n\t\t\tgeometryInfo.indexStart = this._nextIndexStart;\r\n\t\t\tgeometryInfo.reservedIndexCount = reservedIndexCount === - 1 ? index.count : reservedIndexCount;\r\n\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\tgeometryInfo.indexStart !== - 1 &&\r\n\t\t\tgeometryInfo.indexStart + geometryInfo.reservedIndexCount > this._maxIndexCount ||\r\n\t\t\tgeometryInfo.vertexStart + geometryInfo.reservedVertexCount > this._maxVertexCount\r\n\t\t) {\r\n\r\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\r\n\r\n\t\t}\r\n\r\n\t\t// update id\r\n\t\tlet geometryId;\r\n\t\tif ( this._availableGeometryIds.length > 0 ) {\r\n\r\n\t\t\tthis._availableGeometryIds.sort( ascIdSort );\r\n\r\n\t\t\tgeometryId = this._availableGeometryIds.shift();\r\n\t\t\tgeometryInfoList[ geometryId ] = geometryInfo;\r\n\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgeometryId = this._geometryCount;\r\n\t\t\tthis._geometryCount ++;\r\n\t\t\tgeometryInfoList.push( geometryInfo );\r\n\r\n\t\t}\r\n\r\n\t\t// update the geometry\r\n\t\tthis.setGeometryAt( geometryId, geometry );\r\n\r\n\t\t// increment the next geometry position\r\n\t\tthis._nextIndexStart = geometryInfo.indexStart + geometryInfo.reservedIndexCount;\r\n\t\tthis._nextVertexStart = geometryInfo.vertexStart + geometryInfo.reservedVertexCount;\r\n\r\n\t\treturn geometryId;\r\n\r\n\t}\r\n\r\n\tsetGeometryAt( geometryId, geometry ) {\r\n\r\n\t\tif ( geometryId >= this._geometryCount ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Maximum geometry count reached.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis._validateGeometry( geometry );\r\n\r\n\t\tconst batchGeometry = this.geometry;\r\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\r\n\t\tconst dstIndex = batchGeometry.getIndex();\r\n\t\tconst srcIndex = geometry.getIndex();\r\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\r\n\t\tif (\r\n\t\t\thasIndex &&\r\n\t\t\tsrcIndex.count > geometryInfo.reservedIndexCount ||\r\n\t\t\tgeometry.attributes.position.count > geometryInfo.reservedVertexCount\r\n\t\t) {\r\n\r\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Reserved space not large enough for provided geometry.' );\r\n\r\n\t\t}\r\n\r\n\t\t// copy geometry buffer data over\r\n\t\tconst vertexStart = geometryInfo.vertexStart;\r\n\t\tconst reservedVertexCount = geometryInfo.reservedVertexCount;\r\n\t\tgeometryInfo.vertexCount = geometry.getAttribute( 'position' ).count;\r\n\r\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\r\n\r\n\t\t\t// copy attribute data\r\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\r\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\r\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\r\n\r\n\t\t\t// fill the rest in with zeroes\r\n\t\t\tconst itemSize = srcAttribute.itemSize;\r\n\t\t\tfor ( let i = srcAttribute.count, l = reservedVertexCount; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst index = vertexStart + i;\r\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\r\n\r\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdstAttribute.needsUpdate = true;\r\n\t\t\tdstAttribute.addUpdateRange( vertexStart * itemSize, reservedVertexCount * itemSize );\r\n\r\n\t\t}\r\n\r\n\t\t// copy index\r\n\t\tif ( hasIndex ) {\r\n\r\n\t\t\tconst indexStart = geometryInfo.indexStart;\r\n\t\t\tconst reservedIndexCount = geometryInfo.reservedIndexCount;\r\n\t\t\tgeometryInfo.indexCount = geometry.getIndex().count;\r\n\r\n\t\t\t// copy index data over\r\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\r\n\r\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// fill the rest in with zeroes\r\n\t\t\tfor ( let i = srcIndex.count, l = reservedIndexCount; i < l; i ++ ) {\r\n\r\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdstIndex.needsUpdate = true;\r\n\t\t\tdstIndex.addUpdateRange( indexStart, geometryInfo.reservedIndexCount );\r\n\r\n\t\t}\r\n\r\n\t\t// update the draw range\r\n\t\tgeometryInfo.start = hasIndex ? geometryInfo.indexStart : geometryInfo.vertexStart;\r\n\t\tgeometryInfo.count = hasIndex ? geometryInfo.indexCount : geometryInfo.vertexCount;\r\n\r\n\t\t// store the bounding boxes\r\n\t\tgeometryInfo.boundingBox = null;\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tgeometryInfo.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\tgeometryInfo.boundingSphere = null;\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tgeometryInfo.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\tthis._visibilityChanged = true;\r\n\t\treturn geometryId;\r\n\r\n\t}\r\n\r\n\tdeleteGeometry( geometryId ) {\r\n\r\n\t\tconst geometryInfoList = this._geometryInfo;\r\n\t\tif ( geometryId >= geometryInfoList.length || geometryInfoList[ geometryId ].active === false ) {\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\t// delete any instances associated with this geometry\r\n\t\tconst instanceInfo = this._instanceInfo;\r\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\r\n\r\n\t\t\tif ( instanceInfo[ i ].active && instanceInfo[ i ].geometryIndex === geometryId ) {\r\n\r\n\t\t\t\tthis.deleteInstance( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometryInfoList[ geometryId ].active = false;\r\n\t\tthis._availableGeometryIds.push( geometryId );\r\n\t\tthis._visibilityChanged = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdeleteInstance( instanceId ) {\r\n\r\n\t\tthis.validateInstanceId( instanceId );\r\n\r\n\t\tthis._instanceInfo[ instanceId ].active = false;\r\n\t\tthis._availableInstanceIds.push( instanceId );\r\n\t\tthis._visibilityChanged = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\toptimize() {\r\n\r\n\t\t// track the next indices to copy data to\r\n\t\tlet nextVertexStart = 0;\r\n\t\tlet nextIndexStart = 0;\r\n\r\n\t\t// Iterate over all geometry ranges in order sorted from earliest in the geometry buffer to latest\r\n\t\t// in the geometry buffer. Because draw range objects can be reused there is no guarantee of their order.\r\n\t\tconst geometryInfoList = this._geometryInfo;\r\n\t\tconst indices = geometryInfoList\r\n\t\t\t.map( ( e, i ) => i )\r\n\t\t\t.sort( ( a, b ) => {\r\n\r\n\t\t\t\treturn geometryInfoList[ a ].vertexStart - geometryInfoList[ b ].vertexStart;\r\n\r\n\t\t\t} );\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tfor ( let i = 0, l = geometryInfoList.length; i < l; i ++ ) {\r\n\r\n\t\t\t// if a geometry range is inactive then don't copy anything\r\n\t\t\tconst index = indices[ i ];\r\n\t\t\tconst geometryInfo = geometryInfoList[ index ];\r\n\t\t\tif ( geometryInfo.active === false ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// if a geometry contains an index buffer then shift it, as well\r\n\t\t\tif ( geometry.index !== null ) {\r\n\r\n\t\t\t\tif ( geometryInfo.indexStart !== nextIndexStart ) {\r\n\r\n\t\t\t\t\tconst { indexStart, vertexStart, reservedIndexCount } = geometryInfo;\r\n\t\t\t\t\tconst index = geometry.index;\r\n\t\t\t\t\tconst array = index.array;\r\n\r\n\t\t\t\t\t// shift the index pointers based on how the vertex data will shift\r\n\t\t\t\t\t// adjusting the index must happen first so the original vertex start value is available\r\n\t\t\t\t\tconst elementDelta = nextVertexStart - vertexStart;\r\n\t\t\t\t\tfor ( let j = indexStart; j < indexStart + reservedIndexCount; j ++ ) {\r\n\r\n\t\t\t\t\t\tarray[ j ] = array[ j ] + elementDelta;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex.array.copyWithin( nextIndexStart, indexStart, indexStart + reservedIndexCount );\r\n\t\t\t\t\tindex.addUpdateRange( nextIndexStart, reservedIndexCount );\r\n\r\n\t\t\t\t\tgeometryInfo.indexStart = nextIndexStart;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnextIndexStart += geometryInfo.reservedIndexCount;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// if a geometry needs to be moved then copy attribute data to overwrite unused space\r\n\t\t\tif ( geometryInfo.vertexStart !== nextVertexStart ) {\r\n\r\n\t\t\t\tconst { vertexStart, reservedVertexCount } = geometryInfo;\r\n\t\t\t\tconst attributes = geometry.attributes;\r\n\t\t\t\tfor ( const key in attributes ) {\r\n\r\n\t\t\t\t\tconst attribute = attributes[ key ];\r\n\t\t\t\t\tconst { array, itemSize } = attribute;\r\n\t\t\t\t\tarray.copyWithin( nextVertexStart * itemSize, vertexStart * itemSize, ( vertexStart + reservedVertexCount ) * itemSize );\r\n\t\t\t\t\tattribute.addUpdateRange( nextVertexStart * itemSize, reservedVertexCount * itemSize );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometryInfo.vertexStart = nextVertexStart;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnextVertexStart += geometryInfo.reservedVertexCount;\r\n\t\t\tgeometryInfo.start = geometry.index ? geometryInfo.indexStart : geometryInfo.vertexStart;\r\n\r\n\t\t\t// step the next geometry points to the shifted position\r\n\t\t\tthis._nextIndexStart = geometry.index ? geometryInfo.indexStart + geometryInfo.reservedIndexCount : 0;\r\n\t\t\tthis._nextVertexStart = geometryInfo.vertexStart + geometryInfo.reservedVertexCount;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// get bounding box and compute it if it doesn't exist\r\n\tgetBoundingBoxAt( geometryId, target ) {\r\n\r\n\t\tif ( geometryId >= this._geometryCount ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t// compute bounding box\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\r\n\t\tif ( geometryInfo.boundingBox === null ) {\r\n\r\n\t\t\tconst box = new Box3();\r\n\t\t\tconst index = geometry.index;\r\n\t\t\tconst position = geometry.attributes.position;\r\n\t\t\tfor ( let i = geometryInfo.start, l = geometryInfo.start + geometryInfo.count; i < l; i ++ ) {\r\n\r\n\t\t\t\tlet iv = i;\r\n\t\t\t\tif ( index ) {\r\n\r\n\t\t\t\t\tiv = index.getX( iv );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometryInfo.boundingBox = box;\r\n\r\n\t\t}\r\n\r\n\t\ttarget.copy( geometryInfo.boundingBox );\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\t// get bounding sphere and compute it if it doesn't exist\r\n\tgetBoundingSphereAt( geometryId, target ) {\r\n\r\n\t\tif ( geometryId >= this._geometryCount ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t// compute bounding sphere\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\r\n\t\tif ( geometryInfo.boundingSphere === null ) {\r\n\r\n\t\t\tconst sphere = new Sphere();\r\n\t\t\tthis.getBoundingBoxAt( geometryId, _box$1 );\r\n\t\t\t_box$1.getCenter( sphere.center );\r\n\r\n\t\t\tconst index = geometry.index;\r\n\t\t\tconst position = geometry.attributes.position;\r\n\r\n\t\t\tlet maxRadiusSq = 0;\r\n\t\t\tfor ( let i = geometryInfo.start, l = geometryInfo.start + geometryInfo.count; i < l; i ++ ) {\r\n\r\n\t\t\t\tlet iv = i;\r\n\t\t\t\tif ( index ) {\r\n\r\n\t\t\t\t\tiv = index.getX( iv );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\r\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\r\n\t\t\tgeometryInfo.boundingSphere = sphere;\r\n\r\n\t\t}\r\n\r\n\t\ttarget.copy( geometryInfo.boundingSphere );\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tsetMatrixAt( instanceId, matrix ) {\r\n\r\n\t\tthis.validateInstanceId( instanceId );\r\n\r\n\t\tconst matricesTexture = this._matricesTexture;\r\n\t\tconst matricesArray = this._matricesTexture.image.data;\r\n\t\tmatrix.toArray( matricesArray, instanceId * 16 );\r\n\t\tmatricesTexture.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetMatrixAt( instanceId, matrix ) {\r\n\r\n\t\tthis.validateInstanceId( instanceId );\r\n\t\treturn matrix.fromArray( this._matricesTexture.image.data, instanceId * 16 );\r\n\r\n\t}\r\n\r\n\tsetColorAt( instanceId, color ) {\r\n\r\n\t\tthis.validateInstanceId( instanceId );\r\n\r\n\t\tif ( this._colorsTexture === null ) {\r\n\r\n\t\t\tthis._initColorsTexture();\r\n\r\n\t\t}\r\n\r\n\t\tcolor.toArray( this._colorsTexture.image.data, instanceId * 4 );\r\n\t\tthis._colorsTexture.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetColorAt( instanceId, color ) {\r\n\r\n\t\tthis.validateInstanceId( instanceId );\r\n\t\treturn color.fromArray( this._colorsTexture.image.data, instanceId * 4 );\r\n\r\n\t}\r\n\r\n\tsetVisibleAt( instanceId, value ) {\r\n\r\n\t\tthis.validateInstanceId( instanceId );\r\n\r\n\t\tif ( this._instanceInfo[ instanceId ].visible === value ) {\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tthis._instanceInfo[ instanceId ].visible = value;\r\n\t\tthis._visibilityChanged = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetVisibleAt( instanceId ) {\r\n\r\n\t\tthis.validateInstanceId( instanceId );\r\n\r\n\t\treturn this._instanceInfo[ instanceId ].visible;\r\n\r\n\t}\r\n\r\n\tsetGeometryIdAt( instanceId, geometryId ) {\r\n\r\n\t\tthis.validateInstanceId( instanceId );\r\n\t\tthis.validateGeometryId( geometryId );\r\n\r\n\t\tthis._instanceInfo[ instanceId ].geometryIndex = geometryId;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetGeometryIdAt( instanceId ) {\r\n\r\n\t\tthis.validateInstanceId( instanceId );\r\n\r\n\t\treturn this._instanceInfo[ instanceId ].geometryIndex;\r\n\r\n\t}\r\n\r\n\tgetGeometryRangeAt( geometryId, target = {} ) {\r\n\r\n\t\tthis.validateGeometryId( geometryId );\r\n\r\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\r\n\t\ttarget.vertexStart = geometryInfo.vertexStart;\r\n\t\ttarget.vertexCount = geometryInfo.vertexCount;\r\n\t\ttarget.reservedVertexCount = geometryInfo.reservedVertexCount;\r\n\r\n\t\ttarget.indexStart = geometryInfo.indexStart;\r\n\t\ttarget.indexCount = geometryInfo.indexCount;\r\n\t\ttarget.reservedIndexCount = geometryInfo.reservedIndexCount;\r\n\r\n\t\ttarget.start = geometryInfo.start;\r\n\t\ttarget.count = geometryInfo.count;\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tsetInstanceCount( maxInstanceCount ) {\r\n\r\n\t\t// shrink the available instances as much as possible\r\n\t\tconst availableInstanceIds = this._availableInstanceIds;\r\n\t\tconst instanceInfo = this._instanceInfo;\r\n\t\tavailableInstanceIds.sort( ascIdSort );\r\n\t\twhile ( availableInstanceIds[ availableInstanceIds.length - 1 ] === instanceInfo.length ) {\r\n\r\n\t\t\tinstanceInfo.pop();\r\n\t\t\tavailableInstanceIds.pop();\r\n\r\n\t\t}\r\n\r\n\t\t// throw an error if it can't be shrunk to the desired size\r\n\t\tif ( maxInstanceCount < instanceInfo.length ) {\r\n\r\n\t\t\tthrow new Error( `BatchedMesh: Instance ids outside the range ${ maxInstanceCount } are being used. Cannot shrink instance count.` );\r\n\r\n\t\t}\r\n\r\n\t\t// copy the multi draw counts\r\n\t\tconst multiDrawCounts = new Int32Array( maxInstanceCount );\r\n\t\tconst multiDrawStarts = new Int32Array( maxInstanceCount );\r\n\t\tcopyArrayContents( this._multiDrawCounts, multiDrawCounts );\r\n\t\tcopyArrayContents( this._multiDrawStarts, multiDrawStarts );\r\n\r\n\t\tthis._multiDrawCounts = multiDrawCounts;\r\n\t\tthis._multiDrawStarts = multiDrawStarts;\r\n\t\tthis._maxInstanceCount = maxInstanceCount;\r\n\r\n\t\t// update texture data for instance sampling\r\n\t\tconst indirectTexture = this._indirectTexture;\r\n\t\tconst matricesTexture = this._matricesTexture;\r\n\t\tconst colorsTexture = this._colorsTexture;\r\n\r\n\t\tindirectTexture.dispose();\r\n\t\tthis._initIndirectTexture();\r\n\t\tcopyArrayContents( indirectTexture.image.data, this._indirectTexture.image.data );\r\n\r\n\t\tmatricesTexture.dispose();\r\n\t\tthis._initMatricesTexture();\r\n\t\tcopyArrayContents( matricesTexture.image.data, this._matricesTexture.image.data );\r\n\r\n\t\tif ( colorsTexture ) {\r\n\r\n\t\t\tcolorsTexture.dispose();\r\n\t\t\tthis._initColorsTexture();\r\n\t\t\tcopyArrayContents( colorsTexture.image.data, this._colorsTexture.image.data );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetGeometrySize( maxVertexCount, maxIndexCount ) {\r\n\r\n\t\t// Check if we can shrink to the requested vertex attribute size\r\n\t\tconst validRanges = [ ...this._geometryInfo ].filter( info => info.active );\r\n\t\tconst requiredVertexLength = Math.max( ...validRanges.map( range => range.vertexStart + range.reservedVertexCount ) );\r\n\t\tif ( requiredVertexLength > maxVertexCount ) {\r\n\r\n\t\t\tthrow new Error( `BatchedMesh: Geometry vertex values are being used outside the range ${ maxIndexCount }. Cannot shrink further.` );\r\n\r\n\t\t}\r\n\r\n\t\t// Check if we can shrink to the requested index attribute size\r\n\t\tif ( this.geometry.index ) {\r\n\r\n\t\t\tconst requiredIndexLength = Math.max( ...validRanges.map( range => range.indexStart + range.reservedIndexCount ) );\r\n\t\t\tif ( requiredIndexLength > maxIndexCount ) {\r\n\r\n\t\t\t\tthrow new Error( `BatchedMesh: Geometry index values are being used outside the range ${ maxIndexCount }. Cannot shrink further.` );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\t// dispose of the previous geometry\r\n\t\tconst oldGeometry = this.geometry;\r\n\t\toldGeometry.dispose();\r\n\r\n\t\t// recreate the geometry needed based on the previous variant\r\n\t\tthis._maxVertexCount = maxVertexCount;\r\n\t\tthis._maxIndexCount = maxIndexCount;\r\n\r\n\t\tif ( this._geometryInitialized ) {\r\n\r\n\t\t\tthis._geometryInitialized = false;\r\n\t\t\tthis.geometry = new BufferGeometry();\r\n\t\t\tthis._initializeGeometry( oldGeometry );\r\n\r\n\t\t}\r\n\r\n\t\t// copy data from the previous geometry\r\n\t\tconst geometry = this.geometry;\r\n\t\tif ( oldGeometry.index ) {\r\n\r\n\t\t\tcopyArrayContents( oldGeometry.index.array, geometry.index.array );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( const key in oldGeometry.attributes ) {\r\n\r\n\t\t\tcopyArrayContents( oldGeometry.attributes[ key ].array, geometry.attributes[ key ].array );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\traycast( raycaster, intersects ) {\r\n\r\n\t\tconst instanceInfo = this._instanceInfo;\r\n\t\tconst geometryInfoList = this._geometryInfo;\r\n\t\tconst matrixWorld = this.matrixWorld;\r\n\t\tconst batchGeometry = this.geometry;\r\n\r\n\t\t// iterate over each geometry\r\n\t\t_mesh.material = this.material;\r\n\t\t_mesh.geometry.index = batchGeometry.index;\r\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\r\n\t\tif ( _mesh.geometry.boundingBox === null ) {\r\n\r\n\t\t\t_mesh.geometry.boundingBox = new Box3();\r\n\r\n\t\t}\r\n\r\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\r\n\r\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\r\n\r\n\t\t\tif ( ! instanceInfo[ i ].visible || ! instanceInfo[ i ].active ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\r\n\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\r\n\t\t\t_mesh.geometry.setDrawRange( geometryInfo.start, geometryInfo.count );\r\n\r\n\t\t\t// get the intersects\r\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\r\n\t\t\tthis.getBoundingBoxAt( geometryId, _mesh.geometry.boundingBox );\r\n\t\t\tthis.getBoundingSphereAt( geometryId, _mesh.geometry.boundingSphere );\r\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\r\n\r\n\t\t\t// add batch id to the intersects\r\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\r\n\r\n\t\t\t\tconst intersect = _batchIntersects[ j ];\r\n\t\t\t\tintersect.object = this;\r\n\t\t\t\tintersect.batchId = i;\r\n\t\t\t\tintersects.push( intersect );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_batchIntersects.length = 0;\r\n\r\n\t\t}\r\n\r\n\t\t_mesh.material = null;\r\n\t\t_mesh.geometry.index = null;\r\n\t\t_mesh.geometry.attributes = {};\r\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.geometry = source.geometry.clone();\r\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\r\n\t\tthis.sortObjects = source.sortObjects;\r\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\r\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\r\n\r\n\t\tthis._geometryInfo = source._geometryInfo.map( info => ( {\r\n\t\t\t...info,\r\n\r\n\t\t\tboundingBox: info.boundingBox !== null ? info.boundingBox.clone() : null,\r\n\t\t\tboundingSphere: info.boundingSphere !== null ? info.boundingSphere.clone() : null,\r\n\t\t} ) );\r\n\t\tthis._instanceInfo = source._instanceInfo.map( info => ( { ...info } ) );\r\n\r\n\t\tthis._maxInstanceCount = source._maxInstanceCount;\r\n\t\tthis._maxVertexCount = source._maxVertexCount;\r\n\t\tthis._maxIndexCount = source._maxIndexCount;\r\n\r\n\t\tthis._geometryInitialized = source._geometryInitialized;\r\n\t\tthis._geometryCount = source._geometryCount;\r\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\r\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\r\n\r\n\t\tthis._matricesTexture = source._matricesTexture.clone();\r\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.data.slice();\r\n\r\n\t\tif ( this._colorsTexture !== null ) {\r\n\r\n\t\t\tthis._colorsTexture = source._colorsTexture.clone();\r\n\t\t\tthis._colorsTexture.image.data = this._colorsTexture.image.data.slice();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\t// Assuming the geometry is not shared with other meshes\r\n\t\tthis.geometry.dispose();\r\n\r\n\t\tthis._matricesTexture.dispose();\r\n\t\tthis._matricesTexture = null;\r\n\r\n\t\tthis._indirectTexture.dispose();\r\n\t\tthis._indirectTexture = null;\r\n\r\n\t\tif ( this._colorsTexture !== null ) {\r\n\r\n\t\t\tthis._colorsTexture.dispose();\r\n\t\t\tthis._colorsTexture = null;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\r\n\r\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\r\n\t\t// then skip iterating over all items\r\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// the indexed version of the multi draw function requires specifying the start\r\n\t\t// offset in bytes.\r\n\t\tconst index = geometry.getIndex();\r\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\r\n\r\n\t\tconst instanceInfo = this._instanceInfo;\r\n\t\tconst multiDrawStarts = this._multiDrawStarts;\r\n\t\tconst multiDrawCounts = this._multiDrawCounts;\r\n\t\tconst geometryInfoList = this._geometryInfo;\r\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\r\n\t\tconst indirectTexture = this._indirectTexture;\r\n\t\tconst indirectArray = indirectTexture.image.data;\r\n\r\n\t\t// prepare the frustum in the local frame\r\n\t\tif ( perObjectFrustumCulled ) {\r\n\r\n\t\t\t_matrix$1\r\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\r\n\t\t\t\t.multiply( this.matrixWorld );\r\n\t\t\t_frustum.setFromProjectionMatrix(\r\n\t\t\t\t_matrix$1,\r\n\t\t\t\trenderer.coordinateSystem\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\tlet multiDrawCount = 0;\r\n\t\tif ( this.sortObjects ) {\r\n\r\n\t\t\t// get the camera position in the local frame\r\n\t\t\t_matrix$1.copy( this.matrixWorld ).invert();\r\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _matrix$1 );\r\n\t\t\t_forward.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld ).transformDirection( _matrix$1 );\r\n\r\n\t\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tif ( instanceInfo[ i ].visible && instanceInfo[ i ].active ) {\r\n\r\n\t\t\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\r\n\r\n\t\t\t\t\t// get the bounds in world space\r\n\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\r\n\t\t\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\r\n\r\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\r\n\t\t\t\t\tlet culled = false;\r\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\r\n\r\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ! culled ) {\r\n\r\n\t\t\t\t\t\t// get the distance from camera used for sorting\r\n\t\t\t\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\r\n\t\t\t\t\t\tconst z = _temp.subVectors( _sphere$2.center, _vector$5 ).dot( _forward );\r\n\t\t\t\t\t\t_renderList.push( geometryInfo.start, geometryInfo.count, z, i );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Sort the draw ranges and prep for rendering\r\n\t\t\tconst list = _renderList.list;\r\n\t\t\tconst customSort = this.customSort;\r\n\t\t\tif ( customSort === null ) {\r\n\r\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcustomSort.call( this, list, camera );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst item = list[ i ];\r\n\t\t\t\tmultiDrawStarts[ multiDrawCount ] = item.start * bytesPerElement;\r\n\t\t\t\tmultiDrawCounts[ multiDrawCount ] = item.count;\r\n\t\t\t\tindirectArray[ multiDrawCount ] = item.index;\r\n\t\t\t\tmultiDrawCount ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_renderList.reset();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tif ( instanceInfo[ i ].visible && instanceInfo[ i ].active ) {\r\n\r\n\t\t\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\r\n\r\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\r\n\t\t\t\t\tlet culled = false;\r\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\r\n\r\n\t\t\t\t\t\t// get the bounds in world space\r\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\r\n\t\t\t\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\r\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ! culled ) {\r\n\r\n\t\t\t\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\r\n\t\t\t\t\t\tmultiDrawStarts[ multiDrawCount ] = geometryInfo.start * bytesPerElement;\r\n\t\t\t\t\t\tmultiDrawCounts[ multiDrawCount ] = geometryInfo.count;\r\n\t\t\t\t\t\tindirectArray[ multiDrawCount ] = i;\r\n\t\t\t\t\t\tmultiDrawCount ++;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tindirectTexture.needsUpdate = true;\r\n\t\tthis._multiDrawCount = multiDrawCount;\r\n\t\tthis._visibilityChanged = false;\r\n\r\n\t}\r\n\r\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\r\n\r\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass LineBasicMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isLineBasicMaterial = true;\r\n\r\n\t\tthis.type = 'LineBasicMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff );\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.linewidth = 1;\r\n\t\tthis.linecap = 'round';\r\n\t\tthis.linejoin = 'round';\r\n\r\n\t\tthis.fog = true;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.linewidth = source.linewidth;\r\n\t\tthis.linecap = source.linecap;\r\n\t\tthis.linejoin = source.linejoin;\r\n\r\n\t\tthis.fog = source.fog;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _vStart = /*@__PURE__*/ new Vector3();\r\nconst _vEnd = /*@__PURE__*/ new Vector3();\r\n\r\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\r\nconst _ray$1 = /*@__PURE__*/ new Ray();\r\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\r\n\r\nconst _intersectPointOnRay = /*@__PURE__*/ new Vector3();\r\nconst _intersectPointOnSegment = /*@__PURE__*/ new Vector3();\r\n\r\nclass Line extends Object3D {\r\n\r\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isLine = true;\r\n\r\n\t\tthis.type = 'Line';\r\n\r\n\t\tthis.geometry = geometry;\r\n\t\tthis.material = material;\r\n\r\n\t\tthis.updateMorphTargets();\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\r\n\t\tthis.geometry = source.geometry;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcomputeLineDistances() {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\r\n\t\t// we assume non-indexed geometry\r\n\r\n\t\tif ( geometry.index === null ) {\r\n\r\n\t\t\tconst positionAttribute = geometry.attributes.position;\r\n\t\t\tconst lineDistances = [ 0 ];\r\n\r\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\r\n\r\n\t\t\t\t_vStart.fromBufferAttribute( positionAttribute, i - 1 );\r\n\t\t\t\t_vEnd.fromBufferAttribute( positionAttribute, i );\r\n\r\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\r\n\t\t\t\tlineDistances[ i ] += _vStart.distanceTo( _vEnd );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\traycast( raycaster, intersects ) {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst matrixWorld = this.matrixWorld;\r\n\t\tconst threshold = raycaster.params.Line.threshold;\r\n\t\tconst drawRange = geometry.drawRange;\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t_sphere$1.copy( geometry.boundingSphere );\r\n\t\t_sphere$1.applyMatrix4( matrixWorld );\r\n\t\t_sphere$1.radius += threshold;\r\n\r\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\r\n\r\n\t\t//\r\n\r\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\r\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\r\n\r\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\tconst localThresholdSq = localThreshold * localThreshold;\r\n\r\n\t\tconst step = this.isLineSegments ? 2 : 1;\r\n\r\n\t\tconst index = geometry.index;\r\n\t\tconst attributes = geometry.attributes;\r\n\t\tconst positionAttribute = attributes.position;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tconst start = Math.max( 0, drawRange.start );\r\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\r\n\r\n\t\t\t\tconst a = index.getX( i );\r\n\t\t\t\tconst b = index.getX( i + 1 );\r\n\r\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b, i );\r\n\r\n\t\t\t\tif ( intersect ) {\r\n\r\n\t\t\t\t\tintersects.push( intersect );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.isLineLoop ) {\r\n\r\n\t\t\t\tconst a = index.getX( end - 1 );\r\n\t\t\t\tconst b = index.getX( start );\r\n\r\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b, end - 1 );\r\n\r\n\t\t\t\tif ( intersect ) {\r\n\r\n\t\t\t\t\tintersects.push( intersect );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst start = Math.max( 0, drawRange.start );\r\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\r\n\r\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, i, i + 1, i );\r\n\r\n\t\t\t\tif ( intersect ) {\r\n\r\n\t\t\t\t\tintersects.push( intersect );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.isLineLoop ) {\r\n\r\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, end - 1, start, end - 1 );\r\n\r\n\t\t\t\tif ( intersect ) {\r\n\r\n\t\t\t\t\tintersects.push( intersect );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdateMorphTargets() {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\r\n\t\tconst morphAttributes = geometry.morphAttributes;\r\n\t\tconst keys = Object.keys( morphAttributes );\r\n\r\n\t\tif ( keys.length > 0 ) {\r\n\r\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\r\n\r\n\t\t\tif ( morphAttribute !== undefined ) {\r\n\r\n\t\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\r\n\r\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\r\n\r\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction checkIntersection( object, raycaster, ray, thresholdSq, a, b, i ) {\r\n\r\n\tconst positionAttribute = object.geometry.attributes.position;\r\n\r\n\t_vStart.fromBufferAttribute( positionAttribute, a );\r\n\t_vEnd.fromBufferAttribute( positionAttribute, b );\r\n\r\n\tconst distSq = ray.distanceSqToSegment( _vStart, _vEnd, _intersectPointOnRay, _intersectPointOnSegment );\r\n\r\n\tif ( distSq > thresholdSq ) return;\r\n\r\n\t_intersectPointOnRay.applyMatrix4( object.matrixWorld ); // Move back to world space for distance calculation\r\n\r\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectPointOnRay );\r\n\r\n\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\r\n\treturn {\r\n\r\n\t\tdistance: distance,\r\n\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t// point: raycaster.ray.at( distance ),\r\n\t\tpoint: _intersectPointOnSegment.clone().applyMatrix4( object.matrixWorld ),\r\n\t\tindex: i,\r\n\t\tface: null,\r\n\t\tfaceIndex: null,\r\n\t\tbarycoord: null,\r\n\t\tobject: object\r\n\r\n\t};\r\n\r\n}\r\n\r\nconst _start = /*@__PURE__*/ new Vector3();\r\nconst _end = /*@__PURE__*/ new Vector3();\r\n\r\nclass LineSegments extends Line {\r\n\r\n\tconstructor( geometry, material ) {\r\n\r\n\t\tsuper( geometry, material );\r\n\r\n\t\tthis.isLineSegments = true;\r\n\r\n\t\tthis.type = 'LineSegments';\r\n\r\n\t}\r\n\r\n\tcomputeLineDistances() {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\r\n\t\t// we assume non-indexed geometry\r\n\r\n\t\tif ( geometry.index === null ) {\r\n\r\n\t\t\tconst positionAttribute = geometry.attributes.position;\r\n\t\t\tconst lineDistances = [];\r\n\r\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\r\n\r\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\r\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\r\n\r\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\r\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass LineLoop extends Line {\r\n\r\n\tconstructor( geometry, material ) {\r\n\r\n\t\tsuper( geometry, material );\r\n\r\n\t\tthis.isLineLoop = true;\r\n\r\n\t\tthis.type = 'LineLoop';\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass PointsMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isPointsMaterial = true;\r\n\r\n\t\tthis.type = 'PointsMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff );\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.size = 1;\r\n\t\tthis.sizeAttenuation = true;\r\n\r\n\t\tthis.fog = true;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.size = source.size;\r\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\r\n\t\tthis.fog = source.fog;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\r\nconst _ray = /*@__PURE__*/ new Ray();\r\nconst _sphere = /*@__PURE__*/ new Sphere();\r\nconst _position$2 = /*@__PURE__*/ new Vector3();\r\n\r\nclass Points extends Object3D {\r\n\r\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isPoints = true;\r\n\r\n\t\tthis.type = 'Points';\r\n\r\n\t\tthis.geometry = geometry;\r\n\t\tthis.material = material;\r\n\r\n\t\tthis.updateMorphTargets();\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\r\n\t\tthis.geometry = source.geometry;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\traycast( raycaster, intersects ) {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst matrixWorld = this.matrixWorld;\r\n\t\tconst threshold = raycaster.params.Points.threshold;\r\n\t\tconst drawRange = geometry.drawRange;\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t_sphere.copy( geometry.boundingSphere );\r\n\t\t_sphere.applyMatrix4( matrixWorld );\r\n\t\t_sphere.radius += threshold;\r\n\r\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\r\n\r\n\t\t//\r\n\r\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\r\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\r\n\r\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\tconst localThresholdSq = localThreshold * localThreshold;\r\n\r\n\t\tconst index = geometry.index;\r\n\t\tconst attributes = geometry.attributes;\r\n\t\tconst positionAttribute = attributes.position;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tconst start = Math.max( 0, drawRange.start );\r\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\r\n\r\n\t\t\t\tconst a = index.getX( i );\r\n\r\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\r\n\r\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst start = Math.max( 0, drawRange.start );\r\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\r\n\r\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\r\n\r\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\r\n\r\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdateMorphTargets() {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\r\n\t\tconst morphAttributes = geometry.morphAttributes;\r\n\t\tconst keys = Object.keys( morphAttributes );\r\n\r\n\t\tif ( keys.length > 0 ) {\r\n\r\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\r\n\r\n\t\t\tif ( morphAttribute !== undefined ) {\r\n\r\n\t\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\r\n\r\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\r\n\r\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\r\n\r\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\r\n\r\n\tif ( rayPointDistanceSq < localThresholdSq ) {\r\n\r\n\t\tconst intersectPoint = new Vector3();\r\n\r\n\t\t_ray.closestPointToPoint( point, intersectPoint );\r\n\t\tintersectPoint.applyMatrix4( matrixWorld );\r\n\r\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\r\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\r\n\t\tintersects.push( {\r\n\r\n\t\t\tdistance: distance,\r\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n\t\t\tpoint: intersectPoint,\r\n\t\t\tindex: index,\r\n\t\t\tface: null,\r\n\t\t\tfaceIndex: null,\r\n\t\t\tbarycoord: null,\r\n\t\t\tobject: object\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass VideoTexture extends Texture {\r\n\r\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\t\tthis.isVideoTexture = true;\r\n\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\r\n\r\n\t\tthis.generateMipmaps = false;\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tfunction updateVideo() {\r\n\r\n\t\t\tscope.needsUpdate = true;\r\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\r\n\r\n\t\t}\r\n\r\n\t\tif ( 'requestVideoFrameCallback' in video ) {\r\n\r\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor( this.image ).copy( this );\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tconst video = this.image;\r\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\r\n\r\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\r\n\r\n\t\t\tthis.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass VideoFrameTexture extends VideoTexture {\r\n\r\n\tconstructor( mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\t\tsuper( {}, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\t\tthis.isVideoFrameTexture = true;\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\t// overwrites `VideoTexture.update()` with an empty method since\r\n\t\t// this type of texture is updated via `setFrame()`.\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this ); // restoring Texture.clone()\r\n\r\n\t}\r\n\r\n\tsetFrame( frame ) {\r\n\r\n\t\tthis.image = frame;\r\n\t\tthis.needsUpdate = true;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass FramebufferTexture extends Texture {\r\n\r\n\tconstructor( width, height ) {\r\n\r\n\t\tsuper( { width, height } );\r\n\r\n\t\tthis.isFramebufferTexture = true;\r\n\r\n\t\tthis.magFilter = NearestFilter;\r\n\t\tthis.minFilter = NearestFilter;\r\n\r\n\t\tthis.generateMipmaps = false;\r\n\r\n\t\tthis.needsUpdate = true;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass CompressedTexture extends Texture {\r\n\r\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\r\n\r\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\r\n\r\n\t\tthis.isCompressedTexture = true;\r\n\r\n\t\tthis.image = { width: width, height: height };\r\n\t\tthis.mipmaps = mipmaps;\r\n\r\n\t\t// no flipping for cube textures\r\n\t\t// (also flipping doesn't work for compressed textures )\r\n\r\n\t\tthis.flipY = false;\r\n\r\n\t\t// can't generate mipmaps for compressed textures\r\n\t\t// mips must be embedded in DDS files\r\n\r\n\t\tthis.generateMipmaps = false;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass CompressedArrayTexture extends CompressedTexture {\r\n\r\n\tconstructor( mipmaps, width, height, depth, format, type ) {\r\n\r\n\t\tsuper( mipmaps, width, height, format, type );\r\n\r\n\t\tthis.isCompressedArrayTexture = true;\r\n\t\tthis.image.depth = depth;\r\n\t\tthis.wrapR = ClampToEdgeWrapping;\r\n\r\n\t\tthis.layerUpdates = new Set();\r\n\r\n\t}\r\n\r\n\taddLayerUpdate( layerIndex ) {\r\n\r\n\t\tthis.layerUpdates.add( layerIndex );\r\n\r\n\t}\r\n\r\n\tclearLayerUpdates() {\r\n\r\n\t\tthis.layerUpdates.clear();\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass CompressedCubeTexture extends CompressedTexture {\r\n\r\n\tconstructor( images, format, type ) {\r\n\r\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\r\n\r\n\t\tthis.isCompressedCubeTexture = true;\r\n\t\tthis.isCubeTexture = true;\r\n\r\n\t\tthis.image = images;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass CanvasTexture extends Texture {\r\n\r\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\t\tthis.isCanvasTexture = true;\r\n\r\n\t\tthis.needsUpdate = true;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass DepthTexture extends Texture {\r\n\r\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format = DepthFormat ) {\r\n\r\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\r\n\r\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\r\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\r\n\r\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\t\tthis.isDepthTexture = true;\r\n\r\n\t\tthis.image = { width: width, height: height };\r\n\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\r\n\r\n\t\tthis.flipY = false;\r\n\t\tthis.generateMipmaps = false;\r\n\r\n\t\tthis.compareFunction = null;\r\n\r\n\t}\r\n\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.compareFunction = source.compareFunction;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst data = super.toJSON( meta );\r\n\r\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Extensible curve object.\r\n *\r\n * Some common of curve methods:\r\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\r\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\r\n * .getPoints(), .getSpacedPoints()\r\n * .getLength()\r\n * .updateArcLengths()\r\n *\r\n * This following curves inherit from THREE.Curve:\r\n *\r\n * -- 2D curves --\r\n * THREE.ArcCurve\r\n * THREE.CubicBezierCurve\r\n * THREE.EllipseCurve\r\n * THREE.LineCurve\r\n * THREE.QuadraticBezierCurve\r\n * THREE.SplineCurve\r\n *\r\n * -- 3D curves --\r\n * THREE.CatmullRomCurve3\r\n * THREE.CubicBezierCurve3\r\n * THREE.LineCurve3\r\n * THREE.QuadraticBezierCurve3\r\n *\r\n * A series of curves can be represented as a THREE.CurvePath.\r\n *\r\n **/\r\n\r\nclass Curve {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.type = 'Curve';\r\n\r\n\t\tthis.arcLengthDivisions = 200;\r\n\r\n\t}\r\n\r\n\t// Virtual base class method to overwrite and implement in subclasses\r\n\t//\t- t [0 .. 1]\r\n\r\n\tgetPoint( /* t, optionalTarget */ ) {\r\n\r\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\t// Get point at relative position in curve according to arc length\r\n\t// - u [0 .. 1]\r\n\r\n\tgetPointAt( u, optionalTarget ) {\r\n\r\n\t\tconst t = this.getUtoTmapping( u );\r\n\t\treturn this.getPoint( t, optionalTarget );\r\n\r\n\t}\r\n\r\n\t// Get sequence of points using getPoint( t )\r\n\r\n\tgetPoints( divisions = 5 ) {\r\n\r\n\t\tconst points = [];\r\n\r\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn points;\r\n\r\n\t}\r\n\r\n\t// Get sequence of points using getPointAt( u )\r\n\r\n\tgetSpacedPoints( divisions = 5 ) {\r\n\r\n\t\tconst points = [];\r\n\r\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn points;\r\n\r\n\t}\r\n\r\n\t// Get total curve arc length\r\n\r\n\tgetLength() {\r\n\r\n\t\tconst lengths = this.getLengths();\r\n\t\treturn lengths[ lengths.length - 1 ];\r\n\r\n\t}\r\n\r\n\t// Get list of cumulative segment lengths\r\n\r\n\tgetLengths( divisions = this.arcLengthDivisions ) {\r\n\r\n\t\tif ( this.cacheArcLengths &&\r\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\r\n\t\t\t! this.needsUpdate ) {\r\n\r\n\t\t\treturn this.cacheArcLengths;\r\n\r\n\t\t}\r\n\r\n\t\tthis.needsUpdate = false;\r\n\r\n\t\tconst cache = [];\r\n\t\tlet current, last = this.getPoint( 0 );\r\n\t\tlet sum = 0;\r\n\r\n\t\tcache.push( 0 );\r\n\r\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\r\n\r\n\t\t\tcurrent = this.getPoint( p / divisions );\r\n\t\t\tsum += current.distanceTo( last );\r\n\t\t\tcache.push( sum );\r\n\t\t\tlast = current;\r\n\r\n\t\t}\r\n\r\n\t\tthis.cacheArcLengths = cache;\r\n\r\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\r\n\r\n\t}\r\n\r\n\tupdateArcLengths() {\r\n\r\n\t\tthis.needsUpdate = true;\r\n\t\tthis.getLengths();\r\n\r\n\t}\r\n\r\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\r\n\tgetUtoTmapping( u, distance ) {\r\n\r\n\t\tconst arcLengths = this.getLengths();\r\n\r\n\t\tlet i = 0;\r\n\t\tconst il = arcLengths.length;\r\n\r\n\t\tlet targetArcLength; // The targeted u distance value to get\r\n\r\n\t\tif ( distance ) {\r\n\r\n\t\t\ttargetArcLength = distance;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\r\n\t\t}\r\n\r\n\t\t// binary search for the index with largest value smaller than target u distance\r\n\r\n\t\tlet low = 0, high = il - 1, comparison;\r\n\r\n\t\twhile ( low <= high ) {\r\n\r\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\r\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\r\n\t\t\tif ( comparison < 0 ) {\r\n\r\n\t\t\t\tlow = i + 1;\r\n\r\n\t\t\t} else if ( comparison > 0 ) {\r\n\r\n\t\t\t\thigh = i - 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\thigh = i;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\t// DONE\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\ti = high;\r\n\r\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\r\n\r\n\t\t\treturn i / ( il - 1 );\r\n\r\n\t\t}\r\n\r\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\r\n\r\n\t\tconst lengthBefore = arcLengths[ i ];\r\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\r\n\r\n\t\tconst segmentLength = lengthAfter - lengthBefore;\r\n\r\n\t\t// determine where we are between the 'before' and 'after' points\r\n\r\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\r\n\t\t// add that fractional amount to t\r\n\r\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\r\n\r\n\t\treturn t;\r\n\r\n\t}\r\n\r\n\t// Returns a unit vector tangent at t\r\n\t// In case any sub curve does not implement its tangent derivation,\r\n\t// 2 points a small delta apart will be used to find its gradient\r\n\t// which seems to give a reasonable approximation\r\n\r\n\tgetTangent( t, optionalTarget ) {\r\n\r\n\t\tconst delta = 0.0001;\r\n\t\tlet t1 = t - delta;\r\n\t\tlet t2 = t + delta;\r\n\r\n\t\t// Capping in case of danger\r\n\r\n\t\tif ( t1 < 0 ) t1 = 0;\r\n\t\tif ( t2 > 1 ) t2 = 1;\r\n\r\n\t\tconst pt1 = this.getPoint( t1 );\r\n\t\tconst pt2 = this.getPoint( t2 );\r\n\r\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\r\n\r\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\r\n\r\n\t\treturn tangent;\r\n\r\n\t}\r\n\r\n\tgetTangentAt( u, optionalTarget ) {\r\n\r\n\t\tconst t = this.getUtoTmapping( u );\r\n\t\treturn this.getTangent( t, optionalTarget );\r\n\r\n\t}\r\n\r\n\tcomputeFrenetFrames( segments, closed ) {\r\n\r\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n\r\n\t\tconst normal = new Vector3();\r\n\r\n\t\tconst tangents = [];\r\n\t\tconst normals = [];\r\n\t\tconst binormals = [];\r\n\r\n\t\tconst vec = new Vector3();\r\n\t\tconst mat = new Matrix4();\r\n\r\n\t\t// compute the tangent vectors for each segment on the curve\r\n\r\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\r\n\r\n\t\t\tconst u = i / segments;\r\n\r\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\r\n\r\n\t\t}\r\n\r\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t// and in the direction of the minimum tangent xyz component\r\n\r\n\t\tnormals[ 0 ] = new Vector3();\r\n\t\tbinormals[ 0 ] = new Vector3();\r\n\t\tlet min = Number.MAX_VALUE;\r\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\r\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\r\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\r\n\r\n\t\tif ( tx <= min ) {\r\n\r\n\t\t\tmin = tx;\r\n\t\t\tnormal.set( 1, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( ty <= min ) {\r\n\r\n\t\t\tmin = ty;\r\n\t\t\tnormal.set( 0, 1, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( tz <= min ) {\r\n\r\n\t\t\tnormal.set( 0, 0, 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\r\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\r\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\r\n\r\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\r\n\r\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\r\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\r\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\r\n\t\t\tif ( vec.length() > Number.EPSILON ) {\r\n\r\n\t\t\t\tvec.normalize();\r\n\r\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\r\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\r\n\t\tif ( closed === true ) {\r\n\r\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\r\n\t\t\ttheta /= segments;\r\n\r\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\r\n\r\n\t\t\t\ttheta = - theta;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\r\n\r\n\t\t\t\t// twist a little...\r\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttangents: tangents,\r\n\t\t\tnormals: normals,\r\n\t\t\tbinormals: binormals\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.6,\r\n\t\t\t\ttype: 'Curve',\r\n\t\t\t\tgenerator: 'Curve.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\r\n\t\tdata.type = this.type;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass EllipseCurve extends Curve {\r\n\r\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isEllipseCurve = true;\r\n\r\n\t\tthis.type = 'EllipseCurve';\r\n\r\n\t\tthis.aX = aX;\r\n\t\tthis.aY = aY;\r\n\r\n\t\tthis.xRadius = xRadius;\r\n\t\tthis.yRadius = yRadius;\r\n\r\n\t\tthis.aStartAngle = aStartAngle;\r\n\t\tthis.aEndAngle = aEndAngle;\r\n\r\n\t\tthis.aClockwise = aClockwise;\r\n\r\n\t\tthis.aRotation = aRotation;\r\n\r\n\t}\r\n\r\n\tgetPoint( t, optionalTarget = new Vector2() ) {\r\n\r\n\t\tconst point = optionalTarget;\r\n\r\n\t\tconst twoPi = Math.PI * 2;\r\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\r\n\r\n\t\t// ensures that deltaAngle is 0 .. 2 PI\r\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\r\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\r\n\r\n\t\tif ( deltaAngle < Number.EPSILON ) {\r\n\r\n\t\t\tif ( samePoints ) {\r\n\r\n\t\t\t\tdeltaAngle = 0;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdeltaAngle = twoPi;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.aClockwise === true && ! samePoints ) {\r\n\r\n\t\t\tif ( deltaAngle === twoPi ) {\r\n\r\n\t\t\t\tdeltaAngle = - twoPi;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\r\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\r\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\r\n\r\n\t\tif ( this.aRotation !== 0 ) {\r\n\r\n\t\t\tconst cos = Math.cos( this.aRotation );\r\n\t\t\tconst sin = Math.sin( this.aRotation );\r\n\r\n\t\t\tconst tx = x - this.aX;\r\n\t\t\tconst ty = y - this.aY;\r\n\r\n\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\tx = tx * cos - ty * sin + this.aX;\r\n\t\t\ty = tx * sin + ty * cos + this.aY;\r\n\r\n\t\t}\r\n\r\n\t\treturn point.set( x, y );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.aX = source.aX;\r\n\t\tthis.aY = source.aY;\r\n\r\n\t\tthis.xRadius = source.xRadius;\r\n\t\tthis.yRadius = source.yRadius;\r\n\r\n\t\tthis.aStartAngle = source.aStartAngle;\r\n\t\tthis.aEndAngle = source.aEndAngle;\r\n\r\n\t\tthis.aClockwise = source.aClockwise;\r\n\r\n\t\tthis.aRotation = source.aRotation;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.aX = this.aX;\r\n\t\tdata.aY = this.aY;\r\n\r\n\t\tdata.xRadius = this.xRadius;\r\n\t\tdata.yRadius = this.yRadius;\r\n\r\n\t\tdata.aStartAngle = this.aStartAngle;\r\n\t\tdata.aEndAngle = this.aEndAngle;\r\n\r\n\t\tdata.aClockwise = this.aClockwise;\r\n\r\n\t\tdata.aRotation = this.aRotation;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tsuper.fromJSON( json );\r\n\r\n\t\tthis.aX = json.aX;\r\n\t\tthis.aY = json.aY;\r\n\r\n\t\tthis.xRadius = json.xRadius;\r\n\t\tthis.yRadius = json.yRadius;\r\n\r\n\t\tthis.aStartAngle = json.aStartAngle;\r\n\t\tthis.aEndAngle = json.aEndAngle;\r\n\r\n\t\tthis.aClockwise = json.aClockwise;\r\n\r\n\t\tthis.aRotation = json.aRotation;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass ArcCurve extends EllipseCurve {\r\n\r\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n\t\tthis.isArcCurve = true;\r\n\r\n\t\tthis.type = 'ArcCurve';\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Centripetal CatmullRom Curve - which is useful for avoiding\r\n * cusps and self-intersections in non-uniform catmull rom curves.\r\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n *\r\n * curve.type accepts centripetal(default), chordal and catmullrom\r\n * curve.tension is used for catmullrom which defaults to 0.5\r\n */\r\n\r\n\r\n/*\r\nBased on an optimized c++ solution in\r\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n - http://ideone.com/NoEbVM\r\n\r\nThis CubicPoly class could be used for reusing some variables and calculations,\r\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\nwhich can be placed in CurveUtils.\r\n*/\r\n\r\nfunction CubicPoly() {\r\n\r\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\r\n\r\n\t/*\r\n\t * Compute coefficients for a cubic polynomial\r\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t * such that\r\n\t *   p(0) = x0, p(1) = x1\r\n\t *  and\r\n\t *   p'(0) = t0, p'(1) = t1.\r\n\t */\r\n\tfunction init( x0, x1, t0, t1 ) {\r\n\r\n\t\tc0 = x0;\r\n\t\tc1 = t0;\r\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\r\n\t}\r\n\r\n\treturn {\r\n\r\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\r\n\r\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n\r\n\t\t},\r\n\r\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n\r\n\t\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n\r\n\t\t\t// rescale tangents for parametrization in [0,1]\r\n\t\t\tt1 *= dt1;\r\n\t\t\tt2 *= dt1;\r\n\r\n\t\t\tinit( x1, x2, t1, t2 );\r\n\r\n\t\t},\r\n\r\n\t\tcalc: function ( t ) {\r\n\r\n\t\t\tconst t2 = t * t;\r\n\t\t\tconst t3 = t2 * t;\r\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}\r\n\r\n//\r\n\r\nconst tmp = /*@__PURE__*/ new Vector3();\r\nconst px = /*@__PURE__*/ new CubicPoly();\r\nconst py = /*@__PURE__*/ new CubicPoly();\r\nconst pz = /*@__PURE__*/ new CubicPoly();\r\n\r\nclass CatmullRomCurve3 extends Curve {\r\n\r\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isCatmullRomCurve3 = true;\r\n\r\n\t\tthis.type = 'CatmullRomCurve3';\r\n\r\n\t\tthis.points = points;\r\n\t\tthis.closed = closed;\r\n\t\tthis.curveType = curveType;\r\n\t\tthis.tension = tension;\r\n\r\n\t}\r\n\r\n\tgetPoint( t, optionalTarget = new Vector3() ) {\r\n\r\n\t\tconst point = optionalTarget;\r\n\r\n\t\tconst points = this.points;\r\n\t\tconst l = points.length;\r\n\r\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\r\n\t\tlet intPoint = Math.floor( p );\r\n\t\tlet weight = p - intPoint;\r\n\r\n\t\tif ( this.closed ) {\r\n\r\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\r\n\r\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\r\n\r\n\t\t\tintPoint = l - 2;\r\n\t\t\tweight = 1;\r\n\r\n\t\t}\r\n\r\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\r\n\r\n\t\tif ( this.closed || intPoint > 0 ) {\r\n\r\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// extrapolate first point\r\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n\t\t\tp0 = tmp;\r\n\r\n\t\t}\r\n\r\n\t\tconst p1 = points[ intPoint % l ];\r\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\r\n\r\n\t\tif ( this.closed || intPoint + 2 < l ) {\r\n\r\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// extrapolate last point\r\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\r\n\t\t\tp3 = tmp;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\r\n\r\n\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\r\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n\r\n\t\t\t// safety check for repeated points\r\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\r\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\r\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\r\n\r\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n\r\n\t\t} else if ( this.curveType === 'catmullrom' ) {\r\n\r\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\r\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\r\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\r\n\r\n\t\t}\r\n\r\n\t\tpoint.set(\r\n\t\t\tpx.calc( weight ),\r\n\t\t\tpy.calc( weight ),\r\n\t\t\tpz.calc( weight )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst point = source.points[ i ];\r\n\r\n\t\t\tthis.points.push( point.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tthis.closed = source.closed;\r\n\t\tthis.curveType = source.curveType;\r\n\t\tthis.tension = source.tension;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.points = [];\r\n\r\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst point = this.points[ i ];\r\n\t\t\tdata.points.push( point.toArray() );\r\n\r\n\t\t}\r\n\r\n\t\tdata.closed = this.closed;\r\n\t\tdata.curveType = this.curveType;\r\n\t\tdata.tension = this.tension;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tsuper.fromJSON( json );\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst point = json.points[ i ];\r\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\r\n\r\n\t\t}\r\n\r\n\t\tthis.closed = json.closed;\r\n\t\tthis.curveType = json.curveType;\r\n\t\tthis.tension = json.tension;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Bezier Curves formulas obtained from\r\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n */\r\n\r\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\r\n\r\n\tconst v0 = ( p2 - p0 ) * 0.5;\r\n\tconst v1 = ( p3 - p1 ) * 0.5;\r\n\tconst t2 = t * t;\r\n\tconst t3 = t * t2;\r\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n}\r\n\r\n//\r\n\r\nfunction QuadraticBezierP0( t, p ) {\r\n\r\n\tconst k = 1 - t;\r\n\treturn k * k * p;\r\n\r\n}\r\n\r\nfunction QuadraticBezierP1( t, p ) {\r\n\r\n\treturn 2 * ( 1 - t ) * t * p;\r\n\r\n}\r\n\r\nfunction QuadraticBezierP2( t, p ) {\r\n\r\n\treturn t * t * p;\r\n\r\n}\r\n\r\nfunction QuadraticBezier( t, p0, p1, p2 ) {\r\n\r\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\r\n\t\tQuadraticBezierP2( t, p2 );\r\n\r\n}\r\n\r\n//\r\n\r\nfunction CubicBezierP0( t, p ) {\r\n\r\n\tconst k = 1 - t;\r\n\treturn k * k * k * p;\r\n\r\n}\r\n\r\nfunction CubicBezierP1( t, p ) {\r\n\r\n\tconst k = 1 - t;\r\n\treturn 3 * k * k * t * p;\r\n\r\n}\r\n\r\nfunction CubicBezierP2( t, p ) {\r\n\r\n\treturn 3 * ( 1 - t ) * t * t * p;\r\n\r\n}\r\n\r\nfunction CubicBezierP3( t, p ) {\r\n\r\n\treturn t * t * t * p;\r\n\r\n}\r\n\r\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\r\n\r\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\r\n\t\tCubicBezierP3( t, p3 );\r\n\r\n}\r\n\r\nclass CubicBezierCurve extends Curve {\r\n\r\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isCubicBezierCurve = true;\r\n\r\n\t\tthis.type = 'CubicBezierCurve';\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\r\n\t}\r\n\r\n\tgetPoint( t, optionalTarget = new Vector2() ) {\r\n\r\n\t\tconst point = optionalTarget;\r\n\r\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\r\n\r\n\t\tpoint.set(\r\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\r\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.v0.copy( source.v0 );\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\t\tthis.v3.copy( source.v3 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.v0 = this.v0.toArray();\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\t\tdata.v3 = this.v3.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tsuper.fromJSON( json );\r\n\r\n\t\tthis.v0.fromArray( json.v0 );\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\t\tthis.v3.fromArray( json.v3 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass CubicBezierCurve3 extends Curve {\r\n\r\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isCubicBezierCurve3 = true;\r\n\r\n\t\tthis.type = 'CubicBezierCurve3';\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\r\n\t}\r\n\r\n\tgetPoint( t, optionalTarget = new Vector3() ) {\r\n\r\n\t\tconst point = optionalTarget;\r\n\r\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\r\n\r\n\t\tpoint.set(\r\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\r\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\r\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.v0.copy( source.v0 );\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\t\tthis.v3.copy( source.v3 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.v0 = this.v0.toArray();\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\t\tdata.v3 = this.v3.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tsuper.fromJSON( json );\r\n\r\n\t\tthis.v0.fromArray( json.v0 );\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\t\tthis.v3.fromArray( json.v3 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass LineCurve extends Curve {\r\n\r\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isLineCurve = true;\r\n\r\n\t\tthis.type = 'LineCurve';\r\n\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t}\r\n\r\n\tgetPoint( t, optionalTarget = new Vector2() ) {\r\n\r\n\t\tconst point = optionalTarget;\r\n\r\n\t\tif ( t === 1 ) {\r\n\r\n\t\t\tpoint.copy( this.v2 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\r\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n\t\t}\r\n\r\n\t\treturn point;\r\n\r\n\t}\r\n\r\n\t// Line curve is linear, so we can overwrite default getPointAt\r\n\tgetPointAt( u, optionalTarget ) {\r\n\r\n\t\treturn this.getPoint( u, optionalTarget );\r\n\r\n\t}\r\n\r\n\tgetTangent( t, optionalTarget = new Vector2() ) {\r\n\r\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\r\n\r\n\t}\r\n\r\n\tgetTangentAt( u, optionalTarget ) {\r\n\r\n\t\treturn this.getTangent( u, optionalTarget );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tsuper.fromJSON( json );\r\n\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass LineCurve3 extends Curve {\r\n\r\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isLineCurve3 = true;\r\n\r\n\t\tthis.type = 'LineCurve3';\r\n\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t}\r\n\r\n\tgetPoint( t, optionalTarget = new Vector3() ) {\r\n\r\n\t\tconst point = optionalTarget;\r\n\r\n\t\tif ( t === 1 ) {\r\n\r\n\t\t\tpoint.copy( this.v2 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\r\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n\t\t}\r\n\r\n\t\treturn point;\r\n\r\n\t}\r\n\r\n\t// Line curve is linear, so we can overwrite default getPointAt\r\n\tgetPointAt( u, optionalTarget ) {\r\n\r\n\t\treturn this.getPoint( u, optionalTarget );\r\n\r\n\t}\r\n\r\n\tgetTangent( t, optionalTarget = new Vector3() ) {\r\n\r\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\r\n\r\n\t}\r\n\r\n\tgetTangentAt( u, optionalTarget ) {\r\n\r\n\t\treturn this.getTangent( u, optionalTarget );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tsuper.fromJSON( json );\r\n\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass QuadraticBezierCurve extends Curve {\r\n\r\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isQuadraticBezierCurve = true;\r\n\r\n\t\tthis.type = 'QuadraticBezierCurve';\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t}\r\n\r\n\tgetPoint( t, optionalTarget = new Vector2() ) {\r\n\r\n\t\tconst point = optionalTarget;\r\n\r\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\r\n\r\n\t\tpoint.set(\r\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\r\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.v0.copy( source.v0 );\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.v0 = this.v0.toArray();\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tsuper.fromJSON( json );\r\n\r\n\t\tthis.v0.fromArray( json.v0 );\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass QuadraticBezierCurve3 extends Curve {\r\n\r\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isQuadraticBezierCurve3 = true;\r\n\r\n\t\tthis.type = 'QuadraticBezierCurve3';\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t}\r\n\r\n\tgetPoint( t, optionalTarget = new Vector3() ) {\r\n\r\n\t\tconst point = optionalTarget;\r\n\r\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\r\n\r\n\t\tpoint.set(\r\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\r\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\r\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.v0.copy( source.v0 );\r\n\t\tthis.v1.copy( source.v1 );\r\n\t\tthis.v2.copy( source.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.v0 = this.v0.toArray();\r\n\t\tdata.v1 = this.v1.toArray();\r\n\t\tdata.v2 = this.v2.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tsuper.fromJSON( json );\r\n\r\n\t\tthis.v0.fromArray( json.v0 );\r\n\t\tthis.v1.fromArray( json.v1 );\r\n\t\tthis.v2.fromArray( json.v2 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass SplineCurve extends Curve {\r\n\r\n\tconstructor( points = [] ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isSplineCurve = true;\r\n\r\n\t\tthis.type = 'SplineCurve';\r\n\r\n\t\tthis.points = points;\r\n\r\n\t}\r\n\r\n\tgetPoint( t, optionalTarget = new Vector2() ) {\r\n\r\n\t\tconst point = optionalTarget;\r\n\r\n\t\tconst points = this.points;\r\n\t\tconst p = ( points.length - 1 ) * t;\r\n\r\n\t\tconst intPoint = Math.floor( p );\r\n\t\tconst weight = p - intPoint;\r\n\r\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n\t\tconst p1 = points[ intPoint ];\r\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\t\tpoint.set(\r\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\r\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\r\n\t\t);\r\n\r\n\t\treturn point;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst point = source.points[ i ];\r\n\r\n\t\t\tthis.points.push( point.clone() );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.points = [];\r\n\r\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst point = this.points[ i ];\r\n\t\t\tdata.points.push( point.toArray() );\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tsuper.fromJSON( json );\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst point = json.points[ i ];\r\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nvar Curves = /*#__PURE__*/Object.freeze({\r\n\t__proto__: null,\r\n\tArcCurve: ArcCurve,\r\n\tCatmullRomCurve3: CatmullRomCurve3,\r\n\tCubicBezierCurve: CubicBezierCurve,\r\n\tCubicBezierCurve3: CubicBezierCurve3,\r\n\tEllipseCurve: EllipseCurve,\r\n\tLineCurve: LineCurve,\r\n\tLineCurve3: LineCurve3,\r\n\tQuadraticBezierCurve: QuadraticBezierCurve,\r\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\r\n\tSplineCurve: SplineCurve\r\n});\r\n\r\n/**************************************************************\r\n *\tCurved Path - a curve path is simply a array of connected\r\n *  curves, but retains the api of a curve\r\n **************************************************************/\r\n\r\nclass CurvePath extends Curve {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'CurvePath';\r\n\r\n\t\tthis.curves = [];\r\n\t\tthis.autoClose = false; // Automatically closes the path\r\n\r\n\t}\r\n\r\n\tadd( curve ) {\r\n\r\n\t\tthis.curves.push( curve );\r\n\r\n\t}\r\n\r\n\tclosePath() {\r\n\r\n\t\t// Add a line curve if start and end of lines are not connected\r\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\r\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n\r\n\t\tif ( ! startPoint.equals( endPoint ) ) {\r\n\r\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\r\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// To get accurate point with reference to\r\n\t// entire path distance at time t,\r\n\t// following has to be done:\r\n\r\n\t// 1. Length of each sub path have to be known\r\n\t// 2. Locate and identify type of curve\r\n\t// 3. Get t for the curve\r\n\t// 4. Return curve.getPointAt(t')\r\n\r\n\tgetPoint( t, optionalTarget ) {\r\n\r\n\t\tconst d = t * this.getLength();\r\n\t\tconst curveLengths = this.getCurveLengths();\r\n\t\tlet i = 0;\r\n\r\n\t\t// To think about boundaries points.\r\n\r\n\t\twhile ( i < curveLengths.length ) {\r\n\r\n\t\t\tif ( curveLengths[ i ] >= d ) {\r\n\r\n\t\t\t\tconst diff = curveLengths[ i ] - d;\r\n\t\t\t\tconst curve = this.curves[ i ];\r\n\r\n\t\t\t\tconst segmentLength = curve.getLength();\r\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\r\n\r\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ti ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t\t// loop where sum != 0, sum > d , sum+1 <d\r\n\r\n\t}\r\n\r\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n\t// getPoint() depends on getLength\r\n\r\n\tgetLength() {\r\n\r\n\t\tconst lens = this.getCurveLengths();\r\n\t\treturn lens[ lens.length - 1 ];\r\n\r\n\t}\r\n\r\n\t// cacheLengths must be recalculated.\r\n\tupdateArcLengths() {\r\n\r\n\t\tthis.needsUpdate = true;\r\n\t\tthis.cacheLengths = null;\r\n\t\tthis.getCurveLengths();\r\n\r\n\t}\r\n\r\n\t// Compute lengths and cache them\r\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\r\n\tgetCurveLengths() {\r\n\r\n\t\t// We use cache values if curves and cache array are same length\r\n\r\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n\r\n\t\t\treturn this.cacheLengths;\r\n\r\n\t\t}\r\n\r\n\t\t// Get length of sub-curve\r\n\t\t// Push sums into cached array\r\n\r\n\t\tconst lengths = [];\r\n\t\tlet sums = 0;\r\n\r\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\r\n\r\n\t\t\tsums += this.curves[ i ].getLength();\r\n\t\t\tlengths.push( sums );\r\n\r\n\t\t}\r\n\r\n\t\tthis.cacheLengths = lengths;\r\n\r\n\t\treturn lengths;\r\n\r\n\t}\r\n\r\n\tgetSpacedPoints( divisions = 40 ) {\r\n\r\n\t\tconst points = [];\r\n\r\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\r\n\r\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.autoClose ) {\r\n\r\n\t\t\tpoints.push( points[ 0 ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn points;\r\n\r\n\t}\r\n\r\n\tgetPoints( divisions = 12 ) {\r\n\r\n\t\tconst points = [];\r\n\t\tlet last;\r\n\r\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\r\n\r\n\t\t\tconst curve = curves[ i ];\r\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\r\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\r\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\r\n\t\t\t\t\t\t: divisions;\r\n\r\n\t\t\tconst pts = curve.getPoints( resolution );\r\n\r\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\r\n\r\n\t\t\t\tconst point = pts[ j ];\r\n\r\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\r\n\r\n\t\t\t\tpoints.push( point );\r\n\t\t\t\tlast = point;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\r\n\r\n\t\t\tpoints.push( points[ 0 ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn points;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.curves = [];\r\n\r\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst curve = source.curves[ i ];\r\n\r\n\t\t\tthis.curves.push( curve.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tthis.autoClose = source.autoClose;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.autoClose = this.autoClose;\r\n\t\tdata.curves = [];\r\n\r\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst curve = this.curves[ i ];\r\n\t\t\tdata.curves.push( curve.toJSON() );\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tsuper.fromJSON( json );\r\n\r\n\t\tthis.autoClose = json.autoClose;\r\n\t\tthis.curves = [];\r\n\r\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst curve = json.curves[ i ];\r\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Path extends CurvePath {\r\n\r\n\tconstructor( points ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'Path';\r\n\r\n\t\tthis.currentPoint = new Vector2();\r\n\r\n\t\tif ( points ) {\r\n\r\n\t\t\tthis.setFromPoints( points );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetFromPoints( points ) {\r\n\r\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\r\n\r\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmoveTo( x, y ) {\r\n\r\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlineTo( x, y ) {\r\n\r\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\r\n\t\tthis.curves.push( curve );\r\n\r\n\t\tthis.currentPoint.set( x, y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\r\n\r\n\t\tconst curve = new QuadraticBezierCurve(\r\n\t\t\tthis.currentPoint.clone(),\r\n\t\t\tnew Vector2( aCPx, aCPy ),\r\n\t\t\tnew Vector2( aX, aY )\r\n\t\t);\r\n\r\n\t\tthis.curves.push( curve );\r\n\r\n\t\tthis.currentPoint.set( aX, aY );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\r\n\r\n\t\tconst curve = new CubicBezierCurve(\r\n\t\t\tthis.currentPoint.clone(),\r\n\t\t\tnew Vector2( aCP1x, aCP1y ),\r\n\t\t\tnew Vector2( aCP2x, aCP2y ),\r\n\t\t\tnew Vector2( aX, aY )\r\n\t\t);\r\n\r\n\t\tthis.curves.push( curve );\r\n\r\n\t\tthis.currentPoint.set( aX, aY );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsplineThru( pts /*Array of Vector*/ ) {\r\n\r\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\r\n\r\n\t\tconst curve = new SplineCurve( npts );\r\n\t\tthis.curves.push( curve );\r\n\r\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\t\tconst x0 = this.currentPoint.x;\r\n\t\tconst y0 = this.currentPoint.y;\r\n\r\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\r\n\t\t\taStartAngle, aEndAngle, aClockwise );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\t\tconst x0 = this.currentPoint.x;\r\n\t\tconst y0 = this.currentPoint.y;\r\n\r\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\r\n\r\n\t\tif ( this.curves.length > 0 ) {\r\n\r\n\t\t\t// if a previous curve is present, attempt to join\r\n\t\t\tconst firstPoint = curve.getPoint( 0 );\r\n\r\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\r\n\r\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.curves.push( curve );\r\n\r\n\t\tconst lastPoint = curve.getPoint( 1 );\r\n\t\tthis.currentPoint.copy( lastPoint );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.currentPoint.copy( source.currentPoint );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.currentPoint = this.currentPoint.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tsuper.fromJSON( json );\r\n\r\n\t\tthis.currentPoint.fromArray( json.currentPoint );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass LatheGeometry extends BufferGeometry {\r\n\r\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'LatheGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tpoints: points,\r\n\t\t\tsegments: segments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength\r\n\t\t};\r\n\r\n\t\tsegments = Math.floor( segments );\r\n\r\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\r\n\r\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\r\n\r\n\t\t// buffers\r\n\r\n\t\tconst indices = [];\r\n\t\tconst vertices = [];\r\n\t\tconst uvs = [];\r\n\t\tconst initNormals = [];\r\n\t\tconst normals = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tconst inverseSegments = 1.0 / segments;\r\n\t\tconst vertex = new Vector3();\r\n\t\tconst uv = new Vector2();\r\n\t\tconst normal = new Vector3();\r\n\t\tconst curNormal = new Vector3();\r\n\t\tconst prevNormal = new Vector3();\r\n\t\tlet dx = 0;\r\n\t\tlet dy = 0;\r\n\r\n\t\t// pre-compute normals for initial \"meridian\"\r\n\r\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\r\n\r\n\t\t\tswitch ( j ) {\r\n\r\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\r\n\r\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\r\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\r\n\r\n\t\t\t\t\tnormal.x = dy * 1.0;\r\n\t\t\t\t\tnormal.y = - dx;\r\n\t\t\t\t\tnormal.z = dy * 0.0;\r\n\r\n\t\t\t\t\tprevNormal.copy( normal );\r\n\r\n\t\t\t\t\tnormal.normalize();\r\n\r\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\r\n\r\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\r\n\r\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\r\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\r\n\r\n\t\t\t\t\tnormal.x = dy * 1.0;\r\n\t\t\t\t\tnormal.y = - dx;\r\n\t\t\t\t\tnormal.z = dy * 0.0;\r\n\r\n\t\t\t\t\tcurNormal.copy( normal );\r\n\r\n\t\t\t\t\tnormal.x += prevNormal.x;\r\n\t\t\t\t\tnormal.y += prevNormal.y;\r\n\t\t\t\t\tnormal.z += prevNormal.z;\r\n\r\n\t\t\t\t\tnormal.normalize();\r\n\r\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t\tprevNormal.copy( curNormal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// generate vertices, uvs and normals\r\n\r\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\r\n\r\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\r\n\r\n\t\t\tconst sin = Math.sin( phi );\r\n\t\t\tconst cos = Math.cos( phi );\r\n\r\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = points[ j ].x * sin;\r\n\t\t\t\tvertex.y = points[ j ].y;\r\n\t\t\t\tvertex.z = points[ j ].x * cos;\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuv.x = i / segments;\r\n\t\t\t\tuv.y = j / ( points.length - 1 );\r\n\r\n\t\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\r\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\r\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\r\n\r\n\t\t\t\tnormals.push( x, y, z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// indices\r\n\r\n\t\tfor ( let i = 0; i < segments; i ++ ) {\r\n\r\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\r\n\r\n\t\t\t\tconst base = j + i * points.length;\r\n\r\n\t\t\t\tconst a = base;\r\n\t\t\t\tconst b = base + points.length;\r\n\t\t\t\tconst c = base + points.length + 1;\r\n\t\t\t\tconst d = base + 1;\r\n\r\n\t\t\t\t// faces\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( c, d, b );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass CapsuleGeometry extends LatheGeometry {\r\n\r\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\r\n\r\n\t\tconst path = new Path();\r\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\r\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\r\n\r\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\r\n\r\n\t\tthis.type = 'CapsuleGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tlength: length,\r\n\t\t\tcapSegments: capSegments,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass CircleGeometry extends BufferGeometry {\r\n\r\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'CircleGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tsegments: segments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tsegments = Math.max( 3, segments );\r\n\r\n\t\t// buffers\r\n\r\n\t\tconst indices = [];\r\n\t\tconst vertices = [];\r\n\t\tconst normals = [];\r\n\t\tconst uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tconst vertex = new Vector3();\r\n\t\tconst uv = new Vector2();\r\n\r\n\t\t// center point\r\n\r\n\t\tvertices.push( 0, 0, 0 );\r\n\t\tnormals.push( 0, 0, 1 );\r\n\t\tuvs.push( 0.5, 0.5 );\r\n\r\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\r\n\r\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\r\n\r\n\t\t\t// vertex\r\n\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t// normal\r\n\r\n\t\t\tnormals.push( 0, 0, 1 );\r\n\r\n\t\t\t// uvs\r\n\r\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\r\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\r\n\r\n\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t}\r\n\r\n\t\t// indices\r\n\r\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\r\n\r\n\t\t\tindices.push( i, i + 1, 0 );\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass CylinderGeometry extends BufferGeometry {\r\n\r\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'CylinderGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradiusTop: radiusTop,\r\n\t\t\tradiusBottom: radiusBottom,\r\n\t\t\theight: height,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\topenEnded: openEnded,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tradialSegments = Math.floor( radialSegments );\r\n\t\theightSegments = Math.floor( heightSegments );\r\n\r\n\t\t// buffers\r\n\r\n\t\tconst indices = [];\r\n\t\tconst vertices = [];\r\n\t\tconst normals = [];\r\n\t\tconst uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tlet index = 0;\r\n\t\tconst indexArray = [];\r\n\t\tconst halfHeight = height / 2;\r\n\t\tlet groupStart = 0;\r\n\r\n\t\t// generate geometry\r\n\r\n\t\tgenerateTorso();\r\n\r\n\t\tif ( openEnded === false ) {\r\n\r\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\r\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t\tfunction generateTorso() {\r\n\r\n\t\t\tconst normal = new Vector3();\r\n\t\t\tconst vertex = new Vector3();\r\n\r\n\t\t\tlet groupCount = 0;\r\n\r\n\t\t\t// this will be used to calculate the normal\r\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\r\n\r\n\t\t\t// generate vertices, normals and uvs\r\n\r\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\t\t\tconst indexRow = [];\r\n\r\n\t\t\t\tconst v = y / heightSegments;\r\n\r\n\t\t\t\t// calculate the radius of the current row\r\n\r\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\r\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\t\t\tconst u = x / radialSegments;\r\n\r\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\r\n\r\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\r\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\r\n\r\n\t\t\t\t\t// vertex\r\n\r\n\t\t\t\t\tvertex.x = radius * sinTheta;\r\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\r\n\t\t\t\t\tvertex.z = radius * cosTheta;\r\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t\t// normal\r\n\r\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\r\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t\t// uv\r\n\r\n\t\t\t\t\tuvs.push( u, 1 - v );\r\n\r\n\t\t\t\t\t// save index of vertex in respective row\r\n\r\n\t\t\t\t\tindexRow.push( index ++ );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// now save vertices of the row in our index array\r\n\r\n\t\t\t\tindexArray.push( indexRow );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// generate indices\r\n\r\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\t\t\t\t// we use the index array to access the correct indices\r\n\r\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\r\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\r\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\r\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\r\n\r\n\t\t\t\t\t// faces\r\n\r\n\t\t\t\t\tif ( radiusTop > 0 || y !== 0 ) {\r\n\r\n\t\t\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\t\t\tgroupCount += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( radiusBottom > 0 || y !== heightSegments - 1 ) {\r\n\r\n\t\t\t\t\t\tindices.push( b, c, d );\r\n\t\t\t\t\t\tgroupCount += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// add a group to the geometry. this will ensure multi material support\r\n\r\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\r\n\r\n\t\t\t// calculate new start value for groups\r\n\r\n\t\t\tgroupStart += groupCount;\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateCap( top ) {\r\n\r\n\t\t\t// save the index of the first center vertex\r\n\t\t\tconst centerIndexStart = index;\r\n\r\n\t\t\tconst uv = new Vector2();\r\n\t\t\tconst vertex = new Vector3();\r\n\r\n\t\t\tlet groupCount = 0;\r\n\r\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\r\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\r\n\r\n\t\t\t// first we generate the center vertex data of the cap.\r\n\t\t\t// because the geometry needs one set of uvs per face,\r\n\t\t\t// we must generate a center vertex per face/segment\r\n\r\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tnormals.push( 0, sign, 0 );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuvs.push( 0.5, 0.5 );\r\n\r\n\t\t\t\t// increase index\r\n\r\n\t\t\t\tindex ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// save the index of the last center vertex\r\n\t\t\tconst centerIndexEnd = index;\r\n\r\n\t\t\t// now we generate the surrounding vertices, normals and uvs\r\n\r\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\t\tconst u = x / radialSegments;\r\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\r\n\r\n\t\t\t\tconst cosTheta = Math.cos( theta );\r\n\t\t\t\tconst sinTheta = Math.sin( theta );\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = radius * sinTheta;\r\n\t\t\t\tvertex.y = halfHeight * sign;\r\n\t\t\t\tvertex.z = radius * cosTheta;\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tnormals.push( 0, sign, 0 );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\r\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\r\n\t\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\t\t// increase index\r\n\r\n\t\t\t\tindex ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// generate indices\r\n\r\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\t\tconst c = centerIndexStart + x;\r\n\t\t\t\tconst i = centerIndexEnd + x;\r\n\r\n\t\t\t\tif ( top === true ) {\r\n\r\n\t\t\t\t\t// face top\r\n\r\n\t\t\t\t\tindices.push( i, i + 1, c );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// face bottom\r\n\r\n\t\t\t\t\tindices.push( i + 1, i, c );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroupCount += 3;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// add a group to the geometry. this will ensure multi material support\r\n\r\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\r\n\r\n\t\t\t// calculate new start value for groups\r\n\r\n\t\t\tgroupStart += groupCount;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass ConeGeometry extends CylinderGeometry {\r\n\r\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\r\n\r\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\r\n\r\n\t\tthis.type = 'ConeGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\theight: height,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\topenEnded: openEnded,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass PolyhedronGeometry extends BufferGeometry {\r\n\r\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'PolyhedronGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tvertices: vertices,\r\n\t\t\tindices: indices,\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t\t// default buffer data\r\n\r\n\t\tconst vertexBuffer = [];\r\n\t\tconst uvBuffer = [];\r\n\r\n\t\t// the subdivision creates the vertex buffer data\r\n\r\n\t\tsubdivide( detail );\r\n\r\n\t\t// all vertices should lie on a conceptual sphere with a given radius\r\n\r\n\t\tapplyRadius( radius );\r\n\r\n\t\t// finally, create the uv data\r\n\r\n\t\tgenerateUVs();\r\n\r\n\t\t// build non-indexed geometry\r\n\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\r\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\r\n\r\n\t\tif ( detail === 0 ) {\r\n\r\n\t\t\tthis.computeVertexNormals(); // flat normals\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.normalizeNormals(); // smooth normals\r\n\r\n\t\t}\r\n\r\n\t\t// helper functions\r\n\r\n\t\tfunction subdivide( detail ) {\r\n\r\n\t\t\tconst a = new Vector3();\r\n\t\t\tconst b = new Vector3();\r\n\t\t\tconst c = new Vector3();\r\n\r\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\r\n\r\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\r\n\r\n\t\t\t\t// get the vertices of the face\r\n\r\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\r\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\r\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\r\n\r\n\t\t\t\t// perform subdivision\r\n\r\n\t\t\t\tsubdivideFace( a, b, c, detail );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction subdivideFace( a, b, c, detail ) {\r\n\r\n\t\t\tconst cols = detail + 1;\r\n\r\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\r\n\r\n\t\t\tconst v = [];\r\n\r\n\t\t\t// construct all of the vertices for this subdivision\r\n\r\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\r\n\r\n\t\t\t\tv[ i ] = [];\r\n\r\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\r\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\r\n\r\n\t\t\t\tconst rows = cols - i;\r\n\r\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\r\n\r\n\t\t\t\t\tif ( j === 0 && i === cols ) {\r\n\r\n\t\t\t\t\t\tv[ i ][ j ] = aj;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// construct all of the faces\r\n\r\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\r\n\r\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n\r\n\t\t\t\t\tconst k = Math.floor( j / 2 );\r\n\r\n\t\t\t\t\tif ( j % 2 === 0 ) {\r\n\r\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\r\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\r\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\r\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\r\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction applyRadius( radius ) {\r\n\r\n\t\t\tconst vertex = new Vector3();\r\n\r\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\r\n\r\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\r\n\r\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\r\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\r\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\r\n\r\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\r\n\r\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\r\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\r\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateUVs() {\r\n\r\n\t\t\tconst vertex = new Vector3();\r\n\r\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\r\n\r\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\r\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\r\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\r\n\r\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\r\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\r\n\t\t\t\tuvBuffer.push( u, 1 - v );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcorrectUVs();\r\n\r\n\t\t\tcorrectSeam();\r\n\r\n\t\t}\r\n\r\n\t\tfunction correctSeam() {\r\n\r\n\t\t\t// handle case when face straddles the seam, see #3269\r\n\r\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\r\n\r\n\t\t\t\t// uv data of a single face\r\n\r\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\r\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\r\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\r\n\r\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\r\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\r\n\r\n\t\t\t\t// 0.9 is somewhat arbitrary\r\n\r\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\r\n\r\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\r\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\r\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction pushVertex( vertex ) {\r\n\r\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getVertexByIndex( index, vertex ) {\r\n\r\n\t\t\tconst stride = index * 3;\r\n\r\n\t\t\tvertex.x = vertices[ stride + 0 ];\r\n\t\t\tvertex.y = vertices[ stride + 1 ];\r\n\t\t\tvertex.z = vertices[ stride + 2 ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction correctUVs() {\r\n\r\n\t\t\tconst a = new Vector3();\r\n\t\t\tconst b = new Vector3();\r\n\t\t\tconst c = new Vector3();\r\n\r\n\t\t\tconst centroid = new Vector3();\r\n\r\n\t\t\tconst uvA = new Vector2();\r\n\t\t\tconst uvB = new Vector2();\r\n\t\t\tconst uvC = new Vector2();\r\n\r\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\r\n\r\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\r\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\r\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\r\n\r\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\r\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\r\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\r\n\r\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\r\n\r\n\t\t\t\tconst azi = azimuth( centroid );\r\n\r\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\r\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\r\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\r\n\r\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\r\n\r\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\r\n\r\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\r\n\t\tfunction azimuth( vector ) {\r\n\r\n\t\t\treturn Math.atan2( vector.z, - vector.x );\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// Angle above the XZ plane.\r\n\r\n\t\tfunction inclination( vector ) {\r\n\r\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass DodecahedronGeometry extends PolyhedronGeometry {\r\n\r\n\tconstructor( radius = 1, detail = 0 ) {\r\n\r\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\t\tconst r = 1 / t;\r\n\r\n\t\tconst vertices = [\r\n\r\n\t\t\t// (±1, ±1, ±1)\r\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\r\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\r\n\t\t\t1, - 1, - 1, 1, - 1, 1,\r\n\t\t\t1, 1, - 1, 1, 1, 1,\r\n\r\n\t\t\t// (0, ±1/φ, ±φ)\r\n\t\t\t0, - r, - t, 0, - r, t,\r\n\t\t\t0, r, - t, 0, r, t,\r\n\r\n\t\t\t// (±1/φ, ±φ, 0)\r\n\t\t\t- r, - t, 0, - r, t, 0,\r\n\t\t\tr, - t, 0, r, t, 0,\r\n\r\n\t\t\t// (±φ, 0, ±1/φ)\r\n\t\t\t- t, 0, - r, t, 0, - r,\r\n\t\t\t- t, 0, r, t, 0, r\r\n\t\t];\r\n\r\n\t\tconst indices = [\r\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\r\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\r\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\r\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\r\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\r\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\r\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\r\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\r\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\r\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\r\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\r\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\r\n\t\t];\r\n\r\n\t\tsuper( vertices, indices, radius, detail );\r\n\r\n\t\tthis.type = 'DodecahedronGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _v0 = /*@__PURE__*/ new Vector3();\r\nconst _v1$1 = /*@__PURE__*/ new Vector3();\r\nconst _normal = /*@__PURE__*/ new Vector3();\r\nconst _triangle = /*@__PURE__*/ new Triangle();\r\n\r\nclass EdgesGeometry extends BufferGeometry {\r\n\r\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'EdgesGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tgeometry: geometry,\r\n\t\t\tthresholdAngle: thresholdAngle\r\n\t\t};\r\n\r\n\t\tif ( geometry !== null ) {\r\n\r\n\t\t\tconst precisionPoints = 4;\r\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\r\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\r\n\r\n\t\t\tconst indexAttr = geometry.getIndex();\r\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\r\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\r\n\r\n\t\t\tconst indexArr = [ 0, 0, 0 ];\r\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\r\n\t\t\tconst hashes = new Array( 3 );\r\n\r\n\t\t\tconst edgeData = {};\r\n\t\t\tconst vertices = [];\r\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\r\n\r\n\t\t\t\tif ( indexAttr ) {\r\n\r\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\r\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\r\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tindexArr[ 0 ] = i;\r\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\r\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst { a, b, c } = _triangle;\r\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\r\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\r\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\r\n\t\t\t\t_triangle.getNormal( _normal );\r\n\r\n\t\t\t\t// create hashes for the edge from the vertices\r\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\r\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\r\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\r\n\r\n\t\t\t\t// skip degenerate triangles\r\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\r\n\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// iterate over every edge\r\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t// get the first and next vertex making up the edge\r\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\r\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\r\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\r\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\r\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\r\n\r\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\r\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\r\n\r\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\r\n\r\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\r\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\r\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\r\n\r\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\r\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\r\n\r\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\r\n\r\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\r\n\t\t\t\t\t\tedgeData[ hash ] = {\r\n\r\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\r\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\r\n\t\t\t\t\t\t\tnormal: _normal.clone(),\r\n\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\r\n\t\t\tfor ( const key in edgeData ) {\r\n\r\n\t\t\t\tif ( edgeData[ key ] ) {\r\n\r\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\r\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\r\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\r\n\r\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\r\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Shape extends Path {\r\n\r\n\tconstructor( points ) {\r\n\r\n\t\tsuper( points );\r\n\r\n\t\tthis.uuid = generateUUID();\r\n\r\n\t\tthis.type = 'Shape';\r\n\r\n\t\tthis.holes = [];\r\n\r\n\t}\r\n\r\n\tgetPointsHoles( divisions ) {\r\n\r\n\t\tconst holesPts = [];\r\n\r\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\r\n\r\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\r\n\r\n\t\t}\r\n\r\n\t\treturn holesPts;\r\n\r\n\t}\r\n\r\n\t// get points of shape and holes (keypoints based on segments parameter)\r\n\r\n\textractPoints( divisions ) {\r\n\r\n\t\treturn {\r\n\r\n\t\t\tshape: this.getPoints( divisions ),\r\n\t\t\tholes: this.getPointsHoles( divisions )\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.holes = [];\r\n\r\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst hole = source.holes[ i ];\r\n\r\n\t\t\tthis.holes.push( hole.clone() );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.holes = [];\r\n\r\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst hole = this.holes[ i ];\r\n\t\t\tdata.holes.push( hole.toJSON() );\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tsuper.fromJSON( json );\r\n\r\n\t\tthis.uuid = json.uuid;\r\n\t\tthis.holes = [];\r\n\r\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst hole = json.holes[ i ];\r\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Port from https://github.com/mapbox/earcut (v2.2.4)\r\n */\r\n\r\nconst Earcut = {\r\n\r\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\r\n\r\n\t\tconst hasHoles = holeIndices && holeIndices.length;\r\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\r\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\r\n\t\tconst triangles = [];\r\n\r\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\r\n\r\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\r\n\r\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\r\n\r\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\r\n\t\tif ( data.length > 80 * dim ) {\r\n\r\n\t\t\tminX = maxX = data[ 0 ];\r\n\t\t\tminY = maxY = data[ 1 ];\r\n\r\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\r\n\r\n\t\t\t\tx = data[ i ];\r\n\t\t\t\ty = data[ i + 1 ];\r\n\t\t\t\tif ( x < minX ) minX = x;\r\n\t\t\t\tif ( y < minY ) minY = y;\r\n\t\t\t\tif ( x > maxX ) maxX = x;\r\n\t\t\t\tif ( y > maxY ) maxY = y;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\r\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\r\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\r\n\r\n\t\t}\r\n\r\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\r\n\r\n\t\treturn triangles;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// create a circular doubly linked list from polygon points in the specified winding order\r\nfunction linkedList( data, start, end, dim, clockwise ) {\r\n\r\n\tlet i, last;\r\n\r\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\r\n\r\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\r\n\r\n\t} else {\r\n\r\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\r\n\r\n\t}\r\n\r\n\tif ( last && equals( last, last.next ) ) {\r\n\r\n\t\tremoveNode( last );\r\n\t\tlast = last.next;\r\n\r\n\t}\r\n\r\n\treturn last;\r\n\r\n}\r\n\r\n// eliminate colinear or duplicate points\r\nfunction filterPoints( start, end ) {\r\n\r\n\tif ( ! start ) return start;\r\n\tif ( ! end ) end = start;\r\n\r\n\tlet p = start,\r\n\t\tagain;\r\n\tdo {\r\n\r\n\t\tagain = false;\r\n\r\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\r\n\r\n\t\t\tremoveNode( p );\r\n\t\t\tp = end = p.prev;\r\n\t\t\tif ( p === p.next ) break;\r\n\t\t\tagain = true;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tp = p.next;\r\n\r\n\t\t}\r\n\r\n\t} while ( again || p !== end );\r\n\r\n\treturn end;\r\n\r\n}\r\n\r\n// main ear slicing loop which triangulates a polygon (given as a linked list)\r\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\r\n\r\n\tif ( ! ear ) return;\r\n\r\n\t// interlink polygon nodes in z-order\r\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\r\n\r\n\tlet stop = ear,\r\n\t\tprev, next;\r\n\r\n\t// iterate through ears, slicing them one by one\r\n\twhile ( ear.prev !== ear.next ) {\r\n\r\n\t\tprev = ear.prev;\r\n\t\tnext = ear.next;\r\n\r\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\r\n\r\n\t\t\t// cut off the triangle\r\n\t\t\ttriangles.push( prev.i / dim | 0 );\r\n\t\t\ttriangles.push( ear.i / dim | 0 );\r\n\t\t\ttriangles.push( next.i / dim | 0 );\r\n\r\n\t\t\tremoveNode( ear );\r\n\r\n\t\t\t// skipping the next vertex leads to less sliver triangles\r\n\t\t\tear = next.next;\r\n\t\t\tstop = next.next;\r\n\r\n\t\t\tcontinue;\r\n\r\n\t\t}\r\n\r\n\t\tear = next;\r\n\r\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\r\n\t\tif ( ear === stop ) {\r\n\r\n\t\t\t// try filtering points and slicing again\r\n\t\t\tif ( ! pass ) {\r\n\r\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\r\n\r\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\r\n\r\n\t\t\t} else if ( pass === 1 ) {\r\n\r\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\r\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\r\n\r\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\r\n\r\n\t\t\t} else if ( pass === 2 ) {\r\n\r\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n// check whether a polygon node forms a valid ear with adjacent nodes\r\nfunction isEar( ear ) {\r\n\r\n\tconst a = ear.prev,\r\n\t\tb = ear,\r\n\t\tc = ear.next;\r\n\r\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\r\n\r\n\t// now make sure we don't have other points inside the potential ear\r\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\r\n\r\n\t// triangle bbox; min & max are calculated like this for speed\r\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\r\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\r\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\r\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\r\n\r\n\tlet p = c.next;\r\n\twhile ( p !== a ) {\r\n\r\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\r\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\r\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\r\n\t\tp = p.next;\r\n\r\n\t}\r\n\r\n\treturn true;\r\n\r\n}\r\n\r\nfunction isEarHashed( ear, minX, minY, invSize ) {\r\n\r\n\tconst a = ear.prev,\r\n\t\tb = ear,\r\n\t\tc = ear.next;\r\n\r\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\r\n\r\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\r\n\r\n\t// triangle bbox; min & max are calculated like this for speed\r\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\r\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\r\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\r\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\r\n\r\n\t// z-order range for the current triangle bbox;\r\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\r\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\r\n\r\n\tlet p = ear.prevZ,\r\n\t\tn = ear.nextZ;\r\n\r\n\t// look for points inside the triangle in both directions\r\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\r\n\r\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\r\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\r\n\t\tp = p.prevZ;\r\n\r\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\r\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\r\n\t\tn = n.nextZ;\r\n\r\n\t}\r\n\r\n\t// look for remaining points in decreasing z-order\r\n\twhile ( p && p.z >= minZ ) {\r\n\r\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\r\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\r\n\t\tp = p.prevZ;\r\n\r\n\t}\r\n\r\n\t// look for remaining points in increasing z-order\r\n\twhile ( n && n.z <= maxZ ) {\r\n\r\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\r\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\r\n\t\tn = n.nextZ;\r\n\r\n\t}\r\n\r\n\treturn true;\r\n\r\n}\r\n\r\n// go through all polygon nodes and cure small local self-intersections\r\nfunction cureLocalIntersections( start, triangles, dim ) {\r\n\r\n\tlet p = start;\r\n\tdo {\r\n\r\n\t\tconst a = p.prev,\r\n\t\t\tb = p.next.next;\r\n\r\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\r\n\r\n\t\t\ttriangles.push( a.i / dim | 0 );\r\n\t\t\ttriangles.push( p.i / dim | 0 );\r\n\t\t\ttriangles.push( b.i / dim | 0 );\r\n\r\n\t\t\t// remove two nodes involved\r\n\t\t\tremoveNode( p );\r\n\t\t\tremoveNode( p.next );\r\n\r\n\t\t\tp = start = b;\r\n\r\n\t\t}\r\n\r\n\t\tp = p.next;\r\n\r\n\t} while ( p !== start );\r\n\r\n\treturn filterPoints( p );\r\n\r\n}\r\n\r\n// try splitting polygon into two and triangulate them independently\r\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\r\n\r\n\t// look for a valid diagonal that divides the polygon into two\r\n\tlet a = start;\r\n\tdo {\r\n\r\n\t\tlet b = a.next.next;\r\n\t\twhile ( b !== a.prev ) {\r\n\r\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\r\n\r\n\t\t\t\t// split the polygon in two by the diagonal\r\n\t\t\t\tlet c = splitPolygon( a, b );\r\n\r\n\t\t\t\t// filter colinear points around the cuts\r\n\t\t\t\ta = filterPoints( a, a.next );\r\n\t\t\t\tc = filterPoints( c, c.next );\r\n\r\n\t\t\t\t// run earcut on each half\r\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\r\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tb = b.next;\r\n\r\n\t\t}\r\n\r\n\t\ta = a.next;\r\n\r\n\t} while ( a !== start );\r\n\r\n}\r\n\r\n// link every hole into the outer loop, producing a single-ring polygon without holes\r\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\r\n\r\n\tconst queue = [];\r\n\tlet i, len, start, end, list;\r\n\r\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\r\n\r\n\t\tstart = holeIndices[ i ] * dim;\r\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\r\n\t\tlist = linkedList( data, start, end, dim, false );\r\n\t\tif ( list === list.next ) list.steiner = true;\r\n\t\tqueue.push( getLeftmost( list ) );\r\n\r\n\t}\r\n\r\n\tqueue.sort( compareX );\r\n\r\n\t// process holes from left to right\r\n\tfor ( i = 0; i < queue.length; i ++ ) {\r\n\r\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\r\n\r\n\t}\r\n\r\n\treturn outerNode;\r\n\r\n}\r\n\r\nfunction compareX( a, b ) {\r\n\r\n\treturn a.x - b.x;\r\n\r\n}\r\n\r\n// find a bridge between vertices that connects hole with an outer ring and link it\r\nfunction eliminateHole( hole, outerNode ) {\r\n\r\n\tconst bridge = findHoleBridge( hole, outerNode );\r\n\tif ( ! bridge ) {\r\n\r\n\t\treturn outerNode;\r\n\r\n\t}\r\n\r\n\tconst bridgeReverse = splitPolygon( bridge, hole );\r\n\r\n\t// filter collinear points around the cuts\r\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\r\n\treturn filterPoints( bridge, bridge.next );\r\n\r\n}\r\n\r\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\r\nfunction findHoleBridge( hole, outerNode ) {\r\n\r\n\tlet p = outerNode,\r\n\t\tqx = - Infinity,\r\n\t\tm;\r\n\r\n\tconst hx = hole.x, hy = hole.y;\r\n\r\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\r\n\t// segment's endpoint with lesser x will be potential connection point\r\n\tdo {\r\n\r\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\r\n\r\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\r\n\t\t\tif ( x <= hx && x > qx ) {\r\n\r\n\t\t\t\tqx = x;\r\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\r\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tp = p.next;\r\n\r\n\t} while ( p !== outerNode );\r\n\r\n\tif ( ! m ) return null;\r\n\r\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\r\n\t// if there are no points found, we have a valid connection;\r\n\t// otherwise choose the point of the minimum angle with the ray as connection point\r\n\r\n\tconst stop = m,\r\n\t\tmx = m.x,\r\n\t\tmy = m.y;\r\n\tlet tanMin = Infinity, tan;\r\n\r\n\tp = m;\r\n\r\n\tdo {\r\n\r\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\r\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\r\n\r\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\r\n\r\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\r\n\r\n\t\t\t\tm = p;\r\n\t\t\t\ttanMin = tan;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tp = p.next;\r\n\r\n\t} while ( p !== stop );\r\n\r\n\treturn m;\r\n\r\n}\r\n\r\n// whether sector in vertex m contains sector in vertex p in the same coordinates\r\nfunction sectorContainsSector( m, p ) {\r\n\r\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\r\n\r\n}\r\n\r\n// interlink polygon nodes in z-order\r\nfunction indexCurve( start, minX, minY, invSize ) {\r\n\r\n\tlet p = start;\r\n\tdo {\r\n\r\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\r\n\t\tp.prevZ = p.prev;\r\n\t\tp.nextZ = p.next;\r\n\t\tp = p.next;\r\n\r\n\t} while ( p !== start );\r\n\r\n\tp.prevZ.nextZ = null;\r\n\tp.prevZ = null;\r\n\r\n\tsortLinked( p );\r\n\r\n}\r\n\r\n// Simon Tatham's linked list merge sort algorithm\r\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\r\nfunction sortLinked( list ) {\r\n\r\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\r\n\t\tinSize = 1;\r\n\r\n\tdo {\r\n\r\n\t\tp = list;\r\n\t\tlist = null;\r\n\t\ttail = null;\r\n\t\tnumMerges = 0;\r\n\r\n\t\twhile ( p ) {\r\n\r\n\t\t\tnumMerges ++;\r\n\t\t\tq = p;\r\n\t\t\tpSize = 0;\r\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\r\n\r\n\t\t\t\tpSize ++;\r\n\t\t\t\tq = q.nextZ;\r\n\t\t\t\tif ( ! q ) break;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tqSize = inSize;\r\n\r\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\r\n\r\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\r\n\r\n\t\t\t\t\te = p;\r\n\t\t\t\t\tp = p.nextZ;\r\n\t\t\t\t\tpSize --;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\te = q;\r\n\t\t\t\t\tq = q.nextZ;\r\n\t\t\t\t\tqSize --;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( tail ) tail.nextZ = e;\r\n\t\t\t\telse list = e;\r\n\r\n\t\t\t\te.prevZ = tail;\r\n\t\t\t\ttail = e;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp = q;\r\n\r\n\t\t}\r\n\r\n\t\ttail.nextZ = null;\r\n\t\tinSize *= 2;\r\n\r\n\t} while ( numMerges > 1 );\r\n\r\n\treturn list;\r\n\r\n}\r\n\r\n// z-order of a point given coords and inverse of the longer side of data bbox\r\nfunction zOrder( x, y, minX, minY, invSize ) {\r\n\r\n\t// coords are transformed into non-negative 15-bit integer range\r\n\tx = ( x - minX ) * invSize | 0;\r\n\ty = ( y - minY ) * invSize | 0;\r\n\r\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\r\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\r\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\r\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\r\n\r\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\r\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\r\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\r\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\r\n\r\n\treturn x | ( y << 1 );\r\n\r\n}\r\n\r\n// find the leftmost node of a polygon ring\r\nfunction getLeftmost( start ) {\r\n\r\n\tlet p = start,\r\n\t\tleftmost = start;\r\n\tdo {\r\n\r\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\r\n\t\tp = p.next;\r\n\r\n\t} while ( p !== start );\r\n\r\n\treturn leftmost;\r\n\r\n}\r\n\r\n// check if a point lies within a convex triangle\r\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\r\n\r\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\r\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\r\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\r\n\r\n}\r\n\r\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\r\nfunction isValidDiagonal( a, b ) {\r\n\r\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // doesn't intersect other edges\r\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\r\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\r\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\r\n\r\n}\r\n\r\n// signed area of a triangle\r\nfunction area( p, q, r ) {\r\n\r\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\r\n\r\n}\r\n\r\n// check if two points are equal\r\nfunction equals( p1, p2 ) {\r\n\r\n\treturn p1.x === p2.x && p1.y === p2.y;\r\n\r\n}\r\n\r\n// check if two segments intersect\r\nfunction intersects( p1, q1, p2, q2 ) {\r\n\r\n\tconst o1 = sign( area( p1, q1, p2 ) );\r\n\tconst o2 = sign( area( p1, q1, q2 ) );\r\n\tconst o3 = sign( area( p2, q2, p1 ) );\r\n\tconst o4 = sign( area( p2, q2, q1 ) );\r\n\r\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\r\n\r\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\r\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\r\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\r\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\r\n\r\n\treturn false;\r\n\r\n}\r\n\r\n// for collinear points p, q, r, check if point q lies on segment pr\r\nfunction onSegment( p, q, r ) {\r\n\r\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\r\n\r\n}\r\n\r\nfunction sign( num ) {\r\n\r\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\r\n\r\n}\r\n\r\n// check if a polygon diagonal intersects any polygon segments\r\nfunction intersectsPolygon( a, b ) {\r\n\r\n\tlet p = a;\r\n\tdo {\r\n\r\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\r\n\t\t\tintersects( p, p.next, a, b ) ) return true;\r\n\t\tp = p.next;\r\n\r\n\t} while ( p !== a );\r\n\r\n\treturn false;\r\n\r\n}\r\n\r\n// check if a polygon diagonal is locally inside the polygon\r\nfunction locallyInside( a, b ) {\r\n\r\n\treturn area( a.prev, a, a.next ) < 0 ?\r\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\r\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\r\n\r\n}\r\n\r\n// check if the middle point of a polygon diagonal is inside the polygon\r\nfunction middleInside( a, b ) {\r\n\r\n\tlet p = a,\r\n\t\tinside = false;\r\n\tconst px = ( a.x + b.x ) / 2,\r\n\t\tpy = ( a.y + b.y ) / 2;\r\n\tdo {\r\n\r\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\r\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\r\n\t\t\tinside = ! inside;\r\n\t\tp = p.next;\r\n\r\n\t} while ( p !== a );\r\n\r\n\treturn inside;\r\n\r\n}\r\n\r\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\r\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\r\nfunction splitPolygon( a, b ) {\r\n\r\n\tconst a2 = new Node( a.i, a.x, a.y ),\r\n\t\tb2 = new Node( b.i, b.x, b.y ),\r\n\t\tan = a.next,\r\n\t\tbp = b.prev;\r\n\r\n\ta.next = b;\r\n\tb.prev = a;\r\n\r\n\ta2.next = an;\r\n\tan.prev = a2;\r\n\r\n\tb2.next = a2;\r\n\ta2.prev = b2;\r\n\r\n\tbp.next = b2;\r\n\tb2.prev = bp;\r\n\r\n\treturn b2;\r\n\r\n}\r\n\r\n// create a node and optionally link it with previous one (in a circular doubly linked list)\r\nfunction insertNode( i, x, y, last ) {\r\n\r\n\tconst p = new Node( i, x, y );\r\n\r\n\tif ( ! last ) {\r\n\r\n\t\tp.prev = p;\r\n\t\tp.next = p;\r\n\r\n\t} else {\r\n\r\n\t\tp.next = last.next;\r\n\t\tp.prev = last;\r\n\t\tlast.next.prev = p;\r\n\t\tlast.next = p;\r\n\r\n\t}\r\n\r\n\treturn p;\r\n\r\n}\r\n\r\nfunction removeNode( p ) {\r\n\r\n\tp.next.prev = p.prev;\r\n\tp.prev.next = p.next;\r\n\r\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\r\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\r\n\r\n}\r\n\r\nfunction Node( i, x, y ) {\r\n\r\n\t// vertex index in coordinates array\r\n\tthis.i = i;\r\n\r\n\t// vertex coordinates\r\n\tthis.x = x;\r\n\tthis.y = y;\r\n\r\n\t// previous and next vertex nodes in a polygon ring\r\n\tthis.prev = null;\r\n\tthis.next = null;\r\n\r\n\t// z-order curve value\r\n\tthis.z = 0;\r\n\r\n\t// previous and next nodes in z-order\r\n\tthis.prevZ = null;\r\n\tthis.nextZ = null;\r\n\r\n\t// indicates whether this is a steiner point\r\n\tthis.steiner = false;\r\n\r\n}\r\n\r\nfunction signedArea( data, start, end, dim ) {\r\n\r\n\tlet sum = 0;\r\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\r\n\r\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\r\n\t\tj = i;\r\n\r\n\t}\r\n\r\n\treturn sum;\r\n\r\n}\r\n\r\nclass ShapeUtils {\r\n\r\n\t// calculate area of the contour polygon\r\n\r\n\tstatic area( contour ) {\r\n\r\n\t\tconst n = contour.length;\r\n\t\tlet a = 0.0;\r\n\r\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\r\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\r\n\t\t}\r\n\r\n\t\treturn a * 0.5;\r\n\r\n\t}\r\n\r\n\tstatic isClockWise( pts ) {\r\n\r\n\t\treturn ShapeUtils.area( pts ) < 0;\r\n\r\n\t}\r\n\r\n\tstatic triangulateShape( contour, holes ) {\r\n\r\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\r\n\t\tconst holeIndices = []; // array of hole indices\r\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\r\n\r\n\t\tremoveDupEndPts( contour );\r\n\t\taddContour( vertices, contour );\r\n\r\n\t\t//\r\n\r\n\t\tlet holeIndex = contour.length;\r\n\r\n\t\tholes.forEach( removeDupEndPts );\r\n\r\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\r\n\r\n\t\t\tholeIndices.push( holeIndex );\r\n\t\t\tholeIndex += holes[ i ].length;\r\n\t\t\taddContour( vertices, holes[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\r\n\r\n\t\t//\r\n\r\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\r\n\r\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn faces;\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction removeDupEndPts( points ) {\r\n\r\n\tconst l = points.length;\r\n\r\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\r\n\r\n\t\tpoints.pop();\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction addContour( vertices, contour ) {\r\n\r\n\tfor ( let i = 0; i < contour.length; i ++ ) {\r\n\r\n\t\tvertices.push( contour[ i ].x );\r\n\t\tvertices.push( contour[ i ].y );\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Creates extruded geometry from a path shape.\r\n *\r\n * parameters = {\r\n *\r\n *  curveSegments: <int>, // number of points on the curves\r\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n *  depth: <float>, // Depth to extrude the shape\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\r\n *  bevelOffset: <float>, // how far from shape outline does bevel start\r\n *  bevelSegments: <int>, // number of bevel layers\r\n *\r\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\r\n *\r\n *  UVGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n */\r\n\r\n\r\nclass ExtrudeGeometry extends BufferGeometry {\r\n\r\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'ExtrudeGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tshapes: shapes,\r\n\t\t\toptions: options\r\n\t\t};\r\n\r\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst verticesArray = [];\r\n\t\tconst uvArray = [];\r\n\r\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst shape = shapes[ i ];\r\n\t\t\taddShape( shape );\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\r\n\r\n\t\tthis.computeVertexNormals();\r\n\r\n\t\t// functions\r\n\r\n\t\tfunction addShape( shape ) {\r\n\r\n\t\t\tconst placeholder = [];\r\n\r\n\t\t\t// options\r\n\r\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\r\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\r\n\r\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\r\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\r\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\r\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\r\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\r\n\t\t\tconst extrudePath = options.extrudePath;\r\n\r\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tlet extrudePts, extrudeByPath = false;\r\n\t\t\tlet splineTube, binormal, normal, position2;\r\n\r\n\t\t\tif ( extrudePath ) {\r\n\r\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\r\n\t\t\t\textrudeByPath = true;\r\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\r\n\t\t\t\t// SETUP TNB variables\r\n\r\n\t\t\t\t// TODO1 - have a .isClosed in spline?\r\n\r\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\r\n\r\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\r\n\t\t\t\tbinormal = new Vector3();\r\n\t\t\t\tnormal = new Vector3();\r\n\t\t\t\tposition2 = new Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Safeguards if bevels are not enabled\r\n\r\n\t\t\tif ( ! bevelEnabled ) {\r\n\r\n\t\t\t\tbevelSegments = 0;\r\n\t\t\t\tbevelThickness = 0;\r\n\t\t\t\tbevelSize = 0;\r\n\t\t\t\tbevelOffset = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Variables initialization\r\n\r\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\t\t\tlet vertices = shapePoints.shape;\r\n\t\t\tconst holes = shapePoints.holes;\r\n\r\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\r\n\r\n\t\t\tif ( reverse ) {\r\n\r\n\t\t\t\tvertices = vertices.reverse();\r\n\r\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\r\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\t\tconst ahole = holes[ h ];\r\n\r\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\r\n\r\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\r\n\r\n\t\t\t/* Vertices */\r\n\r\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\r\n\r\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tconst ahole = holes[ h ];\r\n\r\n\t\t\t\tvertices = vertices.concat( ahole );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfunction scalePt2( pt, vec, size ) {\r\n\r\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\r\n\r\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst vlen = vertices.length, flen = faces.length;\r\n\r\n\r\n\t\t\t// Find directions for point movement\r\n\r\n\r\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\r\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\r\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t\t\t//\r\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\r\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\r\n\r\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\r\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\r\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\r\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\r\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\r\n\r\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\r\n\t\t\t\t// check for collinear edges\r\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\r\n\r\n\t\t\t\t\t// not collinear\r\n\r\n\t\t\t\t\t// length of vectors for normalizing\r\n\r\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\r\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\r\n\r\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\r\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\r\n\t\t\t\t\t// scaling factor for v_prev to intersection point\r\n\r\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\r\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\t\t\t\t// vector from inPt to intersection point\r\n\r\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\r\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t\t\t//  but prevent crazy spikes\r\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\r\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// handle special case of collinear edges\r\n\r\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\r\n\r\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\r\n\r\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\r\n\r\n\t\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\r\n\r\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\r\n\r\n\t\t\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n\r\n\t\t\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( direction_eq ) {\r\n\r\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\t\t\tv_trans_y = v_prev_x;\r\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tconst contourMovements = [];\r\n\r\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\t\t\tif ( j === il ) j = 0;\r\n\t\t\t\tif ( k === il ) k = 0;\r\n\r\n\t\t\t\t//  (j)---(i)---(k)\r\n\t\t\t\t// console.log('i,j,k', i, j , k)\r\n\r\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst holesMovements = [];\r\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\r\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tconst ahole = holes[ h ];\r\n\r\n\t\t\t\toneHoleMovements = [];\r\n\r\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\t\t\t\tif ( j === il ) j = 0;\r\n\t\t\t\t\tif ( k === il ) k = 0;\r\n\r\n\t\t\t\t\t//  (j)---(i)---(k)\r\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tholesMovements.push( oneHoleMovements );\r\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\r\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\r\n\r\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\r\n\t\t\t\tconst t = b / bevelSegments;\r\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\r\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\r\n\r\n\t\t\t\t// contract shape\r\n\r\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\r\n\t\t\t\t\tv( vert.x, vert.y, - z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// expand holes\r\n\r\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\t\tconst ahole = holes[ h ];\r\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst bs = bevelSize + bevelOffset;\r\n\r\n\t\t\t// Back facing vertices\r\n\r\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\r\n\r\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y, 0 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\r\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n\r\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Add stepped vertices...\r\n\t\t\t// Including front facing vertices\r\n\r\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\r\n\r\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\r\n\r\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\r\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n\r\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Add bevel segments planes\r\n\r\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\r\n\r\n\t\t\t\tconst t = b / bevelSegments;\r\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\r\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\r\n\r\n\t\t\t\t// contract shape\r\n\r\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// expand holes\r\n\r\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\t\tconst ahole = holes[ h ];\r\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t/* Faces */\r\n\r\n\t\t\t// Top and bottom faces\r\n\r\n\t\t\tbuildLidFaces();\r\n\r\n\t\t\t// Sides faces\r\n\r\n\t\t\tbuildSideFaces();\r\n\r\n\r\n\t\t\t/////  Internal functions\r\n\r\n\t\t\tfunction buildLidFaces() {\r\n\r\n\t\t\t\tconst start = verticesArray.length / 3;\r\n\r\n\t\t\t\tif ( bevelEnabled ) {\r\n\r\n\t\t\t\t\tlet layer = 0; // steps + 1\r\n\t\t\t\t\tlet offset = vlen * layer;\r\n\r\n\t\t\t\t\t// Bottom faces\r\n\r\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\t\t\tconst face = faces[ i ];\r\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\t\t\toffset = vlen * layer;\r\n\r\n\t\t\t\t\t// Top faces\r\n\r\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\t\t\tconst face = faces[ i ];\r\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// Bottom faces\r\n\r\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\t\t\tconst face = faces[ i ];\r\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Top faces\r\n\r\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\t\t\tconst face = faces[ i ];\r\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Create faces for the z-sides of the shape\r\n\r\n\t\t\tfunction buildSideFaces() {\r\n\r\n\t\t\t\tconst start = verticesArray.length / 3;\r\n\t\t\t\tlet layeroffset = 0;\r\n\t\t\t\tsidewalls( contour, layeroffset );\r\n\t\t\t\tlayeroffset += contour.length;\r\n\r\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\t\tconst ahole = holes[ h ];\r\n\t\t\t\t\tsidewalls( ahole, layeroffset );\r\n\r\n\t\t\t\t\t//, true\r\n\t\t\t\t\tlayeroffset += ahole.length;\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\r\n\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction sidewalls( contour, layeroffset ) {\r\n\r\n\t\t\t\tlet i = contour.length;\r\n\r\n\t\t\t\twhile ( -- i >= 0 ) {\r\n\r\n\t\t\t\t\tconst j = i;\r\n\t\t\t\t\tlet k = i - 1;\r\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\r\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\r\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\r\n\r\n\t\t\t\t\t\tconst slen1 = vlen * s;\r\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\r\n\r\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\r\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\r\n\r\n\t\t\t\t\t\tf4( a, b, c, d );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction v( x, y, z ) {\r\n\r\n\t\t\t\tplaceholder.push( x );\r\n\t\t\t\tplaceholder.push( y );\r\n\t\t\t\tplaceholder.push( z );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfunction f3( a, b, c ) {\r\n\r\n\t\t\t\taddVertex( a );\r\n\t\t\t\taddVertex( b );\r\n\t\t\t\taddVertex( c );\r\n\r\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\r\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\r\n\r\n\t\t\t\taddUV( uvs[ 0 ] );\r\n\t\t\t\taddUV( uvs[ 1 ] );\r\n\t\t\t\taddUV( uvs[ 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction f4( a, b, c, d ) {\r\n\r\n\t\t\t\taddVertex( a );\r\n\t\t\t\taddVertex( b );\r\n\t\t\t\taddVertex( d );\r\n\r\n\t\t\t\taddVertex( b );\r\n\t\t\t\taddVertex( c );\r\n\t\t\t\taddVertex( d );\r\n\r\n\r\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\r\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\r\n\r\n\t\t\t\taddUV( uvs[ 0 ] );\r\n\t\t\t\taddUV( uvs[ 1 ] );\r\n\t\t\t\taddUV( uvs[ 3 ] );\r\n\r\n\t\t\t\taddUV( uvs[ 1 ] );\r\n\t\t\t\taddUV( uvs[ 2 ] );\r\n\t\t\t\taddUV( uvs[ 3 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction addVertex( index ) {\r\n\r\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\r\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\r\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfunction addUV( vector2 ) {\r\n\r\n\t\t\t\tuvArray.push( vector2.x );\r\n\t\t\t\tuvArray.push( vector2.y );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tconst shapes = this.parameters.shapes;\r\n\t\tconst options = this.parameters.options;\r\n\r\n\t\treturn toJSON$1( shapes, options, data );\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data, shapes ) {\r\n\r\n\t\tconst geometryShapes = [];\r\n\r\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\r\n\r\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\r\n\r\n\t\t\tgeometryShapes.push( shape );\r\n\r\n\t\t}\r\n\r\n\t\tconst extrudePath = data.options.extrudePath;\r\n\r\n\t\tif ( extrudePath !== undefined ) {\r\n\r\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\r\n\r\n\t\t}\r\n\r\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst WorldUVGenerator = {\r\n\r\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\r\n\r\n\t\tconst a_x = vertices[ indexA * 3 ];\r\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\r\n\t\tconst b_x = vertices[ indexB * 3 ];\r\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\r\n\t\tconst c_x = vertices[ indexC * 3 ];\r\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\r\n\r\n\t\treturn [\r\n\t\t\tnew Vector2( a_x, a_y ),\r\n\t\t\tnew Vector2( b_x, b_y ),\r\n\t\t\tnew Vector2( c_x, c_y )\r\n\t\t];\r\n\r\n\t},\r\n\r\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\r\n\r\n\t\tconst a_x = vertices[ indexA * 3 ];\r\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\r\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\r\n\t\tconst b_x = vertices[ indexB * 3 ];\r\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\r\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\r\n\t\tconst c_x = vertices[ indexC * 3 ];\r\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\r\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\r\n\t\tconst d_x = vertices[ indexD * 3 ];\r\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\r\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\r\n\r\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\r\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\r\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\r\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\r\n\t\t\t];\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\r\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\r\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\r\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\r\n\t\t\t];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nfunction toJSON$1( shapes, options, data ) {\r\n\r\n\tdata.shapes = [];\r\n\r\n\tif ( Array.isArray( shapes ) ) {\r\n\r\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst shape = shapes[ i ];\r\n\r\n\t\t\tdata.shapes.push( shape.uuid );\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tdata.shapes.push( shapes.uuid );\r\n\r\n\t}\r\n\r\n\tdata.options = Object.assign( {}, options );\r\n\r\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\r\n\r\n\treturn data;\r\n\r\n}\r\n\r\nclass IcosahedronGeometry extends PolyhedronGeometry {\r\n\r\n\tconstructor( radius = 1, detail = 0 ) {\r\n\r\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\r\n\t\tconst vertices = [\r\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\r\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\r\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\r\n\t\t];\r\n\r\n\t\tconst indices = [\r\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\r\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\r\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\r\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\r\n\t\t];\r\n\r\n\t\tsuper( vertices, indices, radius, detail );\r\n\r\n\t\tthis.type = 'IcosahedronGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass OctahedronGeometry extends PolyhedronGeometry {\r\n\r\n\tconstructor( radius = 1, detail = 0 ) {\r\n\r\n\t\tconst vertices = [\r\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\r\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\r\n\t\t];\r\n\r\n\t\tconst indices = [\r\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\r\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\r\n\t\t\t1, 3, 4,\t1, 4, 2\r\n\t\t];\r\n\r\n\t\tsuper( vertices, indices, radius, detail );\r\n\r\n\t\tthis.type = 'OctahedronGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass PlaneGeometry extends BufferGeometry {\r\n\r\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'PlaneGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments\r\n\t\t};\r\n\r\n\t\tconst width_half = width / 2;\r\n\t\tconst height_half = height / 2;\r\n\r\n\t\tconst gridX = Math.floor( widthSegments );\r\n\t\tconst gridY = Math.floor( heightSegments );\r\n\r\n\t\tconst gridX1 = gridX + 1;\r\n\t\tconst gridY1 = gridY + 1;\r\n\r\n\t\tconst segment_width = width / gridX;\r\n\t\tconst segment_height = height / gridY;\r\n\r\n\t\t//\r\n\r\n\t\tconst indices = [];\r\n\t\tconst vertices = [];\r\n\t\tconst normals = [];\r\n\t\tconst uvs = [];\r\n\r\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\tconst y = iy * segment_height - height_half;\r\n\r\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\tconst x = ix * segment_width - width_half;\r\n\r\n\t\t\t\tvertices.push( x, - y, 0 );\r\n\r\n\t\t\t\tnormals.push( 0, 0, 1 );\r\n\r\n\t\t\t\tuvs.push( ix / gridX );\r\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\t\tconst a = ix + gridX1 * iy;\r\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass RingGeometry extends BufferGeometry {\r\n\r\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'RingGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tinnerRadius: innerRadius,\r\n\t\t\touterRadius: outerRadius,\r\n\t\t\tthetaSegments: thetaSegments,\r\n\t\t\tphiSegments: phiSegments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\tthetaSegments = Math.max( 3, thetaSegments );\r\n\t\tphiSegments = Math.max( 1, phiSegments );\r\n\r\n\t\t// buffers\r\n\r\n\t\tconst indices = [];\r\n\t\tconst vertices = [];\r\n\t\tconst normals = [];\r\n\t\tconst uvs = [];\r\n\r\n\t\t// some helper variables\r\n\r\n\t\tlet radius = innerRadius;\r\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\t\tconst vertex = new Vector3();\r\n\t\tconst uv = new Vector2();\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\r\n\r\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\r\n\r\n\t\t\t\t// values are generate from the inside of the ring to the outside\r\n\r\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tnormals.push( 0, 0, 1 );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\r\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\r\n\r\n\t\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// increase the radius for next row of vertices\r\n\r\n\t\t\tradius += radiusStep;\r\n\r\n\t\t}\r\n\r\n\t\t// indices\r\n\r\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\r\n\r\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\r\n\r\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\r\n\r\n\t\t\t\tconst segment = i + thetaSegmentLevel;\r\n\r\n\t\t\t\tconst a = segment;\r\n\t\t\t\tconst b = segment + thetaSegments + 1;\r\n\t\t\t\tconst c = segment + thetaSegments + 2;\r\n\t\t\t\tconst d = segment + 1;\r\n\r\n\t\t\t\t// faces\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass ShapeGeometry extends BufferGeometry {\r\n\r\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'ShapeGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tshapes: shapes,\r\n\t\t\tcurveSegments: curveSegments\r\n\t\t};\r\n\r\n\t\t// buffers\r\n\r\n\t\tconst indices = [];\r\n\t\tconst vertices = [];\r\n\t\tconst normals = [];\r\n\t\tconst uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tlet groupStart = 0;\r\n\t\tlet groupCount = 0;\r\n\r\n\t\t// allow single and array values for \"shapes\" parameter\r\n\r\n\t\tif ( Array.isArray( shapes ) === false ) {\r\n\r\n\t\t\taddShape( shapes );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\r\n\r\n\t\t\t\taddShape( shapes[ i ] );\r\n\r\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\r\n\r\n\t\t\t\tgroupStart += groupCount;\r\n\t\t\t\tgroupCount = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\r\n\t\t// helper functions\r\n\r\n\t\tfunction addShape( shape ) {\r\n\r\n\t\t\tconst indexOffset = vertices.length / 3;\r\n\t\t\tconst points = shape.extractPoints( curveSegments );\r\n\r\n\t\t\tlet shapeVertices = points.shape;\r\n\t\t\tconst shapeHoles = points.holes;\r\n\r\n\t\t\t// check direction of vertices\r\n\r\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\r\n\r\n\t\t\t\tshapeVertices = shapeVertices.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\r\n\r\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\r\n\r\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\r\n\r\n\t\t\t// join vertices of inner and outer paths to a single array\r\n\r\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\r\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// vertices, normals, uvs\r\n\r\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst vertex = shapeVertices[ i ];\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\r\n\t\t\t\tnormals.push( 0, 0, 1 );\r\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// indices\r\n\r\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst face = faces[ i ];\r\n\r\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\r\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\r\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\r\n\r\n\t\t\t\tindices.push( a, b, c );\r\n\t\t\t\tgroupCount += 3;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tconst shapes = this.parameters.shapes;\r\n\r\n\t\treturn toJSON( shapes, data );\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data, shapes ) {\r\n\r\n\t\tconst geometryShapes = [];\r\n\r\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\r\n\r\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\r\n\r\n\t\t\tgeometryShapes.push( shape );\r\n\r\n\t\t}\r\n\r\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction toJSON( shapes, data ) {\r\n\r\n\tdata.shapes = [];\r\n\r\n\tif ( Array.isArray( shapes ) ) {\r\n\r\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst shape = shapes[ i ];\r\n\r\n\t\t\tdata.shapes.push( shape.uuid );\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tdata.shapes.push( shapes.uuid );\r\n\r\n\t}\r\n\r\n\treturn data;\r\n\r\n}\r\n\r\nclass SphereGeometry extends BufferGeometry {\r\n\r\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'SphereGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\r\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\r\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\r\n\r\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\r\n\r\n\t\tlet index = 0;\r\n\t\tconst grid = [];\r\n\r\n\t\tconst vertex = new Vector3();\r\n\t\tconst normal = new Vector3();\r\n\r\n\t\t// buffers\r\n\r\n\t\tconst indices = [];\r\n\t\tconst vertices = [];\r\n\t\tconst normals = [];\r\n\t\tconst uvs = [];\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\r\n\r\n\t\t\tconst verticesRow = [];\r\n\r\n\t\t\tconst v = iy / heightSegments;\r\n\r\n\t\t\t// special case for the poles\r\n\r\n\t\t\tlet uOffset = 0;\r\n\r\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\r\n\r\n\t\t\t\tuOffset = 0.5 / widthSegments;\r\n\r\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\r\n\r\n\t\t\t\tuOffset = - 0.5 / widthSegments;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\r\n\r\n\t\t\t\tconst u = ix / widthSegments;\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tnormal.copy( vertex ).normalize();\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\r\n\r\n\t\t\t\tverticesRow.push( index ++ );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgrid.push( verticesRow );\r\n\r\n\t\t}\r\n\r\n\t\t// indices\r\n\r\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\r\n\r\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\r\n\r\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\r\n\t\t\t\tconst b = grid[ iy ][ ix ];\r\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\r\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\r\n\r\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\r\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass TetrahedronGeometry extends PolyhedronGeometry {\r\n\r\n\tconstructor( radius = 1, detail = 0 ) {\r\n\r\n\t\tconst vertices = [\r\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\r\n\t\t];\r\n\r\n\t\tconst indices = [\r\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\r\n\t\t];\r\n\r\n\t\tsuper( vertices, indices, radius, detail );\r\n\r\n\t\tthis.type = 'TetrahedronGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass TorusGeometry extends BufferGeometry {\r\n\r\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'TorusGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tarc: arc\r\n\t\t};\r\n\r\n\t\tradialSegments = Math.floor( radialSegments );\r\n\t\ttubularSegments = Math.floor( tubularSegments );\r\n\r\n\t\t// buffers\r\n\r\n\t\tconst indices = [];\r\n\t\tconst vertices = [];\r\n\t\tconst normals = [];\r\n\t\tconst uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tconst center = new Vector3();\r\n\t\tconst vertex = new Vector3();\r\n\t\tconst normal = new Vector3();\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\t\tconst u = i / tubularSegments * arc;\r\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\t\tvertex.z = tube * Math.sin( v );\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\t\tcenter.y = radius * Math.sin( u );\r\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\r\n\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuvs.push( i / tubularSegments );\r\n\t\t\t\tuvs.push( j / radialSegments );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// generate indices\r\n\r\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\r\n\r\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\t\t// indices\r\n\r\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\r\n\r\n\t\t\t\t// faces\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass TorusKnotGeometry extends BufferGeometry {\r\n\r\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'TorusKnotGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\tp: p,\r\n\t\t\tq: q\r\n\t\t};\r\n\r\n\t\ttubularSegments = Math.floor( tubularSegments );\r\n\t\tradialSegments = Math.floor( radialSegments );\r\n\r\n\t\t// buffers\r\n\r\n\t\tconst indices = [];\r\n\t\tconst vertices = [];\r\n\t\tconst normals = [];\r\n\t\tconst uvs = [];\r\n\r\n\t\t// helper variables\r\n\r\n\t\tconst vertex = new Vector3();\r\n\t\tconst normal = new Vector3();\r\n\r\n\t\tconst P1 = new Vector3();\r\n\t\tconst P2 = new Vector3();\r\n\r\n\t\tconst B = new Vector3();\r\n\t\tconst T = new Vector3();\r\n\t\tconst N = new Vector3();\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\r\n\r\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\r\n\r\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\r\n\r\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\r\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\r\n\r\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\r\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\r\n\r\n\t\t\t// calculate orthonormal basis\r\n\r\n\t\t\tT.subVectors( P2, P1 );\r\n\t\t\tN.addVectors( P2, P1 );\r\n\t\t\tB.crossVectors( T, N );\r\n\t\t\tN.crossVectors( B, T );\r\n\r\n\t\t\t// normalize B, N. T can be ignored, we don't use it\r\n\r\n\t\t\tB.normalize();\r\n\t\t\tN.normalize();\r\n\r\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\r\n\r\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\r\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\r\n\r\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\r\n\t\t\t\tconst cx = - tube * Math.cos( v );\r\n\t\t\t\tconst cy = tube * Math.sin( v );\r\n\r\n\t\t\t\t// now calculate the final vertex position.\r\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\r\n\r\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\r\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\r\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\r\n\r\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\r\n\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// uv\r\n\r\n\t\t\t\tuvs.push( i / tubularSegments );\r\n\t\t\t\tuvs.push( j / radialSegments );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// generate indices\r\n\r\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\r\n\r\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\r\n\r\n\t\t\t\t// indices\r\n\r\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\r\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\r\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\r\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\r\n\r\n\t\t\t\t// faces\r\n\r\n\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t\t// this function calculates the current position on the torus curve\r\n\r\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\r\n\r\n\t\t\tconst cu = Math.cos( u );\r\n\t\t\tconst su = Math.sin( u );\r\n\t\t\tconst quOverP = q / p * u;\r\n\t\t\tconst cs = Math.cos( quOverP );\r\n\r\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\r\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass TubeGeometry extends BufferGeometry {\r\n\r\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'TubeGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tpath: path,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tradius: radius,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\tclosed: closed\r\n\t\t};\r\n\r\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\r\n\r\n\t\t// expose internals\r\n\r\n\t\tthis.tangents = frames.tangents;\r\n\t\tthis.normals = frames.normals;\r\n\t\tthis.binormals = frames.binormals;\r\n\r\n\t\t// helper variables\r\n\r\n\t\tconst vertex = new Vector3();\r\n\t\tconst normal = new Vector3();\r\n\t\tconst uv = new Vector2();\r\n\t\tlet P = new Vector3();\r\n\r\n\t\t// buffer\r\n\r\n\t\tconst vertices = [];\r\n\t\tconst normals = [];\r\n\t\tconst uvs = [];\r\n\t\tconst indices = [];\r\n\r\n\t\t// create buffer data\r\n\r\n\t\tgenerateBufferData();\r\n\r\n\t\t// build geometry\r\n\r\n\t\tthis.setIndex( indices );\r\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\r\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\r\n\r\n\t\t// functions\r\n\r\n\t\tfunction generateBufferData() {\r\n\r\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\r\n\r\n\t\t\t\tgenerateSegment( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\r\n\t\t\t// at the regular position on the given path\r\n\t\t\t//\r\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\r\n\r\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\r\n\r\n\t\t\t// uvs are generated in a separate function.\r\n\t\t\t// this makes it easy compute correct values for closed geometries\r\n\r\n\t\t\tgenerateUVs();\r\n\r\n\t\t\t// finally create faces\r\n\r\n\t\t\tgenerateIndices();\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateSegment( i ) {\r\n\r\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\r\n\r\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\r\n\r\n\t\t\t// retrieve corresponding normal and binormal\r\n\r\n\t\t\tconst N = frames.normals[ i ];\r\n\t\t\tconst B = frames.binormals[ i ];\r\n\r\n\t\t\t// generate normals and vertices for the current segment\r\n\r\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\r\n\r\n\t\t\t\tconst sin = Math.sin( v );\r\n\t\t\t\tconst cos = - Math.cos( v );\r\n\r\n\t\t\t\t// normal\r\n\r\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\r\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\r\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\r\n\t\t\t\tnormal.normalize();\r\n\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// vertex\r\n\r\n\t\t\t\tvertex.x = P.x + radius * normal.x;\r\n\t\t\t\tvertex.y = P.y + radius * normal.y;\r\n\t\t\t\tvertex.z = P.z + radius * normal.z;\r\n\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateIndices() {\r\n\r\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\r\n\r\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\r\n\r\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\r\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\r\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\r\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\r\n\r\n\t\t\t\t\t// faces\r\n\r\n\t\t\t\t\tindices.push( a, b, d );\r\n\t\t\t\t\tindices.push( b, c, d );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateUVs() {\r\n\r\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\t\t\t\tuv.x = i / tubularSegments;\r\n\t\t\t\t\tuv.y = j / radialSegments;\r\n\r\n\t\t\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.path = this.parameters.path.toJSON();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n\tstatic fromJSON( data ) {\r\n\r\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\r\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\r\n\t\treturn new TubeGeometry(\r\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\r\n\t\t\tdata.tubularSegments,\r\n\t\t\tdata.radius,\r\n\t\t\tdata.radialSegments,\r\n\t\t\tdata.closed\r\n\t\t);\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass WireframeGeometry extends BufferGeometry {\r\n\r\n\tconstructor( geometry = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'WireframeGeometry';\r\n\r\n\t\tthis.parameters = {\r\n\t\t\tgeometry: geometry\r\n\t\t};\r\n\r\n\t\tif ( geometry !== null ) {\r\n\r\n\t\t\t// buffer\r\n\r\n\t\t\tconst vertices = [];\r\n\t\t\tconst edges = new Set();\r\n\r\n\t\t\t// helper variables\r\n\r\n\t\t\tconst start = new Vector3();\r\n\t\t\tconst end = new Vector3();\r\n\r\n\t\t\tif ( geometry.index !== null ) {\r\n\r\n\t\t\t\t// indexed BufferGeometry\r\n\r\n\t\t\t\tconst position = geometry.attributes.position;\r\n\t\t\t\tconst indices = geometry.index;\r\n\t\t\t\tlet groups = geometry.groups;\r\n\r\n\t\t\t\tif ( groups.length === 0 ) {\r\n\r\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create a data structure that contains all edges without duplicates\r\n\r\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\r\n\r\n\t\t\t\t\tconst group = groups[ o ];\r\n\r\n\t\t\t\t\tconst groupStart = group.start;\r\n\t\t\t\t\tconst groupCount = group.count;\r\n\r\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\r\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\r\n\r\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\r\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\r\n\r\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\r\n\r\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\r\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed BufferGeometry\r\n\r\n\t\t\t\tconst position = geometry.attributes.position;\r\n\r\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\r\n\r\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\r\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\r\n\r\n\t\t\t\t\t\tconst index1 = 3 * i + j;\r\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\r\n\r\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\r\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\r\n\r\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\r\n\r\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\r\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// build geometry\r\n\r\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.parameters = Object.assign( {}, source.parameters );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction isUniqueEdge( start, end, edges ) {\r\n\r\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\r\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\r\n\r\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\r\n\r\n\t\treturn false;\r\n\r\n\t} else {\r\n\r\n\t\tedges.add( hash1 );\r\n\t\tedges.add( hash2 );\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n}\r\n\r\nvar Geometries = /*#__PURE__*/Object.freeze({\r\n\t__proto__: null,\r\n\tBoxGeometry: BoxGeometry,\r\n\tCapsuleGeometry: CapsuleGeometry,\r\n\tCircleGeometry: CircleGeometry,\r\n\tConeGeometry: ConeGeometry,\r\n\tCylinderGeometry: CylinderGeometry,\r\n\tDodecahedronGeometry: DodecahedronGeometry,\r\n\tEdgesGeometry: EdgesGeometry,\r\n\tExtrudeGeometry: ExtrudeGeometry,\r\n\tIcosahedronGeometry: IcosahedronGeometry,\r\n\tLatheGeometry: LatheGeometry,\r\n\tOctahedronGeometry: OctahedronGeometry,\r\n\tPlaneGeometry: PlaneGeometry,\r\n\tPolyhedronGeometry: PolyhedronGeometry,\r\n\tRingGeometry: RingGeometry,\r\n\tShapeGeometry: ShapeGeometry,\r\n\tSphereGeometry: SphereGeometry,\r\n\tTetrahedronGeometry: TetrahedronGeometry,\r\n\tTorusGeometry: TorusGeometry,\r\n\tTorusKnotGeometry: TorusKnotGeometry,\r\n\tTubeGeometry: TubeGeometry,\r\n\tWireframeGeometry: WireframeGeometry\r\n});\r\n\r\nclass ShadowMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isShadowMaterial = true;\r\n\r\n\t\tthis.type = 'ShadowMaterial';\r\n\r\n\t\tthis.color = new Color( 0x000000 );\r\n\t\tthis.transparent = true;\r\n\r\n\t\tthis.fog = true;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.fog = source.fog;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass RawShaderMaterial extends ShaderMaterial {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper( parameters );\r\n\r\n\t\tthis.isRawShaderMaterial = true;\r\n\r\n\t\tthis.type = 'RawShaderMaterial';\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass MeshStandardMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshStandardMaterial = true;\r\n\r\n\t\tthis.type = 'MeshStandardMaterial';\r\n\r\n\t\tthis.defines = { 'STANDARD': '' };\r\n\r\n\t\tthis.color = new Color( 0xffffff ); // diffuse\r\n\t\tthis.roughness = 1.0;\r\n\t\tthis.metalness = 0.0;\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\r\n\t\tthis.emissive = new Color( 0x000000 );\r\n\t\tthis.emissiveIntensity = 1.0;\r\n\t\tthis.emissiveMap = null;\r\n\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\tthis.normalScale = new Vector2( 1, 1 );\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.roughnessMap = null;\r\n\r\n\t\tthis.metalnessMap = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.envMap = null;\r\n\t\tthis.envMapRotation = new Euler();\r\n\t\tthis.envMapIntensity = 1.0;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\r\n\t\tthis.flatShading = false;\r\n\r\n\t\tthis.fog = true;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.defines = { 'STANDARD': '' };\r\n\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.roughness = source.roughness;\r\n\t\tthis.metalness = source.metalness;\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalMapType = source.normalMapType;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.roughnessMap = source.roughnessMap;\r\n\r\n\t\tthis.metalnessMap = source.metalnessMap;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.envMapRotation.copy( source.envMapRotation );\r\n\t\tthis.envMapIntensity = source.envMapIntensity;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\t\tthis.flatShading = source.flatShading;\r\n\r\n\t\tthis.fog = source.fog;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshPhysicalMaterial = true;\r\n\r\n\t\tthis.defines = {\r\n\r\n\t\t\t'STANDARD': '',\r\n\t\t\t'PHYSICAL': ''\r\n\r\n\t\t};\r\n\r\n\t\tthis.type = 'MeshPhysicalMaterial';\r\n\r\n\t\tthis.anisotropyRotation = 0;\r\n\t\tthis.anisotropyMap = null;\r\n\r\n\t\tthis.clearcoatMap = null;\r\n\t\tthis.clearcoatRoughness = 0.0;\r\n\t\tthis.clearcoatRoughnessMap = null;\r\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\r\n\t\tthis.clearcoatNormalMap = null;\r\n\r\n\t\tthis.ior = 1.5;\r\n\r\n\t\tObject.defineProperty( this, 'reflectivity', {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( reflectivity ) {\r\n\r\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\r\n\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t\tthis.iridescenceMap = null;\r\n\t\tthis.iridescenceIOR = 1.3;\r\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\r\n\t\tthis.iridescenceThicknessMap = null;\r\n\r\n\t\tthis.sheenColor = new Color( 0x000000 );\r\n\t\tthis.sheenColorMap = null;\r\n\t\tthis.sheenRoughness = 1.0;\r\n\t\tthis.sheenRoughnessMap = null;\r\n\r\n\t\tthis.transmissionMap = null;\r\n\r\n\t\tthis.thickness = 0;\r\n\t\tthis.thicknessMap = null;\r\n\t\tthis.attenuationDistance = Infinity;\r\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\r\n\r\n\t\tthis.specularIntensity = 1.0;\r\n\t\tthis.specularIntensityMap = null;\r\n\t\tthis.specularColor = new Color( 1, 1, 1 );\r\n\t\tthis.specularColorMap = null;\r\n\r\n\t\tthis._anisotropy = 0;\r\n\t\tthis._clearcoat = 0;\r\n\t\tthis._dispersion = 0;\r\n\t\tthis._iridescence = 0;\r\n\t\tthis._sheen = 0.0;\r\n\t\tthis._transmission = 0;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tget anisotropy() {\r\n\r\n\t\treturn this._anisotropy;\r\n\r\n\t}\r\n\r\n\tset anisotropy( value ) {\r\n\r\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\r\n\r\n\t\t\tthis.version ++;\r\n\r\n\t\t}\r\n\r\n\t\tthis._anisotropy = value;\r\n\r\n\t}\r\n\r\n\tget clearcoat() {\r\n\r\n\t\treturn this._clearcoat;\r\n\r\n\t}\r\n\r\n\tset clearcoat( value ) {\r\n\r\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\r\n\r\n\t\t\tthis.version ++;\r\n\r\n\t\t}\r\n\r\n\t\tthis._clearcoat = value;\r\n\r\n\t}\r\n\r\n\tget iridescence() {\r\n\r\n\t\treturn this._iridescence;\r\n\r\n\t}\r\n\r\n\tset iridescence( value ) {\r\n\r\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\r\n\r\n\t\t\tthis.version ++;\r\n\r\n\t\t}\r\n\r\n\t\tthis._iridescence = value;\r\n\r\n\t}\r\n\r\n\tget dispersion() {\r\n\r\n\t\treturn this._dispersion;\r\n\r\n\t}\r\n\r\n\tset dispersion( value ) {\r\n\r\n\t\tif ( this._dispersion > 0 !== value > 0 ) {\r\n\r\n\t\t\tthis.version ++;\r\n\r\n\t\t}\r\n\r\n\t\tthis._dispersion = value;\r\n\r\n\t}\r\n\r\n\tget sheen() {\r\n\r\n\t\treturn this._sheen;\r\n\r\n\t}\r\n\r\n\tset sheen( value ) {\r\n\r\n\t\tif ( this._sheen > 0 !== value > 0 ) {\r\n\r\n\t\t\tthis.version ++;\r\n\r\n\t\t}\r\n\r\n\t\tthis._sheen = value;\r\n\r\n\t}\r\n\r\n\tget transmission() {\r\n\r\n\t\treturn this._transmission;\r\n\r\n\t}\r\n\r\n\tset transmission( value ) {\r\n\r\n\t\tif ( this._transmission > 0 !== value > 0 ) {\r\n\r\n\t\t\tthis.version ++;\r\n\r\n\t\t}\r\n\r\n\t\tthis._transmission = value;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.defines = {\r\n\r\n\t\t\t'STANDARD': '',\r\n\t\t\t'PHYSICAL': ''\r\n\r\n\t\t};\r\n\r\n\t\tthis.anisotropy = source.anisotropy;\r\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\r\n\t\tthis.anisotropyMap = source.anisotropyMap;\r\n\r\n\t\tthis.clearcoat = source.clearcoat;\r\n\t\tthis.clearcoatMap = source.clearcoatMap;\r\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\r\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\r\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\r\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\r\n\r\n\t\tthis.dispersion = source.dispersion;\r\n\t\tthis.ior = source.ior;\r\n\r\n\t\tthis.iridescence = source.iridescence;\r\n\t\tthis.iridescenceMap = source.iridescenceMap;\r\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\r\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\r\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\r\n\r\n\t\tthis.sheen = source.sheen;\r\n\t\tthis.sheenColor.copy( source.sheenColor );\r\n\t\tthis.sheenColorMap = source.sheenColorMap;\r\n\t\tthis.sheenRoughness = source.sheenRoughness;\r\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\r\n\r\n\t\tthis.transmission = source.transmission;\r\n\t\tthis.transmissionMap = source.transmissionMap;\r\n\r\n\t\tthis.thickness = source.thickness;\r\n\t\tthis.thicknessMap = source.thicknessMap;\r\n\t\tthis.attenuationDistance = source.attenuationDistance;\r\n\t\tthis.attenuationColor.copy( source.attenuationColor );\r\n\r\n\t\tthis.specularIntensity = source.specularIntensity;\r\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\r\n\t\tthis.specularColor.copy( source.specularColor );\r\n\t\tthis.specularColorMap = source.specularColorMap;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass MeshPhongMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshPhongMaterial = true;\r\n\r\n\t\tthis.type = 'MeshPhongMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff ); // diffuse\r\n\t\tthis.specular = new Color( 0x111111 );\r\n\t\tthis.shininess = 30;\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\r\n\t\tthis.emissive = new Color( 0x000000 );\r\n\t\tthis.emissiveIntensity = 1.0;\r\n\t\tthis.emissiveMap = null;\r\n\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\tthis.normalScale = new Vector2( 1, 1 );\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.specularMap = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.envMap = null;\r\n\t\tthis.envMapRotation = new Euler();\r\n\r\n\t\tthis.combine = MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\r\n\t\tthis.flatShading = false;\r\n\r\n\t\tthis.fog = true;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.specular.copy( source.specular );\r\n\t\tthis.shininess = source.shininess;\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalMapType = source.normalMapType;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.specularMap = source.specularMap;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.envMapRotation.copy( source.envMapRotation );\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\t\tthis.flatShading = source.flatShading;\r\n\r\n\t\tthis.fog = source.fog;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass MeshToonMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshToonMaterial = true;\r\n\r\n\t\tthis.defines = { 'TOON': '' };\r\n\r\n\t\tthis.type = 'MeshToonMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff );\r\n\r\n\t\tthis.map = null;\r\n\t\tthis.gradientMap = null;\r\n\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\r\n\t\tthis.emissive = new Color( 0x000000 );\r\n\t\tthis.emissiveIntensity = 1.0;\r\n\t\tthis.emissiveMap = null;\r\n\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\tthis.normalScale = new Vector2( 1, 1 );\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\r\n\t\tthis.fog = true;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.map = source.map;\r\n\t\tthis.gradientMap = source.gradientMap;\r\n\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalMapType = source.normalMapType;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\t\tthis.fog = source.fog;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass MeshNormalMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshNormalMaterial = true;\r\n\r\n\t\tthis.type = 'MeshNormalMaterial';\r\n\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\tthis.normalScale = new Vector2( 1, 1 );\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\r\n\t\tthis.flatShading = false;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalMapType = source.normalMapType;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\t\tthis.flatShading = source.flatShading;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass MeshLambertMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshLambertMaterial = true;\r\n\r\n\t\tthis.type = 'MeshLambertMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff ); // diffuse\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\r\n\t\tthis.emissive = new Color( 0x000000 );\r\n\t\tthis.emissiveIntensity = 1.0;\r\n\t\tthis.emissiveMap = null;\r\n\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\tthis.normalScale = new Vector2( 1, 1 );\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.specularMap = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.envMap = null;\r\n\t\tthis.envMapRotation = new Euler();\r\n\t\tthis.combine = MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\r\n\t\tthis.flatShading = false;\r\n\r\n\t\tthis.fog = true;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalMapType = source.normalMapType;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.specularMap = source.specularMap;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.envMapRotation.copy( source.envMapRotation );\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\t\tthis.flatShading = source.flatShading;\r\n\r\n\t\tthis.fog = source.fog;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass MeshDepthMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshDepthMaterial = true;\r\n\r\n\t\tthis.type = 'MeshDepthMaterial';\r\n\r\n\t\tthis.depthPacking = BasicDepthPacking;\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.depthPacking = source.depthPacking;\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass MeshDistanceMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshDistanceMaterial = true;\r\n\r\n\t\tthis.type = 'MeshDistanceMaterial';\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass MeshMatcapMaterial extends Material {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isMeshMatcapMaterial = true;\r\n\r\n\t\tthis.defines = { 'MATCAP': '' };\r\n\r\n\t\tthis.type = 'MeshMatcapMaterial';\r\n\r\n\t\tthis.color = new Color( 0xffffff ); // diffuse\r\n\r\n\t\tthis.matcap = null;\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalMapType = TangentSpaceNormalMap;\r\n\t\tthis.normalScale = new Vector2( 1, 1 );\r\n\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\r\n\t\tthis.alphaMap = null;\r\n\r\n\t\tthis.flatShading = false;\r\n\r\n\t\tthis.fog = true;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.defines = { 'MATCAP': '' };\r\n\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.matcap = source.matcap;\r\n\r\n\t\tthis.map = source.map;\r\n\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalMapType = source.normalMapType;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\r\n\t\tthis.flatShading = source.flatShading;\r\n\r\n\t\tthis.fog = source.fog;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass LineDashedMaterial extends LineBasicMaterial {\r\n\r\n\tconstructor( parameters ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isLineDashedMaterial = true;\r\n\t\tthis.type = 'LineDashedMaterial';\r\n\r\n\t\tthis.scale = 1;\r\n\t\tthis.dashSize = 3;\r\n\t\tthis.gapSize = 1;\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.scale = source.scale;\r\n\t\tthis.dashSize = source.dashSize;\r\n\t\tthis.gapSize = source.gapSize;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\n// converts an array to a specific type\r\nfunction convertArray( array, type, forceClone ) {\r\n\r\n\tif ( ! array || // let 'undefined' and 'null' pass\r\n\t\t! forceClone && array.constructor === type ) return array;\r\n\r\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\r\n\r\n\t\treturn new type( array ); // create typed array\r\n\r\n\t}\r\n\r\n\treturn Array.prototype.slice.call( array ); // create Array\r\n\r\n}\r\n\r\nfunction isTypedArray( object ) {\r\n\r\n\treturn ArrayBuffer.isView( object ) &&\r\n\t\t! ( object instanceof DataView );\r\n\r\n}\r\n\r\n// returns an array by which times and values can be sorted\r\nfunction getKeyframeOrder( times ) {\r\n\r\n\tfunction compareTime( i, j ) {\r\n\r\n\t\treturn times[ i ] - times[ j ];\r\n\r\n\t}\r\n\r\n\tconst n = times.length;\r\n\tconst result = new Array( n );\r\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\r\n\r\n\tresult.sort( compareTime );\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\n// uses the array previously returned by 'getKeyframeOrder' to sort data\r\nfunction sortedArray( values, stride, order ) {\r\n\r\n\tconst nValues = values.length;\r\n\tconst result = new values.constructor( nValues );\r\n\r\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\r\n\r\n\t\tconst srcOffset = order[ i ] * stride;\r\n\r\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\n// function for parsing AOS keyframe formats\r\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\r\n\r\n\tlet i = 1, key = jsonKeys[ 0 ];\r\n\r\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\r\n\r\n\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t}\r\n\r\n\tif ( key === undefined ) return; // no data\r\n\r\n\tlet value = key[ valuePropertyName ];\r\n\tif ( value === undefined ) return; // no data\r\n\r\n\tif ( Array.isArray( value ) ) {\r\n\r\n\t\tdo {\r\n\r\n\t\t\tvalue = key[ valuePropertyName ];\r\n\r\n\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\ttimes.push( key.time );\r\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\r\n\r\n\t\t\t}\r\n\r\n\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t} while ( key !== undefined );\r\n\r\n\t} else if ( value.toArray !== undefined ) {\r\n\r\n\t\t// ...assume THREE.Math-ish\r\n\r\n\t\tdo {\r\n\r\n\t\t\tvalue = key[ valuePropertyName ];\r\n\r\n\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\ttimes.push( key.time );\r\n\t\t\t\tvalue.toArray( values, values.length );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t} while ( key !== undefined );\r\n\r\n\t} else {\r\n\r\n\t\t// otherwise push as-is\r\n\r\n\t\tdo {\r\n\r\n\t\t\tvalue = key[ valuePropertyName ];\r\n\r\n\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\ttimes.push( key.time );\r\n\t\t\t\tvalues.push( value );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t} while ( key !== undefined );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\r\n\r\n\tconst clip = sourceClip.clone();\r\n\r\n\tclip.name = name;\r\n\r\n\tconst tracks = [];\r\n\r\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\r\n\r\n\t\tconst track = clip.tracks[ i ];\r\n\t\tconst valueSize = track.getValueSize();\r\n\r\n\t\tconst times = [];\r\n\t\tconst values = [];\r\n\r\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\r\n\r\n\t\t\tconst frame = track.times[ j ] * fps;\r\n\r\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\r\n\r\n\t\t\ttimes.push( track.times[ j ] );\r\n\r\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\r\n\r\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( times.length === 0 ) continue;\r\n\r\n\t\ttrack.times = convertArray( times, track.times.constructor );\r\n\t\ttrack.values = convertArray( values, track.values.constructor );\r\n\r\n\t\ttracks.push( track );\r\n\r\n\t}\r\n\r\n\tclip.tracks = tracks;\r\n\r\n\t// find minimum .times value across all tracks in the trimmed clip\r\n\r\n\tlet minStartTime = Infinity;\r\n\r\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\r\n\r\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\r\n\r\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// shift all tracks such that clip begins at t=0\r\n\r\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\r\n\r\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\r\n\r\n\t}\r\n\r\n\tclip.resetDuration();\r\n\r\n\treturn clip;\r\n\r\n}\r\n\r\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\r\n\r\n\tif ( fps <= 0 ) fps = 30;\r\n\r\n\tconst numTracks = referenceClip.tracks.length;\r\n\tconst referenceTime = referenceFrame / fps;\r\n\r\n\t// Make each track's values relative to the values at the reference frame\r\n\tfor ( let i = 0; i < numTracks; ++ i ) {\r\n\r\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\r\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\r\n\r\n\t\t// Skip this track if it's non-numeric\r\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\r\n\r\n\t\t// Find the track in the target clip whose name and type matches the reference track\r\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\r\n\r\n\t\t\treturn track.name === referenceTrack.name\r\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\r\n\r\n\t\t} );\r\n\r\n\t\tif ( targetTrack === undefined ) continue;\r\n\r\n\t\tlet referenceOffset = 0;\r\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\r\n\r\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\r\n\r\n\t\t\treferenceOffset = referenceValueSize / 3;\r\n\r\n\t\t}\r\n\r\n\t\tlet targetOffset = 0;\r\n\t\tconst targetValueSize = targetTrack.getValueSize();\r\n\r\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\r\n\r\n\t\t\ttargetOffset = targetValueSize / 3;\r\n\r\n\t\t}\r\n\r\n\t\tconst lastIndex = referenceTrack.times.length - 1;\r\n\t\tlet referenceValue;\r\n\r\n\t\t// Find the value to subtract out of the track\r\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\r\n\r\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\r\n\t\t\tconst startIndex = referenceOffset;\r\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\r\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\r\n\r\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\r\n\r\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\r\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\r\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\r\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Interpolate to the reference value\r\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\r\n\t\t\tconst startIndex = referenceOffset;\r\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\r\n\t\t\tinterpolant.evaluate( referenceTime );\r\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\r\n\r\n\t\t}\r\n\r\n\t\t// Conjugate the quaternion\r\n\t\tif ( referenceTrackType === 'quaternion' ) {\r\n\r\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\r\n\t\t\treferenceQuat.toArray( referenceValue );\r\n\r\n\t\t}\r\n\r\n\t\t// Subtract the reference value from all of the track values\r\n\r\n\t\tconst numTimes = targetTrack.times.length;\r\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\r\n\r\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\r\n\r\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\r\n\r\n\t\t\t\t// Multiply the conjugate for quaternion track types\r\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\r\n\t\t\t\t\ttargetTrack.values,\r\n\t\t\t\t\tvalueStart,\r\n\t\t\t\t\treferenceValue,\r\n\t\t\t\t\t0,\r\n\t\t\t\t\ttargetTrack.values,\r\n\t\t\t\t\tvalueStart\r\n\t\t\t\t);\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\r\n\r\n\t\t\t\t// Subtract each value for all other numeric track types\r\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\r\n\r\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\r\n\r\n\treturn targetClip;\r\n\r\n}\r\n\r\nconst AnimationUtils = {\r\n\tconvertArray: convertArray,\r\n\tisTypedArray: isTypedArray,\r\n\tgetKeyframeOrder: getKeyframeOrder,\r\n\tsortedArray: sortedArray,\r\n\tflattenJSON: flattenJSON,\r\n\tsubclip: subclip,\r\n\tmakeClipAdditive: makeClipAdditive\r\n};\r\n\r\n/**\r\n * Abstract base class of interpolants over parametric samples.\r\n *\r\n * The parameter domain is one dimensional, typically the time or a path\r\n * along a curve defined by the data.\r\n *\r\n * The sample values can have any dimensionality and derived classes may\r\n * apply special interpretations to the data.\r\n *\r\n * This class provides the interval seek in a Template Method, deferring\r\n * the actual interpolation to derived classes.\r\n *\r\n * Time complexity is O(1) for linear access crossing at most two points\r\n * and O(log N) for random access, where N is the number of positions.\r\n *\r\n * References:\r\n *\r\n * \t\thttp://www.oodesign.com/template-method-pattern.html\r\n *\r\n */\r\n\r\nclass Interpolant {\r\n\r\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\t\tthis.parameterPositions = parameterPositions;\r\n\t\tthis._cachedIndex = 0;\r\n\r\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\r\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\r\n\t\tthis.sampleValues = sampleValues;\r\n\t\tthis.valueSize = sampleSize;\r\n\r\n\t\tthis.settings = null;\r\n\t\tthis.DefaultSettings_ = {};\r\n\r\n\t}\r\n\r\n\tevaluate( t ) {\r\n\r\n\t\tconst pp = this.parameterPositions;\r\n\t\tlet i1 = this._cachedIndex,\r\n\t\t\tt1 = pp[ i1 ],\r\n\t\t\tt0 = pp[ i1 - 1 ];\r\n\r\n\t\tvalidate_interval: {\r\n\r\n\t\t\tseek: {\r\n\r\n\t\t\t\tlet right;\r\n\r\n\t\t\t\tlinear_scan: {\r\n\r\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\r\n\t\t\t\t\t//- slower code:\r\n\t\t\t\t\t//-\r\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\r\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\r\n\r\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\r\n\r\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\r\n\r\n\t\t\t\t\t\t\t\t// after end\r\n\r\n\t\t\t\t\t\t\t\ti1 = pp.length;\r\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\r\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\r\n\r\n\t\t\t\t\t\t\tt0 = t1;\r\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\r\n\r\n\t\t\t\t\t\t\tif ( t < t1 ) {\r\n\r\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\r\n\t\t\t\t\t\t\t\tbreak seek;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// prepare binary search on the right side of the index\r\n\t\t\t\t\t\tright = pp.length;\r\n\t\t\t\t\t\tbreak linear_scan;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//- slower code:\r\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\r\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\r\n\r\n\t\t\t\t\t\t// looping?\r\n\r\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\r\n\r\n\t\t\t\t\t\tif ( t < t1global ) {\r\n\r\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\r\n\t\t\t\t\t\t\tt0 = t1global;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// linear reverse scan\r\n\r\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\r\n\r\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t// before start\r\n\r\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\r\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\r\n\r\n\t\t\t\t\t\t\tt1 = t0;\r\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\r\n\r\n\t\t\t\t\t\t\tif ( t >= t0 ) {\r\n\r\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\r\n\t\t\t\t\t\t\t\tbreak seek;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// prepare binary search on the left side of the index\r\n\t\t\t\t\t\tright = i1;\r\n\t\t\t\t\t\ti1 = 0;\r\n\t\t\t\t\t\tbreak linear_scan;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// the interval is valid\r\n\r\n\t\t\t\t\tbreak validate_interval;\r\n\r\n\t\t\t\t} // linear scan\r\n\r\n\t\t\t\t// binary search\r\n\r\n\t\t\t\twhile ( i1 < right ) {\r\n\r\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\r\n\r\n\t\t\t\t\tif ( t < pp[ mid ] ) {\r\n\r\n\t\t\t\t\t\tright = mid;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ti1 = mid + 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tt1 = pp[ i1 ];\r\n\t\t\t\tt0 = pp[ i1 - 1 ];\r\n\r\n\t\t\t\t// check boundary cases, again\r\n\r\n\t\t\t\tif ( t0 === undefined ) {\r\n\r\n\t\t\t\t\tthis._cachedIndex = 0;\r\n\t\t\t\t\treturn this.copySampleValue_( 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( t1 === undefined ) {\r\n\r\n\t\t\t\t\ti1 = pp.length;\r\n\t\t\t\t\tthis._cachedIndex = i1;\r\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} // seek\r\n\r\n\t\t\tthis._cachedIndex = i1;\r\n\r\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\r\n\r\n\t\t} // validate_interval\r\n\r\n\t\treturn this.interpolate_( i1, t0, t, t1 );\r\n\r\n\t}\r\n\r\n\tgetSettings_() {\r\n\r\n\t\treturn this.settings || this.DefaultSettings_;\r\n\r\n\t}\r\n\r\n\tcopySampleValue_( index ) {\r\n\r\n\t\t// copies a sample value to the result buffer\r\n\r\n\t\tconst result = this.resultBuffer,\r\n\t\t\tvalues = this.sampleValues,\r\n\t\t\tstride = this.valueSize,\r\n\t\t\toffset = index * stride;\r\n\r\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\tresult[ i ] = values[ offset + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\t// Template methods for derived classes:\r\n\r\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\r\n\r\n\t\tthrow new Error( 'call to abstract method' );\r\n\t\t// implementations shall return this.resultBuffer\r\n\r\n\t}\r\n\r\n\tintervalChanged_( /* i1, t0, t1 */ ) {\r\n\r\n\t\t// empty\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Fast and simple cubic spline interpolant.\r\n *\r\n * It was derived from a Hermitian construction setting the first derivative\r\n * at each sample position to the linear slope between neighboring positions\r\n * over their parameter interval.\r\n */\r\n\r\nclass CubicInterpolant extends Interpolant {\r\n\r\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n\t\tthis._weightPrev = - 0;\r\n\t\tthis._offsetPrev = - 0;\r\n\t\tthis._weightNext = - 0;\r\n\t\tthis._offsetNext = - 0;\r\n\r\n\t\tthis.DefaultSettings_ = {\r\n\r\n\t\t\tendingStart: ZeroCurvatureEnding,\r\n\t\t\tendingEnd: ZeroCurvatureEnding\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tintervalChanged_( i1, t0, t1 ) {\r\n\r\n\t\tconst pp = this.parameterPositions;\r\n\t\tlet iPrev = i1 - 2,\r\n\t\t\tiNext = i1 + 1,\r\n\r\n\t\t\ttPrev = pp[ iPrev ],\r\n\t\t\ttNext = pp[ iNext ];\r\n\r\n\t\tif ( tPrev === undefined ) {\r\n\r\n\t\t\tswitch ( this.getSettings_().endingStart ) {\r\n\r\n\t\t\t\tcase ZeroSlopeEnding:\r\n\r\n\t\t\t\t\t// f'(t0) = 0\r\n\t\t\t\t\tiPrev = i1;\r\n\t\t\t\t\ttPrev = 2 * t0 - t1;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase WrapAroundEnding:\r\n\r\n\t\t\t\t\t// use the other end of the curve\r\n\t\t\t\t\tiPrev = pp.length - 2;\r\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: // ZeroCurvatureEnding\r\n\r\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\r\n\t\t\t\t\tiPrev = i1;\r\n\t\t\t\t\ttPrev = t1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( tNext === undefined ) {\r\n\r\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\r\n\r\n\t\t\t\tcase ZeroSlopeEnding:\r\n\r\n\t\t\t\t\t// f'(tN) = 0\r\n\t\t\t\t\tiNext = i1;\r\n\t\t\t\t\ttNext = 2 * t1 - t0;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase WrapAroundEnding:\r\n\r\n\t\t\t\t\t// use the other end of the curve\r\n\t\t\t\t\tiNext = 1;\r\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: // ZeroCurvatureEnding\r\n\r\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\r\n\t\t\t\t\tiNext = i1 - 1;\r\n\t\t\t\t\ttNext = t0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\r\n\t\t\tstride = this.valueSize;\r\n\r\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\r\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\r\n\t\tthis._offsetPrev = iPrev * stride;\r\n\t\tthis._offsetNext = iNext * stride;\r\n\r\n\t}\r\n\r\n\tinterpolate_( i1, t0, t, t1 ) {\r\n\r\n\t\tconst result = this.resultBuffer,\r\n\t\t\tvalues = this.sampleValues,\r\n\t\t\tstride = this.valueSize,\r\n\r\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\r\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\r\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\r\n\r\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\r\n\t\t\tpp = p * p,\r\n\t\t\tppp = pp * p;\r\n\r\n\t\t// evaluate polynomials\r\n\r\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\r\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\r\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\r\n\t\tconst sN = wN * ppp - wN * pp;\r\n\r\n\t\t// combine data linearly\r\n\r\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\tresult[ i ] =\r\n\t\t\t\t\tsP * values[ oP + i ] +\r\n\t\t\t\t\ts0 * values[ o0 + i ] +\r\n\t\t\t\t\ts1 * values[ o1 + i ] +\r\n\t\t\t\t\tsN * values[ oN + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass LinearInterpolant extends Interpolant {\r\n\r\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n\t}\r\n\r\n\tinterpolate_( i1, t0, t, t1 ) {\r\n\r\n\t\tconst result = this.resultBuffer,\r\n\t\t\tvalues = this.sampleValues,\r\n\t\t\tstride = this.valueSize,\r\n\r\n\t\t\toffset1 = i1 * stride,\r\n\t\t\toffset0 = offset1 - stride,\r\n\r\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\r\n\t\t\tweight0 = 1 - weight1;\r\n\r\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\tresult[ i ] =\r\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\r\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n *\r\n * Interpolant that evaluates to the sample value at the position preceding\r\n * the parameter.\r\n */\r\n\r\nclass DiscreteInterpolant extends Interpolant {\r\n\r\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n\t}\r\n\r\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\r\n\r\n\t\treturn this.copySampleValue_( i1 - 1 );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass KeyframeTrack {\r\n\r\n\tconstructor( name, times, values, interpolation ) {\r\n\r\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\r\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\r\n\r\n\t\tthis.name = name;\r\n\r\n\t\tthis.times = convertArray( times, this.TimeBufferType );\r\n\t\tthis.values = convertArray( values, this.ValueBufferType );\r\n\r\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\r\n\r\n\t}\r\n\r\n\t// Serialization (in static context, because of constructor invocation\r\n\t// and automatic invocation of .toJSON):\r\n\r\n\tstatic toJSON( track ) {\r\n\r\n\t\tconst trackType = track.constructor;\r\n\r\n\t\tlet json;\r\n\r\n\t\t// derived classes can define a static toJSON method\r\n\t\tif ( trackType.toJSON !== this.toJSON ) {\r\n\r\n\t\t\tjson = trackType.toJSON( track );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// by default, we assume the data can be serialized as-is\r\n\t\t\tjson = {\r\n\r\n\t\t\t\t'name': track.name,\r\n\t\t\t\t'times': convertArray( track.times, Array ),\r\n\t\t\t\t'values': convertArray( track.values, Array )\r\n\r\n\t\t\t};\r\n\r\n\t\t\tconst interpolation = track.getInterpolation();\r\n\r\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\r\n\r\n\t\t\t\tjson.interpolation = interpolation;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tjson.type = track.ValueTypeName; // mandatory\r\n\r\n\t\treturn json;\r\n\r\n\t}\r\n\r\n\tInterpolantFactoryMethodDiscrete( result ) {\r\n\r\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\r\n\r\n\t}\r\n\r\n\tInterpolantFactoryMethodLinear( result ) {\r\n\r\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\r\n\r\n\t}\r\n\r\n\tInterpolantFactoryMethodSmooth( result ) {\r\n\r\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\r\n\r\n\t}\r\n\r\n\tsetInterpolation( interpolation ) {\r\n\r\n\t\tlet factoryMethod;\r\n\r\n\t\tswitch ( interpolation ) {\r\n\r\n\t\t\tcase InterpolateDiscrete:\r\n\r\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase InterpolateLinear:\r\n\r\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase InterpolateSmooth:\r\n\r\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tif ( factoryMethod === undefined ) {\r\n\r\n\t\t\tconst message = 'unsupported interpolation for ' +\r\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\r\n\r\n\t\t\tif ( this.createInterpolant === undefined ) {\r\n\r\n\t\t\t\t// fall back to default, unless the default itself is messed up\r\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\r\n\r\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tthis.createInterpolant = factoryMethod;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetInterpolation() {\r\n\r\n\t\tswitch ( this.createInterpolant ) {\r\n\r\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\r\n\r\n\t\t\t\treturn InterpolateDiscrete;\r\n\r\n\t\t\tcase this.InterpolantFactoryMethodLinear:\r\n\r\n\t\t\t\treturn InterpolateLinear;\r\n\r\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\r\n\r\n\t\t\t\treturn InterpolateSmooth;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetValueSize() {\r\n\r\n\t\treturn this.values.length / this.times.length;\r\n\r\n\t}\r\n\r\n\t// move all keyframes either forwards or backwards in time\r\n\tshift( timeOffset ) {\r\n\r\n\t\tif ( timeOffset !== 0.0 ) {\r\n\r\n\t\t\tconst times = this.times;\r\n\r\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\ttimes[ i ] += timeOffset;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\r\n\tscale( timeScale ) {\r\n\r\n\t\tif ( timeScale !== 1.0 ) {\r\n\r\n\t\t\tconst times = this.times;\r\n\r\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\ttimes[ i ] *= timeScale;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\r\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\r\n\ttrim( startTime, endTime ) {\r\n\r\n\t\tconst times = this.times,\r\n\t\t\tnKeys = times.length;\r\n\r\n\t\tlet from = 0,\r\n\t\t\tto = nKeys - 1;\r\n\r\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\r\n\r\n\t\t\t++ from;\r\n\r\n\t\t}\r\n\r\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\r\n\r\n\t\t\t-- to;\r\n\r\n\t\t}\r\n\r\n\t\t++ to; // inclusive -> exclusive bound\r\n\r\n\t\tif ( from !== 0 || to !== nKeys ) {\r\n\r\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\r\n\t\t\tif ( from >= to ) {\r\n\r\n\t\t\t\tto = Math.max( to, 1 );\r\n\t\t\t\tfrom = to - 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst stride = this.getValueSize();\r\n\t\t\tthis.times = times.slice( from, to );\r\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\r\n\tvalidate() {\r\n\r\n\t\tlet valid = true;\r\n\r\n\t\tconst valueSize = this.getValueSize();\r\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\r\n\t\t\tvalid = false;\r\n\r\n\t\t}\r\n\r\n\t\tconst times = this.times,\r\n\t\t\tvalues = this.values,\r\n\r\n\t\t\tnKeys = times.length;\r\n\r\n\t\tif ( nKeys === 0 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\r\n\t\t\tvalid = false;\r\n\r\n\t\t}\r\n\r\n\t\tlet prevTime = null;\r\n\r\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\r\n\r\n\t\t\tconst currTime = times[ i ];\r\n\r\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\r\n\t\t\t\tvalid = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\r\n\t\t\t\tvalid = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprevTime = currTime;\r\n\r\n\t\t}\r\n\r\n\t\tif ( values !== undefined ) {\r\n\r\n\t\t\tif ( isTypedArray( values ) ) {\r\n\r\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tconst value = values[ i ];\r\n\r\n\t\t\t\t\tif ( isNaN( value ) ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\r\n\t\t\t\t\t\tvalid = false;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn valid;\r\n\r\n\t}\r\n\r\n\t// removes equivalent sequential keys as common in morph target sequences\r\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\r\n\toptimize() {\r\n\r\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\r\n\t\tconst times = this.times.slice(),\r\n\t\t\tvalues = this.values.slice(),\r\n\t\t\tstride = this.getValueSize(),\r\n\r\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\r\n\r\n\t\t\tlastIndex = times.length - 1;\r\n\r\n\t\tlet writeIndex = 1;\r\n\r\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\r\n\r\n\t\t\tlet keep = false;\r\n\r\n\t\t\tconst time = times[ i ];\r\n\t\t\tconst timeNext = times[ i + 1 ];\r\n\r\n\t\t\t// remove adjacent keyframes scheduled at the same time\r\n\r\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\r\n\r\n\t\t\t\tif ( ! smoothInterpolation ) {\r\n\r\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\r\n\r\n\t\t\t\t\tconst offset = i * stride,\r\n\t\t\t\t\t\toffsetP = offset - stride,\r\n\t\t\t\t\t\toffsetN = offset + stride;\r\n\r\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\t\t\t\tconst value = values[ offset + j ];\r\n\r\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\r\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\r\n\r\n\t\t\t\t\t\t\tkeep = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tkeep = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// in-place compaction\r\n\r\n\t\t\tif ( keep ) {\r\n\r\n\t\t\t\tif ( i !== writeIndex ) {\r\n\r\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\r\n\r\n\t\t\t\t\tconst readOffset = i * stride,\r\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\r\n\r\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t++ writeIndex;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// flush last keyframe (compaction looks ahead)\r\n\r\n\t\tif ( lastIndex > 0 ) {\r\n\r\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\r\n\r\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\t++ writeIndex;\r\n\r\n\t\t}\r\n\r\n\t\tif ( writeIndex !== times.length ) {\r\n\r\n\t\t\tthis.times = times.slice( 0, writeIndex );\r\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.times = times;\r\n\t\t\tthis.values = values;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\tconst times = this.times.slice();\r\n\t\tconst values = this.values.slice();\r\n\r\n\t\tconst TypedKeyframeTrack = this.constructor;\r\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\r\n\r\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\r\n\t\ttrack.createInterpolant = this.createInterpolant;\r\n\r\n\t\treturn track;\r\n\r\n\t}\r\n\r\n}\r\n\r\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\r\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\r\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\r\n\r\n/**\r\n * A Track of Boolean keyframe values.\r\n */\r\nclass BooleanKeyframeTrack extends KeyframeTrack {\r\n\r\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\r\n\tconstructor( name, times, values ) {\r\n\r\n\t\tsuper( name, times, values );\r\n\r\n\t}\r\n\r\n}\r\n\r\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\r\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\r\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\r\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\r\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\r\n\r\n/**\r\n * A Track of keyframe values that represent color.\r\n */\r\nclass ColorKeyframeTrack extends KeyframeTrack {}\r\n\r\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\r\n\r\n/**\r\n * A Track of numeric keyframe values.\r\n */\r\nclass NumberKeyframeTrack extends KeyframeTrack {}\r\n\r\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\r\n\r\n/**\r\n * Spherical linear unit quaternion interpolant.\r\n */\r\n\r\nclass QuaternionLinearInterpolant extends Interpolant {\r\n\r\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n\t}\r\n\r\n\tinterpolate_( i1, t0, t, t1 ) {\r\n\r\n\t\tconst result = this.resultBuffer,\r\n\t\t\tvalues = this.sampleValues,\r\n\t\t\tstride = this.valueSize,\r\n\r\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\r\n\r\n\t\tlet offset = i1 * stride;\r\n\r\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\r\n\r\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * A Track of quaternion keyframe values.\r\n */\r\nclass QuaternionKeyframeTrack extends KeyframeTrack {\r\n\r\n\tInterpolantFactoryMethodLinear( result ) {\r\n\r\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\r\n\r\n\t}\r\n\r\n}\r\n\r\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\r\n// ValueBufferType is inherited\r\n// DefaultInterpolation is inherited;\r\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\r\n\r\n/**\r\n * A Track that interpolates Strings\r\n */\r\nclass StringKeyframeTrack extends KeyframeTrack {\r\n\r\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\r\n\tconstructor( name, times, values ) {\r\n\r\n\t\tsuper( name, times, values );\r\n\r\n\t}\r\n\r\n}\r\n\r\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\r\nStringKeyframeTrack.prototype.ValueBufferType = Array;\r\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\r\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\r\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\r\n\r\n/**\r\n * A Track of vectored keyframe values.\r\n */\r\nclass VectorKeyframeTrack extends KeyframeTrack {}\r\n\r\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\r\n\r\nclass AnimationClip {\r\n\r\n\tconstructor( name = '', duration = - 1, tracks = [], blendMode = NormalAnimationBlendMode ) {\r\n\r\n\t\tthis.name = name;\r\n\t\tthis.tracks = tracks;\r\n\t\tthis.duration = duration;\r\n\t\tthis.blendMode = blendMode;\r\n\r\n\t\tthis.uuid = generateUUID();\r\n\r\n\t\t// this means it should figure out its duration by scanning the tracks\r\n\t\tif ( this.duration < 0 ) {\r\n\r\n\t\t\tthis.resetDuration();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tstatic parse( json ) {\r\n\r\n\t\tconst tracks = [],\r\n\t\t\tjsonTracks = json.tracks,\r\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\r\n\r\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\r\n\r\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\r\n\r\n\t\t}\r\n\r\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\r\n\t\tclip.uuid = json.uuid;\r\n\r\n\t\treturn clip;\r\n\r\n\t}\r\n\r\n\tstatic toJSON( clip ) {\r\n\r\n\t\tconst tracks = [],\r\n\t\t\tclipTracks = clip.tracks;\r\n\r\n\t\tconst json = {\r\n\r\n\t\t\t'name': clip.name,\r\n\t\t\t'duration': clip.duration,\r\n\t\t\t'tracks': tracks,\r\n\t\t\t'uuid': clip.uuid,\r\n\t\t\t'blendMode': clip.blendMode\r\n\r\n\t\t};\r\n\r\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\r\n\r\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn json;\r\n\r\n\t}\r\n\r\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\r\n\r\n\t\tconst numMorphTargets = morphTargetSequence.length;\r\n\t\tconst tracks = [];\r\n\r\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\r\n\r\n\t\t\tlet times = [];\r\n\t\t\tlet values = [];\r\n\r\n\t\t\ttimes.push(\r\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\r\n\t\t\t\ti,\r\n\t\t\t\t( i + 1 ) % numMorphTargets );\r\n\r\n\t\t\tvalues.push( 0, 1, 0 );\r\n\r\n\t\t\tconst order = getKeyframeOrder( times );\r\n\t\t\ttimes = sortedArray( times, 1, order );\r\n\t\t\tvalues = sortedArray( values, 1, order );\r\n\r\n\t\t\t// if there is a key at the first frame, duplicate it as the\r\n\t\t\t// last frame as well for perfect loop.\r\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\r\n\r\n\t\t\t\ttimes.push( numMorphTargets );\r\n\t\t\t\tvalues.push( values[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttracks.push(\r\n\t\t\t\tnew NumberKeyframeTrack(\r\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\r\n\t\t\t\t\ttimes, values\r\n\t\t\t\t).scale( 1.0 / fps ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn new this( name, - 1, tracks );\r\n\r\n\t}\r\n\r\n\tstatic findByName( objectOrClipArray, name ) {\r\n\r\n\t\tlet clipArray = objectOrClipArray;\r\n\r\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\r\n\r\n\t\t\tconst o = objectOrClipArray;\r\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\r\n\r\n\t\t\tif ( clipArray[ i ].name === name ) {\r\n\r\n\t\t\t\treturn clipArray[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\r\n\r\n\t\tconst animationToMorphTargets = {};\r\n\r\n\t\t// tested with https://regex101.com/ on trick sequences\r\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\r\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\r\n\r\n\t\t// sort morph target names into animation groups based\r\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\r\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\tconst morphTarget = morphTargets[ i ];\r\n\t\t\tconst parts = morphTarget.name.match( pattern );\r\n\r\n\t\t\tif ( parts && parts.length > 1 ) {\r\n\r\n\t\t\t\tconst name = parts[ 1 ];\r\n\r\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\r\n\r\n\t\t\t\tif ( ! animationMorphTargets ) {\r\n\r\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tanimationMorphTargets.push( morphTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst clips = [];\r\n\r\n\t\tfor ( const name in animationToMorphTargets ) {\r\n\r\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn clips;\r\n\r\n\t}\r\n\r\n\t// parse the animation.hierarchy format\r\n\tstatic parseAnimation( animation, bones ) {\r\n\r\n\t\tif ( ! animation ) {\r\n\r\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\r\n\r\n\t\t\t// only return track if there are actually keys.\r\n\t\t\tif ( animationKeys.length !== 0 ) {\r\n\r\n\t\t\t\tconst times = [];\r\n\t\t\t\tconst values = [];\r\n\r\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\r\n\r\n\t\t\t\t// empty keys are filtered out, so check again\r\n\t\t\t\tif ( times.length !== 0 ) {\r\n\r\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tconst tracks = [];\r\n\r\n\t\tconst clipName = animation.name || 'default';\r\n\t\tconst fps = animation.fps || 30;\r\n\t\tconst blendMode = animation.blendMode;\r\n\r\n\t\t// automatic length determination in AnimationClip.\r\n\t\tlet duration = animation.length || - 1;\r\n\r\n\t\tconst hierarchyTracks = animation.hierarchy || [];\r\n\r\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\r\n\r\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\r\n\r\n\t\t\t// skip empty tracks\r\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\r\n\r\n\t\t\t// process morph targets\r\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\r\n\r\n\t\t\t\t// figure out all morph targets used in this track\r\n\t\t\t\tconst morphTargetNames = {};\r\n\r\n\t\t\t\tlet k;\r\n\r\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\r\n\r\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\r\n\r\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create a track for each morph target with all zero\r\n\t\t\t\t// morphTargetInfluences except for the keys in which\r\n\t\t\t\t// the morphTarget is named.\r\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\r\n\r\n\t\t\t\t\tconst times = [];\r\n\t\t\t\t\tconst values = [];\r\n\r\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\r\n\r\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\r\n\r\n\t\t\t\t\t\ttimes.push( animationKey.time );\r\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tduration = morphTargetNames.length * fps;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// ...assume skeletal animation\r\n\r\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\r\n\r\n\t\t\t\taddNonemptyTrack(\r\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\r\n\t\t\t\t\tanimationKeys, 'pos', tracks );\r\n\r\n\t\t\t\taddNonemptyTrack(\r\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\r\n\t\t\t\t\tanimationKeys, 'rot', tracks );\r\n\r\n\t\t\t\taddNonemptyTrack(\r\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\r\n\t\t\t\t\tanimationKeys, 'scl', tracks );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( tracks.length === 0 ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\r\n\r\n\t\treturn clip;\r\n\r\n\t}\r\n\r\n\tresetDuration() {\r\n\r\n\t\tconst tracks = this.tracks;\r\n\t\tlet duration = 0;\r\n\r\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\r\n\r\n\t\t\tconst track = this.tracks[ i ];\r\n\r\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\r\n\r\n\t\t}\r\n\r\n\t\tthis.duration = duration;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttrim() {\r\n\r\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tvalidate() {\r\n\r\n\t\tlet valid = true;\r\n\r\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n\t\t\tvalid = valid && this.tracks[ i ].validate();\r\n\r\n\t\t}\r\n\r\n\t\treturn valid;\r\n\r\n\t}\r\n\r\n\toptimize() {\r\n\r\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n\t\t\tthis.tracks[ i ].optimize();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\tconst tracks = [];\r\n\r\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n\t\t\ttracks.push( this.tracks[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\treturn this.constructor.toJSON( this );\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction getTrackTypeForValueTypeName( typeName ) {\r\n\r\n\tswitch ( typeName.toLowerCase() ) {\r\n\r\n\t\tcase 'scalar':\r\n\t\tcase 'double':\r\n\t\tcase 'float':\r\n\t\tcase 'number':\r\n\t\tcase 'integer':\r\n\r\n\t\t\treturn NumberKeyframeTrack;\r\n\r\n\t\tcase 'vector':\r\n\t\tcase 'vector2':\r\n\t\tcase 'vector3':\r\n\t\tcase 'vector4':\r\n\r\n\t\t\treturn VectorKeyframeTrack;\r\n\r\n\t\tcase 'color':\r\n\r\n\t\t\treturn ColorKeyframeTrack;\r\n\r\n\t\tcase 'quaternion':\r\n\r\n\t\t\treturn QuaternionKeyframeTrack;\r\n\r\n\t\tcase 'bool':\r\n\t\tcase 'boolean':\r\n\r\n\t\t\treturn BooleanKeyframeTrack;\r\n\r\n\t\tcase 'string':\r\n\r\n\t\t\treturn StringKeyframeTrack;\r\n\r\n\t}\r\n\r\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\r\n\r\n}\r\n\r\nfunction parseKeyframeTrack( json ) {\r\n\r\n\tif ( json.type === undefined ) {\r\n\r\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\r\n\r\n\t}\r\n\r\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\r\n\r\n\tif ( json.times === undefined ) {\r\n\r\n\t\tconst times = [], values = [];\r\n\r\n\t\tflattenJSON( json.keys, times, values, 'value' );\r\n\r\n\t\tjson.times = times;\r\n\t\tjson.values = values;\r\n\r\n\t}\r\n\r\n\t// derived classes can define a static parse method\r\n\tif ( trackType.parse !== undefined ) {\r\n\r\n\t\treturn trackType.parse( json );\r\n\r\n\t} else {\r\n\r\n\t\t// by default, we assume a constructor compatible with the base\r\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst Cache = {\r\n\r\n\tenabled: false,\r\n\r\n\tfiles: {},\r\n\r\n\tadd: function ( key, file ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\r\n\t\tthis.files[ key ] = file;\r\n\r\n\t},\r\n\r\n\tget: function ( key ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\r\n\t\treturn this.files[ key ];\r\n\r\n\t},\r\n\r\n\tremove: function ( key ) {\r\n\r\n\t\tdelete this.files[ key ];\r\n\r\n\t},\r\n\r\n\tclear: function () {\r\n\r\n\t\tthis.files = {};\r\n\r\n\t}\r\n\r\n};\r\n\r\nclass LoadingManager {\r\n\r\n\tconstructor( onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tlet isLoading = false;\r\n\t\tlet itemsLoaded = 0;\r\n\t\tlet itemsTotal = 0;\r\n\t\tlet urlModifier = undefined;\r\n\t\tconst handlers = [];\r\n\r\n\t\t// Refer to #5689 for the reason why we don't set .onStart\r\n\t\t// in the constructor\r\n\r\n\t\tthis.onStart = undefined;\r\n\t\tthis.onLoad = onLoad;\r\n\t\tthis.onProgress = onProgress;\r\n\t\tthis.onError = onError;\r\n\r\n\t\tthis.itemStart = function ( url ) {\r\n\r\n\t\t\titemsTotal ++;\r\n\r\n\t\t\tif ( isLoading === false ) {\r\n\r\n\t\t\t\tif ( scope.onStart !== undefined ) {\r\n\r\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tisLoading = true;\r\n\r\n\t\t};\r\n\r\n\t\tthis.itemEnd = function ( url ) {\r\n\r\n\t\t\titemsLoaded ++;\r\n\r\n\t\t\tif ( scope.onProgress !== undefined ) {\r\n\r\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( itemsLoaded === itemsTotal ) {\r\n\r\n\t\t\t\tisLoading = false;\r\n\r\n\t\t\t\tif ( scope.onLoad !== undefined ) {\r\n\r\n\t\t\t\t\tscope.onLoad();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.itemError = function ( url ) {\r\n\r\n\t\t\tif ( scope.onError !== undefined ) {\r\n\r\n\t\t\t\tscope.onError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tthis.resolveURL = function ( url ) {\r\n\r\n\t\t\tif ( urlModifier ) {\r\n\r\n\t\t\t\treturn urlModifier( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn url;\r\n\r\n\t\t};\r\n\r\n\t\tthis.setURLModifier = function ( transform ) {\r\n\r\n\t\t\turlModifier = transform;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t\tthis.addHandler = function ( regex, loader ) {\r\n\r\n\t\t\thandlers.push( regex, loader );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t\tthis.removeHandler = function ( regex ) {\r\n\r\n\t\t\tconst index = handlers.indexOf( regex );\r\n\r\n\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\thandlers.splice( index, 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t\tthis.getHandler = function ( file ) {\r\n\r\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\r\n\r\n\t\t\t\tconst regex = handlers[ i ];\r\n\t\t\t\tconst loader = handlers[ i + 1 ];\r\n\r\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\r\n\r\n\t\t\t\tif ( regex.test( file ) ) {\r\n\r\n\t\t\t\t\treturn loader;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\r\n\r\nclass Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\r\n\r\n\t\tthis.crossOrigin = 'anonymous';\r\n\t\tthis.withCredentials = false;\r\n\t\tthis.path = '';\r\n\t\tthis.resourcePath = '';\r\n\t\tthis.requestHeader = {};\r\n\r\n\t}\r\n\r\n\tload( /* url, onLoad, onProgress, onError */ ) {}\r\n\r\n\tloadAsync( url, onProgress ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\treturn new Promise( function ( resolve, reject ) {\r\n\r\n\t\t\tscope.load( url, resolve, onProgress, reject );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tparse( /* data */ ) {}\r\n\r\n\tsetCrossOrigin( crossOrigin ) {\r\n\r\n\t\tthis.crossOrigin = crossOrigin;\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetWithCredentials( value ) {\r\n\r\n\t\tthis.withCredentials = value;\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetPath( path ) {\r\n\r\n\t\tthis.path = path;\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetResourcePath( resourcePath ) {\r\n\r\n\t\tthis.resourcePath = resourcePath;\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetRequestHeader( requestHeader ) {\r\n\r\n\t\tthis.requestHeader = requestHeader;\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\r\n\r\nconst loading = {};\r\n\r\nclass HttpError extends Error {\r\n\r\n\tconstructor( message, response ) {\r\n\r\n\t\tsuper( message );\r\n\t\tthis.response = response;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass FileLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tif ( url === undefined ) url = '';\r\n\r\n\t\tif ( this.path !== undefined ) url = this.path + url;\r\n\r\n\t\turl = this.manager.resolveURL( url );\r\n\r\n\t\tconst cached = Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tthis.manager.itemStart( url );\r\n\r\n\t\t\tsetTimeout( () => {\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( cached );\r\n\r\n\t\t\t\tthis.manager.itemEnd( url );\r\n\r\n\t\t\t}, 0 );\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\t// Check if request is duplicate\r\n\r\n\t\tif ( loading[ url ] !== undefined ) {\r\n\r\n\t\t\tloading[ url ].push( {\r\n\r\n\t\t\t\tonLoad: onLoad,\r\n\t\t\t\tonProgress: onProgress,\r\n\t\t\t\tonError: onError\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// Initialise array for duplicate requests\r\n\t\tloading[ url ] = [];\r\n\r\n\t\tloading[ url ].push( {\r\n\t\t\tonLoad: onLoad,\r\n\t\t\tonProgress: onProgress,\r\n\t\t\tonError: onError,\r\n\t\t} );\r\n\r\n\t\t// create request\r\n\t\tconst req = new Request( url, {\r\n\t\t\theaders: new Headers( this.requestHeader ),\r\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\r\n\t\t\t// An abort controller could be added within a future PR\r\n\t\t} );\r\n\r\n\t\t// record states ( avoid data race )\r\n\t\tconst mimeType = this.mimeType;\r\n\t\tconst responseType = this.responseType;\r\n\r\n\t\t// start the fetch\r\n\t\tfetch( req )\r\n\t\t\t.then( response => {\r\n\r\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\r\n\r\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\r\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\r\n\r\n\t\t\t\t\tif ( response.status === 0 ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\r\n\r\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\r\n\r\n\t\t\t\t\t\treturn response;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst callbacks = loading[ url ];\r\n\t\t\t\t\tconst reader = response.body.getReader();\r\n\r\n\t\t\t\t\t// Nginx needs X-File-Size check\r\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\r\n\t\t\t\t\tconst contentLength = response.headers.get( 'X-File-Size' ) || response.headers.get( 'Content-Length' );\r\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\r\n\t\t\t\t\tconst lengthComputable = total !== 0;\r\n\t\t\t\t\tlet loaded = 0;\r\n\r\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\r\n\t\t\t\t\tconst stream = new ReadableStream( {\r\n\t\t\t\t\t\tstart( controller ) {\r\n\r\n\t\t\t\t\t\t\treadData();\r\n\r\n\t\t\t\t\t\t\tfunction readData() {\r\n\r\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\r\n\r\n\t\t\t\t\t\t\t\t\tif ( done ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\r\n\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\r\n\r\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\r\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\r\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\r\n\t\t\t\t\t\t\t\t\t\treadData();\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}, ( e ) => {\r\n\r\n\t\t\t\t\t\t\t\t\tcontroller.error( e );\r\n\r\n\t\t\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t\treturn new Response( stream );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} )\r\n\t\t\t.then( response => {\r\n\r\n\t\t\t\tswitch ( responseType ) {\r\n\r\n\t\t\t\t\tcase 'arraybuffer':\r\n\r\n\t\t\t\t\t\treturn response.arrayBuffer();\r\n\r\n\t\t\t\t\tcase 'blob':\r\n\r\n\t\t\t\t\t\treturn response.blob();\r\n\r\n\t\t\t\t\tcase 'document':\r\n\r\n\t\t\t\t\t\treturn response.text()\r\n\t\t\t\t\t\t\t.then( text => {\r\n\r\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\r\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\r\n\r\n\t\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\tcase 'json':\r\n\r\n\t\t\t\t\t\treturn response.json();\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tif ( mimeType === undefined ) {\r\n\r\n\t\t\t\t\t\t\treturn response.text();\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// sniff encoding\r\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\r\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\r\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\r\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\r\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} )\r\n\t\t\t.then( data => {\r\n\r\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\r\n\t\t\t\t// error response bodies as proper responses to requests.\r\n\t\t\t\tCache.add( url, data );\r\n\r\n\t\t\t\tconst callbacks = loading[ url ];\r\n\t\t\t\tdelete loading[ url ];\r\n\r\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tconst callback = callbacks[ i ];\r\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} )\r\n\t\t\t.catch( err => {\r\n\r\n\t\t\t\t// Abort errors and other errors are handled the same\r\n\r\n\t\t\t\tconst callbacks = loading[ url ];\r\n\r\n\t\t\t\tif ( callbacks === undefined ) {\r\n\r\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\r\n\t\t\t\t\tthis.manager.itemError( url );\r\n\t\t\t\t\tthrow err;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete loading[ url ];\r\n\r\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tconst callback = callbacks[ i ];\r\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.manager.itemError( url );\r\n\r\n\t\t\t} )\r\n\t\t\t.finally( () => {\r\n\r\n\t\t\t\tthis.manager.itemEnd( url );\r\n\r\n\t\t\t} );\r\n\r\n\t\tthis.manager.itemStart( url );\r\n\r\n\t}\r\n\r\n\tsetResponseType( value ) {\r\n\r\n\t\tthis.responseType = value;\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetMimeType( value ) {\r\n\r\n\t\tthis.mimeType = value;\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass AnimationLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst loader = new FileLoader( this.manager );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setRequestHeader( this.requestHeader );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t}\r\n\r\n\tparse( json ) {\r\n\r\n\t\tconst animations = [];\r\n\r\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\r\n\r\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\r\n\r\n\t\t\tanimations.push( clip );\r\n\r\n\t\t}\r\n\r\n\t\treturn animations;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n *\r\n * Sub classes have to implement the parse() method which will be used in load().\r\n */\r\n\r\nclass CompressedTextureLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst images = [];\r\n\r\n\t\tconst texture = new CompressedTexture();\r\n\r\n\t\tconst loader = new FileLoader( this.manager );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\tloader.setRequestHeader( this.requestHeader );\r\n\t\tloader.setWithCredentials( scope.withCredentials );\r\n\r\n\t\tlet loaded = 0;\r\n\r\n\t\tfunction loadTexture( i ) {\r\n\r\n\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\r\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\r\n\r\n\t\t\t\timages[ i ] = {\r\n\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t};\r\n\r\n\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\r\n\r\n\t\t\t\t\ttexture.image = images;\r\n\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t}\r\n\r\n\t\tif ( Array.isArray( url ) ) {\r\n\r\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\r\n\r\n\t\t\t\tloadTexture( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\r\n\r\n\t\t\t\tif ( texDatas.isCubemap ) {\r\n\r\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\r\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\r\n\r\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\r\n\r\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\r\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.image = images;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\r\n\t\t\t\t\ttexture.minFilter = LinearFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass ImageLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tif ( this.path !== undefined ) url = this.path + url;\r\n\r\n\t\turl = this.manager.resolveURL( url );\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst cached = Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( cached );\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t}, 0 );\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tconst image = createElementNS( 'img' );\r\n\r\n\t\tfunction onImageLoad() {\r\n\r\n\t\t\tremoveEventListeners();\r\n\r\n\t\t\tCache.add( url, this );\r\n\r\n\t\t\tif ( onLoad ) onLoad( this );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}\r\n\r\n\t\tfunction onImageError( event ) {\r\n\r\n\t\t\tremoveEventListeners();\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}\r\n\r\n\t\tfunction removeEventListeners() {\r\n\r\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\r\n\t\t\timage.removeEventListener( 'error', onImageError, false );\r\n\r\n\t\t}\r\n\r\n\t\timage.addEventListener( 'load', onImageLoad, false );\r\n\t\timage.addEventListener( 'error', onImageError, false );\r\n\r\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\r\n\r\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\r\n\t\t}\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\timage.src = url;\r\n\r\n\t\treturn image;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass CubeTextureLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t}\r\n\r\n\tload( urls, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst texture = new CubeTexture();\r\n\t\ttexture.colorSpace = SRGBColorSpace;\r\n\r\n\t\tconst loader = new ImageLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setPath( this.path );\r\n\r\n\t\tlet loaded = 0;\r\n\r\n\t\tfunction loadTexture( i ) {\r\n\r\n\t\t\tloader.load( urls[ i ], function ( image ) {\r\n\r\n\t\t\t\ttexture.images[ i ] = image;\r\n\r\n\t\t\t\tloaded ++;\r\n\r\n\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, undefined, onError );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\r\n\r\n\t\t\tloadTexture( i );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n *\r\n * Sub classes have to implement the parse() method which will be used in load().\r\n */\r\n\r\nclass DataTextureLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst texture = new DataTexture();\r\n\r\n\t\tconst loader = new FileLoader( this.manager );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\tloader.setRequestHeader( this.requestHeader );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setWithCredentials( scope.withCredentials );\r\n\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\tlet texData;\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\ttexData = scope.parse( buffer );\r\n\r\n\t\t\t} catch ( error ) {\r\n\r\n\t\t\t\tif ( onError !== undefined ) {\r\n\r\n\t\t\t\t\tonError( error );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( error );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( texData.image !== undefined ) {\r\n\r\n\t\t\t\ttexture.image = texData.image;\r\n\r\n\t\t\t} else if ( texData.data !== undefined ) {\r\n\r\n\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\ttexture.image.data = texData.data;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\r\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\r\n\r\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\r\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\r\n\r\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\r\n\r\n\t\t\tif ( texData.colorSpace !== undefined ) {\r\n\r\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( texData.flipY !== undefined ) {\r\n\r\n\t\t\t\ttexture.flipY = texData.flipY;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( texData.format !== undefined ) {\r\n\r\n\t\t\t\ttexture.format = texData.format;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( texData.type !== undefined ) {\r\n\r\n\t\t\t\ttexture.type = texData.type;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( texData.mipmaps !== undefined ) {\r\n\r\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( texData.mipmapCount === 1 ) {\r\n\r\n\t\t\t\ttexture.minFilter = LinearFilter;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\r\n\r\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass TextureLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst texture = new Texture();\r\n\r\n\t\tconst loader = new ImageLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setPath( this.path );\r\n\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\ttexture.image = image;\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad !== undefined ) {\r\n\r\n\t\t\t\tonLoad( texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Light extends Object3D {\r\n\r\n\tconstructor( color, intensity = 1 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isLight = true;\r\n\r\n\t\tthis.type = 'Light';\r\n\r\n\t\tthis.color = new Color( color );\r\n\t\tthis.intensity = intensity;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\t// Empty here in base class; some subclasses override.\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.intensity = source.intensity;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst data = super.toJSON( meta );\r\n\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\r\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\r\n\r\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\r\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\r\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\r\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\r\n\r\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\r\n\t\tif ( this.target !== undefined ) data.object.target = this.target.uuid;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass HemisphereLight extends Light {\r\n\r\n\tconstructor( skyColor, groundColor, intensity ) {\r\n\r\n\t\tsuper( skyColor, intensity );\r\n\r\n\t\tthis.isHemisphereLight = true;\r\n\r\n\t\tthis.type = 'HemisphereLight';\r\n\r\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\r\n\t\tthis.updateMatrix();\r\n\r\n\t\tthis.groundColor = new Color( groundColor );\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.groundColor.copy( source.groundColor );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\r\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\r\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\r\n\r\nclass LightShadow {\r\n\r\n\tconstructor( camera ) {\r\n\r\n\t\tthis.camera = camera;\r\n\r\n\t\tthis.intensity = 1;\r\n\r\n\t\tthis.bias = 0;\r\n\t\tthis.normalBias = 0;\r\n\t\tthis.radius = 1;\r\n\t\tthis.blurSamples = 8;\r\n\r\n\t\tthis.mapSize = new Vector2( 512, 512 );\r\n\r\n\t\tthis.map = null;\r\n\t\tthis.mapPass = null;\r\n\t\tthis.matrix = new Matrix4();\r\n\r\n\t\tthis.autoUpdate = true;\r\n\t\tthis.needsUpdate = false;\r\n\r\n\t\tthis._frustum = new Frustum();\r\n\t\tthis._frameExtents = new Vector2( 1, 1 );\r\n\r\n\t\tthis._viewportCount = 1;\r\n\r\n\t\tthis._viewports = [\r\n\r\n\t\t\tnew Vector4( 0, 0, 1, 1 )\r\n\r\n\t\t];\r\n\r\n\t}\r\n\r\n\tgetViewportCount() {\r\n\r\n\t\treturn this._viewportCount;\r\n\r\n\t}\r\n\r\n\tgetFrustum() {\r\n\r\n\t\treturn this._frustum;\r\n\r\n\t}\r\n\r\n\tupdateMatrices( light ) {\r\n\r\n\t\tconst shadowCamera = this.camera;\r\n\t\tconst shadowMatrix = this.matrix;\r\n\r\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\r\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\r\n\r\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\tshadowCamera.lookAt( _lookTarget$1 );\r\n\t\tshadowCamera.updateMatrixWorld();\r\n\r\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\r\n\r\n\t\tshadowMatrix.set(\r\n\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t);\r\n\r\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\r\n\r\n\t}\r\n\r\n\tgetViewport( viewportIndex ) {\r\n\r\n\t\treturn this._viewports[ viewportIndex ];\r\n\r\n\t}\r\n\r\n\tgetFrameExtents() {\r\n\r\n\t\treturn this._frameExtents;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tif ( this.map ) {\r\n\r\n\t\t\tthis.map.dispose();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.mapPass ) {\r\n\r\n\t\t\tthis.mapPass.dispose();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.camera = source.camera.clone();\r\n\r\n\t\tthis.intensity = source.intensity;\r\n\r\n\t\tthis.bias = source.bias;\r\n\t\tthis.radius = source.radius;\r\n\r\n\t\tthis.mapSize.copy( source.mapSize );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst object = {};\r\n\r\n\t\tif ( this.intensity !== 1 ) object.intensity = this.intensity;\r\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\r\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\r\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\r\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\r\n\r\n\t\tobject.camera = this.camera.toJSON( false ).object;\r\n\t\tdelete object.camera.matrix;\r\n\r\n\t\treturn object;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass SpotLightShadow extends LightShadow {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\r\n\r\n\t\tthis.isSpotLightShadow = true;\r\n\r\n\t\tthis.focus = 1;\r\n\r\n\t}\r\n\r\n\tupdateMatrices( light ) {\r\n\r\n\t\tconst camera = this.camera;\r\n\r\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\r\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\r\n\t\tconst far = light.distance || camera.far;\r\n\r\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\r\n\r\n\t\t\tcamera.fov = fov;\r\n\t\t\tcamera.aspect = aspect;\r\n\t\t\tcamera.far = far;\r\n\t\t\tcamera.updateProjectionMatrix();\r\n\r\n\t\t}\r\n\r\n\t\tsuper.updateMatrices( light );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.focus = source.focus;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass SpotLight extends Light {\r\n\r\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\r\n\r\n\t\tsuper( color, intensity );\r\n\r\n\t\tthis.isSpotLight = true;\r\n\r\n\t\tthis.type = 'SpotLight';\r\n\r\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\r\n\t\tthis.updateMatrix();\r\n\r\n\t\tthis.target = new Object3D();\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.angle = angle;\r\n\t\tthis.penumbra = penumbra;\r\n\t\tthis.decay = decay;\r\n\r\n\t\tthis.map = null;\r\n\r\n\t\tthis.shadow = new SpotLightShadow();\r\n\r\n\t}\r\n\r\n\tget power() {\r\n\r\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\r\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\r\n\t\treturn this.intensity * Math.PI;\r\n\r\n\t}\r\n\r\n\tset power( power ) {\r\n\r\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\r\n\t\tthis.intensity = power / Math.PI;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.shadow.dispose();\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.distance = source.distance;\r\n\t\tthis.angle = source.angle;\r\n\t\tthis.penumbra = source.penumbra;\r\n\t\tthis.decay = source.decay;\r\n\r\n\t\tthis.target = source.target.clone();\r\n\r\n\t\tthis.shadow = source.shadow.clone();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\r\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\r\nconst _lookTarget = /*@__PURE__*/ new Vector3();\r\n\r\nclass PointLightShadow extends LightShadow {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\r\n\r\n\t\tthis.isPointLightShadow = true;\r\n\r\n\t\tthis._frameExtents = new Vector2( 4, 2 );\r\n\r\n\t\tthis._viewportCount = 6;\r\n\r\n\t\tthis._viewports = [\r\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\r\n\t\t\t// following orientation:\r\n\t\t\t//\r\n\t\t\t//  xzXZ\r\n\t\t\t//   y Y\r\n\t\t\t//\r\n\t\t\t// X - Positive x direction\r\n\t\t\t// x - Negative x direction\r\n\t\t\t// Y - Positive y direction\r\n\t\t\t// y - Negative y direction\r\n\t\t\t// Z - Positive z direction\r\n\t\t\t// z - Negative z direction\r\n\r\n\t\t\t// positive X\r\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\r\n\t\t\t// negative X\r\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\r\n\t\t\t// positive Z\r\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\r\n\t\t\t// negative Z\r\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\r\n\t\t\t// positive Y\r\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\r\n\t\t\t// negative Y\r\n\t\t\tnew Vector4( 1, 0, 1, 1 )\r\n\t\t];\r\n\r\n\t\tthis._cubeDirections = [\r\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\r\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\r\n\t\t];\r\n\r\n\t\tthis._cubeUps = [\r\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\r\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\r\n\t\t];\r\n\r\n\t}\r\n\r\n\tupdateMatrices( light, viewportIndex = 0 ) {\r\n\r\n\t\tconst camera = this.camera;\r\n\t\tconst shadowMatrix = this.matrix;\r\n\r\n\t\tconst far = light.distance || camera.far;\r\n\r\n\t\tif ( far !== camera.far ) {\r\n\r\n\t\t\tcamera.far = far;\r\n\t\t\tcamera.updateProjectionMatrix();\r\n\r\n\t\t}\r\n\r\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\r\n\t\tcamera.position.copy( _lightPositionWorld );\r\n\r\n\t\t_lookTarget.copy( camera.position );\r\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\r\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\r\n\t\tcamera.lookAt( _lookTarget );\r\n\t\tcamera.updateMatrixWorld();\r\n\r\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\r\n\r\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass PointLight extends Light {\r\n\r\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\r\n\r\n\t\tsuper( color, intensity );\r\n\r\n\t\tthis.isPointLight = true;\r\n\r\n\t\tthis.type = 'PointLight';\r\n\r\n\t\tthis.distance = distance;\r\n\t\tthis.decay = decay;\r\n\r\n\t\tthis.shadow = new PointLightShadow();\r\n\r\n\t}\r\n\r\n\tget power() {\r\n\r\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\r\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\r\n\t\treturn this.intensity * 4 * Math.PI;\r\n\r\n\t}\r\n\r\n\tset power( power ) {\r\n\r\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\r\n\t\tthis.intensity = power / ( 4 * Math.PI );\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.shadow.dispose();\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.distance = source.distance;\r\n\t\tthis.decay = source.decay;\r\n\r\n\t\tthis.shadow = source.shadow.clone();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass OrthographicCamera extends Camera {\r\n\r\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isOrthographicCamera = true;\r\n\r\n\t\tthis.type = 'OrthographicCamera';\r\n\r\n\t\tthis.zoom = 1;\r\n\t\tthis.view = null;\r\n\r\n\t\tthis.left = left;\r\n\t\tthis.right = right;\r\n\t\tthis.top = top;\r\n\t\tthis.bottom = bottom;\r\n\r\n\t\tthis.near = near;\r\n\t\tthis.far = far;\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.left = source.left;\r\n\t\tthis.right = source.right;\r\n\t\tthis.top = source.top;\r\n\t\tthis.bottom = source.bottom;\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\r\n\t\tthis.zoom = source.zoom;\r\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\t\tif ( this.view === null ) {\r\n\r\n\t\t\tthis.view = {\r\n\t\t\t\tenabled: true,\r\n\t\t\t\tfullWidth: 1,\r\n\t\t\t\tfullHeight: 1,\r\n\t\t\t\toffsetX: 0,\r\n\t\t\t\toffsetY: 0,\r\n\t\t\t\twidth: 1,\r\n\t\t\t\theight: 1\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tthis.view.enabled = true;\r\n\t\tthis.view.fullWidth = fullWidth;\r\n\t\tthis.view.fullHeight = fullHeight;\r\n\t\tthis.view.offsetX = x;\r\n\t\tthis.view.offsetY = y;\r\n\t\tthis.view.width = width;\r\n\t\tthis.view.height = height;\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\tclearViewOffset() {\r\n\r\n\t\tif ( this.view !== null ) {\r\n\r\n\t\t\tthis.view.enabled = false;\r\n\r\n\t\t}\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\tupdateProjectionMatrix() {\r\n\r\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\t\tconst cx = ( this.right + this.left ) / 2;\r\n\t\tconst cy = ( this.top + this.bottom ) / 2;\r\n\r\n\t\tlet left = cx - dx;\r\n\t\tlet right = cx + dx;\r\n\t\tlet top = cy + dy;\r\n\t\tlet bottom = cy - dy;\r\n\r\n\t\tif ( this.view !== null && this.view.enabled ) {\r\n\r\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\r\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\r\n\r\n\t\t\tleft += scaleW * this.view.offsetX;\r\n\t\t\tright = left + scaleW * this.view.width;\r\n\t\t\ttop -= scaleH * this.view.offsetY;\r\n\t\t\tbottom = top - scaleH * this.view.height;\r\n\r\n\t\t}\r\n\r\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\r\n\r\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst data = super.toJSON( meta );\r\n\r\n\t\tdata.object.zoom = this.zoom;\r\n\t\tdata.object.left = this.left;\r\n\t\tdata.object.right = this.right;\r\n\t\tdata.object.top = this.top;\r\n\t\tdata.object.bottom = this.bottom;\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\r\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass DirectionalLightShadow extends LightShadow {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\r\n\r\n\t\tthis.isDirectionalLightShadow = true;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass DirectionalLight extends Light {\r\n\r\n\tconstructor( color, intensity ) {\r\n\r\n\t\tsuper( color, intensity );\r\n\r\n\t\tthis.isDirectionalLight = true;\r\n\r\n\t\tthis.type = 'DirectionalLight';\r\n\r\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\r\n\t\tthis.updateMatrix();\r\n\r\n\t\tthis.target = new Object3D();\r\n\r\n\t\tthis.shadow = new DirectionalLightShadow();\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.shadow.dispose();\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.target = source.target.clone();\r\n\t\tthis.shadow = source.shadow.clone();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass AmbientLight extends Light {\r\n\r\n\tconstructor( color, intensity ) {\r\n\r\n\t\tsuper( color, intensity );\r\n\r\n\t\tthis.isAmbientLight = true;\r\n\r\n\t\tthis.type = 'AmbientLight';\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass RectAreaLight extends Light {\r\n\r\n\tconstructor( color, intensity, width = 10, height = 10 ) {\r\n\r\n\t\tsuper( color, intensity );\r\n\r\n\t\tthis.isRectAreaLight = true;\r\n\r\n\t\tthis.type = 'RectAreaLight';\r\n\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\r\n\t}\r\n\r\n\tget power() {\r\n\r\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\r\n\t\treturn this.intensity * this.width * this.height * Math.PI;\r\n\r\n\t}\r\n\r\n\tset power( power ) {\r\n\r\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\r\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.width = source.width;\r\n\t\tthis.height = source.height;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst data = super.toJSON( meta );\r\n\r\n\t\tdata.object.width = this.width;\r\n\t\tdata.object.height = this.height;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Primary reference:\r\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\r\n *\r\n * Secondary reference:\r\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\r\n */\r\n\r\n// 3-band SH defined by 9 coefficients\r\n\r\nclass SphericalHarmonics3 {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.isSphericalHarmonics3 = true;\r\n\r\n\t\tthis.coefficients = [];\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tthis.coefficients.push( new Vector3() );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tset( coefficients ) {\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tzero() {\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// get the radiance in the direction of the normal\r\n\t// target is a Vector3\r\n\tgetAt( normal, target ) {\r\n\r\n\t\t// normal is assumed to be unit length\r\n\r\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\r\n\r\n\t\tconst coeff = this.coefficients;\r\n\r\n\t\t// band 0\r\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\r\n\r\n\t\t// band 1\r\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\r\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\r\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\r\n\r\n\t\t// band 2\r\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\r\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\r\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\r\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\r\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\r\n\t// target is a Vector3\r\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\r\n\tgetIrradianceAt( normal, target ) {\r\n\r\n\t\t// normal is assumed to be unit length\r\n\r\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\r\n\r\n\t\tconst coeff = this.coefficients;\r\n\r\n\t\t// band 0\r\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\r\n\r\n\t\t// band 1\r\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\r\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\r\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\r\n\r\n\t\t// band 2\r\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\r\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\r\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\r\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\r\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\r\n\r\n\t\treturn target;\r\n\r\n\t}\r\n\r\n\tadd( sh ) {\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\taddScaledSH( sh, s ) {\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tscale( s ) {\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlerp( sh, alpha ) {\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( sh ) {\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tcopy( sh ) {\r\n\r\n\t\treturn this.set( sh.coefficients );\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tconst coefficients = this.coefficients;\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoArray( array = [], offset = 0 ) {\r\n\r\n\t\tconst coefficients = this.coefficients;\r\n\r\n\t\tfor ( let i = 0; i < 9; i ++ ) {\r\n\r\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n\t// evaluate the basis functions\r\n\t// shBasis is an Array[ 9 ]\r\n\tstatic getBasisAt( normal, shBasis ) {\r\n\r\n\t\t// normal is assumed to be unit length\r\n\r\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\r\n\r\n\t\t// band 0\r\n\t\tshBasis[ 0 ] = 0.282095;\r\n\r\n\t\t// band 1\r\n\t\tshBasis[ 1 ] = 0.488603 * y;\r\n\t\tshBasis[ 2 ] = 0.488603 * z;\r\n\t\tshBasis[ 3 ] = 0.488603 * x;\r\n\r\n\t\t// band 2\r\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\r\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\r\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\r\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\r\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass LightProbe extends Light {\r\n\r\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\r\n\r\n\t\tsuper( undefined, intensity );\r\n\r\n\t\tthis.isLightProbe = true;\r\n\r\n\t\tthis.sh = sh;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.sh.copy( source.sh );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tfromJSON( json ) {\r\n\r\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\r\n\t\tthis.sh.fromArray( json.sh );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON( meta ) {\r\n\r\n\t\tconst data = super.toJSON( meta );\r\n\r\n\t\tdata.object.sh = this.sh.toArray();\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass MaterialLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\t\tthis.textures = {};\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst loader = new FileLoader( scope.manager );\r\n\t\tloader.setPath( scope.path );\r\n\t\tloader.setRequestHeader( scope.requestHeader );\r\n\t\tloader.setWithCredentials( scope.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t}\r\n\r\n\tparse( json ) {\r\n\r\n\t\tconst textures = this.textures;\r\n\r\n\t\tfunction getTexture( name ) {\r\n\r\n\t\t\tif ( textures[ name ] === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn textures[ name ];\r\n\r\n\t\t}\r\n\r\n\t\tconst material = this.createMaterialFromType( json.type );\r\n\r\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\r\n\t\tif ( json.name !== undefined ) material.name = json.name;\r\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\r\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\r\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\r\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\r\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\r\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\r\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\r\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\r\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\r\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\r\n\t\tif ( json.dispersion !== undefined ) material.dispersion = json.dispersion;\r\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\r\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\r\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\r\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\r\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\r\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\r\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\r\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\r\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\r\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\r\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\r\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\r\n\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\r\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\r\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\r\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\r\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\r\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\r\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\r\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\r\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\r\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\r\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\r\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\r\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\r\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\r\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\r\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\r\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\r\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\r\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\r\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\r\n\r\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\r\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\r\n\r\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\r\n\r\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\r\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\r\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\r\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\r\n\r\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\r\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\r\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\r\n\r\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\r\n\r\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\r\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\r\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\r\n\r\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\r\n\r\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\r\n\r\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\r\n\r\n\t\tif ( json.vertexColors !== undefined ) {\r\n\r\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\r\n\r\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Shader Material\r\n\r\n\t\tif ( json.uniforms !== undefined ) {\r\n\r\n\t\t\tfor ( const name in json.uniforms ) {\r\n\r\n\t\t\t\tconst uniform = json.uniforms[ name ];\r\n\r\n\t\t\t\tmaterial.uniforms[ name ] = {};\r\n\r\n\t\t\t\tswitch ( uniform.type ) {\r\n\r\n\t\t\t\t\tcase 't':\r\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'c':\r\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'v2':\r\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'v3':\r\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'v4':\r\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'm3':\r\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'm4':\r\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\r\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\r\n\r\n\t\tif ( json.extensions !== undefined ) {\r\n\r\n\t\t\tfor ( const key in json.extensions ) {\r\n\r\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\r\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\r\n\r\n\t\t// for PointsMaterial\r\n\r\n\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\r\n\t\t// maps\r\n\r\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\r\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\r\n\r\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\r\n\r\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\r\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\r\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\r\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\r\n\t\tif ( json.normalScale !== undefined ) {\r\n\r\n\t\t\tlet normalScale = json.normalScale;\r\n\r\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\r\n\r\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\r\n\r\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\r\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\r\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\r\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\r\n\r\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\r\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\r\n\r\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\r\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\r\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\r\n\r\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\r\n\t\tif ( json.envMapRotation !== undefined ) material.envMapRotation.fromArray( json.envMapRotation );\r\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\r\n\r\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\r\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\r\n\r\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\r\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\r\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\r\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\r\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\r\n\r\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\r\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\r\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\r\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\r\n\r\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\r\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\r\n\r\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\r\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\r\n\r\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\r\n\r\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\r\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n\tsetTextures( value ) {\r\n\r\n\t\tthis.textures = value;\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcreateMaterialFromType( type ) {\r\n\r\n\t\treturn MaterialLoader.createMaterialFromType( type );\r\n\r\n\t}\r\n\r\n\tstatic createMaterialFromType( type ) {\r\n\r\n\t\tconst materialLib = {\r\n\t\t\tShadowMaterial,\r\n\t\t\tSpriteMaterial,\r\n\t\t\tRawShaderMaterial,\r\n\t\t\tShaderMaterial,\r\n\t\t\tPointsMaterial,\r\n\t\t\tMeshPhysicalMaterial,\r\n\t\t\tMeshStandardMaterial,\r\n\t\t\tMeshPhongMaterial,\r\n\t\t\tMeshToonMaterial,\r\n\t\t\tMeshNormalMaterial,\r\n\t\t\tMeshLambertMaterial,\r\n\t\t\tMeshDepthMaterial,\r\n\t\t\tMeshDistanceMaterial,\r\n\t\t\tMeshBasicMaterial,\r\n\t\t\tMeshMatcapMaterial,\r\n\t\t\tLineDashedMaterial,\r\n\t\t\tLineBasicMaterial,\r\n\t\t\tMaterial\r\n\t\t};\r\n\r\n\t\treturn new materialLib[ type ]();\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass LoaderUtils {\r\n\r\n\tstatic decodeText( array ) { // @deprecated, r165\r\n\r\n\t\tconsole.warn( 'THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead.' );\r\n\r\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\r\n\r\n\t\t\treturn new TextDecoder().decode( array );\r\n\r\n\t\t}\r\n\r\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\r\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\r\n\r\n\t\tlet s = '';\r\n\r\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\r\n\r\n\t\t\t// Implicitly assumes little-endian.\r\n\t\t\ts += String.fromCharCode( array[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\ttry {\r\n\r\n\t\t\t// merges multi-byte utf-8 characters.\r\n\r\n\t\t\treturn decodeURIComponent( escape( s ) );\r\n\r\n\t\t} catch ( e ) { // see #16358\r\n\r\n\t\t\treturn s;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tstatic extractUrlBase( url ) {\r\n\r\n\t\tconst index = url.lastIndexOf( '/' );\r\n\r\n\t\tif ( index === - 1 ) return './';\r\n\r\n\t\treturn url.slice( 0, index + 1 );\r\n\r\n\t}\r\n\r\n\tstatic resolveURL( url, path ) {\r\n\r\n\t\t// Invalid URL\r\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\r\n\r\n\t\t// Host Relative URL\r\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\r\n\r\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\r\n\r\n\t\t}\r\n\r\n\t\t// Absolute URL http://,https://,//\r\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\r\n\r\n\t\t// Data URI\r\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\r\n\r\n\t\t// Blob URL\r\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\r\n\r\n\t\t// Relative URL\r\n\t\treturn path + url;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass InstancedBufferGeometry extends BufferGeometry {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isInstancedBufferGeometry = true;\r\n\r\n\t\tthis.type = 'InstancedBufferGeometry';\r\n\t\tthis.instanceCount = Infinity;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.instanceCount = source.instanceCount;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoJSON() {\r\n\r\n\t\tconst data = super.toJSON();\r\n\r\n\t\tdata.instanceCount = this.instanceCount;\r\n\r\n\t\tdata.isInstancedBufferGeometry = true;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass BufferGeometryLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst loader = new FileLoader( scope.manager );\r\n\t\tloader.setPath( scope.path );\r\n\t\tloader.setRequestHeader( scope.requestHeader );\r\n\t\tloader.setWithCredentials( scope.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t}\r\n\r\n\tparse( json ) {\r\n\r\n\t\tconst interleavedBufferMap = {};\r\n\t\tconst arrayBufferMap = {};\r\n\r\n\t\tfunction getInterleavedBuffer( json, uuid ) {\r\n\r\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\r\n\r\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\r\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\r\n\r\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\r\n\r\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\r\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\r\n\t\t\tib.uuid = interleavedBuffer.uuid;\r\n\r\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\r\n\r\n\t\t\treturn ib;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getArrayBuffer( json, uuid ) {\r\n\r\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\r\n\r\n\t\t\tconst arrayBuffers = json.arrayBuffers;\r\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\r\n\r\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\r\n\r\n\t\t\tarrayBufferMap[ uuid ] = ab;\r\n\r\n\t\t\treturn ab;\r\n\r\n\t\t}\r\n\r\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\r\n\r\n\t\tconst index = json.data.index;\r\n\r\n\t\tif ( index !== undefined ) {\r\n\r\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\r\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\r\n\r\n\t\t}\r\n\r\n\t\tconst attributes = json.data.attributes;\r\n\r\n\t\tfor ( const key in attributes ) {\r\n\r\n\t\t\tconst attribute = attributes[ key ];\r\n\t\t\tlet bufferAttribute;\r\n\r\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\r\n\r\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\r\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\r\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\r\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\r\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\r\n\r\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\r\n\r\n\t\t}\r\n\r\n\t\tconst morphAttributes = json.data.morphAttributes;\r\n\r\n\t\tif ( morphAttributes ) {\r\n\r\n\t\t\tfor ( const key in morphAttributes ) {\r\n\r\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\r\n\r\n\t\t\t\tconst array = [];\r\n\r\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tconst attribute = attributeArray[ i ];\r\n\t\t\t\t\tlet bufferAttribute;\r\n\r\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\r\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\r\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\r\n\t\t\t\t\tarray.push( bufferAttribute );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\r\n\r\n\t\tif ( morphTargetsRelative ) {\r\n\r\n\t\t\tgeometry.morphTargetsRelative = true;\r\n\r\n\t\t}\r\n\r\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\r\n\t\tif ( groups !== undefined ) {\r\n\r\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tconst group = groups[ i ];\r\n\r\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst boundingSphere = json.data.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== undefined ) {\r\n\r\n\t\t\tconst center = new Vector3();\r\n\r\n\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\r\n\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.name ) geometry.name = json.name;\r\n\t\tif ( json.userData ) geometry.userData = json.userData;\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass ObjectLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\r\n\t\tthis.resourcePath = this.resourcePath || path;\r\n\r\n\t\tconst loader = new FileLoader( this.manager );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setRequestHeader( this.requestHeader );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tlet json = null;\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tjson = JSON.parse( text );\r\n\r\n\t\t\t} catch ( error ) {\r\n\r\n\t\t\t\tif ( onError !== undefined ) onError( error );\r\n\r\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst metadata = json.metadata;\r\n\r\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\r\n\r\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\r\n\r\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.parse( json, onLoad );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t}\r\n\r\n\tasync loadAsync( url, onProgress ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\r\n\t\tthis.resourcePath = this.resourcePath || path;\r\n\r\n\t\tconst loader = new FileLoader( this.manager );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setRequestHeader( this.requestHeader );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\r\n\t\tconst text = await loader.loadAsync( url, onProgress );\r\n\r\n\t\tconst json = JSON.parse( text );\r\n\r\n\t\tconst metadata = json.metadata;\r\n\r\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\r\n\r\n\t\t}\r\n\r\n\t\treturn await scope.parseAsync( json );\r\n\r\n\t}\r\n\r\n\tparse( json, onLoad ) {\r\n\r\n\t\tconst animations = this.parseAnimations( json.animations );\r\n\t\tconst shapes = this.parseShapes( json.shapes );\r\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\r\n\r\n\t\tconst images = this.parseImages( json.images, function () {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t} );\r\n\r\n\t\tconst textures = this.parseTextures( json.textures, images );\r\n\t\tconst materials = this.parseMaterials( json.materials, textures );\r\n\r\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\r\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\r\n\r\n\t\tthis.bindSkeletons( object, skeletons );\r\n\t\tthis.bindLightTargets( object );\r\n\r\n\t\t//\r\n\r\n\t\tif ( onLoad !== undefined ) {\r\n\r\n\t\t\tlet hasImages = false;\r\n\r\n\t\t\tfor ( const uuid in images ) {\r\n\r\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\r\n\r\n\t\t\t\t\thasImages = true;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasImages === false ) onLoad( object );\r\n\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\r\n\t}\r\n\r\n\tasync parseAsync( json ) {\r\n\r\n\t\tconst animations = this.parseAnimations( json.animations );\r\n\t\tconst shapes = this.parseShapes( json.shapes );\r\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\r\n\r\n\t\tconst images = await this.parseImagesAsync( json.images );\r\n\r\n\t\tconst textures = this.parseTextures( json.textures, images );\r\n\t\tconst materials = this.parseMaterials( json.materials, textures );\r\n\r\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\r\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\r\n\r\n\t\tthis.bindSkeletons( object, skeletons );\r\n\t\tthis.bindLightTargets( object );\r\n\r\n\t\treturn object;\r\n\r\n\t}\r\n\r\n\tparseShapes( json ) {\r\n\r\n\t\tconst shapes = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\r\n\r\n\t\t\t\tshapes[ shape.uuid ] = shape;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n\tparseSkeletons( json, object ) {\r\n\r\n\t\tconst skeletons = {};\r\n\t\tconst bones = {};\r\n\r\n\t\t// generate bone lookup table\r\n\r\n\t\tobject.traverse( function ( child ) {\r\n\r\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\r\n\r\n\t\t} );\r\n\r\n\t\t// create skeletons\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\r\n\r\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn skeletons;\r\n\r\n\t}\r\n\r\n\tparseGeometries( json, shapes ) {\r\n\r\n\t\tconst geometries = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\r\n\r\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tlet geometry;\r\n\t\t\t\tconst data = json[ i ];\r\n\r\n\t\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\t\tcase 'BufferGeometry':\r\n\t\t\t\t\tcase 'InstancedBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tif ( data.type in Geometries ) {\r\n\r\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\r\n\r\n\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometries;\r\n\r\n\t}\r\n\r\n\tparseMaterials( json, textures ) {\r\n\r\n\t\tconst cache = {}; // MultiMaterial\r\n\t\tconst materials = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tconst loader = new MaterialLoader();\r\n\t\t\tloader.setTextures( textures );\r\n\r\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst data = json[ i ];\r\n\r\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\r\n\r\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn materials;\r\n\r\n\t}\r\n\r\n\tparseAnimations( json ) {\r\n\r\n\t\tconst animations = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\r\n\r\n\t\t\t\tconst data = json[ i ];\r\n\r\n\t\t\t\tconst clip = AnimationClip.parse( data );\r\n\r\n\t\t\t\tanimations[ clip.uuid ] = clip;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn animations;\r\n\r\n\t}\r\n\r\n\tparseImages( json, onLoad ) {\r\n\r\n\t\tconst scope = this;\r\n\t\tconst images = {};\r\n\r\n\t\tlet loader;\r\n\r\n\t\tfunction loadImage( url ) {\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\treturn loader.load( url, function () {\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t}, undefined, function () {\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tfunction deserializeImage( image ) {\r\n\r\n\t\t\tif ( typeof image === 'string' ) {\r\n\r\n\t\t\t\tconst url = image;\r\n\r\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\r\n\r\n\t\t\t\treturn loadImage( path );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( image.data ) {\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\r\n\t\t\t\t\t\twidth: image.width,\r\n\t\t\t\t\t\theight: image.height\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( json !== undefined && json.length > 0 ) {\r\n\r\n\t\t\tconst manager = new LoadingManager( onLoad );\r\n\r\n\t\t\tloader = new ImageLoader( manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tconst image = json[ i ];\r\n\t\t\t\tconst url = image.url;\r\n\r\n\t\t\t\tif ( Array.isArray( url ) ) {\r\n\r\n\t\t\t\t\t// load array of images e.g CubeTexture\r\n\r\n\t\t\t\t\tconst imageArray = [];\r\n\r\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tconst currentUrl = url[ j ];\r\n\r\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\r\n\r\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\r\n\r\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\r\n\r\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\r\n\r\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// load single image\r\n\r\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\r\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\r\n\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn images;\r\n\r\n\t}\r\n\r\n\tasync parseImagesAsync( json ) {\r\n\r\n\t\tconst scope = this;\r\n\t\tconst images = {};\r\n\r\n\t\tlet loader;\r\n\r\n\t\tasync function deserializeImage( image ) {\r\n\r\n\t\t\tif ( typeof image === 'string' ) {\r\n\r\n\t\t\t\tconst url = image;\r\n\r\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\r\n\r\n\t\t\t\treturn await loader.loadAsync( path );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( image.data ) {\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\r\n\t\t\t\t\t\twidth: image.width,\r\n\t\t\t\t\t\theight: image.height\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( json !== undefined && json.length > 0 ) {\r\n\r\n\t\t\tloader = new ImageLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tconst image = json[ i ];\r\n\t\t\t\tconst url = image.url;\r\n\r\n\t\t\t\tif ( Array.isArray( url ) ) {\r\n\r\n\t\t\t\t\t// load array of images e.g CubeTexture\r\n\r\n\t\t\t\t\tconst imageArray = [];\r\n\r\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tconst currentUrl = url[ j ];\r\n\r\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\r\n\r\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\r\n\r\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\r\n\r\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\r\n\r\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// load single image\r\n\r\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\r\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn images;\r\n\r\n\t}\r\n\r\n\tparseTextures( json, images ) {\r\n\r\n\t\tfunction parseConstant( value, type ) {\r\n\r\n\t\t\tif ( typeof value === 'number' ) return value;\r\n\r\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n\r\n\t\t\treturn type[ value ];\r\n\r\n\t\t}\r\n\r\n\t\tconst textures = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst data = json[ i ];\r\n\r\n\t\t\t\tif ( data.image === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst source = images[ data.image ];\r\n\t\t\t\tconst image = source.data;\r\n\r\n\t\t\t\tlet texture;\r\n\r\n\t\t\t\tif ( Array.isArray( image ) ) {\r\n\r\n\t\t\t\t\ttexture = new CubeTexture();\r\n\r\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( image && image.data ) {\r\n\r\n\t\t\t\t\t\ttexture = new DataTexture();\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttexture = new Texture();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.source = source;\r\n\r\n\t\t\t\ttexture.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\r\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\r\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\r\n\r\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\r\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\r\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\r\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\r\n\r\n\t\t\t\tif ( data.wrap !== undefined ) {\r\n\r\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\r\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\r\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\r\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\r\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\r\n\r\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\r\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\r\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\r\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\r\n\r\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\r\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\r\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\r\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\r\n\r\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\r\n\r\n\t\t\t\ttextures[ data.uuid ] = texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn textures;\r\n\r\n\t}\r\n\r\n\tparseObject( data, geometries, materials, textures, animations ) {\r\n\r\n\t\tlet object;\r\n\r\n\t\tfunction getGeometry( name ) {\r\n\r\n\t\t\tif ( geometries[ name ] === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn geometries[ name ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getMaterial( name ) {\r\n\r\n\t\t\tif ( name === undefined ) return undefined;\r\n\r\n\t\t\tif ( Array.isArray( name ) ) {\r\n\r\n\t\t\t\tconst array = [];\r\n\r\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tconst uuid = name[ i ];\r\n\r\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tarray.push( materials[ uuid ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn array;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( materials[ name ] === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn materials[ name ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getTexture( uuid ) {\r\n\r\n\t\t\tif ( textures[ uuid ] === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn textures[ uuid ];\r\n\r\n\t\t}\r\n\r\n\t\tlet geometry, material;\r\n\r\n\t\tswitch ( data.type ) {\r\n\r\n\t\t\tcase 'Scene':\r\n\r\n\t\t\t\tobject = new Scene();\r\n\r\n\t\t\t\tif ( data.background !== undefined ) {\r\n\r\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\r\n\r\n\t\t\t\t\t\tobject.background = new Color( data.background );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tobject.background = getTexture( data.background );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( data.environment !== undefined ) {\r\n\r\n\t\t\t\t\tobject.environment = getTexture( data.environment );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( data.fog !== undefined ) {\r\n\r\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\r\n\r\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\r\n\r\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\r\n\r\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( data.fog.name !== '' ) {\r\n\r\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\r\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\r\n\t\t\t\tif ( data.backgroundRotation !== undefined ) object.backgroundRotation.fromArray( data.backgroundRotation );\r\n\r\n\t\t\t\tif ( data.environmentIntensity !== undefined ) object.environmentIntensity = data.environmentIntensity;\r\n\t\t\t\tif ( data.environmentRotation !== undefined ) object.environmentRotation.fromArray( data.environmentRotation );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PerspectiveCamera':\r\n\r\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\r\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\r\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\r\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\r\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\r\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'OrthographicCamera':\r\n\r\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\r\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\r\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'AmbientLight':\r\n\r\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'DirectionalLight':\r\n\r\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\r\n\t\t\t\tobject.target = data.target || '';\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PointLight':\r\n\r\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'RectAreaLight':\r\n\r\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SpotLight':\r\n\r\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\r\n\t\t\t\tobject.target = data.target || '';\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'HemisphereLight':\r\n\r\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'LightProbe':\r\n\r\n\t\t\t\tobject = new LightProbe().fromJSON( data );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SkinnedMesh':\r\n\r\n\t\t\t\tgeometry = getGeometry( data.geometry );\r\n\t\t\t \tmaterial = getMaterial( data.material );\r\n\r\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\r\n\r\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\r\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\r\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'Mesh':\r\n\r\n\t\t\t\tgeometry = getGeometry( data.geometry );\r\n\t\t\t\tmaterial = getMaterial( data.material );\r\n\r\n\t\t\t\tobject = new Mesh( geometry, material );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'InstancedMesh':\r\n\r\n\t\t\t\tgeometry = getGeometry( data.geometry );\r\n\t\t\t\tmaterial = getMaterial( data.material );\r\n\t\t\t\tconst count = data.count;\r\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\r\n\t\t\t\tconst instanceColor = data.instanceColor;\r\n\r\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\r\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\r\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'BatchedMesh':\r\n\r\n\t\t\t\tgeometry = getGeometry( data.geometry );\r\n\t\t\t\tmaterial = getMaterial( data.material );\r\n\r\n\t\t\t\tobject = new BatchedMesh( data.maxInstanceCount, data.maxVertexCount, data.maxIndexCount, material );\r\n\t\t\t\tobject.geometry = geometry;\r\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\r\n\t\t\t\tobject.sortObjects = data.sortObjects;\r\n\r\n\t\t\t\tobject._drawRanges = data.drawRanges;\r\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\r\n\r\n\t\t\t\tobject._visibility = data.visibility;\r\n\t\t\t\tobject._active = data.active;\r\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\r\n\r\n\t\t\t\t\tconst box = new Box3();\r\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\r\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\r\n\r\n\t\t\t\t\tconst sphere = new Sphere();\r\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\r\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\r\n\t\t\t\t\t\tbox: box,\r\n\r\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\r\n\t\t\t\t\t\tsphere: sphere\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t\tobject._maxInstanceCount = data.maxInstanceCount;\r\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\r\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\r\n\r\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\r\n\t\t\t\tobject._geometryCount = data.geometryCount;\r\n\r\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\r\n\t\t\t\tif ( data.colorsTexture !== undefined ) object._colorsTexture = getTexture( data.colorsTexture.uuid );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'LOD':\r\n\r\n\t\t\t\tobject = new LOD();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'Line':\r\n\r\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'LineLoop':\r\n\r\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'LineSegments':\r\n\r\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PointCloud':\r\n\t\t\tcase 'Points':\r\n\r\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'Sprite':\r\n\r\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'Group':\r\n\r\n\t\t\t\tobject = new Group();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'Bone':\r\n\r\n\t\t\t\tobject = new Bone();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\r\n\t\t\t\tobject = new Object3D();\r\n\r\n\t\t}\r\n\r\n\t\tobject.uuid = data.uuid;\r\n\r\n\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\r\n\t\tif ( data.matrix !== undefined ) {\r\n\r\n\t\t\tobject.matrix.fromArray( data.matrix );\r\n\r\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\r\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\r\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\r\n\t\t}\r\n\r\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\r\n\r\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n\r\n\t\tif ( data.shadow ) {\r\n\r\n\t\t\tif ( data.shadow.intensity !== undefined ) object.shadow.intensity = data.shadow.intensity;\r\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\r\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\r\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\r\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\r\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\r\n\r\n\t\t}\r\n\r\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\r\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\r\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\r\n\r\n\t\tif ( data.children !== undefined ) {\r\n\r\n\t\t\tconst children = data.children;\r\n\r\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\r\n\r\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( data.animations !== undefined ) {\r\n\r\n\t\t\tconst objectAnimations = data.animations;\r\n\r\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\r\n\r\n\t\t\t\tconst uuid = objectAnimations[ i ];\r\n\r\n\t\t\t\tobject.animations.push( animations[ uuid ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( data.type === 'LOD' ) {\r\n\r\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\r\n\r\n\t\t\tconst levels = data.levels;\r\n\r\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\t\t\tconst level = levels[ l ];\r\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\r\n\r\n\t\t\t\tif ( child !== undefined ) {\r\n\r\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\r\n\t}\r\n\r\n\tbindSkeletons( object, skeletons ) {\r\n\r\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\r\n\r\n\t\tobject.traverse( function ( child ) {\r\n\r\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\r\n\r\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\r\n\r\n\t\t\t\tif ( skeleton === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tbindLightTargets( object ) {\r\n\r\n\t\tobject.traverse( function ( child ) {\r\n\r\n\t\t\tif ( child.isDirectionalLight || child.isSpotLight ) {\r\n\r\n\t\t\t\tconst uuid = child.target;\r\n\r\n\t\t\t\tconst target = object.getObjectByProperty( 'uuid', uuid );\r\n\r\n\t\t\t\tif ( target !== undefined ) {\r\n\r\n\t\t\t\t\tchild.target = target;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tchild.target = new Object3D();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst TEXTURE_MAPPING = {\r\n\tUVMapping: UVMapping,\r\n\tCubeReflectionMapping: CubeReflectionMapping,\r\n\tCubeRefractionMapping: CubeRefractionMapping,\r\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\r\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\r\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\r\n};\r\n\r\nconst TEXTURE_WRAPPING = {\r\n\tRepeatWrapping: RepeatWrapping,\r\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\r\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\r\n};\r\n\r\nconst TEXTURE_FILTER = {\r\n\tNearestFilter: NearestFilter,\r\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\r\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\r\n\tLinearFilter: LinearFilter,\r\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\r\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\r\n};\r\n\r\nclass ImageBitmapLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t\tthis.isImageBitmapLoader = true;\r\n\r\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( typeof fetch === 'undefined' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.options = { premultiplyAlpha: 'none' };\r\n\r\n\t}\r\n\r\n\tsetOptions( options ) {\r\n\r\n\t\tthis.options = options;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tif ( url === undefined ) url = '';\r\n\r\n\t\tif ( this.path !== undefined ) url = this.path + url;\r\n\r\n\t\turl = this.manager.resolveURL( url );\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst cached = Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\t// If cached is a promise, wait for it to resolve\r\n\t\t\tif ( cached.then ) {\r\n\r\n\t\t\t\tcached.then( imageBitmap => {\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\r\n\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t} ).catch( e => {\r\n\r\n\t\t\t\t\tif ( onError ) onError( e );\r\n\r\n\t\t\t\t} );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// If cached is not a promise (i.e., it's already an imageBitmap)\r\n\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( cached );\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t}, 0 );\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tconst fetchOptions = {};\r\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\r\n\t\tfetchOptions.headers = this.requestHeader;\r\n\r\n\t\tconst promise = fetch( url, fetchOptions ).then( function ( res ) {\r\n\r\n\t\t\treturn res.blob();\r\n\r\n\t\t} ).then( function ( blob ) {\r\n\r\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\r\n\r\n\t\t} ).then( function ( imageBitmap ) {\r\n\r\n\t\t\tCache.add( url, imageBitmap );\r\n\r\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\treturn imageBitmap;\r\n\r\n\t\t} ).catch( function ( e ) {\r\n\r\n\t\t\tif ( onError ) onError( e );\r\n\r\n\t\t\tCache.remove( url );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t} );\r\n\r\n\t\tCache.add( url, promise );\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t}\r\n\r\n}\r\n\r\nlet _context;\r\n\r\nclass AudioContext {\r\n\r\n\tstatic getContext() {\r\n\r\n\t\tif ( _context === undefined ) {\r\n\r\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\r\n\r\n\t\t}\r\n\r\n\t\treturn _context;\r\n\r\n\t}\r\n\r\n\tstatic setContext( value ) {\r\n\r\n\t\t_context = value;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass AudioLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst loader = new FileLoader( this.manager );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setRequestHeader( this.requestHeader );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\r\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\r\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\r\n\r\n\t\t\t\tconst context = AudioContext.getContext();\r\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\r\n\r\n\t\t\t\t\tonLoad( audioBuffer );\r\n\r\n\t\t\t\t} ).catch( handleError );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\thandleError( e );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t\tfunction handleError( e ) {\r\n\r\n\t\t\tif ( onError ) {\r\n\r\n\t\t\t\tonError( e );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\r\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\r\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\r\n\r\nclass StereoCamera {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.type = 'StereoCamera';\r\n\r\n\t\tthis.aspect = 1;\r\n\r\n\t\tthis.eyeSep = 0.064;\r\n\r\n\t\tthis.cameraL = new PerspectiveCamera();\r\n\t\tthis.cameraL.layers.enable( 1 );\r\n\t\tthis.cameraL.matrixAutoUpdate = false;\r\n\r\n\t\tthis.cameraR = new PerspectiveCamera();\r\n\t\tthis.cameraR.layers.enable( 2 );\r\n\t\tthis.cameraR.matrixAutoUpdate = false;\r\n\r\n\t\tthis._cache = {\r\n\t\t\tfocus: null,\r\n\t\t\tfov: null,\r\n\t\t\taspect: null,\r\n\t\t\tnear: null,\r\n\t\t\tfar: null,\r\n\t\t\tzoom: null,\r\n\t\t\teyeSep: null\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tupdate( camera ) {\r\n\r\n\t\tconst cache = this._cache;\r\n\r\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\r\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\r\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\r\n\r\n\t\tif ( needsUpdate ) {\r\n\r\n\t\t\tcache.focus = camera.focus;\r\n\t\t\tcache.fov = camera.fov;\r\n\t\t\tcache.aspect = camera.aspect * this.aspect;\r\n\t\t\tcache.near = camera.near;\r\n\t\t\tcache.far = camera.far;\r\n\t\t\tcache.zoom = camera.zoom;\r\n\t\t\tcache.eyeSep = this.eyeSep;\r\n\r\n\t\t\t// Off-axis stereoscopic effect based on\r\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\r\n\r\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\r\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\r\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\r\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\r\n\t\t\tlet xmin, xmax;\r\n\r\n\t\t\t// translate xOffset\r\n\r\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\r\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\r\n\r\n\t\t\t// for left eye\r\n\r\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\r\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\r\n\r\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\r\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\r\n\r\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\r\n\r\n\t\t\t// for right eye\r\n\r\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\r\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\r\n\r\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\r\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\r\n\r\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\r\n\r\n\t\t}\r\n\r\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\r\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass ArrayCamera extends PerspectiveCamera {\r\n\r\n\tconstructor( array = [] ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isArrayCamera = true;\r\n\r\n\t\tthis.cameras = array;\r\n\t\tthis.index = 0;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Clock {\r\n\r\n\tconstructor( autoStart = true ) {\r\n\r\n\t\tthis.autoStart = autoStart;\r\n\r\n\t\tthis.startTime = 0;\r\n\t\tthis.oldTime = 0;\r\n\t\tthis.elapsedTime = 0;\r\n\r\n\t\tthis.running = false;\r\n\r\n\t}\r\n\r\n\tstart() {\r\n\r\n\t\tthis.startTime = now();\r\n\r\n\t\tthis.oldTime = this.startTime;\r\n\t\tthis.elapsedTime = 0;\r\n\t\tthis.running = true;\r\n\r\n\t}\r\n\r\n\tstop() {\r\n\r\n\t\tthis.getElapsedTime();\r\n\t\tthis.running = false;\r\n\t\tthis.autoStart = false;\r\n\r\n\t}\r\n\r\n\tgetElapsedTime() {\r\n\r\n\t\tthis.getDelta();\r\n\t\treturn this.elapsedTime;\r\n\r\n\t}\r\n\r\n\tgetDelta() {\r\n\r\n\t\tlet diff = 0;\r\n\r\n\t\tif ( this.autoStart && ! this.running ) {\r\n\r\n\t\t\tthis.start();\r\n\t\t\treturn 0;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.running ) {\r\n\r\n\t\t\tconst newTime = now();\r\n\r\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\r\n\t\t\tthis.oldTime = newTime;\r\n\r\n\t\t\tthis.elapsedTime += diff;\r\n\r\n\t\t}\r\n\r\n\t\treturn diff;\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction now() {\r\n\r\n\treturn performance.now();\r\n\r\n}\r\n\r\nconst _position$1 = /*@__PURE__*/ new Vector3();\r\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\r\nconst _scale$1 = /*@__PURE__*/ new Vector3();\r\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\r\n\r\nclass AudioListener extends Object3D {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'AudioListener';\r\n\r\n\t\tthis.context = AudioContext.getContext();\r\n\r\n\t\tthis.gain = this.context.createGain();\r\n\t\tthis.gain.connect( this.context.destination );\r\n\r\n\t\tthis.filter = null;\r\n\r\n\t\tthis.timeDelta = 0;\r\n\r\n\t\t// private\r\n\r\n\t\tthis._clock = new Clock();\r\n\r\n\t}\r\n\r\n\tgetInput() {\r\n\r\n\t\treturn this.gain;\r\n\r\n\t}\r\n\r\n\tremoveFilter() {\r\n\r\n\t\tif ( this.filter !== null ) {\r\n\r\n\t\t\tthis.gain.disconnect( this.filter );\r\n\t\t\tthis.filter.disconnect( this.context.destination );\r\n\t\t\tthis.gain.connect( this.context.destination );\r\n\t\t\tthis.filter = null;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetFilter() {\r\n\r\n\t\treturn this.filter;\r\n\r\n\t}\r\n\r\n\tsetFilter( value ) {\r\n\r\n\t\tif ( this.filter !== null ) {\r\n\r\n\t\t\tthis.gain.disconnect( this.filter );\r\n\t\t\tthis.filter.disconnect( this.context.destination );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.gain.disconnect( this.context.destination );\r\n\r\n\t\t}\r\n\r\n\t\tthis.filter = value;\r\n\t\tthis.gain.connect( this.filter );\r\n\t\tthis.filter.connect( this.context.destination );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetMasterVolume() {\r\n\r\n\t\treturn this.gain.gain.value;\r\n\r\n\t}\r\n\r\n\tsetMasterVolume( value ) {\r\n\r\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tupdateMatrixWorld( force ) {\r\n\r\n\t\tsuper.updateMatrixWorld( force );\r\n\r\n\t\tconst listener = this.context.listener;\r\n\t\tconst up = this.up;\r\n\r\n\t\tthis.timeDelta = this._clock.getDelta();\r\n\r\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\r\n\r\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\r\n\r\n\t\tif ( listener.positionX ) {\r\n\r\n\t\t\t// code path for Chrome (see #14393)\r\n\r\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\r\n\r\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\r\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\r\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\r\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\r\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\r\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\r\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\r\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\r\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\r\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Audio extends Object3D {\r\n\r\n\tconstructor( listener ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'Audio';\r\n\r\n\t\tthis.listener = listener;\r\n\t\tthis.context = listener.context;\r\n\r\n\t\tthis.gain = this.context.createGain();\r\n\t\tthis.gain.connect( listener.getInput() );\r\n\r\n\t\tthis.autoplay = false;\r\n\r\n\t\tthis.buffer = null;\r\n\t\tthis.detune = 0;\r\n\t\tthis.loop = false;\r\n\t\tthis.loopStart = 0;\r\n\t\tthis.loopEnd = 0;\r\n\t\tthis.offset = 0;\r\n\t\tthis.duration = undefined;\r\n\t\tthis.playbackRate = 1;\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.hasPlaybackControl = true;\r\n\t\tthis.source = null;\r\n\t\tthis.sourceType = 'empty';\r\n\r\n\t\tthis._startedAt = 0;\r\n\t\tthis._progress = 0;\r\n\t\tthis._connected = false;\r\n\r\n\t\tthis.filters = [];\r\n\r\n\t}\r\n\r\n\tgetOutput() {\r\n\r\n\t\treturn this.gain;\r\n\r\n\t}\r\n\r\n\tsetNodeSource( audioNode ) {\r\n\r\n\t\tthis.hasPlaybackControl = false;\r\n\t\tthis.sourceType = 'audioNode';\r\n\t\tthis.source = audioNode;\r\n\t\tthis.connect();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetMediaElementSource( mediaElement ) {\r\n\r\n\t\tthis.hasPlaybackControl = false;\r\n\t\tthis.sourceType = 'mediaNode';\r\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\r\n\t\tthis.connect();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetMediaStreamSource( mediaStream ) {\r\n\r\n\t\tthis.hasPlaybackControl = false;\r\n\t\tthis.sourceType = 'mediaStreamNode';\r\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\r\n\t\tthis.connect();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetBuffer( audioBuffer ) {\r\n\r\n\t\tthis.buffer = audioBuffer;\r\n\t\tthis.sourceType = 'buffer';\r\n\r\n\t\tif ( this.autoplay ) this.play();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tplay( delay = 0 ) {\r\n\r\n\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis._startedAt = this.context.currentTime + delay;\r\n\r\n\t\tconst source = this.context.createBufferSource();\r\n\t\tsource.buffer = this.buffer;\r\n\t\tsource.loop = this.loop;\r\n\t\tsource.loopStart = this.loopStart;\r\n\t\tsource.loopEnd = this.loopEnd;\r\n\t\tsource.onended = this.onEnded.bind( this );\r\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t\tthis.source = source;\r\n\r\n\t\tthis.setDetune( this.detune );\r\n\t\tthis.setPlaybackRate( this.playbackRate );\r\n\r\n\t\treturn this.connect();\r\n\r\n\t}\r\n\r\n\tpause() {\r\n\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\t// update current progress\r\n\r\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\r\n\r\n\t\t\tif ( this.loop === true ) {\r\n\r\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\r\n\r\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.source.stop();\r\n\t\t\tthis.source.onended = null;\r\n\r\n\t\t\tthis.isPlaying = false;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstop( delay = 0 ) {\r\n\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis._progress = 0;\r\n\r\n\t\tif ( this.source !== null ) {\r\n\r\n\t\t\tthis.source.stop( this.context.currentTime + delay );\r\n\t\t\tthis.source.onended = null;\r\n\r\n\t\t}\r\n\r\n\t\tthis.isPlaying = false;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tconnect() {\r\n\r\n\t\tif ( this.filters.length > 0 ) {\r\n\r\n\t\t\tthis.source.connect( this.filters[ 0 ] );\r\n\r\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.source.connect( this.getOutput() );\r\n\r\n\t\t}\r\n\r\n\t\tthis._connected = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdisconnect() {\r\n\r\n\t\tif ( this._connected === false ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.filters.length > 0 ) {\r\n\r\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\r\n\r\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.source.disconnect( this.getOutput() );\r\n\r\n\t\t}\r\n\r\n\t\tthis._connected = false;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetFilters() {\r\n\r\n\t\treturn this.filters;\r\n\r\n\t}\r\n\r\n\tsetFilters( value ) {\r\n\r\n\t\tif ( ! value ) value = [];\r\n\r\n\t\tif ( this._connected === true ) {\r\n\r\n\t\t\tthis.disconnect();\r\n\t\t\tthis.filters = value.slice();\r\n\t\t\tthis.connect();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.filters = value.slice();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetDetune( value ) {\r\n\r\n\t\tthis.detune = value;\r\n\r\n\t\tif ( this.isPlaying === true && this.source.detune !== undefined ) {\r\n\r\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetDetune() {\r\n\r\n\t\treturn this.detune;\r\n\r\n\t}\r\n\r\n\tgetFilter() {\r\n\r\n\t\treturn this.getFilters()[ 0 ];\r\n\r\n\t}\r\n\r\n\tsetFilter( filter ) {\r\n\r\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\r\n\r\n\t}\r\n\r\n\tsetPlaybackRate( value ) {\r\n\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis.playbackRate = value;\r\n\r\n\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetPlaybackRate() {\r\n\r\n\t\treturn this.playbackRate;\r\n\r\n\t}\r\n\r\n\tonEnded() {\r\n\r\n\t\tthis.isPlaying = false;\r\n\t\tthis._progress = 0;\r\n\r\n\t}\r\n\r\n\tgetLoop() {\r\n\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.loop;\r\n\r\n\t}\r\n\r\n\tsetLoop( value ) {\r\n\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis.loop = value;\r\n\r\n\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\tthis.source.loop = this.loop;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetLoopStart( value ) {\r\n\r\n\t\tthis.loopStart = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetLoopEnd( value ) {\r\n\r\n\t\tthis.loopEnd = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetVolume() {\r\n\r\n\t\treturn this.gain.gain.value;\r\n\r\n\t}\r\n\r\n\tsetVolume( value ) {\r\n\r\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tif ( source.sourceType !== 'buffer' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: Audio source type cannot be copied.' );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tthis.autoplay = source.autoplay;\r\n\r\n\t\tthis.buffer = source.buffer;\r\n\t\tthis.detune = source.detune;\r\n\t\tthis.loop = source.loop;\r\n\t\tthis.loopStart = source.loopStart;\r\n\t\tthis.loopEnd = source.loopEnd;\r\n\t\tthis.offset = source.offset;\r\n\t\tthis.duration = source.duration;\r\n\t\tthis.playbackRate = source.playbackRate;\r\n\t\tthis.hasPlaybackControl = source.hasPlaybackControl;\r\n\t\tthis.sourceType = source.sourceType;\r\n\r\n\t\tthis.filters = source.filters.slice();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone( recursive ) {\r\n\r\n\t\treturn new this.constructor( this.listener ).copy( this, recursive );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _position = /*@__PURE__*/ new Vector3();\r\nconst _quaternion = /*@__PURE__*/ new Quaternion();\r\nconst _scale = /*@__PURE__*/ new Vector3();\r\nconst _orientation = /*@__PURE__*/ new Vector3();\r\n\r\nclass PositionalAudio extends Audio {\r\n\r\n\tconstructor( listener ) {\r\n\r\n\t\tsuper( listener );\r\n\r\n\t\tthis.panner = this.context.createPanner();\r\n\t\tthis.panner.panningModel = 'HRTF';\r\n\t\tthis.panner.connect( this.gain );\r\n\r\n\t}\r\n\r\n\tconnect() {\r\n\r\n\t\tsuper.connect();\r\n\r\n\t\tthis.panner.connect( this.gain );\r\n\r\n\t}\r\n\r\n\tdisconnect() {\r\n\r\n\t\tsuper.disconnect();\r\n\r\n\t\tthis.panner.disconnect( this.gain );\r\n\r\n\t}\r\n\r\n\tgetOutput() {\r\n\r\n\t\treturn this.panner;\r\n\r\n\t}\r\n\r\n\tgetRefDistance() {\r\n\r\n\t\treturn this.panner.refDistance;\r\n\r\n\t}\r\n\r\n\tsetRefDistance( value ) {\r\n\r\n\t\tthis.panner.refDistance = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetRolloffFactor() {\r\n\r\n\t\treturn this.panner.rolloffFactor;\r\n\r\n\t}\r\n\r\n\tsetRolloffFactor( value ) {\r\n\r\n\t\tthis.panner.rolloffFactor = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetDistanceModel() {\r\n\r\n\t\treturn this.panner.distanceModel;\r\n\r\n\t}\r\n\r\n\tsetDistanceModel( value ) {\r\n\r\n\t\tthis.panner.distanceModel = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetMaxDistance() {\r\n\r\n\t\treturn this.panner.maxDistance;\r\n\r\n\t}\r\n\r\n\tsetMaxDistance( value ) {\r\n\r\n\t\tthis.panner.maxDistance = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\r\n\r\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\r\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\r\n\t\tthis.panner.coneOuterGain = coneOuterGain;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tupdateMatrixWorld( force ) {\r\n\r\n\t\tsuper.updateMatrixWorld( force );\r\n\r\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\r\n\r\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\r\n\r\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\r\n\r\n\t\tconst panner = this.panner;\r\n\r\n\t\tif ( panner.positionX ) {\r\n\r\n\t\t\t// code path for Chrome and Firefox (see #14393)\r\n\r\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\r\n\r\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\r\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\r\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\r\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\r\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\r\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\r\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass AudioAnalyser {\r\n\r\n\tconstructor( audio, fftSize = 2048 ) {\r\n\r\n\t\tthis.analyser = audio.context.createAnalyser();\r\n\t\tthis.analyser.fftSize = fftSize;\r\n\r\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\r\n\r\n\t\taudio.getOutput().connect( this.analyser );\r\n\r\n\t}\r\n\r\n\r\n\tgetFrequencyData() {\r\n\r\n\t\tthis.analyser.getByteFrequencyData( this.data );\r\n\r\n\t\treturn this.data;\r\n\r\n\t}\r\n\r\n\tgetAverageFrequency() {\r\n\r\n\t\tlet value = 0;\r\n\t\tconst data = this.getFrequencyData();\r\n\r\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\r\n\r\n\t\t\tvalue += data[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn value / data.length;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass PropertyMixer {\r\n\r\n\tconstructor( binding, typeName, valueSize ) {\r\n\r\n\t\tthis.binding = binding;\r\n\t\tthis.valueSize = valueSize;\r\n\r\n\t\tlet mixFunction,\r\n\t\t\tmixFunctionAdditive,\r\n\t\t\tsetIdentity;\r\n\r\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\r\n\t\t//\r\n\t\t// interpolators can use .buffer as their .result\r\n\t\t// the data then goes to 'incoming'\r\n\t\t//\r\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\r\n\t\t// the cumulative result and are compared to detect\r\n\t\t// changes\r\n\t\t//\r\n\t\t// 'orig' stores the original state of the property\r\n\t\t//\r\n\t\t// 'add' is used for additive cumulative results\r\n\t\t//\r\n\t\t// 'work' is optional and is only present for quaternion types. It is used\r\n\t\t// to store intermediate quaternion multiplication results\r\n\r\n\t\tswitch ( typeName ) {\r\n\r\n\t\t\tcase 'quaternion':\r\n\t\t\t\tmixFunction = this._slerp;\r\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\r\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\r\n\r\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\r\n\t\t\t\tthis._workIndex = 5;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'string':\r\n\t\t\tcase 'bool':\r\n\t\t\t\tmixFunction = this._select;\r\n\r\n\t\t\t\t// Use the regular mix function and for additive on these types,\r\n\t\t\t\t// additive is not relevant for non-numeric types\r\n\t\t\t\tmixFunctionAdditive = this._select;\r\n\r\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\r\n\r\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tmixFunction = this._lerp;\r\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\r\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\r\n\r\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\r\n\r\n\t\t}\r\n\r\n\t\tthis._mixBufferRegion = mixFunction;\r\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\r\n\t\tthis._setIdentity = setIdentity;\r\n\t\tthis._origIndex = 3;\r\n\t\tthis._addIndex = 4;\r\n\r\n\t\tthis.cumulativeWeight = 0;\r\n\t\tthis.cumulativeWeightAdditive = 0;\r\n\r\n\t\tthis.useCount = 0;\r\n\t\tthis.referenceCount = 0;\r\n\r\n\t}\r\n\r\n\t// accumulate data in the 'incoming' region into 'accu<i>'\r\n\taccumulate( accuIndex, weight ) {\r\n\r\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\r\n\t\t// the weight and shouldn't have made the call in the first place\r\n\r\n\t\tconst buffer = this.buffer,\r\n\t\t\tstride = this.valueSize,\r\n\t\t\toffset = accuIndex * stride + stride;\r\n\r\n\t\tlet currentWeight = this.cumulativeWeight;\r\n\r\n\t\tif ( currentWeight === 0 ) {\r\n\r\n\t\t\t// accuN := incoming * weight\r\n\r\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentWeight = weight;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// accuN := accuN + incoming * weight\r\n\r\n\t\t\tcurrentWeight += weight;\r\n\t\t\tconst mix = weight / currentWeight;\r\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\r\n\r\n\t\t}\r\n\r\n\t\tthis.cumulativeWeight = currentWeight;\r\n\r\n\t}\r\n\r\n\t// accumulate data in the 'incoming' region into 'add'\r\n\taccumulateAdditive( weight ) {\r\n\r\n\t\tconst buffer = this.buffer,\r\n\t\t\tstride = this.valueSize,\r\n\t\t\toffset = stride * this._addIndex;\r\n\r\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\r\n\r\n\t\t\t// add = identity\r\n\r\n\t\t\tthis._setIdentity();\r\n\r\n\t\t}\r\n\r\n\t\t// add := add + incoming * weight\r\n\r\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\r\n\t\tthis.cumulativeWeightAdditive += weight;\r\n\r\n\t}\r\n\r\n\t// apply the state of 'accu<i>' to the binding when accus differ\r\n\tapply( accuIndex ) {\r\n\r\n\t\tconst stride = this.valueSize,\r\n\t\t\tbuffer = this.buffer,\r\n\t\t\toffset = accuIndex * stride + stride,\r\n\r\n\t\t\tweight = this.cumulativeWeight,\r\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\r\n\r\n\t\t\tbinding = this.binding;\r\n\r\n\t\tthis.cumulativeWeight = 0;\r\n\t\tthis.cumulativeWeightAdditive = 0;\r\n\r\n\t\tif ( weight < 1 ) {\r\n\r\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\r\n\r\n\t\t\tconst originalValueOffset = stride * this._origIndex;\r\n\r\n\t\t\tthis._mixBufferRegion(\r\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\r\n\r\n\t\t}\r\n\r\n\t\tif ( weightAdditive > 0 ) {\r\n\r\n\t\t\t// accuN := accuN + additive accuN\r\n\r\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\r\n\r\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\r\n\r\n\t\t\t\t// value has changed -> update scene graph\r\n\r\n\t\t\t\tbinding.setValue( buffer, offset );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// remember the state of the bound property and copy it to both accus\r\n\tsaveOriginalState() {\r\n\r\n\t\tconst binding = this.binding;\r\n\r\n\t\tconst buffer = this.buffer,\r\n\t\t\tstride = this.valueSize,\r\n\r\n\t\t\toriginalValueOffset = stride * this._origIndex;\r\n\r\n\t\tbinding.getValue( buffer, originalValueOffset );\r\n\r\n\t\t// accu[0..1] := orig -- initially detect changes against the original\r\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\r\n\r\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\r\n\r\n\t\t}\r\n\r\n\t\t// Add to identity for additive\r\n\t\tthis._setIdentity();\r\n\r\n\t\tthis.cumulativeWeight = 0;\r\n\t\tthis.cumulativeWeightAdditive = 0;\r\n\r\n\t}\r\n\r\n\t// apply the state previously taken via 'saveOriginalState' to the binding\r\n\trestoreOriginalState() {\r\n\r\n\t\tconst originalValueOffset = this.valueSize * 3;\r\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\r\n\r\n\t}\r\n\r\n\t_setAdditiveIdentityNumeric() {\r\n\r\n\t\tconst startIndex = this._addIndex * this.valueSize;\r\n\t\tconst endIndex = startIndex + this.valueSize;\r\n\r\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\r\n\r\n\t\t\tthis.buffer[ i ] = 0;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_setAdditiveIdentityQuaternion() {\r\n\r\n\t\tthis._setAdditiveIdentityNumeric();\r\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\r\n\r\n\t}\r\n\r\n\t_setAdditiveIdentityOther() {\r\n\r\n\t\tconst startIndex = this._origIndex * this.valueSize;\r\n\t\tconst targetIndex = this._addIndex * this.valueSize;\r\n\r\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\r\n\r\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// mix functions\r\n\r\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\r\n\r\n\t\tif ( t >= 0.5 ) {\r\n\r\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\r\n\r\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\r\n\r\n\t}\r\n\r\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\r\n\r\n\t\tconst workOffset = this._workIndex * stride;\r\n\r\n\t\t// Store result in intermediate buffer offset\r\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\r\n\r\n\t\t// Slerp to the intermediate result\r\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\r\n\r\n\t}\r\n\r\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\r\n\r\n\t\tconst s = 1 - t;\r\n\r\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\tconst j = dstOffset + i;\r\n\r\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\r\n\r\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\tconst j = dstOffset + i;\r\n\r\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Characters [].:/ are reserved for track binding syntax.\r\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\r\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\r\n\r\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\r\n// only latin characters, and the unicode \\p{L} is not yet supported. So\r\n// instead, we exclude reserved characters and match everything else.\r\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\r\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\r\n\r\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\r\n// be matched to parse the rest of the track name.\r\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\r\n\r\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\r\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\r\n\r\n// Object on target node, and accessor. May not contain reserved\r\n// characters. Accessor may contain any character except closing bracket.\r\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\r\n\r\n// Property and accessor. May not contain reserved characters. Accessor may\r\n// contain any non-bracket characters.\r\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\r\n\r\nconst _trackRe = new RegExp( ''\r\n\t+ '^'\r\n\t+ _directoryRe\r\n\t+ _nodeRe\r\n\t+ _objectRe\r\n\t+ _propertyRe\r\n\t+ '$'\r\n);\r\n\r\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\r\n\r\nclass Composite {\r\n\r\n\tconstructor( targetGroup, path, optionalParsedPath ) {\r\n\r\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\r\n\r\n\t\tthis._targetGroup = targetGroup;\r\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\r\n\r\n\t}\r\n\r\n\tgetValue( array, offset ) {\r\n\r\n\t\tthis.bind(); // bind all binding\r\n\r\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\r\n\t\t\tbinding = this._bindings[ firstValidIndex ];\r\n\r\n\t\t// and only call .getValue on the first\r\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\r\n\r\n\t}\r\n\r\n\tsetValue( array, offset ) {\r\n\r\n\t\tconst bindings = this._bindings;\r\n\r\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\tbindings[ i ].setValue( array, offset );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tbind() {\r\n\r\n\t\tconst bindings = this._bindings;\r\n\r\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\tbindings[ i ].bind();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\tconst bindings = this._bindings;\r\n\r\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\tbindings[ i ].unbind();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n// Note: This class uses a State pattern on a per-method basis:\r\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\r\n// prototype version of these methods with one that represents\r\n// the bound state. When the property is not found, the methods\r\n// become no-ops.\r\nclass PropertyBinding {\r\n\r\n\tconstructor( rootNode, path, parsedPath ) {\r\n\r\n\t\tthis.path = path;\r\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\r\n\r\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\r\n\r\n\t\tthis.rootNode = rootNode;\r\n\r\n\t\t// initial state of these methods that calls 'bind'\r\n\t\tthis.getValue = this._getValue_unbound;\r\n\t\tthis.setValue = this._setValue_unbound;\r\n\r\n\t}\r\n\r\n\r\n\tstatic create( root, path, parsedPath ) {\r\n\r\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\r\n\r\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Replaces spaces with underscores and removes unsupported characters from\r\n\t * node names, to ensure compatibility with parseTrackName().\r\n\t *\r\n\t * @param {string} name Node name to be sanitized.\r\n\t * @return {string}\r\n\t */\r\n\tstatic sanitizeNodeName( name ) {\r\n\r\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\r\n\r\n\t}\r\n\r\n\tstatic parseTrackName( trackName ) {\r\n\r\n\t\tconst matches = _trackRe.exec( trackName );\r\n\r\n\t\tif ( matches === null ) {\r\n\r\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\r\n\r\n\t\t}\r\n\r\n\t\tconst results = {\r\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\r\n\t\t\tnodeName: matches[ 2 ],\r\n\t\t\tobjectName: matches[ 3 ],\r\n\t\t\tobjectIndex: matches[ 4 ],\r\n\t\t\tpropertyName: matches[ 5 ], // required\r\n\t\t\tpropertyIndex: matches[ 6 ]\r\n\t\t};\r\n\r\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\r\n\r\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\r\n\r\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\r\n\r\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\r\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\r\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\r\n\t\t\t// include '.' characters).\r\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\r\n\r\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\r\n\t\t\t\tresults.objectName = objectName;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\r\n\r\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\r\n\r\n\t\t}\r\n\r\n\t\treturn results;\r\n\r\n\t}\r\n\r\n\tstatic findNode( root, nodeName ) {\r\n\r\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\r\n\r\n\t\t\treturn root;\r\n\r\n\t\t}\r\n\r\n\t\t// search into skeleton bones.\r\n\t\tif ( root.skeleton ) {\r\n\r\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\r\n\r\n\t\t\tif ( bone !== undefined ) {\r\n\r\n\t\t\t\treturn bone;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// search into node subtree.\r\n\t\tif ( root.children ) {\r\n\r\n\t\t\tconst searchNodeSubtree = function ( children ) {\r\n\r\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\r\n\r\n\t\t\t\t\tconst childNode = children[ i ];\r\n\r\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\r\n\r\n\t\t\t\t\t\treturn childNode;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\r\n\r\n\t\t\t\t\tif ( result ) return result;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t};\r\n\r\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\r\n\r\n\t\t\tif ( subTreeNode ) {\r\n\r\n\t\t\t\treturn subTreeNode;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\t// these are used to \"bind\" a nonexistent property\r\n\t_getValue_unavailable() {}\r\n\t_setValue_unavailable() {}\r\n\r\n\t// Getters\r\n\r\n\t_getValue_direct( buffer, offset ) {\r\n\r\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\r\n\r\n\t}\r\n\r\n\t_getValue_array( buffer, offset ) {\r\n\r\n\t\tconst source = this.resolvedProperty;\r\n\r\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\r\n\r\n\t\t\tbuffer[ offset ++ ] = source[ i ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_getValue_arrayElement( buffer, offset ) {\r\n\r\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\r\n\r\n\t}\r\n\r\n\t_getValue_toArray( buffer, offset ) {\r\n\r\n\t\tthis.resolvedProperty.toArray( buffer, offset );\r\n\r\n\t}\r\n\r\n\t// Direct\r\n\r\n\t_setValue_direct( buffer, offset ) {\r\n\r\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\r\n\r\n\t}\r\n\r\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\r\n\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\r\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t}\r\n\r\n\t// EntireArray\r\n\r\n\t_setValue_array( buffer, offset ) {\r\n\r\n\t\tconst dest = this.resolvedProperty;\r\n\r\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\r\n\r\n\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\tconst dest = this.resolvedProperty;\r\n\r\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\r\n\r\n\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\r\n\t\t}\r\n\r\n\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\tconst dest = this.resolvedProperty;\r\n\r\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\r\n\r\n\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\r\n\t\t}\r\n\r\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t}\r\n\r\n\t// ArrayElement\r\n\r\n\t_setValue_arrayElement( buffer, offset ) {\r\n\r\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\r\n\t}\r\n\r\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t}\r\n\r\n\t// HasToFromArray\r\n\r\n\t_setValue_fromArray( buffer, offset ) {\r\n\r\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\r\n\t}\r\n\r\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t}\r\n\r\n\t_getValue_unbound( targetArray, offset ) {\r\n\r\n\t\tthis.bind();\r\n\t\tthis.getValue( targetArray, offset );\r\n\r\n\t}\r\n\r\n\t_setValue_unbound( sourceArray, offset ) {\r\n\r\n\t\tthis.bind();\r\n\t\tthis.setValue( sourceArray, offset );\r\n\r\n\t}\r\n\r\n\t// create getter / setter pair for a property in the scene graph\r\n\tbind() {\r\n\r\n\t\tlet targetObject = this.node;\r\n\t\tconst parsedPath = this.parsedPath;\r\n\r\n\t\tconst objectName = parsedPath.objectName;\r\n\t\tconst propertyName = parsedPath.propertyName;\r\n\t\tlet propertyIndex = parsedPath.propertyIndex;\r\n\r\n\t\tif ( ! targetObject ) {\r\n\r\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\r\n\r\n\t\t\tthis.node = targetObject;\r\n\r\n\t\t}\r\n\r\n\t\t// set fail state so we can just 'return' on error\r\n\t\tthis.getValue = this._getValue_unavailable;\r\n\t\tthis.setValue = this._setValue_unavailable;\r\n\r\n\t\t// ensure there is a value node\r\n\t\tif ( ! targetObject ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( objectName ) {\r\n\r\n\t\t\tlet objectIndex = parsedPath.objectIndex;\r\n\r\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\r\n\t\t\tswitch ( objectName ) {\r\n\r\n\t\t\t\tcase 'materials':\r\n\r\n\t\t\t\t\tif ( ! targetObject.material ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttargetObject = targetObject.material.materials;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'bones':\r\n\r\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\r\n\t\t\t\t\t// and convert the integer string to a true integer.\r\n\r\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\r\n\r\n\t\t\t\t\t// support resolving morphTarget names into indices.\r\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\r\n\r\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\r\n\r\n\t\t\t\t\t\t\tobjectIndex = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'map':\r\n\r\n\t\t\t\t\tif ( 'map' in targetObject ) {\r\n\r\n\t\t\t\t\t\ttargetObject = targetObject.map;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ! targetObject.material ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ! targetObject.material.map ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttargetObject = targetObject.material.map;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif ( objectIndex !== undefined ) {\r\n\r\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// resolve property\r\n\t\tconst nodeProperty = targetObject[ propertyName ];\r\n\r\n\t\tif ( nodeProperty === undefined ) {\r\n\r\n\t\t\tconst nodeName = parsedPath.nodeName;\r\n\r\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\r\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// determine versioning scheme\r\n\t\tlet versioning = this.Versioning.None;\r\n\r\n\t\tthis.targetObject = targetObject;\r\n\r\n\t\tif ( targetObject.isMaterial === true ) {\r\n\r\n\t\t\tversioning = this.Versioning.NeedsUpdate;\r\n\r\n\t\t} else if ( targetObject.isObject3D === true ) {\r\n\r\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\r\n\r\n\t\t}\r\n\r\n\t\t// determine how the property gets bound\r\n\t\tlet bindingType = this.BindingType.Direct;\r\n\r\n\t\tif ( propertyIndex !== undefined ) {\r\n\r\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\r\n\r\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\r\n\r\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\r\n\r\n\t\t\t\t// support resolving morphTarget names into indices.\r\n\t\t\t\tif ( ! targetObject.geometry ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\r\n\r\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbindingType = this.BindingType.ArrayElement;\r\n\r\n\t\t\tthis.resolvedProperty = nodeProperty;\r\n\t\t\tthis.propertyIndex = propertyIndex;\r\n\r\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\r\n\r\n\t\t\t// must use copy for Object3D.Euler/Quaternion\r\n\r\n\t\t\tbindingType = this.BindingType.HasFromToArray;\r\n\r\n\t\t\tthis.resolvedProperty = nodeProperty;\r\n\r\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\r\n\r\n\t\t\tbindingType = this.BindingType.EntireArray;\r\n\r\n\t\t\tthis.resolvedProperty = nodeProperty;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.propertyName = propertyName;\r\n\r\n\t\t}\r\n\r\n\t\t// select getter / setter\r\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\r\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\r\n\r\n\t}\r\n\r\n\tunbind() {\r\n\r\n\t\tthis.node = null;\r\n\r\n\t\t// back to the prototype version of getValue / setValue\r\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\r\n\t\tthis.getValue = this._getValue_unbound;\r\n\t\tthis.setValue = this._setValue_unbound;\r\n\r\n\t}\r\n\r\n}\r\n\r\nPropertyBinding.Composite = Composite;\r\n\r\nPropertyBinding.prototype.BindingType = {\r\n\tDirect: 0,\r\n\tEntireArray: 1,\r\n\tArrayElement: 2,\r\n\tHasFromToArray: 3\r\n};\r\n\r\nPropertyBinding.prototype.Versioning = {\r\n\tNone: 0,\r\n\tNeedsUpdate: 1,\r\n\tMatrixWorldNeedsUpdate: 2\r\n};\r\n\r\nPropertyBinding.prototype.GetterByBindingType = [\r\n\r\n\tPropertyBinding.prototype._getValue_direct,\r\n\tPropertyBinding.prototype._getValue_array,\r\n\tPropertyBinding.prototype._getValue_arrayElement,\r\n\tPropertyBinding.prototype._getValue_toArray,\r\n\r\n];\r\n\r\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\r\n\r\n\t[\r\n\t\t// Direct\r\n\t\tPropertyBinding.prototype._setValue_direct,\r\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\r\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\r\n\r\n\t], [\r\n\r\n\t\t// EntireArray\r\n\r\n\t\tPropertyBinding.prototype._setValue_array,\r\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\r\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\r\n\r\n\t], [\r\n\r\n\t\t// ArrayElement\r\n\t\tPropertyBinding.prototype._setValue_arrayElement,\r\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\r\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\r\n\r\n\t], [\r\n\r\n\t\t// HasToFromArray\r\n\t\tPropertyBinding.prototype._setValue_fromArray,\r\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\r\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\r\n\r\n\t]\r\n\r\n];\r\n\r\n/**\r\n *\r\n * A group of objects that receives a shared animation state.\r\n *\r\n * Usage:\r\n *\r\n *  - Add objects you would otherwise pass as 'root' to the\r\n *    constructor or the .clipAction method of AnimationMixer.\r\n *\r\n *  - Instead pass this object as 'root'.\r\n *\r\n *  - You can also add and remove objects later when the mixer\r\n *    is running.\r\n *\r\n * Note:\r\n *\r\n *    Objects of this class appear as one object to the mixer,\r\n *    so cache control of the individual objects must be done\r\n *    on the group.\r\n *\r\n * Limitation:\r\n *\r\n *  - The animated properties must be compatible among the\r\n *    all objects in the group.\r\n *\r\n *  - A single property can either be controlled through a\r\n *    target group or directly, but not both.\r\n */\r\n\r\nclass AnimationObjectGroup {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.isAnimationObjectGroup = true;\r\n\r\n\t\tthis.uuid = generateUUID();\r\n\r\n\t\t// cached objects followed by the active ones\r\n\t\tthis._objects = Array.prototype.slice.call( arguments );\r\n\r\n\t\tthis.nCachedObjects_ = 0; // threshold\r\n\t\t// note: read by PropertyBinding.Composite\r\n\r\n\t\tconst indices = {};\r\n\t\tthis._indicesByUUID = indices; // for bookkeeping\r\n\r\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\tindices[ arguments[ i ].uuid ] = i;\r\n\r\n\t\t}\r\n\r\n\t\tthis._paths = []; // inside: string\r\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\r\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\r\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tthis.stats = {\r\n\r\n\t\t\tobjects: {\r\n\t\t\t\tget total() {\r\n\r\n\t\t\t\t\treturn scope._objects.length;\r\n\r\n\t\t\t\t},\r\n\t\t\t\tget inUse() {\r\n\r\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tget bindingsPerObject() {\r\n\r\n\t\t\t\treturn scope._bindings.length;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tadd() {\r\n\r\n\t\tconst objects = this._objects,\r\n\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\tpaths = this._paths,\r\n\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\tbindings = this._bindings,\r\n\t\t\tnBindings = bindings.length;\r\n\r\n\t\tlet knownObject = undefined,\r\n\t\t\tnObjects = objects.length,\r\n\t\t\tnCachedObjects = this.nCachedObjects_;\r\n\r\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\tconst object = arguments[ i ],\r\n\t\t\t\tuuid = object.uuid;\r\n\t\t\tlet index = indicesByUUID[ uuid ];\r\n\r\n\t\t\tif ( index === undefined ) {\r\n\r\n\t\t\t\t// unknown object -> add it to the ACTIVE region\r\n\r\n\t\t\t\tindex = nObjects ++;\r\n\t\t\t\tindicesByUUID[ uuid ] = index;\r\n\t\t\t\tobjects.push( object );\r\n\r\n\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( index < nCachedObjects ) {\r\n\r\n\t\t\t\tknownObject = objects[ index ];\r\n\r\n\t\t\t\t// move existing object to the ACTIVE region\r\n\r\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\r\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\r\n\r\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\r\n\t\t\t\tobjects[ index ] = lastCachedObject;\r\n\r\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\r\n\t\t\t\tobjects[ firstActiveIndex ] = object;\r\n\r\n\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\r\n\r\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\r\n\r\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\r\n\r\n\t\t\t\t\tif ( binding === undefined ) {\r\n\r\n\t\t\t\t\t\t// since we do not bother to create new bindings\r\n\t\t\t\t\t\t// for objects that are cached, the binding may\r\n\t\t\t\t\t\t// or may not exist\r\n\r\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\r\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\r\n\r\n\t\t\t} // else the object is already where we want it to be\r\n\r\n\t\t} // for arguments\r\n\r\n\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\r\n\t}\r\n\r\n\tremove() {\r\n\r\n\t\tconst objects = this._objects,\r\n\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\tbindings = this._bindings,\r\n\t\t\tnBindings = bindings.length;\r\n\r\n\t\tlet nCachedObjects = this.nCachedObjects_;\r\n\r\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\tconst object = arguments[ i ],\r\n\t\t\t\tuuid = object.uuid,\r\n\t\t\t\tindex = indicesByUUID[ uuid ];\r\n\r\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\r\n\r\n\t\t\t\t// move existing object into the CACHED region\r\n\r\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\r\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\r\n\r\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\r\n\t\t\t\tobjects[ index ] = firstActiveObject;\r\n\r\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\r\n\t\t\t\tobjects[ lastCachedIndex ] = object;\r\n\r\n\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\r\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\r\n\r\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\r\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} // for arguments\r\n\r\n\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\r\n\t}\r\n\r\n\t// remove & forget\r\n\tuncache() {\r\n\r\n\t\tconst objects = this._objects,\r\n\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\tbindings = this._bindings,\r\n\t\t\tnBindings = bindings.length;\r\n\r\n\t\tlet nCachedObjects = this.nCachedObjects_,\r\n\t\t\tnObjects = objects.length;\r\n\r\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\tconst object = arguments[ i ],\r\n\t\t\t\tuuid = object.uuid,\r\n\t\t\t\tindex = indicesByUUID[ uuid ];\r\n\r\n\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\tdelete indicesByUUID[ uuid ];\r\n\r\n\t\t\t\tif ( index < nCachedObjects ) {\r\n\r\n\t\t\t\t\t// object is cached, shrink the CACHED region\r\n\r\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\r\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\r\n\t\t\t\t\t\tlastIndex = -- nObjects,\r\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\r\n\r\n\t\t\t\t\t// last cached object takes this object's place\r\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\r\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\r\n\r\n\t\t\t\t\t// last object goes to the activated slot and pop\r\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\r\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\r\n\t\t\t\t\tobjects.pop();\r\n\r\n\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\r\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\r\n\r\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\r\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\r\n\t\t\t\t\t\tbindingsForPath.pop();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// object is active, just swap with the last and pop\r\n\r\n\t\t\t\t\tconst lastIndex = -- nObjects,\r\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\r\n\r\n\t\t\t\t\tif ( lastIndex > 0 ) {\r\n\r\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tobjects[ index ] = lastObject;\r\n\t\t\t\t\tobjects.pop();\r\n\r\n\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\r\n\r\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\r\n\t\t\t\t\t\tbindingsForPath.pop();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} // cached or active\r\n\r\n\t\t\t} // if object is known\r\n\r\n\t\t} // for arguments\r\n\r\n\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\r\n\t}\r\n\r\n\t// Internal interface used by befriended PropertyBinding.Composite:\r\n\r\n\tsubscribe_( path, parsedPath ) {\r\n\r\n\t\t// returns an array of bindings for the given path that is changed\r\n\t\t// according to the contained objects in the group\r\n\r\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\r\n\t\tlet index = indicesByPath[ path ];\r\n\t\tconst bindings = this._bindings;\r\n\r\n\t\tif ( index !== undefined ) return bindings[ index ];\r\n\r\n\t\tconst paths = this._paths,\r\n\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\tobjects = this._objects,\r\n\t\t\tnObjects = objects.length,\r\n\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\tbindingsForPath = new Array( nObjects );\r\n\r\n\t\tindex = bindings.length;\r\n\r\n\t\tindicesByPath[ path ] = index;\r\n\r\n\t\tpaths.push( path );\r\n\t\tparsedPaths.push( parsedPath );\r\n\t\tbindings.push( bindingsForPath );\r\n\r\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\r\n\r\n\t\t\tconst object = objects[ i ];\r\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\r\n\r\n\t\t}\r\n\r\n\t\treturn bindingsForPath;\r\n\r\n\t}\r\n\r\n\tunsubscribe_( path ) {\r\n\r\n\t\t// tells the group to forget about a property path and no longer\r\n\t\t// update the array previously obtained with 'subscribe_'\r\n\r\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\r\n\t\t\tindex = indicesByPath[ path ];\r\n\r\n\t\tif ( index !== undefined ) {\r\n\r\n\t\t\tconst paths = this._paths,\r\n\t\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\t\tbindings = this._bindings,\r\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\r\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\r\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\r\n\r\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\r\n\r\n\t\t\tbindings[ index ] = lastBindings;\r\n\t\t\tbindings.pop();\r\n\r\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\r\n\t\t\tparsedPaths.pop();\r\n\r\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\r\n\t\t\tpaths.pop();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass AnimationAction {\r\n\r\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\r\n\r\n\t\tthis._mixer = mixer;\r\n\t\tthis._clip = clip;\r\n\t\tthis._localRoot = localRoot;\r\n\t\tthis.blendMode = blendMode;\r\n\r\n\t\tconst tracks = clip.tracks,\r\n\t\t\tnTracks = tracks.length,\r\n\t\t\tinterpolants = new Array( nTracks );\r\n\r\n\t\tconst interpolantSettings = {\r\n\t\t\tendingStart: ZeroCurvatureEnding,\r\n\t\t\tendingEnd: ZeroCurvatureEnding\r\n\t\t};\r\n\r\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\r\n\r\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\r\n\t\t\tinterpolants[ i ] = interpolant;\r\n\t\t\tinterpolant.settings = interpolantSettings;\r\n\r\n\t\t}\r\n\r\n\t\tthis._interpolantSettings = interpolantSettings;\r\n\r\n\t\tthis._interpolants = interpolants; // bound by the mixer\r\n\r\n\t\t// inside: PropertyMixer (managed by the mixer)\r\n\t\tthis._propertyBindings = new Array( nTracks );\r\n\r\n\t\tthis._cacheIndex = null; // for the memory manager\r\n\t\tthis._byClipCacheIndex = null; // for the memory manager\r\n\r\n\t\tthis._timeScaleInterpolant = null;\r\n\t\tthis._weightInterpolant = null;\r\n\r\n\t\tthis.loop = LoopRepeat;\r\n\t\tthis._loopCount = - 1;\r\n\r\n\t\t// global mixer time when the action is to be started\r\n\t\t// it's set back to 'null' upon start of the action\r\n\t\tthis._startTime = null;\r\n\r\n\t\t// scaled local time of the action\r\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\r\n\t\tthis.time = 0;\r\n\r\n\t\tthis.timeScale = 1;\r\n\t\tthis._effectiveTimeScale = 1;\r\n\r\n\t\tthis.weight = 1;\r\n\t\tthis._effectiveWeight = 1;\r\n\r\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\r\n\r\n\t\tthis.paused = false; // true -> zero effective time scale\r\n\t\tthis.enabled = true; // false -> zero effective weight\r\n\r\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\r\n\r\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\r\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\r\n\r\n\t}\r\n\r\n\t// State & Scheduling\r\n\r\n\tplay() {\r\n\r\n\t\tthis._mixer._activateAction( this );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstop() {\r\n\r\n\t\tthis._mixer._deactivateAction( this );\r\n\r\n\t\treturn this.reset();\r\n\r\n\t}\r\n\r\n\treset() {\r\n\r\n\t\tthis.paused = false;\r\n\t\tthis.enabled = true;\r\n\r\n\t\tthis.time = 0; // restart clip\r\n\t\tthis._loopCount = - 1;// forget previous loops\r\n\t\tthis._startTime = null;// forget scheduling\r\n\r\n\t\treturn this.stopFading().stopWarping();\r\n\r\n\t}\r\n\r\n\tisRunning() {\r\n\r\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\r\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\r\n\r\n\t}\r\n\r\n\t// return true when play has been called\r\n\tisScheduled() {\r\n\r\n\t\treturn this._mixer._isActiveAction( this );\r\n\r\n\t}\r\n\r\n\tstartAt( time ) {\r\n\r\n\t\tthis._startTime = time;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetLoop( mode, repetitions ) {\r\n\r\n\t\tthis.loop = mode;\r\n\t\tthis.repetitions = repetitions;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// Weight\r\n\r\n\t// set the weight stopping any scheduled fading\r\n\t// although .enabled = false yields an effective weight of zero, this\r\n\t// method does *not* change .enabled, because it would be confusing\r\n\tsetEffectiveWeight( weight ) {\r\n\r\n\t\tthis.weight = weight;\r\n\r\n\t\t// note: same logic as when updated at runtime\r\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\r\n\r\n\t\treturn this.stopFading();\r\n\r\n\t}\r\n\r\n\t// return the weight considering fading and .enabled\r\n\tgetEffectiveWeight() {\r\n\r\n\t\treturn this._effectiveWeight;\r\n\r\n\t}\r\n\r\n\tfadeIn( duration ) {\r\n\r\n\t\treturn this._scheduleFading( duration, 0, 1 );\r\n\r\n\t}\r\n\r\n\tfadeOut( duration ) {\r\n\r\n\t\treturn this._scheduleFading( duration, 1, 0 );\r\n\r\n\t}\r\n\r\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\r\n\r\n\t\tfadeOutAction.fadeOut( duration );\r\n\t\tthis.fadeIn( duration );\r\n\r\n\t\tif ( warp ) {\r\n\r\n\t\t\tconst fadeInDuration = this._clip.duration,\r\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\r\n\r\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\r\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\r\n\r\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\r\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcrossFadeTo( fadeInAction, duration, warp ) {\r\n\r\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\r\n\r\n\t}\r\n\r\n\tstopFading() {\r\n\r\n\t\tconst weightInterpolant = this._weightInterpolant;\r\n\r\n\t\tif ( weightInterpolant !== null ) {\r\n\r\n\t\t\tthis._weightInterpolant = null;\r\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// Time Scale Control\r\n\r\n\t// set the time scale stopping any scheduled warping\r\n\t// although .paused = true yields an effective time scale of zero, this\r\n\t// method does *not* change .paused, because it would be confusing\r\n\tsetEffectiveTimeScale( timeScale ) {\r\n\r\n\t\tthis.timeScale = timeScale;\r\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\r\n\r\n\t\treturn this.stopWarping();\r\n\r\n\t}\r\n\r\n\t// return the time scale considering warping and .paused\r\n\tgetEffectiveTimeScale() {\r\n\r\n\t\treturn this._effectiveTimeScale;\r\n\r\n\t}\r\n\r\n\tsetDuration( duration ) {\r\n\r\n\t\tthis.timeScale = this._clip.duration / duration;\r\n\r\n\t\treturn this.stopWarping();\r\n\r\n\t}\r\n\r\n\tsyncWith( action ) {\r\n\r\n\t\tthis.time = action.time;\r\n\t\tthis.timeScale = action.timeScale;\r\n\r\n\t\treturn this.stopWarping();\r\n\r\n\t}\r\n\r\n\thalt( duration ) {\r\n\r\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\r\n\r\n\t}\r\n\r\n\twarp( startTimeScale, endTimeScale, duration ) {\r\n\r\n\t\tconst mixer = this._mixer,\r\n\t\t\tnow = mixer.time,\r\n\t\t\ttimeScale = this.timeScale;\r\n\r\n\t\tlet interpolant = this._timeScaleInterpolant;\r\n\r\n\t\tif ( interpolant === null ) {\r\n\r\n\t\t\tinterpolant = mixer._lendControlInterpolant();\r\n\t\t\tthis._timeScaleInterpolant = interpolant;\r\n\r\n\t\t}\r\n\r\n\t\tconst times = interpolant.parameterPositions,\r\n\t\t\tvalues = interpolant.sampleValues;\r\n\r\n\t\ttimes[ 0 ] = now;\r\n\t\ttimes[ 1 ] = now + duration;\r\n\r\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\r\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tstopWarping() {\r\n\r\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\r\n\r\n\t\tif ( timeScaleInterpolant !== null ) {\r\n\r\n\t\t\tthis._timeScaleInterpolant = null;\r\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// Object Accessors\r\n\r\n\tgetMixer() {\r\n\r\n\t\treturn this._mixer;\r\n\r\n\t}\r\n\r\n\tgetClip() {\r\n\r\n\t\treturn this._clip;\r\n\r\n\t}\r\n\r\n\tgetRoot() {\r\n\r\n\t\treturn this._localRoot || this._mixer._root;\r\n\r\n\t}\r\n\r\n\t// Interna\r\n\r\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\r\n\r\n\t\t// called by the mixer\r\n\r\n\t\tif ( ! this.enabled ) {\r\n\r\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\r\n\r\n\t\t\tthis._updateWeight( time );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tconst startTime = this._startTime;\r\n\r\n\t\tif ( startTime !== null ) {\r\n\r\n\t\t\t// check for scheduled start of action\r\n\r\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\r\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\r\n\r\n\t\t\t\tdeltaTime = 0;\r\n\r\n\t\t\t} else {\r\n\r\n\r\n\t\t\t\tthis._startTime = null; // unschedule\r\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// apply time scale and advance time\r\n\r\n\t\tdeltaTime *= this._updateTimeScale( time );\r\n\t\tconst clipTime = this._updateTime( deltaTime );\r\n\r\n\t\t// note: _updateTime may disable the action resulting in\r\n\t\t// an effective weight of 0\r\n\r\n\t\tconst weight = this._updateWeight( time );\r\n\r\n\t\tif ( weight > 0 ) {\r\n\r\n\t\t\tconst interpolants = this._interpolants;\r\n\t\t\tconst propertyMixers = this._propertyBindings;\r\n\r\n\t\t\tswitch ( this.blendMode ) {\r\n\r\n\t\t\t\tcase AdditiveAnimationBlendMode:\r\n\r\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\r\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase NormalAnimationBlendMode:\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\r\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_updateWeight( time ) {\r\n\r\n\t\tlet weight = 0;\r\n\r\n\t\tif ( this.enabled ) {\r\n\r\n\t\t\tweight = this.weight;\r\n\t\t\tconst interpolant = this._weightInterpolant;\r\n\r\n\t\t\tif ( interpolant !== null ) {\r\n\r\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\r\n\r\n\t\t\t\tweight *= interpolantValue;\r\n\r\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\r\n\r\n\t\t\t\t\tthis.stopFading();\r\n\r\n\t\t\t\t\tif ( interpolantValue === 0 ) {\r\n\r\n\t\t\t\t\t\t// faded out, disable\r\n\t\t\t\t\t\tthis.enabled = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._effectiveWeight = weight;\r\n\t\treturn weight;\r\n\r\n\t}\r\n\r\n\t_updateTimeScale( time ) {\r\n\r\n\t\tlet timeScale = 0;\r\n\r\n\t\tif ( ! this.paused ) {\r\n\r\n\t\t\ttimeScale = this.timeScale;\r\n\r\n\t\t\tconst interpolant = this._timeScaleInterpolant;\r\n\r\n\t\t\tif ( interpolant !== null ) {\r\n\r\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\r\n\r\n\t\t\t\ttimeScale *= interpolantValue;\r\n\r\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\r\n\r\n\t\t\t\t\tthis.stopWarping();\r\n\r\n\t\t\t\t\tif ( timeScale === 0 ) {\r\n\r\n\t\t\t\t\t\t// motion has halted, pause\r\n\t\t\t\t\t\tthis.paused = true;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// warp done - apply final time scale\r\n\t\t\t\t\t\tthis.timeScale = timeScale;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._effectiveTimeScale = timeScale;\r\n\t\treturn timeScale;\r\n\r\n\t}\r\n\r\n\t_updateTime( deltaTime ) {\r\n\r\n\t\tconst duration = this._clip.duration;\r\n\t\tconst loop = this.loop;\r\n\r\n\t\tlet time = this.time + deltaTime;\r\n\t\tlet loopCount = this._loopCount;\r\n\r\n\t\tconst pingPong = ( loop === LoopPingPong );\r\n\r\n\t\tif ( deltaTime === 0 ) {\r\n\r\n\t\t\tif ( loopCount === - 1 ) return time;\r\n\r\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\r\n\r\n\t\t}\r\n\r\n\t\tif ( loop === LoopOnce ) {\r\n\r\n\t\t\tif ( loopCount === - 1 ) {\r\n\r\n\t\t\t\t// just started\r\n\r\n\t\t\t\tthis._loopCount = 0;\r\n\t\t\t\tthis._setEndings( true, true, false );\r\n\r\n\t\t\t}\r\n\r\n\t\t\thandle_stop: {\r\n\r\n\t\t\t\tif ( time >= duration ) {\r\n\r\n\t\t\t\t\ttime = duration;\r\n\r\n\t\t\t\t} else if ( time < 0 ) {\r\n\r\n\t\t\t\t\ttime = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.time = time;\r\n\r\n\t\t\t\t\tbreak handle_stop;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\r\n\t\t\t\telse this.enabled = false;\r\n\r\n\t\t\t\tthis.time = time;\r\n\r\n\t\t\t\tthis._mixer.dispatchEvent( {\r\n\t\t\t\t\ttype: 'finished', action: this,\r\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else { // repetitive Repeat or PingPong\r\n\r\n\t\t\tif ( loopCount === - 1 ) {\r\n\r\n\t\t\t\t// just started\r\n\r\n\t\t\t\tif ( deltaTime >= 0 ) {\r\n\r\n\t\t\t\t\tloopCount = 0;\r\n\r\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// when looping in reverse direction, the initial\r\n\t\t\t\t\t// transition through zero counts as a repetition,\r\n\t\t\t\t\t// so leave loopCount at -1\r\n\r\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( time >= duration || time < 0 ) {\r\n\r\n\t\t\t\t// wrap around\r\n\r\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\r\n\t\t\t\ttime -= duration * loopDelta;\r\n\r\n\t\t\t\tloopCount += Math.abs( loopDelta );\r\n\r\n\t\t\t\tconst pending = this.repetitions - loopCount;\r\n\r\n\t\t\t\tif ( pending <= 0 ) {\r\n\r\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\r\n\r\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\r\n\t\t\t\t\telse this.enabled = false;\r\n\r\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\r\n\r\n\t\t\t\t\tthis.time = time;\r\n\r\n\t\t\t\t\tthis._mixer.dispatchEvent( {\r\n\t\t\t\t\t\ttype: 'finished', action: this,\r\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// keep running\r\n\r\n\t\t\t\t\tif ( pending === 1 ) {\r\n\r\n\t\t\t\t\t\t// entering the last round\r\n\r\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\r\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._loopCount = loopCount;\r\n\r\n\t\t\t\t\tthis.time = time;\r\n\r\n\t\t\t\t\tthis._mixer.dispatchEvent( {\r\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.time = time;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\r\n\r\n\t\t\t\t// invert time for the \"pong round\"\r\n\r\n\t\t\t\treturn duration - time;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn time;\r\n\r\n\t}\r\n\r\n\t_setEndings( atStart, atEnd, pingPong ) {\r\n\r\n\t\tconst settings = this._interpolantSettings;\r\n\r\n\t\tif ( pingPong ) {\r\n\r\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\r\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\r\n\r\n\t\t\tif ( atStart ) {\r\n\r\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( atEnd ) {\r\n\r\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_scheduleFading( duration, weightNow, weightThen ) {\r\n\r\n\t\tconst mixer = this._mixer, now = mixer.time;\r\n\t\tlet interpolant = this._weightInterpolant;\r\n\r\n\t\tif ( interpolant === null ) {\r\n\r\n\t\t\tinterpolant = mixer._lendControlInterpolant();\r\n\t\t\tthis._weightInterpolant = interpolant;\r\n\r\n\t\t}\r\n\r\n\t\tconst times = interpolant.parameterPositions,\r\n\t\t\tvalues = interpolant.sampleValues;\r\n\r\n\t\ttimes[ 0 ] = now;\r\n\t\tvalues[ 0 ] = weightNow;\r\n\t\ttimes[ 1 ] = now + duration;\r\n\t\tvalues[ 1 ] = weightThen;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\r\n\r\n\r\nclass AnimationMixer extends EventDispatcher {\r\n\r\n\tconstructor( root ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis._root = root;\r\n\t\tthis._initMemoryManager();\r\n\t\tthis._accuIndex = 0;\r\n\t\tthis.time = 0;\r\n\t\tthis.timeScale = 1.0;\r\n\r\n\t}\r\n\r\n\t_bindAction( action, prototypeAction ) {\r\n\r\n\t\tconst root = action._localRoot || this._root,\r\n\t\t\ttracks = action._clip.tracks,\r\n\t\t\tnTracks = tracks.length,\r\n\t\t\tbindings = action._propertyBindings,\r\n\t\t\tinterpolants = action._interpolants,\r\n\t\t\trootUuid = root.uuid,\r\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\r\n\r\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\r\n\r\n\t\tif ( bindingsByName === undefined ) {\r\n\r\n\t\t\tbindingsByName = {};\r\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\r\n\r\n\t\t\tconst track = tracks[ i ],\r\n\t\t\t\ttrackName = track.name;\r\n\r\n\t\t\tlet binding = bindingsByName[ trackName ];\r\n\r\n\t\t\tif ( binding !== undefined ) {\r\n\r\n\t\t\t\t++ binding.referenceCount;\r\n\t\t\t\tbindings[ i ] = binding;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbinding = bindings[ i ];\r\n\r\n\t\t\t\tif ( binding !== undefined ) {\r\n\r\n\t\t\t\t\t// existing binding, make sure the cache knows\r\n\r\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\r\n\r\n\t\t\t\t\t\t++ binding.referenceCount;\r\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst path = prototypeAction && prototypeAction.\r\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\r\n\r\n\t\t\t\tbinding = new PropertyMixer(\r\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\r\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\r\n\r\n\t\t\t\t++ binding.referenceCount;\r\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\r\n\r\n\t\t\t\tbindings[ i ] = binding;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_activateAction( action ) {\r\n\r\n\t\tif ( ! this._isActiveAction( action ) ) {\r\n\r\n\t\t\tif ( action._cacheIndex === null ) {\r\n\r\n\t\t\t\t// this action has been forgotten by the cache, but the user\r\n\t\t\t\t// appears to be still using it -> rebind\r\n\r\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\r\n\t\t\t\t\tclipUuid = action._clip.uuid,\r\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\r\n\r\n\t\t\t\tthis._bindAction( action,\r\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\r\n\r\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst bindings = action._propertyBindings;\r\n\r\n\t\t\t// increment reference counts / sort out state\r\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tconst binding = bindings[ i ];\r\n\r\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\r\n\r\n\t\t\t\t\tthis._lendBinding( binding );\r\n\t\t\t\t\tbinding.saveOriginalState();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._lendAction( action );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_deactivateAction( action ) {\r\n\r\n\t\tif ( this._isActiveAction( action ) ) {\r\n\r\n\t\t\tconst bindings = action._propertyBindings;\r\n\r\n\t\t\t// decrement reference counts / sort out state\r\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tconst binding = bindings[ i ];\r\n\r\n\t\t\t\tif ( -- binding.useCount === 0 ) {\r\n\r\n\t\t\t\t\tbinding.restoreOriginalState();\r\n\t\t\t\t\tthis._takeBackBinding( binding );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._takeBackAction( action );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Memory manager\r\n\r\n\t_initMemoryManager() {\r\n\r\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\r\n\t\tthis._nActiveActions = 0;\r\n\r\n\t\tthis._actionsByClip = {};\r\n\t\t// inside:\r\n\t\t// {\r\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\r\n\t\t// \tactionByRoot: AnimationAction - lookup\r\n\t\t// }\r\n\r\n\r\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\r\n\t\tthis._nActiveBindings = 0;\r\n\r\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\r\n\r\n\r\n\t\tthis._controlInterpolants = []; // same game as above\r\n\t\tthis._nActiveControlInterpolants = 0;\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tthis.stats = {\r\n\r\n\t\t\tactions: {\r\n\t\t\t\tget total() {\r\n\r\n\t\t\t\t\treturn scope._actions.length;\r\n\r\n\t\t\t\t},\r\n\t\t\t\tget inUse() {\r\n\r\n\t\t\t\t\treturn scope._nActiveActions;\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbindings: {\r\n\t\t\t\tget total() {\r\n\r\n\t\t\t\t\treturn scope._bindings.length;\r\n\r\n\t\t\t\t},\r\n\t\t\t\tget inUse() {\r\n\r\n\t\t\t\t\treturn scope._nActiveBindings;\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcontrolInterpolants: {\r\n\t\t\t\tget total() {\r\n\r\n\t\t\t\t\treturn scope._controlInterpolants.length;\r\n\r\n\t\t\t\t},\r\n\t\t\t\tget inUse() {\r\n\r\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t// Memory management for AnimationAction objects\r\n\r\n\t_isActiveAction( action ) {\r\n\r\n\t\tconst index = action._cacheIndex;\r\n\t\treturn index !== null && index < this._nActiveActions;\r\n\r\n\t}\r\n\r\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\r\n\r\n\t\tconst actions = this._actions,\r\n\t\t\tactionsByClip = this._actionsByClip;\r\n\r\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\r\n\r\n\t\tif ( actionsForClip === undefined ) {\r\n\r\n\t\t\tactionsForClip = {\r\n\r\n\t\t\t\tknownActions: [ action ],\r\n\t\t\t\tactionByRoot: {}\r\n\r\n\t\t\t};\r\n\r\n\t\t\taction._byClipCacheIndex = 0;\r\n\r\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst knownActions = actionsForClip.knownActions;\r\n\r\n\t\t\taction._byClipCacheIndex = knownActions.length;\r\n\t\t\tknownActions.push( action );\r\n\r\n\t\t}\r\n\r\n\t\taction._cacheIndex = actions.length;\r\n\t\tactions.push( action );\r\n\r\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\r\n\r\n\t}\r\n\r\n\t_removeInactiveAction( action ) {\r\n\r\n\t\tconst actions = this._actions,\r\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\r\n\t\t\tcacheIndex = action._cacheIndex;\r\n\r\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\r\n\t\tactions[ cacheIndex ] = lastInactiveAction;\r\n\t\tactions.pop();\r\n\r\n\t\taction._cacheIndex = null;\r\n\r\n\r\n\t\tconst clipUuid = action._clip.uuid,\r\n\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\r\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\r\n\r\n\t\t\tlastKnownAction =\r\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\r\n\r\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\r\n\r\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\r\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\r\n\t\tknownActionsForClip.pop();\r\n\r\n\t\taction._byClipCacheIndex = null;\r\n\r\n\r\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\r\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\r\n\r\n\t\tdelete actionByRoot[ rootUuid ];\r\n\r\n\t\tif ( knownActionsForClip.length === 0 ) {\r\n\r\n\t\t\tdelete actionsByClip[ clipUuid ];\r\n\r\n\t\t}\r\n\r\n\t\tthis._removeInactiveBindingsForAction( action );\r\n\r\n\t}\r\n\r\n\t_removeInactiveBindingsForAction( action ) {\r\n\r\n\t\tconst bindings = action._propertyBindings;\r\n\r\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\tconst binding = bindings[ i ];\r\n\r\n\t\t\tif ( -- binding.referenceCount === 0 ) {\r\n\r\n\t\t\t\tthis._removeInactiveBinding( binding );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_lendAction( action ) {\r\n\r\n\t\t// [ active actions |  inactive actions  ]\r\n\t\t// [  active actions >| inactive actions ]\r\n\t\t//                 s        a\r\n\t\t//                  <-swap->\r\n\t\t//                 a        s\r\n\r\n\t\tconst actions = this._actions,\r\n\t\t\tprevIndex = action._cacheIndex,\r\n\r\n\t\t\tlastActiveIndex = this._nActiveActions ++,\r\n\r\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\r\n\r\n\t\taction._cacheIndex = lastActiveIndex;\r\n\t\tactions[ lastActiveIndex ] = action;\r\n\r\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\r\n\t\tactions[ prevIndex ] = firstInactiveAction;\r\n\r\n\t}\r\n\r\n\t_takeBackAction( action ) {\r\n\r\n\t\t// [  active actions  | inactive actions ]\r\n\t\t// [ active actions |< inactive actions  ]\r\n\t\t//        a        s\r\n\t\t//         <-swap->\r\n\t\t//        s        a\r\n\r\n\t\tconst actions = this._actions,\r\n\t\t\tprevIndex = action._cacheIndex,\r\n\r\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\r\n\r\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\r\n\r\n\t\taction._cacheIndex = firstInactiveIndex;\r\n\t\tactions[ firstInactiveIndex ] = action;\r\n\r\n\t\tlastActiveAction._cacheIndex = prevIndex;\r\n\t\tactions[ prevIndex ] = lastActiveAction;\r\n\r\n\t}\r\n\r\n\t// Memory management for PropertyMixer objects\r\n\r\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\r\n\r\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\tbindings = this._bindings;\r\n\r\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\r\n\r\n\t\tif ( bindingByName === undefined ) {\r\n\r\n\t\t\tbindingByName = {};\r\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\r\n\r\n\t\t}\r\n\r\n\t\tbindingByName[ trackName ] = binding;\r\n\r\n\t\tbinding._cacheIndex = bindings.length;\r\n\t\tbindings.push( binding );\r\n\r\n\t}\r\n\r\n\t_removeInactiveBinding( binding ) {\r\n\r\n\t\tconst bindings = this._bindings,\r\n\t\t\tpropBinding = binding.binding,\r\n\t\t\trootUuid = propBinding.rootNode.uuid,\r\n\t\t\ttrackName = propBinding.path,\r\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\r\n\r\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\r\n\t\t\tcacheIndex = binding._cacheIndex;\r\n\r\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\r\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\r\n\t\tbindings.pop();\r\n\r\n\t\tdelete bindingByName[ trackName ];\r\n\r\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\r\n\r\n\t\t\tdelete bindingsByRoot[ rootUuid ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_lendBinding( binding ) {\r\n\r\n\t\tconst bindings = this._bindings,\r\n\t\t\tprevIndex = binding._cacheIndex,\r\n\r\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\r\n\r\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\r\n\r\n\t\tbinding._cacheIndex = lastActiveIndex;\r\n\t\tbindings[ lastActiveIndex ] = binding;\r\n\r\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\r\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\r\n\r\n\t}\r\n\r\n\t_takeBackBinding( binding ) {\r\n\r\n\t\tconst bindings = this._bindings,\r\n\t\t\tprevIndex = binding._cacheIndex,\r\n\r\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\r\n\r\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\r\n\r\n\t\tbinding._cacheIndex = firstInactiveIndex;\r\n\t\tbindings[ firstInactiveIndex ] = binding;\r\n\r\n\t\tlastActiveBinding._cacheIndex = prevIndex;\r\n\t\tbindings[ prevIndex ] = lastActiveBinding;\r\n\r\n\t}\r\n\r\n\r\n\t// Memory management of Interpolants for weight and time scale\r\n\r\n\t_lendControlInterpolant() {\r\n\r\n\t\tconst interpolants = this._controlInterpolants,\r\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\r\n\r\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\r\n\r\n\t\tif ( interpolant === undefined ) {\r\n\r\n\t\t\tinterpolant = new LinearInterpolant(\r\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\r\n\t\t\t\t1, _controlInterpolantsResultBuffer );\r\n\r\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\r\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\r\n\r\n\t\t}\r\n\r\n\t\treturn interpolant;\r\n\r\n\t}\r\n\r\n\t_takeBackControlInterpolant( interpolant ) {\r\n\r\n\t\tconst interpolants = this._controlInterpolants,\r\n\t\t\tprevIndex = interpolant.__cacheIndex,\r\n\r\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\r\n\r\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\r\n\r\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\r\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\r\n\r\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\r\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\r\n\r\n\t}\r\n\r\n\t// return an action for a clip optionally using a custom root target\r\n\t// object (this method allocates a lot of dynamic memory in case a\r\n\t// previously unknown clip/root combination is specified)\r\n\tclipAction( clip, optionalRoot, blendMode ) {\r\n\r\n\t\tconst root = optionalRoot || this._root,\r\n\t\t\trootUuid = root.uuid;\r\n\r\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\r\n\r\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\r\n\r\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\r\n\t\tlet prototypeAction = null;\r\n\r\n\t\tif ( blendMode === undefined ) {\r\n\r\n\t\t\tif ( clipObject !== null ) {\r\n\r\n\t\t\t\tblendMode = clipObject.blendMode;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tblendMode = NormalAnimationBlendMode;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( actionsForClip !== undefined ) {\r\n\r\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\r\n\r\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\r\n\r\n\t\t\t\treturn existingAction;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// we know the clip, so we don't have to parse all\r\n\t\t\t// the bindings again but can just copy\r\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\r\n\r\n\t\t\t// also, take the clip from the prototype action\r\n\t\t\tif ( clipObject === null )\r\n\t\t\t\tclipObject = prototypeAction._clip;\r\n\r\n\t\t}\r\n\r\n\t\t// clip must be known when specified via string\r\n\t\tif ( clipObject === null ) return null;\r\n\r\n\t\t// allocate all resources required to run it\r\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\r\n\r\n\t\tthis._bindAction( newAction, prototypeAction );\r\n\r\n\t\t// and make the action known to the memory manager\r\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\r\n\r\n\t\treturn newAction;\r\n\r\n\t}\r\n\r\n\t// get an existing action\r\n\texistingAction( clip, optionalRoot ) {\r\n\r\n\t\tconst root = optionalRoot || this._root,\r\n\t\t\trootUuid = root.uuid,\r\n\r\n\t\t\tclipObject = typeof clip === 'string' ?\r\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\r\n\r\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\r\n\r\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\r\n\r\n\t\tif ( actionsForClip !== undefined ) {\r\n\r\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\t// deactivates all previously scheduled actions\r\n\tstopAllAction() {\r\n\r\n\t\tconst actions = this._actions,\r\n\t\t\tnActions = this._nActiveActions;\r\n\r\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\r\n\r\n\t\t\tactions[ i ].stop();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// advance the time and update apply the animation\r\n\tupdate( deltaTime ) {\r\n\r\n\t\tdeltaTime *= this.timeScale;\r\n\r\n\t\tconst actions = this._actions,\r\n\t\t\tnActions = this._nActiveActions,\r\n\r\n\t\t\ttime = this.time += deltaTime,\r\n\t\t\ttimeDirection = Math.sign( deltaTime ),\r\n\r\n\t\t\taccuIndex = this._accuIndex ^= 1;\r\n\r\n\t\t// run active actions\r\n\r\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\r\n\r\n\t\t\tconst action = actions[ i ];\r\n\r\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\r\n\r\n\t\t}\r\n\r\n\t\t// update scene graph\r\n\r\n\t\tconst bindings = this._bindings,\r\n\t\t\tnBindings = this._nActiveBindings;\r\n\r\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\r\n\r\n\t\t\tbindings[ i ].apply( accuIndex );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// Allows you to seek to a specific time in an animation.\r\n\tsetTime( timeInSeconds ) {\r\n\r\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\r\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\r\n\r\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\r\n\r\n\t\t}\r\n\r\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\r\n\r\n\t}\r\n\r\n\t// return this mixer's root target object\r\n\tgetRoot() {\r\n\r\n\t\treturn this._root;\r\n\r\n\t}\r\n\r\n\t// free all resources specific to a particular clip\r\n\tuncacheClip( clip ) {\r\n\r\n\t\tconst actions = this._actions,\r\n\t\t\tclipUuid = clip.uuid,\r\n\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\r\n\r\n\t\tif ( actionsForClip !== undefined ) {\r\n\r\n\t\t\t// note: just calling _removeInactiveAction would mess up the\r\n\t\t\t// iteration state and also require updating the state we can\r\n\t\t\t// just throw away\r\n\r\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\r\n\r\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tconst action = actionsToRemove[ i ];\r\n\r\n\t\t\t\tthis._deactivateAction( action );\r\n\r\n\t\t\t\tconst cacheIndex = action._cacheIndex,\r\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\r\n\r\n\t\t\t\taction._cacheIndex = null;\r\n\t\t\t\taction._byClipCacheIndex = null;\r\n\r\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\r\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\r\n\t\t\t\tactions.pop();\r\n\r\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdelete actionsByClip[ clipUuid ];\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// free all resources specific to a particular root target object\r\n\tuncacheRoot( root ) {\r\n\r\n\t\tconst rootUuid = root.uuid,\r\n\t\t\tactionsByClip = this._actionsByClip;\r\n\r\n\t\tfor ( const clipUuid in actionsByClip ) {\r\n\r\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\r\n\t\t\t\taction = actionByRoot[ rootUuid ];\r\n\r\n\t\t\tif ( action !== undefined ) {\r\n\r\n\t\t\t\tthis._deactivateAction( action );\r\n\t\t\t\tthis._removeInactiveAction( action );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\r\n\r\n\t\tif ( bindingByName !== undefined ) {\r\n\r\n\t\t\tfor ( const trackName in bindingByName ) {\r\n\r\n\t\t\t\tconst binding = bindingByName[ trackName ];\r\n\t\t\t\tbinding.restoreOriginalState();\r\n\t\t\t\tthis._removeInactiveBinding( binding );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// remove a targeted clip from the cache\r\n\tuncacheAction( clip, optionalRoot ) {\r\n\r\n\t\tconst action = this.existingAction( clip, optionalRoot );\r\n\r\n\t\tif ( action !== null ) {\r\n\r\n\t\t\tthis._deactivateAction( action );\r\n\t\t\tthis._removeInactiveAction( action );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass RenderTarget3D extends RenderTarget {\r\n\r\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\r\n\r\n\t\tsuper( width, height, options );\r\n\r\n\t\tthis.isRenderTarget3D = true;\r\n\r\n\t\tthis.depth = depth;\r\n\r\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\r\n\r\n\t\tthis.texture.isRenderTargetTexture = true;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass RenderTargetArray extends RenderTarget {\r\n\r\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\r\n\r\n\t\tsuper( width, height, options );\r\n\r\n\t\tthis.isRenderTargetArray = true;\r\n\r\n\t\tthis.depth = depth;\r\n\r\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\r\n\r\n\t\tthis.texture.isRenderTargetTexture = true;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Uniform {\r\n\r\n\tconstructor( value ) {\r\n\r\n\t\tthis.value = value;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\r\n\r\n\t}\r\n\r\n}\r\n\r\nlet _id = 0;\r\n\r\nclass UniformsGroup extends EventDispatcher {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.isUniformsGroup = true;\r\n\r\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\r\n\r\n\t\tthis.name = '';\r\n\r\n\t\tthis.usage = StaticDrawUsage;\r\n\t\tthis.uniforms = [];\r\n\r\n\t}\r\n\r\n\tadd( uniform ) {\r\n\r\n\t\tthis.uniforms.push( uniform );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tremove( uniform ) {\r\n\r\n\t\tconst index = this.uniforms.indexOf( uniform );\r\n\r\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetName( name ) {\r\n\r\n\t\tthis.name = name;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetUsage( value ) {\r\n\r\n\t\tthis.usage = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tthis.name = source.name;\r\n\t\tthis.usage = source.usage;\r\n\r\n\t\tconst uniformsSource = source.uniforms;\r\n\r\n\t\tthis.uniforms.length = 0;\r\n\r\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst uniforms = Array.isArray( uniformsSource[ i ] ) ? uniformsSource[ i ] : [ uniformsSource[ i ] ];\r\n\r\n\t\t\tfor ( let j = 0; j < uniforms.length; j ++ ) {\r\n\r\n\t\t\t\tthis.uniforms.push( uniforms[ j ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\r\n\r\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\r\n\r\n\t\tsuper( array, stride );\r\n\r\n\t\tthis.isInstancedInterleavedBuffer = true;\r\n\r\n\t\tthis.meshPerAttribute = meshPerAttribute;\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source );\r\n\r\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone( data ) {\r\n\r\n\t\tconst ib = super.clone( data );\r\n\r\n\t\tib.meshPerAttribute = this.meshPerAttribute;\r\n\r\n\t\treturn ib;\r\n\r\n\t}\r\n\r\n\ttoJSON( data ) {\r\n\r\n\t\tconst json = super.toJSON( data );\r\n\r\n\t\tjson.isInstancedInterleavedBuffer = true;\r\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\r\n\r\n\t\treturn json;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass GLBufferAttribute {\r\n\r\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\r\n\r\n\t\tthis.isGLBufferAttribute = true;\r\n\r\n\t\tthis.name = '';\r\n\r\n\t\tthis.buffer = buffer;\r\n\t\tthis.type = type;\r\n\t\tthis.itemSize = itemSize;\r\n\t\tthis.elementSize = elementSize;\r\n\t\tthis.count = count;\r\n\r\n\t\tthis.version = 0;\r\n\r\n\t}\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t}\r\n\r\n\tsetBuffer( buffer ) {\r\n\r\n\t\tthis.buffer = buffer;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetType( type, elementSize ) {\r\n\r\n\t\tthis.type = type;\r\n\t\tthis.elementSize = elementSize;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetItemSize( itemSize ) {\r\n\r\n\t\tthis.itemSize = itemSize;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetCount( count ) {\r\n\r\n\t\tthis.count = count;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _matrix = /*@__PURE__*/ new Matrix4();\r\n\r\nclass Raycaster {\r\n\r\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\r\n\r\n\t\tthis.ray = new Ray( origin, direction );\r\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\tthis.near = near;\r\n\t\tthis.far = far;\r\n\t\tthis.camera = null;\r\n\t\tthis.layers = new Layers();\r\n\r\n\t\tthis.params = {\r\n\t\t\tMesh: {},\r\n\t\t\tLine: { threshold: 1 },\r\n\t\t\tLOD: {},\r\n\t\t\tPoints: { threshold: 1 },\r\n\t\t\tSprite: {}\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tset( origin, direction ) {\r\n\r\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\tthis.ray.set( origin, direction );\r\n\r\n\t}\r\n\r\n\tsetFromCamera( coords, camera ) {\r\n\r\n\t\tif ( camera.isPerspectiveCamera ) {\r\n\r\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\t\t\tthis.camera = camera;\r\n\r\n\t\t} else if ( camera.isOrthographicCamera ) {\r\n\r\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\r\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\t\t\tthis.camera = camera;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetFromXRController( controller ) {\r\n\r\n\t\t_matrix.identity().extractRotation( controller.matrixWorld );\r\n\r\n\t\tthis.ray.origin.setFromMatrixPosition( controller.matrixWorld );\r\n\t\tthis.ray.direction.set( 0, 0, - 1 ).applyMatrix4( _matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tintersectObject( object, recursive = true, intersects = [] ) {\r\n\r\n\t\tintersect( object, this, intersects, recursive );\r\n\r\n\t\tintersects.sort( ascSort );\r\n\r\n\t\treturn intersects;\r\n\r\n\t}\r\n\r\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\r\n\r\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\r\n\r\n\t\t\tintersect( objects[ i ], this, intersects, recursive );\r\n\r\n\t\t}\r\n\r\n\t\tintersects.sort( ascSort );\r\n\r\n\t\treturn intersects;\r\n\r\n\t}\r\n\r\n}\r\n\r\nfunction ascSort( a, b ) {\r\n\r\n\treturn a.distance - b.distance;\r\n\r\n}\r\n\r\nfunction intersect( object, raycaster, intersects, recursive ) {\r\n\r\n\tlet propagate = true;\r\n\r\n\tif ( object.layers.test( raycaster.layers ) ) {\r\n\r\n\t\tconst result = object.raycast( raycaster, intersects );\r\n\r\n\t\tif ( result === false ) propagate = false;\r\n\r\n\t}\r\n\r\n\tif ( propagate === true && recursive === true ) {\r\n\r\n\t\tconst children = object.children;\r\n\r\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tintersect( children[ i ], raycaster, intersects, true );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\r\n *\r\n * phi (the polar angle) is measured from the positive y-axis. The positive y-axis is up.\r\n * theta (the azimuthal angle) is measured from the positive z-axis.\r\n */\r\nclass Spherical {\r\n\r\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\r\n\r\n\t\tthis.radius = radius;\r\n\t\tthis.phi = phi; // polar angle\r\n\t\tthis.theta = theta; // azimuthal angle\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tset( radius, phi, theta ) {\r\n\r\n\t\tthis.radius = radius;\r\n\t\tthis.phi = phi;\r\n\t\tthis.theta = theta;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( other ) {\r\n\r\n\t\tthis.radius = other.radius;\r\n\t\tthis.phi = other.phi;\r\n\t\tthis.theta = other.theta;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\t// restrict phi to be between EPS and PI-EPS\r\n\tmakeSafe() {\r\n\r\n\t\tconst EPS = 0.000001;\r\n\t\tthis.phi = clamp( this.phi, EPS, Math.PI - EPS );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromVector3( v ) {\r\n\r\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\r\n\r\n\t}\r\n\r\n\tsetFromCartesianCoords( x, y, z ) {\r\n\r\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\r\n\r\n\t\tif ( this.radius === 0 ) {\r\n\r\n\t\t\tthis.theta = 0;\r\n\t\t\tthis.phi = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.theta = Math.atan2( x, z );\r\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\r\n */\r\n\r\nclass Cylindrical {\r\n\r\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\r\n\r\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\r\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\r\n\t\tthis.y = y; // height above the x-z plane\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tset( radius, theta, y ) {\r\n\r\n\t\tthis.radius = radius;\r\n\t\tthis.theta = theta;\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( other ) {\r\n\r\n\t\tthis.radius = other.radius;\r\n\t\tthis.theta = other.theta;\r\n\t\tthis.y = other.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromVector3( v ) {\r\n\r\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\r\n\r\n\t}\r\n\r\n\tsetFromCartesianCoords( x, y, z ) {\r\n\r\n\t\tthis.radius = Math.sqrt( x * x + z * z );\r\n\t\tthis.theta = Math.atan2( x, z );\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Matrix2 {\r\n\r\n\tconstructor( n11, n12, n21, n22 ) {\r\n\r\n\t\tMatrix2.prototype.isMatrix2 = true;\r\n\r\n\t\tthis.elements = [\r\n\t\t\t1, 0,\r\n\t\t\t0, 1,\r\n\t\t];\r\n\r\n\t\tif ( n11 !== undefined ) {\r\n\r\n\t\t\tthis.set( n11, n12, n21, n22 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tidentity() {\r\n\r\n\t\tthis.set(\r\n\t\t\t1, 0,\r\n\t\t\t0, 1,\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tfromArray( array, offset = 0 ) {\r\n\r\n\t\tfor ( let i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\tthis.elements[ i ] = array[ i + offset ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tset( n11, n12, n21, n22 ) {\r\n\r\n\t\tconst te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 2 ] = n12;\r\n\t\tte[ 1 ] = n21; te[ 3 ] = n22;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _vector$4 = /*@__PURE__*/ new Vector2();\r\n\r\nclass Box2 {\r\n\r\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\r\n\r\n\t\tthis.isBox2 = true;\r\n\r\n\t\tthis.min = min;\r\n\t\tthis.max = max;\r\n\r\n\t}\r\n\r\n\tset( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromPoints( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsetFromCenterAndSize( center, size ) {\r\n\r\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\r\n\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n\tcopy( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tmakeEmpty() {\r\n\r\n\t\tthis.min.x = this.min.y = + Infinity;\r\n\t\tthis.max.x = this.max.y = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tisEmpty() {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\r\n\t}\r\n\r\n\tgetCenter( target ) {\r\n\r\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t}\r\n\r\n\tgetSize( target ) {\r\n\r\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\r\n\r\n\t}\r\n\r\n\texpandByPoint( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\texpandByVector( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\texpandByScalar( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcontainsPoint( point ) {\r\n\r\n\t\treturn point.x >= this.min.x && point.x <= this.max.x &&\r\n\t\t\tpoint.y >= this.min.y && point.y <= this.max.y;\r\n\r\n\t}\r\n\r\n\tcontainsBox( box ) {\r\n\r\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\r\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\r\n\r\n\t}\r\n\r\n\tgetParameter( point, target ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\treturn target.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tintersectsBox( box ) {\r\n\r\n\t\t// using 4 splitting planes to rule out intersections\r\n\r\n\t\treturn box.max.x >= this.min.x && box.min.x <= this.max.x &&\r\n\t\t\tbox.max.y >= this.min.y && box.min.y <= this.max.y;\r\n\r\n\t}\r\n\r\n\tclampPoint( point, target ) {\r\n\r\n\t\treturn target.copy( point ).clamp( this.min, this.max );\r\n\r\n\t}\r\n\r\n\tdistanceToPoint( point ) {\r\n\r\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\r\n\r\n\t}\r\n\r\n\tintersect( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\tif ( this.isEmpty() ) this.makeEmpty();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tunion( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttranslate( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _startP = /*@__PURE__*/ new Vector3();\r\nconst _startEnd = /*@__PURE__*/ new Vector3();\r\n\r\nclass Line3 {\r\n\r\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\r\n\r\n\t\tthis.start = start;\r\n\t\tthis.end = end;\r\n\r\n\t}\r\n\r\n\tset( start, end ) {\r\n\r\n\t\tthis.start.copy( start );\r\n\t\tthis.end.copy( end );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( line ) {\r\n\r\n\t\tthis.start.copy( line.start );\r\n\t\tthis.end.copy( line.end );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tgetCenter( target ) {\r\n\r\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\r\n\t}\r\n\r\n\tdelta( target ) {\r\n\r\n\t\treturn target.subVectors( this.end, this.start );\r\n\r\n\t}\r\n\r\n\tdistanceSq() {\r\n\r\n\t\treturn this.start.distanceToSquared( this.end );\r\n\r\n\t}\r\n\r\n\tdistance() {\r\n\r\n\t\treturn this.start.distanceTo( this.end );\r\n\r\n\t}\r\n\r\n\tat( t, target ) {\r\n\r\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\r\n\r\n\t}\r\n\r\n\tclosestPointToPointParameter( point, clampToLine ) {\r\n\r\n\t\t_startP.subVectors( point, this.start );\r\n\t\t_startEnd.subVectors( this.end, this.start );\r\n\r\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\r\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\r\n\r\n\t\tlet t = startEnd_startP / startEnd2;\r\n\r\n\t\tif ( clampToLine ) {\r\n\r\n\t\t\tt = clamp( t, 0, 1 );\r\n\r\n\t\t}\r\n\r\n\t\treturn t;\r\n\r\n\t}\r\n\r\n\tclosestPointToPoint( point, clampToLine, target ) {\r\n\r\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\r\n\r\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\r\n\r\n\t}\r\n\r\n\tapplyMatrix4( matrix ) {\r\n\r\n\t\tthis.start.applyMatrix4( matrix );\r\n\t\tthis.end.applyMatrix4( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tequals( line ) {\r\n\r\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\r\n\t}\r\n\r\n\tclone() {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _vector$3 = /*@__PURE__*/ new Vector3();\r\n\r\nclass SpotLightHelper extends Object3D {\r\n\r\n\tconstructor( light, color ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.light = light;\r\n\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.color = color;\r\n\r\n\t\tthis.type = 'SpotLightHelper';\r\n\r\n\t\tconst geometry = new BufferGeometry();\r\n\r\n\t\tconst positions = [\r\n\t\t\t0, 0, 0, \t0, 0, 1,\r\n\t\t\t0, 0, 0, \t1, 0, 1,\r\n\t\t\t0, 0, 0,\t- 1, 0, 1,\r\n\t\t\t0, 0, 0, \t0, 1, 1,\r\n\t\t\t0, 0, 0, \t0, - 1, 1\r\n\t\t];\r\n\r\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\r\n\r\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\r\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\r\n\r\n\t\t\tpositions.push(\r\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\r\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\r\n\r\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\r\n\r\n\t\tthis.cone = new LineSegments( geometry, material );\r\n\t\tthis.add( this.cone );\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.cone.geometry.dispose();\r\n\t\tthis.cone.material.dispose();\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tthis.light.updateWorldMatrix( true, false );\r\n\t\tthis.light.target.updateWorldMatrix( true, false );\r\n\r\n\t\t// update the local matrix based on the parent and light target transforms\r\n\t\tif ( this.parent ) {\r\n\r\n\t\t\tthis.parent.updateWorldMatrix( true );\r\n\r\n\t\t\tthis.matrix\r\n\t\t\t\t.copy( this.parent.matrixWorld )\r\n\t\t\t\t.invert()\r\n\t\t\t\t.multiply( this.light.matrixWorld );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.matrix.copy( this.light.matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\tthis.matrixWorld.copy( this.light.matrixWorld );\r\n\r\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\r\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\r\n\r\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\r\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\r\n\t\tthis.cone.lookAt( _vector$3 );\r\n\r\n\t\tif ( this.color !== undefined ) {\r\n\r\n\t\t\tthis.cone.material.color.set( this.color );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.cone.material.color.copy( this.light.color );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _vector$2 = /*@__PURE__*/ new Vector3();\r\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\r\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\r\n\r\n\r\nclass SkeletonHelper extends LineSegments {\r\n\r\n\tconstructor( object ) {\r\n\r\n\t\tconst bones = getBoneList( object );\r\n\r\n\t\tconst geometry = new BufferGeometry();\r\n\r\n\t\tconst vertices = [];\r\n\t\tconst colors = [];\r\n\r\n\t\tconst color1 = new Color( 0, 0, 1 );\r\n\t\tconst color2 = new Color( 0, 1, 0 );\r\n\r\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\r\n\r\n\t\t\tconst bone = bones[ i ];\r\n\r\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\r\n\r\n\t\t\t\tvertices.push( 0, 0, 0 );\r\n\t\t\t\tvertices.push( 0, 0, 0 );\r\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\r\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n\r\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\r\n\r\n\t\tsuper( geometry, material );\r\n\r\n\t\tthis.isSkeletonHelper = true;\r\n\r\n\t\tthis.type = 'SkeletonHelper';\r\n\r\n\t\tthis.root = object;\r\n\t\tthis.bones = bones;\r\n\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t}\r\n\r\n\tupdateMatrixWorld( force ) {\r\n\r\n\t\tconst bones = this.bones;\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst position = geometry.getAttribute( 'position' );\r\n\r\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\r\n\r\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\r\n\r\n\t\t\tconst bone = bones[ i ];\r\n\r\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\r\n\r\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\r\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\r\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\r\n\r\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\r\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\r\n\r\n\t\t\t\tj += 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\r\n\r\n\t\tsuper.updateMatrixWorld( force );\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\nfunction getBoneList( object ) {\r\n\r\n\tconst boneList = [];\r\n\r\n\tif ( object.isBone === true ) {\r\n\r\n\t\tboneList.push( object );\r\n\r\n\t}\r\n\r\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\r\n\r\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\r\n\r\n\t}\r\n\r\n\treturn boneList;\r\n\r\n}\r\n\r\nclass PointLightHelper extends Mesh {\r\n\r\n\tconstructor( light, sphereSize, color ) {\r\n\r\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\r\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\r\n\r\n\t\tsuper( geometry, material );\r\n\r\n\t\tthis.light = light;\r\n\r\n\t\tthis.color = color;\r\n\r\n\t\tthis.type = 'PointLightHelper';\r\n\r\n\t\tthis.matrix = this.light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.update();\r\n\r\n\r\n\t\t/*\r\n\t// TODO: delete this comment?\r\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\r\n\tconst d = light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\r\n\tthis.add( this.lightDistance );\r\n\t*/\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tthis.light.updateWorldMatrix( true, false );\r\n\r\n\t\tif ( this.color !== undefined ) {\r\n\r\n\t\t\tthis.material.color.set( this.color );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.material.color.copy( this.light.color );\r\n\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\tconst d = this.light.distance;\r\n\r\n\t\tif ( d === 0.0 ) {\r\n\r\n\t\t\tthis.lightDistance.visible = false;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.lightDistance.visible = true;\r\n\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t\t}\r\n\t\t*/\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _vector$1 = /*@__PURE__*/ new Vector3();\r\nconst _color1 = /*@__PURE__*/ new Color();\r\nconst _color2 = /*@__PURE__*/ new Color();\r\n\r\nclass HemisphereLightHelper extends Object3D {\r\n\r\n\tconstructor( light, size, color ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.light = light;\r\n\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.color = color;\r\n\r\n\t\tthis.type = 'HemisphereLightHelper';\r\n\r\n\t\tconst geometry = new OctahedronGeometry( size );\r\n\t\tgeometry.rotateY( Math.PI * 0.5 );\r\n\r\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\r\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\r\n\r\n\t\tconst position = geometry.getAttribute( 'position' );\r\n\t\tconst colors = new Float32Array( position.count * 3 );\r\n\r\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\r\n\r\n\t\tthis.add( new Mesh( geometry, this.material ) );\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.children[ 0 ].geometry.dispose();\r\n\t\tthis.children[ 0 ].material.dispose();\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tconst mesh = this.children[ 0 ];\r\n\r\n\t\tif ( this.color !== undefined ) {\r\n\r\n\t\t\tthis.material.color.set( this.color );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\r\n\r\n\t\t\t_color1.copy( this.light.color );\r\n\t\t\t_color2.copy( this.light.groundColor );\r\n\r\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\r\n\r\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcolors.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tthis.light.updateWorldMatrix( true, false );\r\n\r\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass GridHelper extends LineSegments {\r\n\r\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\r\n\r\n\t\tcolor1 = new Color( color1 );\r\n\t\tcolor2 = new Color( color2 );\r\n\r\n\t\tconst center = divisions / 2;\r\n\t\tconst step = size / divisions;\r\n\t\tconst halfSize = size / 2;\r\n\r\n\t\tconst vertices = [], colors = [];\r\n\r\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\r\n\r\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\r\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\r\n\r\n\t\t\tconst color = i === center ? color1 : color2;\r\n\r\n\t\t\tcolor.toArray( colors, j ); j += 3;\r\n\t\t\tcolor.toArray( colors, j ); j += 3;\r\n\t\t\tcolor.toArray( colors, j ); j += 3;\r\n\t\t\tcolor.toArray( colors, j ); j += 3;\r\n\r\n\t\t}\r\n\r\n\t\tconst geometry = new BufferGeometry();\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n\r\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\r\n\r\n\t\tsuper( geometry, material );\r\n\r\n\t\tthis.type = 'GridHelper';\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass PolarGridHelper extends LineSegments {\r\n\r\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\r\n\r\n\t\tcolor1 = new Color( color1 );\r\n\t\tcolor2 = new Color( color2 );\r\n\r\n\t\tconst vertices = [];\r\n\t\tconst colors = [];\r\n\r\n\t\t// create the sectors\r\n\r\n\t\tif ( sectors > 1 ) {\r\n\r\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\r\n\r\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\r\n\r\n\t\t\t\tconst x = Math.sin( v ) * radius;\r\n\t\t\t\tconst z = Math.cos( v ) * radius;\r\n\r\n\t\t\t\tvertices.push( 0, 0, 0 );\r\n\t\t\t\tvertices.push( x, 0, z );\r\n\r\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\r\n\r\n\t\t\t\tcolors.push( color.r, color.g, color.b );\r\n\t\t\t\tcolors.push( color.r, color.g, color.b );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// create the rings\r\n\r\n\t\tfor ( let i = 0; i < rings; i ++ ) {\r\n\r\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\r\n\r\n\t\t\tconst r = radius - ( radius / rings * i );\r\n\r\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\r\n\r\n\t\t\t\t// first vertex\r\n\r\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\r\n\r\n\t\t\t\tlet x = Math.sin( v ) * r;\r\n\t\t\t\tlet z = Math.cos( v ) * r;\r\n\r\n\t\t\t\tvertices.push( x, 0, z );\r\n\t\t\t\tcolors.push( color.r, color.g, color.b );\r\n\r\n\t\t\t\t// second vertex\r\n\r\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\r\n\r\n\t\t\t\tx = Math.sin( v ) * r;\r\n\t\t\t\tz = Math.cos( v ) * r;\r\n\r\n\t\t\t\tvertices.push( x, 0, z );\r\n\t\t\t\tcolors.push( color.r, color.g, color.b );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst geometry = new BufferGeometry();\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n\r\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\r\n\r\n\t\tsuper( geometry, material );\r\n\r\n\t\tthis.type = 'PolarGridHelper';\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _v1 = /*@__PURE__*/ new Vector3();\r\nconst _v2 = /*@__PURE__*/ new Vector3();\r\nconst _v3 = /*@__PURE__*/ new Vector3();\r\n\r\nclass DirectionalLightHelper extends Object3D {\r\n\r\n\tconstructor( light, size, color ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.light = light;\r\n\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.color = color;\r\n\r\n\t\tthis.type = 'DirectionalLightHelper';\r\n\r\n\t\tif ( size === undefined ) size = 1;\r\n\r\n\t\tlet geometry = new BufferGeometry();\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\r\n\t\t\t- size, size, 0,\r\n\t\t\tsize, size, 0,\r\n\t\t\tsize, - size, 0,\r\n\t\t\t- size, - size, 0,\r\n\t\t\t- size, size, 0\r\n\t\t], 3 ) );\r\n\r\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\r\n\r\n\t\tthis.lightPlane = new Line( geometry, material );\r\n\t\tthis.add( this.lightPlane );\r\n\r\n\t\tgeometry = new BufferGeometry();\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\r\n\r\n\t\tthis.targetLine = new Line( geometry, material );\r\n\t\tthis.add( this.targetLine );\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.lightPlane.geometry.dispose();\r\n\t\tthis.lightPlane.material.dispose();\r\n\t\tthis.targetLine.geometry.dispose();\r\n\t\tthis.targetLine.material.dispose();\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tthis.light.updateWorldMatrix( true, false );\r\n\t\tthis.light.target.updateWorldMatrix( true, false );\r\n\r\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\t_v3.subVectors( _v2, _v1 );\r\n\r\n\t\tthis.lightPlane.lookAt( _v2 );\r\n\r\n\t\tif ( this.color !== undefined ) {\r\n\r\n\t\t\tthis.lightPlane.material.color.set( this.color );\r\n\t\t\tthis.targetLine.material.color.set( this.color );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\r\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\r\n\r\n\t\t}\r\n\r\n\t\tthis.targetLine.lookAt( _v2 );\r\n\t\tthis.targetLine.scale.z = _v3.length();\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _vector = /*@__PURE__*/ new Vector3();\r\nconst _camera = /*@__PURE__*/ new Camera();\r\n\r\n/**\r\n *\t- shows frustum, line of sight and up of the camera\r\n *\t- suitable for fast updates\r\n * \t- based on frustum visualization in lightgl.js shadowmap example\r\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\r\n */\r\n\r\nclass CameraHelper extends LineSegments {\r\n\r\n\tconstructor( camera ) {\r\n\r\n\t\tconst geometry = new BufferGeometry();\r\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\r\n\r\n\t\tconst vertices = [];\r\n\t\tconst colors = [];\r\n\r\n\t\tconst pointMap = {};\r\n\r\n\t\t// near\r\n\r\n\t\taddLine( 'n1', 'n2' );\r\n\t\taddLine( 'n2', 'n4' );\r\n\t\taddLine( 'n4', 'n3' );\r\n\t\taddLine( 'n3', 'n1' );\r\n\r\n\t\t// far\r\n\r\n\t\taddLine( 'f1', 'f2' );\r\n\t\taddLine( 'f2', 'f4' );\r\n\t\taddLine( 'f4', 'f3' );\r\n\t\taddLine( 'f3', 'f1' );\r\n\r\n\t\t// sides\r\n\r\n\t\taddLine( 'n1', 'f1' );\r\n\t\taddLine( 'n2', 'f2' );\r\n\t\taddLine( 'n3', 'f3' );\r\n\t\taddLine( 'n4', 'f4' );\r\n\r\n\t\t// cone\r\n\r\n\t\taddLine( 'p', 'n1' );\r\n\t\taddLine( 'p', 'n2' );\r\n\t\taddLine( 'p', 'n3' );\r\n\t\taddLine( 'p', 'n4' );\r\n\r\n\t\t// up\r\n\r\n\t\taddLine( 'u1', 'u2' );\r\n\t\taddLine( 'u2', 'u3' );\r\n\t\taddLine( 'u3', 'u1' );\r\n\r\n\t\t// target\r\n\r\n\t\taddLine( 'c', 't' );\r\n\t\taddLine( 'p', 'c' );\r\n\r\n\t\t// cross\r\n\r\n\t\taddLine( 'cn1', 'cn2' );\r\n\t\taddLine( 'cn3', 'cn4' );\r\n\r\n\t\taddLine( 'cf1', 'cf2' );\r\n\t\taddLine( 'cf3', 'cf4' );\r\n\r\n\t\tfunction addLine( a, b ) {\r\n\r\n\t\t\taddPoint( a );\r\n\t\t\taddPoint( b );\r\n\r\n\t\t}\r\n\r\n\t\tfunction addPoint( id ) {\r\n\r\n\t\t\tvertices.push( 0, 0, 0 );\r\n\t\t\tcolors.push( 0, 0, 0 );\r\n\r\n\t\t\tif ( pointMap[ id ] === undefined ) {\r\n\r\n\t\t\t\tpointMap[ id ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n\r\n\t\tsuper( geometry, material );\r\n\r\n\t\tthis.type = 'CameraHelper';\r\n\r\n\t\tthis.camera = camera;\r\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\r\n\r\n\t\tthis.matrix = camera.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.pointMap = pointMap;\r\n\r\n\t\tthis.update();\r\n\r\n\t\t// colors\r\n\r\n\t\tconst colorFrustum = new Color( 0xffaa00 );\r\n\t\tconst colorCone = new Color( 0xff0000 );\r\n\t\tconst colorUp = new Color( 0x00aaff );\r\n\t\tconst colorTarget = new Color( 0xffffff );\r\n\t\tconst colorCross = new Color( 0x333333 );\r\n\r\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\r\n\r\n\t}\r\n\r\n\tsetColors( frustum, cone, up, target, cross ) {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\r\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\r\n\r\n\t\t// near\r\n\r\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\r\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\r\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\r\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\r\n\r\n\t\t// far\r\n\r\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\r\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\r\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\r\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\r\n\r\n\t\t// sides\r\n\r\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\r\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\r\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\r\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\r\n\r\n\t\t// cone\r\n\r\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\r\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\r\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\r\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\r\n\r\n\t\t// up\r\n\r\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\r\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\r\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\r\n\r\n\t\t// target\r\n\r\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\r\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\r\n\r\n\t\t// cross\r\n\r\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\r\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\r\n\r\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\r\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\r\n\r\n\t\tcolorAttribute.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\tupdate() {\r\n\r\n\t\tconst geometry = this.geometry;\r\n\t\tconst pointMap = this.pointMap;\r\n\r\n\t\tconst w = 1, h = 1;\r\n\r\n\t\t// we need just camera projection matrix inverse\r\n\t\t// world matrix must be identity\r\n\r\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\r\n\r\n\t\t// Adjust z values based on coordinate system\r\n\t\tconst nearZ = this.camera.coordinateSystem === WebGLCoordinateSystem ? - 1 : 0;\r\n\r\n\t\t// center / target\r\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, nearZ );\r\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\r\n\r\n\t\t// near\r\n\r\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, nearZ );\r\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, nearZ );\r\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, nearZ );\r\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, nearZ );\r\n\r\n\t\t// far\r\n\r\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\r\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\r\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\r\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\r\n\r\n\t\t// up\r\n\r\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, nearZ );\r\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, nearZ );\r\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, nearZ );\r\n\r\n\t\t// cross\r\n\r\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\r\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\r\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\r\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\r\n\r\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, nearZ );\r\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, nearZ );\r\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, nearZ );\r\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, nearZ );\r\n\r\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\r\n\r\n\t_vector.set( x, y, z ).unproject( camera );\r\n\r\n\tconst points = pointMap[ point ];\r\n\r\n\tif ( points !== undefined ) {\r\n\r\n\t\tconst position = geometry.getAttribute( 'position' );\r\n\r\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _box = /*@__PURE__*/ new Box3();\r\n\r\nclass BoxHelper extends LineSegments {\r\n\r\n\tconstructor( object, color = 0xffff00 ) {\r\n\r\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\t\tconst positions = new Float32Array( 8 * 3 );\r\n\r\n\t\tconst geometry = new BufferGeometry();\r\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\r\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\r\n\r\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\r\n\r\n\t\tthis.object = object;\r\n\t\tthis.type = 'BoxHelper';\r\n\r\n\t\tthis.matrixAutoUpdate = false;\r\n\r\n\t\tthis.update();\r\n\r\n\t}\r\n\r\n\tupdate( object ) {\r\n\r\n\t\tif ( object !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.object !== undefined ) {\r\n\r\n\t\t\t_box.setFromObject( this.object );\r\n\r\n\t\t}\r\n\r\n\t\tif ( _box.isEmpty() ) return;\r\n\r\n\t\tconst min = _box.min;\r\n\t\tconst max = _box.max;\r\n\r\n\t\t/*\r\n\t\t\t5____4\r\n\t\t1/___0/|\r\n\t\t| 6__|_7\r\n\t\t2/___3/\r\n\r\n\t\t0: max.x, max.y, max.z\r\n\t\t1: min.x, max.y, max.z\r\n\t\t2: min.x, min.y, max.z\r\n\t\t3: max.x, min.y, max.z\r\n\t\t4: max.x, max.y, min.z\r\n\t\t5: min.x, max.y, min.z\r\n\t\t6: min.x, min.y, min.z\r\n\t\t7: max.x, min.y, min.z\r\n\t\t*/\r\n\r\n\t\tconst position = this.geometry.attributes.position;\r\n\t\tconst array = position.array;\r\n\r\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\r\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\r\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\r\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\tthis.geometry.computeBoundingSphere();\r\n\r\n\t}\r\n\r\n\tsetFromObject( object ) {\r\n\r\n\t\tthis.object = object;\r\n\t\tthis.update();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tcopy( source, recursive ) {\r\n\r\n\t\tsuper.copy( source, recursive );\r\n\r\n\t\tthis.object = source.object;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Box3Helper extends LineSegments {\r\n\r\n\tconstructor( box, color = 0xffff00 ) {\r\n\r\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\r\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\r\n\r\n\t\tconst geometry = new BufferGeometry();\r\n\r\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\r\n\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\r\n\r\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\r\n\r\n\t\tthis.box = box;\r\n\r\n\t\tthis.type = 'Box3Helper';\r\n\r\n\t\tthis.geometry.computeBoundingSphere();\r\n\r\n\t}\r\n\r\n\tupdateMatrixWorld( force ) {\r\n\r\n\t\tconst box = this.box;\r\n\r\n\t\tif ( box.isEmpty() ) return;\r\n\r\n\t\tbox.getCenter( this.position );\r\n\r\n\t\tbox.getSize( this.scale );\r\n\r\n\t\tthis.scale.multiplyScalar( 0.5 );\r\n\r\n\t\tsuper.updateMatrixWorld( force );\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass PlaneHelper extends Line {\r\n\r\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\r\n\r\n\t\tconst color = hex;\r\n\r\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\r\n\r\n\t\tconst geometry = new BufferGeometry();\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\r\n\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\r\n\r\n\t\tthis.type = 'PlaneHelper';\r\n\r\n\t\tthis.plane = plane;\r\n\r\n\t\tthis.size = size;\r\n\r\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\r\n\r\n\t\tconst geometry2 = new BufferGeometry();\r\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\r\n\t\tgeometry2.computeBoundingSphere();\r\n\r\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\r\n\r\n\t}\r\n\r\n\tupdateMatrixWorld( force ) {\r\n\r\n\t\tthis.position.set( 0, 0, 0 );\r\n\r\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\r\n\r\n\t\tthis.lookAt( this.plane.normal );\r\n\r\n\t\tthis.translateZ( - this.plane.constant );\r\n\r\n\t\tsuper.updateMatrixWorld( force );\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\t\tthis.children[ 0 ].geometry.dispose();\r\n\t\tthis.children[ 0 ].material.dispose();\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst _axis = /*@__PURE__*/ new Vector3();\r\nlet _lineGeometry, _coneGeometry;\r\n\r\nclass ArrowHelper extends Object3D {\r\n\r\n\t// dir is assumed to be normalized\r\n\r\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.type = 'ArrowHelper';\r\n\r\n\t\tif ( _lineGeometry === undefined ) {\r\n\r\n\t\t\t_lineGeometry = new BufferGeometry();\r\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\r\n\r\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\r\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tthis.position.copy( origin );\r\n\r\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\r\n\t\tthis.line.matrixAutoUpdate = false;\r\n\t\tthis.add( this.line );\r\n\r\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\r\n\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\tthis.add( this.cone );\r\n\r\n\t\tthis.setDirection( dir );\r\n\t\tthis.setLength( length, headLength, headWidth );\r\n\r\n\t}\r\n\r\n\tsetDirection( dir ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tif ( dir.y > 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\r\n\t\t} else if ( dir.y < - 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\r\n\r\n\t\t\tconst radians = Math.acos( dir.y );\r\n\r\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\r\n\r\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\r\n\t\tthis.line.updateMatrix();\r\n\r\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\t\tthis.cone.position.y = length;\r\n\t\tthis.cone.updateMatrix();\r\n\r\n\t}\r\n\r\n\tsetColor( color ) {\r\n\r\n\t\tthis.line.material.color.set( color );\r\n\t\tthis.cone.material.color.set( color );\r\n\r\n\t}\r\n\r\n\tcopy( source ) {\r\n\r\n\t\tsuper.copy( source, false );\r\n\r\n\t\tthis.line.copy( source.line );\r\n\t\tthis.cone.copy( source.cone );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.line.geometry.dispose();\r\n\t\tthis.line.material.dispose();\r\n\t\tthis.cone.geometry.dispose();\r\n\t\tthis.cone.material.dispose();\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass AxesHelper extends LineSegments {\r\n\r\n\tconstructor( size = 1 ) {\r\n\r\n\t\tconst vertices = [\r\n\t\t\t0, 0, 0,\tsize, 0, 0,\r\n\t\t\t0, 0, 0,\t0, size, 0,\r\n\t\t\t0, 0, 0,\t0, 0, size\r\n\t\t];\r\n\r\n\t\tconst colors = [\r\n\t\t\t1, 0, 0,\t1, 0.6, 0,\r\n\t\t\t0, 1, 0,\t0.6, 1, 0,\r\n\t\t\t0, 0, 1,\t0, 0.6, 1\r\n\t\t];\r\n\r\n\t\tconst geometry = new BufferGeometry();\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n\r\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\r\n\r\n\t\tsuper( geometry, material );\r\n\r\n\t\tthis.type = 'AxesHelper';\r\n\r\n\t}\r\n\r\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\r\n\r\n\t\tconst color = new Color();\r\n\t\tconst array = this.geometry.attributes.color.array;\r\n\r\n\t\tcolor.set( xAxisColor );\r\n\t\tcolor.toArray( array, 0 );\r\n\t\tcolor.toArray( array, 3 );\r\n\r\n\t\tcolor.set( yAxisColor );\r\n\t\tcolor.toArray( array, 6 );\r\n\t\tcolor.toArray( array, 9 );\r\n\r\n\t\tcolor.set( zAxisColor );\r\n\t\tcolor.toArray( array, 12 );\r\n\t\tcolor.toArray( array, 15 );\r\n\r\n\t\tthis.geometry.attributes.color.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass ShapePath {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.type = 'ShapePath';\r\n\r\n\t\tthis.color = new Color();\r\n\r\n\t\tthis.subPaths = [];\r\n\t\tthis.currentPath = null;\r\n\r\n\t}\r\n\r\n\tmoveTo( x, y ) {\r\n\r\n\t\tthis.currentPath = new Path();\r\n\t\tthis.subPaths.push( this.currentPath );\r\n\t\tthis.currentPath.moveTo( x, y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tlineTo( x, y ) {\r\n\r\n\t\tthis.currentPath.lineTo( x, y );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\r\n\r\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\r\n\r\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tsplineThru( pts ) {\r\n\r\n\t\tthis.currentPath.splineThru( pts );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\ttoShapes( isCCW ) {\r\n\r\n\t\tfunction toShapesNoHoles( inSubpaths ) {\r\n\r\n\t\t\tconst shapes = [];\r\n\r\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\r\n\r\n\t\t\t\tconst tmpShape = new Shape();\r\n\t\t\t\ttmpShape.curves = tmpPath.curves;\r\n\r\n\t\t\t\tshapes.push( tmpShape );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn shapes;\r\n\r\n\t\t}\r\n\r\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\r\n\t\t\tconst polyLen = inPolygon.length;\r\n\r\n\t\t\t// inPt on polygon contour => immediate success    or\r\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\t\tlet inside = false;\r\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\r\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\r\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\r\n\r\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\r\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\r\n\r\n\t\t\t\t\t// not parallel\r\n\t\t\t\t\tif ( edgeDy < 0 ) {\r\n\r\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\r\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\r\n\r\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// parallel or collinear\r\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t\t// continue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn\tinside;\r\n\r\n\t\t}\r\n\r\n\t\tconst isClockWise = ShapeUtils.isClockWise;\r\n\r\n\t\tconst subPaths = this.subPaths;\r\n\t\tif ( subPaths.length === 0 ) return [];\r\n\r\n\t\tlet solid, tmpPath, tmpShape;\r\n\t\tconst shapes = [];\r\n\r\n\t\tif ( subPaths.length === 1 ) {\r\n\r\n\t\t\ttmpPath = subPaths[ 0 ];\r\n\t\t\ttmpShape = new Shape();\r\n\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t\treturn shapes;\r\n\r\n\t\t}\r\n\r\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\r\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\r\n\t\t// console.log(\"Holes first\", holesFirst);\r\n\r\n\t\tconst betterShapeHoles = [];\r\n\t\tconst newShapes = [];\r\n\t\tlet newShapeHoles = [];\r\n\t\tlet mainIdx = 0;\r\n\t\tlet tmpPoints;\r\n\r\n\t\tnewShapes[ mainIdx ] = undefined;\r\n\t\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\r\n\r\n\t\t\ttmpPath = subPaths[ i ];\r\n\t\t\ttmpPoints = tmpPath.getPoints();\r\n\t\t\tsolid = isClockWise( tmpPoints );\r\n\t\t\tsolid = isCCW ? ! solid : solid;\r\n\r\n\t\t\tif ( solid ) {\r\n\r\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n\r\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\r\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n\r\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\t\t\t\t//console.log('cw', i);\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n\r\n\t\t\t\t//console.log('ccw', i);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// only Holes? -> probably all Shapes with wrong orientation\r\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\t\tif ( newShapes.length > 1 ) {\r\n\r\n\t\t\tlet ambiguous = false;\r\n\t\t\tlet toChange = 0;\r\n\r\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\r\n\r\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\r\n\t\t\t\t\tconst ho = sho[ hIdx ];\r\n\t\t\t\t\tlet hole_unassigned = true;\r\n\r\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\r\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n\r\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\r\n\r\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tambiguous = true;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\r\n\r\n\t\t\t\tnewShapeHoles = betterShapeHoles;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlet tmpHoles;\r\n\r\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\r\n\t\t\ttmpShape = newShapes[ i ].s;\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t\ttmpHoles = newShapeHoles[ i ];\r\n\r\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//console.log(\"shape\", shapes);\r\n\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass Controls extends EventDispatcher {\r\n\r\n\tconstructor( object, domElement = null ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.object = object;\r\n\t\tthis.domElement = domElement;\r\n\r\n\t\tthis.enabled = true;\r\n\r\n\t\tthis.state = - 1;\r\n\r\n\t\tthis.keys = {};\r\n\t\tthis.mouseButtons = { LEFT: null, MIDDLE: null, RIGHT: null };\r\n\t\tthis.touches = { ONE: null, TWO: null };\r\n\r\n\t}\r\n\r\n\tconnect() {}\r\n\r\n\tdisconnect() {}\r\n\r\n\tdispose() {}\r\n\r\n\tupdate( /* delta */ ) {}\r\n\r\n}\r\n\r\nfunction contain( texture, aspect ) {\r\n\r\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\r\n\r\n\tif ( imageAspect > aspect ) {\r\n\r\n\t\ttexture.repeat.x = 1;\r\n\t\ttexture.repeat.y = imageAspect / aspect;\r\n\r\n\t\ttexture.offset.x = 0;\r\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\r\n\r\n\t} else {\r\n\r\n\t\ttexture.repeat.x = aspect / imageAspect;\r\n\t\ttexture.repeat.y = 1;\r\n\r\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\r\n\t\ttexture.offset.y = 0;\r\n\r\n\t}\r\n\r\n\treturn texture;\r\n\r\n}\r\n\r\nfunction cover( texture, aspect ) {\r\n\r\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\r\n\r\n\tif ( imageAspect > aspect ) {\r\n\r\n\t\ttexture.repeat.x = aspect / imageAspect;\r\n\t\ttexture.repeat.y = 1;\r\n\r\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\r\n\t\ttexture.offset.y = 0;\r\n\r\n\t} else {\r\n\r\n\t\ttexture.repeat.x = 1;\r\n\t\ttexture.repeat.y = imageAspect / aspect;\r\n\r\n\t\ttexture.offset.x = 0;\r\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\r\n\r\n\t}\r\n\r\n\treturn texture;\r\n\r\n}\r\n\r\nfunction fill( texture ) {\r\n\r\n\ttexture.repeat.x = 1;\r\n\ttexture.repeat.y = 1;\r\n\r\n\ttexture.offset.x = 0;\r\n\ttexture.offset.y = 0;\r\n\r\n\treturn texture;\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n * Given the width, height, format, and type of a texture. Determines how many\r\n * bytes must be used to represent the texture.\r\n *\r\n * @param {Number} width\r\n * @param {Number} height\r\n * @param {Number} format\r\n * @param {Number} type\r\n * @return {Number} The number of bytes required to represent the texture.\r\n */\r\nfunction getByteLength( width, height, format, type ) {\r\n\r\n\tconst typeByteLength = getTextureTypeByteLength( type );\r\n\r\n\tswitch ( format ) {\r\n\r\n\t\t// https://registry.khronos.org/OpenGL-Refpages/es3.0/html/glTexImage2D.xhtml\r\n\t\tcase AlphaFormat:\r\n\t\t\treturn width * height;\r\n\t\tcase LuminanceFormat:\r\n\t\t\treturn width * height;\r\n\t\tcase LuminanceAlphaFormat:\r\n\t\t\treturn width * height * 2;\r\n\t\tcase RedFormat:\r\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\r\n\t\tcase RedIntegerFormat:\r\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\r\n\t\tcase RGFormat:\r\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\r\n\t\tcase RGIntegerFormat:\r\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\r\n\t\tcase RGBFormat:\r\n\t\t\treturn ( ( width * height * 3 ) / typeByteLength.components ) * typeByteLength.byteLength;\r\n\t\tcase RGBAFormat:\r\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\r\n\t\tcase RGBAIntegerFormat:\r\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\r\n\r\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_s3tc_srgb/\r\n\t\tcase RGB_S3TC_DXT1_Format:\r\n\t\tcase RGBA_S3TC_DXT1_Format:\r\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\r\n\t\tcase RGBA_S3TC_DXT3_Format:\r\n\t\tcase RGBA_S3TC_DXT5_Format:\r\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\r\n\r\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_pvrtc/\r\n\t\tcase RGB_PVRTC_2BPPV1_Format:\r\n\t\tcase RGBA_PVRTC_2BPPV1_Format:\r\n\t\t\treturn ( Math.max( width, 16 ) * Math.max( height, 8 ) ) / 4;\r\n\t\tcase RGB_PVRTC_4BPPV1_Format:\r\n\t\tcase RGBA_PVRTC_4BPPV1_Format:\r\n\t\t\treturn ( Math.max( width, 8 ) * Math.max( height, 8 ) ) / 2;\r\n\r\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_etc/\r\n\t\tcase RGB_ETC1_Format:\r\n\t\tcase RGB_ETC2_Format:\r\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\r\n\t\tcase RGBA_ETC2_EAC_Format:\r\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\r\n\r\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\r\n\t\tcase RGBA_ASTC_4x4_Format:\r\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\r\n\t\tcase RGBA_ASTC_5x4_Format:\r\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\r\n\t\tcase RGBA_ASTC_5x5_Format:\r\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\r\n\t\tcase RGBA_ASTC_6x5_Format:\r\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\r\n\t\tcase RGBA_ASTC_6x6_Format:\r\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\r\n\t\tcase RGBA_ASTC_8x5_Format:\r\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\r\n\t\tcase RGBA_ASTC_8x6_Format:\r\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\r\n\t\tcase RGBA_ASTC_8x8_Format:\r\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\r\n\t\tcase RGBA_ASTC_10x5_Format:\r\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\r\n\t\tcase RGBA_ASTC_10x6_Format:\r\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\r\n\t\tcase RGBA_ASTC_10x8_Format:\r\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\r\n\t\tcase RGBA_ASTC_10x10_Format:\r\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\r\n\t\tcase RGBA_ASTC_12x10_Format:\r\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\r\n\t\tcase RGBA_ASTC_12x12_Format:\r\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 11 ) / 12 ) * 16;\r\n\r\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_bptc/\r\n\t\tcase RGBA_BPTC_Format:\r\n\t\tcase RGB_BPTC_SIGNED_Format:\r\n\t\tcase RGB_BPTC_UNSIGNED_Format:\r\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\r\n\r\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_rgtc/\r\n\t\tcase RED_RGTC1_Format:\r\n\t\tcase SIGNED_RED_RGTC1_Format:\r\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 8;\r\n\t\tcase RED_GREEN_RGTC2_Format:\r\n\t\tcase SIGNED_RED_GREEN_RGTC2_Format:\r\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\r\n\r\n\t}\r\n\r\n\tthrow new Error(\r\n\t\t`Unable to determine texture byte length for ${format} format.`,\r\n\t);\r\n\r\n}\r\n\r\nfunction getTextureTypeByteLength( type ) {\r\n\r\n\tswitch ( type ) {\r\n\r\n\t\tcase UnsignedByteType:\r\n\t\tcase ByteType:\r\n\t\t\treturn { byteLength: 1, components: 1 };\r\n\t\tcase UnsignedShortType:\r\n\t\tcase ShortType:\r\n\t\tcase HalfFloatType:\r\n\t\t\treturn { byteLength: 2, components: 1 };\r\n\t\tcase UnsignedShort4444Type:\r\n\t\tcase UnsignedShort5551Type:\r\n\t\t\treturn { byteLength: 2, components: 4 };\r\n\t\tcase UnsignedIntType:\r\n\t\tcase IntType:\r\n\t\tcase FloatType:\r\n\t\t\treturn { byteLength: 4, components: 1 };\r\n\t\tcase UnsignedInt5999Type:\r\n\t\t\treturn { byteLength: 4, components: 3 };\r\n\r\n\t}\r\n\r\n\tthrow new Error( `Unknown texture type ${type}.` );\r\n\r\n}\r\n\r\nconst TextureUtils = {\r\n\tcontain,\r\n\tcover,\r\n\tfill,\r\n\tgetByteLength\r\n};\r\n\r\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\r\n\r\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\r\n\t\trevision: REVISION,\r\n\t} } ) );\r\n\r\n}\r\n\r\nif ( typeof window !== 'undefined' ) {\r\n\r\n\tif ( window.__THREE__ ) {\r\n\r\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\r\n\r\n\t} else {\r\n\r\n\t\twindow.__THREE__ = REVISION;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, Controls, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix2, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeutralToneMapping, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RAD2DEG, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBDepthPacking, RGBFormat, RGBIntegerFormat, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGDepthPacking, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RenderTarget3D, RenderTargetArray, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TextureUtils, TimestampQuery, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedInt5999Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoFrameTexture, VideoTexture, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLRenderTarget, WebGPUCoordinateSystem, WebXRController, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, arrayNeedsUint32, cloneUniforms, createCanvasElement, createElementNS, getByteLength, getUnlitUniformColorSpace, mergeUniforms, probeAsync, toNormalizedProjectionMatrix, toReversedProjectionMatrix, warnOnce };\r\n"],"names":["REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AgXToneMapping","NeutralToneMapping","AttachedBindMode","DetachedBindMode","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","UnsignedInt5999Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","BasicDepthPacking","RGBADepthPacking","RGBDepthPacking","RGDepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","LinearTransfer","SRGBTransfer","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","WebGLCoordinateSystem","WebGPUCoordinateSystem","TimestampQuery","COMPUTE","RENDER","EventDispatcher","addEventListener","type","listener","undefined","this","_listeners","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","target","array","slice","i","l","length","call","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","toLowerCase","clamp","value","min","max","euclideanModulo","n","m","lerp","x","y","t","denormalize","constructor","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","Error","normalize","round","MathUtils","mapLinear","a1","a2","b1","b2","inverseLerp","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","Vector2","prototype","isVector2","width","height","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","v","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","Symbol","iterator","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","d","f","g","h","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","r","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","name","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","probeAsync","gl","sync","interval","Promise","resolve","reject","setTimeout","probe","clientWaitSync","SYNC_FLUSH_COMMANDS_BIT","WAIT_FAILED","TIMEOUT_EXPIRED","toNormalizedProjectionMatrix","projectionMatrix","toReversedProjectionMatrix","LINEAR_REC709_TO_XYZ","XYZ_TO_LINEAR_REC709","createColorManagement","ColorManagement","enabled","workingColorSpace","spaces","convert","color","sourceColorSpace","targetColorSpace","transfer","SRGBToLinear","primaries","toXYZ","fromXYZ","LinearToSRGB","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","colorSpace","getTransfer","getLuminanceCoefficients","luminanceCoefficients","define","colorSpaces","Object","assign","_getMatrix","targetMatrix","_getDrawingBufferColorSpace","outputColorSpaceConfig","drawingBufferColorSpace","_getUnpackColorSpace","workingColorSpaceConfig","unpackColorSpace","REC709_PRIMARIES","REC709_LUMINANCE_COEFFICIENTS","D65","whitePoint","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","defineProperty","uuid","dataReady","version","needsUpdate","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","_textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","super","isTexture","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","renderTarget","isRenderTargetTexture","pmremVersion","updateMatrix","JSON","parse","stringify","textures","metadata","generator","wrap","keys","dispose","transformUv","uv","needsPMREMUpdate","Vector4","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","setFromMatrixPosition","getZ","getW","RenderTarget","options","isRenderTarget","depth","scissor","scissorTest","viewport","depthBuffer","stencilBuffer","resolveDepthBuffer","resolveStencilBuffer","depthTexture","samples","count","texture","_depthTexture","current","setSize","il","WebGLRenderTarget","isWebGLRenderTarget","DataArrayTexture","isDataArrayTexture","wrapR","layerUpdates","Set","addLayerUpdate","layerIndex","clearLayerUpdates","clear","WebGLArrayRenderTarget","isWebGLArrayRenderTarget","Data3DTexture","isData3DTexture","WebGL3DRenderTarget","isWebGL3DRenderTarget","Quaternion","isQuaternion","_x","_y","_z","_w","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","Number","EPSILON","len","tDir","multiplyQuaternionsFlat","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","theta1","theta2","r1","r2","_onChange","callback","Vector3","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qx","qy","qz","qw","tz","project","camera","matrixWorldInverse","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","u","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$b","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$4","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$3","_v1$6","_v2$3","Sphere","isSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","isNaN","intersectTriangle","backfaceCulling","sign","DdN","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","position","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","p","zInv","_matrix$2","_quaternion$3","Euler","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","_childaddedEvent","child","_childremovedEvent","Object3D","isObject3D","parent","DEFAULT_UP","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeShadow","onAfterShadow","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","arguments","error","removeFromParent","remove","attach","getObjectById","id","getObjectByProperty","getObjectByName","getObjectsByProperty","result","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","serialize","library","element","instanceMatrix","instanceColor","isBatchedMesh","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","map","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxInstanceCount","_maxInstanceCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","_colorsTexture","colorsTexture","boundingSphere","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","recursive","_v0$1","_v1$3","_v2$2","_v3$2","_vab","_vac","_vbc","_vap","_vbp","_vcp","_v40","_v41","_v42","Triangle","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","getInterpolation","p3","v3","getInterpolatedAttribute","attr","i1","i2","i3","barycoord","isFrontFacing","setFromPointsAndIndices","i0","setFromAttributeAndIndices","getArea","getMidpoint","getPlane","setFromCoplanarPoints","d4","vc","d5","d6","vb","va","_colorKeywords","_hslA","_hslB","hue2rgb","Color","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","charAt","setColorName","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","_color","getHexString","toString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","NAMES","_materialId","Material","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","alphaTest","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","dispersion","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapRotation","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","onBuild","MeshBasicMaterial","isMeshBasicMaterial","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","_vector$9","_vector2$1","_id$2","BufferAttribute","itemSize","normalized","TypeError","isBufferAttribute","usage","updateRanges","gpuType","onUploadCallback","setUsage","addUpdateRange","start","clearUpdateRanges","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float16BufferAttribute","isFloat16BufferAttribute","Float32BufferAttribute","_id$1","_m1","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","BufferGeometry","isBufferGeometry","indirect","attributes","morphAttributes","morphTargetsRelative","groups","drawRange","getIndex","setIndex","setIndirect","getIndirect","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","normalAttribute","uvAttribute","tangentAttribute","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","normals","toNonIndexed","convertBufferAttribute","indices","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","String","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","uv1","groupMaterial","checkGeometryIntersection","faceIndex","face","checkIntersection$1","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","uvs","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","getUnlitUniformColorSpace","renderer","currentRenderTarget","getRenderTarget","outputColorSpace","isXRRenderTarget","UniformsUtils","merge","ShaderMaterial","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","clipCullDistance","multiDraw","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","cloneUniformsGroups","Camera","_v3$1","_minTarget","_maxTarget","PerspectiveCamera","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","getViewBounds","minTarget","maxTarget","getViewSize","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","concat","scene","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","isCubeTexture","WebGLCubeRenderTarget","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","Group","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","inputjoint","_getHandJoint","disconnect","frame","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","FogExp2","density","isFogExp2","Fog","isFog","Scene","backgroundBlurriness","backgroundIntensity","backgroundRotation","environmentIntensity","environmentRotation","overrideMaterial","__THREE_DEVTOOLS__","CustomEvent","detail","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$7","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","SpriteMaterial","isSpriteMaterial","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","isSprite","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_currentLevel","levels","isLOD","autoUpdate","level","addLevel","hysteresis","removeLevel","removedElements","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_vector3","_matrix4","_vertex","_sphere$5","_inverseMatrix$2","_ray$2","SkinnedMesh","bindMatrixInverse","applyBoneTransform","bind","calculateInverses","pose","normalizeSkinWeights","skinWeight","skinIndex","weight","boneIndex","bones","boneInverses","Bone","isBone","DataTexture","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","boneTexture","init","inverse","bone","computeBoneTexture","getBoneByName","json","boneInverse","InstancedBufferAttribute","meshPerAttribute","isInstancedBufferAttribute","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh$1","_sphere$4","InstancedMesh","morphTexture","setMatrixAt","getMatrixAt","getColorAt","getMorphAt","objectInfluences","dataIndex","raycastTimes","instanceId","setColorAt","fill","setMorphAt","morphInfluencesSum","morphBaseInfluence","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","end","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$3","_vector$6","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","ascIdSort","sortOpaque","sortTransparent","MultiDrawRenderList","pool","list","item","reset","_matrix$1","_whiteColor","_frustum","_box$1","_sphere$2","_vector$5","_forward","_temp","_renderList","_mesh","_batchIntersects","copyAttributeData","targetOffset","vertexCount","copyArrayContents","BatchedMesh","instanceCount","_instanceInfo","_availableInstanceIds","unusedVertexCount","_nextVertexStart","unusedIndexCount","_nextIndexStart","customSort","_geometryInfo","_availableGeometryIds","_visibilityChanged","_multiDrawCounts","_multiDrawStarts","_multiDrawCount","_multiDrawInstances","_indirectTexture","_initMatricesTexture","_initIndirectTexture","matricesArray","indirectArray","indirectTexture","_initColorsTexture","colorsArray","_initializeGeometry","reference","attributeName","srcAttribute","dstArray","dstAttribute","indexArray","_validateGeometry","batchGeometry","Boolean","validateInstanceId","instanceInfo","validateGeometryId","geometryId","geometryInfoList","setCustomSort","func","geometryIndex","getBoundingBoxAt","getBoundingSphereAt","addInstance","drawId","sort","shift","addGeometry","reservedVertexCount","reservedIndexCount","geometryInfo","vertexStart","indexStart","indexCount","setGeometryAt","hasIndex","dstIndex","srcIndex","deleteGeometry","deleteInstance","optimize","nextVertexStart","nextIndexStart","elementDelta","copyWithin","iv","setVisibleAt","getVisibleAt","setGeometryIdAt","getGeometryIdAt","getGeometryRangeAt","setInstanceCount","availableInstanceIds","pop","multiDrawCounts","multiDrawStarts","setGeometrySize","validRanges","filter","info","oldGeometry","batchId","bytesPerElement","BYTES_PER_ELEMENT","multiDrawCount","culled","shadowCamera","depthMaterial","LineBasicMaterial","isLineBasicMaterial","linecap","linejoin","_vStart","_vEnd","_inverseMatrix$1","_ray$1","_sphere$1","_intersectPointOnRay","_intersectPointOnSegment","Line","computeLineDistances","lineDistances","params","localThreshold","localThresholdSq","isLineSegments","checkIntersection","isLineLoop","thresholdSq","_start","_end","LineSegments","LineLoop","PointsMaterial","isPointsMaterial","_inverseMatrix","_ray","_sphere","_position$2","Points","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","video","isVideoTexture","requestVideoFrameCallback","updateVideo","readyState","HAVE_CURRENT_DATA","VideoFrameTexture","isVideoFrameTexture","setFrame","FramebufferTexture","isFramebufferTexture","CompressedTexture","isCompressedTexture","CompressedArrayTexture","isCompressedArrayTexture","CompressedCubeTexture","isCompressedCubeTexture","CanvasTexture","isCanvasTexture","DepthTexture","isDepthTexture","compareFunction","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","last","sum","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","tangents","binormals","vec","mat","MAX_VALUE","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","aRadius","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","px","py","pz","CatmullRomCurve3","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezier","k","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","CubicBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezierCurve","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","freeze","__proto__","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","segmentLength","lens","cacheLengths","sums","resolution","pts","Path","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","phiStart","phiLength","initNormals","inverseSegments","vertex","curNormal","prevNormal","base","CapsuleGeometry","capSegments","radialSegments","path","CircleGeometry","thetaStart","thetaLength","segment","CylinderGeometry","radiusTop","radiusBottom","openEnded","halfHeight","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","slope","indexRow","generateTorso","ConeGeometry","PolyhedronGeometry","vertexBuffer","uvBuffer","subdivideFace","cols","aj","bj","rows","pushVertex","getVertexByIndex","correctUV","azimuth","subdivide","applyRadius","centroid","azi","correctUVs","correctSeam","generateUVs","details","DodecahedronGeometry","_v0","_v1$1","_normal","_triangle","EdgesGeometry","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","hash","reverseHash","index0","Shape","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","triangles","next","prev","minX","minY","maxX","maxY","invSize","queue","steiner","getLeftmost","compareX","eliminateHole","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","area","ear","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","maxZ","locallyInside","isValidDiagonal","splitPolygon","bridge","hx","hy","mx","my","tanMin","sectorContainsSector","findHoleBridge","bridgeReverse","leftmost","intersectsPolygon","inside","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","forEach","ExtrudeGeometry","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","splineTube","binormal","position2","extrudeByPath","shapePoints","reverse","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","sidewalls","layeroffset","sl","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","layer","buildLidFaces","buildSideFaces","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","OctahedronGeometry","PlaneGeometry","width_half","height_half","segment_width","segment_height","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","TorusGeometry","tube","tubularSegments","TorusKnotGeometry","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","frames","P","generateSegment","generateIndices","generateBufferData","WireframeGeometry","edges","o","ol","isUniqueEdge","hash1","hash2","has","Geometries","ShadowMaterial","isShadowMaterial","RawShaderMaterial","isRawShaderMaterial","MeshStandardMaterial","isMeshStandardMaterial","MeshPhysicalMaterial","isMeshPhysicalMaterial","ior","get","sheenColorMap","sheenRoughnessMap","_anisotropy","_clearcoat","_dispersion","_iridescence","_sheen","_transmission","MeshPhongMaterial","isMeshPhongMaterial","MeshToonMaterial","isMeshToonMaterial","MeshNormalMaterial","isMeshNormalMaterial","MeshLambertMaterial","isMeshLambertMaterial","MeshDepthMaterial","isMeshDepthMaterial","depthPacking","MeshDistanceMaterial","isMeshDistanceMaterial","MeshMatcapMaterial","isMeshMatcapMaterial","LineDashedMaterial","isLineDashedMaterial","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","time","apply","AnimationUtils","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetValueSize","lastIndex","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","numTimes","valueStart","valueEnd","blendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","trackType","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","trim","startTime","endTime","nKeys","to","validate","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","morphTargets","animationToMorphTargets","pattern","morphTarget","parts","match","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","typeName","getTrackTypeForValueTypeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","urlModifier","isLoading","itemsLoaded","itemsTotal","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","response","FileLoader","cached","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","then","status","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","controller","readData","read","done","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","DOMParser","parseFromString","label","decoder","TextDecoder","decode","catch","err","finally","setResponseType","setMimeType","AnimationLoader","CompressedTextureLoader","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","urls","DataTextureLoader","texData","TextureLoader","Light","intensity","groundColor","decay","penumbra","shadow","HemisphereLight","skyColor","isHemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","bias","normalBias","blurSamples","mapSize","mapPass","_frameExtents","_viewportCount","_viewports","getViewportCount","getFrustum","updateMatrices","light","shadowMatrix","getViewport","viewportIndex","getFrameExtents","SpotLightShadow","isSpotLightShadow","SpotLight","isSpotLight","power","_projScreenMatrix","_lightPositionWorld","_lookTarget","PointLightShadow","isPointLightShadow","_cubeDirections","_cubeUps","PointLight","isPointLight","OrthographicCamera","isOrthographicCamera","scaleW","scaleH","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","isDirectionalLight","AmbientLight","isAmbientLight","RectAreaLight","isRectAreaLight","SphericalHarmonics3","isSphericalHarmonics3","coefficients","zero","getAt","coeff","getIrradianceAt","sh","addScaledSH","getBasisAt","shBasis","LightProbe","isLightProbe","MaterialLoader","getTexture","createMaterialFromType","uniform","setTextures","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","replace","InstancedBufferGeometry","isInstancedBufferGeometry","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","drawcalls","offsets","ObjectLoader","parseAsync","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","bindLightTargets","hasImages","parseImagesAsync","bufferGeometryLoader","deserializeImage","loadImage","imageArray","deserializedImage","async","currentUrl","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","isImageBitmapLoader","createImageBitmap","setOptions","imageBitmap","fetchOptions","promise","res","colorSpaceConversion","_context","AudioContext","window","webkitAudioContext","setContext","AudioLoader","handleError","bufferCopy","decodeAudioData","audioBuffer","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","cameraL","cameraR","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","ArrayCamera","isArrayCamera","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","setValue","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_trackRe","_supportedObjectNames","PropertyBinding","rootNode","parsedPath","parseTrackName","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","create","root","isAnimationObjectGroup","Composite","sanitizeNodeName","matches","results","objectName","objectIndex","propertyIndex","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","unbind","targetGroup","optionalParsedPath","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","AnimationObjectGroup","_objects","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","objects","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","mode","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","RenderTarget3D","isRenderTarget3D","RenderTargetArray","isRenderTargetArray","Uniform","_id","UniformsGroup","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","isInstancedInterleavedBuffer","GLBufferAttribute","elementSize","setType","setItemSize","setCount","_matrix","Raycaster","setFromCamera","coords","setFromXRController","intersectObject","ascSort","intersectObjects","propagate","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","Matrix2","isMatrix2","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","_vector$3","SpotLightHelper","positions","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","sphereSize","_vector$1","_color1","_color2","HemisphereLightHelper","GridHelper","PolarGridHelper","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","lightPlane","targetLine","_vector","_camera","CameraHelper","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","nearZ","setPoint","_box","BoxHelper","Box3Helper","PlaneHelper","_axis","_lineGeometry","_coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setColor","AxesHelper","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","tmpPath","tmpShape","holesFirst","betterShapeHoles","newShapes","tmpPoints","tmpHoles","newShapeHoles","mainIdx","inSubpaths","toShapesNoHoles","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","Controls","domElement","state","mouseButtons","touches","ONE","TWO","getByteLength","typeByteLength","getTextureTypeByteLength","TextureUtils","contain","imageAspect","cover","revision","__THREE__"],"sourceRoot":""}