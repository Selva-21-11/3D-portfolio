{"ast":null,"code":"var _jsxFileName = \"F:\\\\Portfolio\\\\3D-portfolio\\\\src\\\\components\\\\TitleBG.js\",\n  _s = $RefreshSig$();\n// TitleBG.js\nimport React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TitleBG = () => {\n  _s();\n  const sceneRef = useRef(null);\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    sceneRef.current.appendChild(renderer.domElement);\n\n    // Create a simple geometry (e.g., rotating cube)\n    const geometry = new THREE.BoxGeometry(1, 1, 1);\n    const material = new THREE.MeshBasicMaterial({\n      color: 0x00ff00\n    });\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n\n    // Set camera position\n    camera.position.z = 5;\n\n    // Render loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Resize handling\n    const onResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', onResize);\n    return () => {\n      window.removeEventListener('resize', onResize);\n      scene.dispose();\n      renderer.dispose();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: sceneRef,\n    className: \"title-bg\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n};\n_s(TitleBG, \"JWNkVvqDwC3Xj+XwVC/OSsWa/OI=\");\n_c = TitleBG;\nexport default TitleBG;\nvar _c;\n$RefreshReg$(_c, \"TitleBG\");","map":{"version":3,"names":["React","useRef","useEffect","THREE","jsxDEV","_jsxDEV","TitleBG","_s","sceneRef","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","setSize","current","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","cube","Mesh","add","position","z","animate","requestAnimationFrame","rotation","x","y","render","onResize","aspect","updateProjectionMatrix","addEventListener","removeEventListener","dispose","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/Portfolio/3D-portfolio/src/components/TitleBG.js"],"sourcesContent":["// TitleBG.js\r\nimport React, { useRef, useEffect } from 'react';\r\nimport * as THREE from 'three';\r\n\r\nconst TitleBG = () => {\r\n  const sceneRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const scene = new THREE.Scene();\r\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n    const renderer = new THREE.WebGLRenderer();\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    sceneRef.current.appendChild(renderer.domElement);\r\n\r\n    // Create a simple geometry (e.g., rotating cube)\r\n    const geometry = new THREE.BoxGeometry(1, 1, 1);\r\n    const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\r\n    const cube = new THREE.Mesh(geometry, material);\r\n    scene.add(cube);\r\n\r\n    // Set camera position\r\n    camera.position.z = 5;\r\n\r\n    // Render loop\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      cube.rotation.x += 0.01;\r\n      cube.rotation.y += 0.01;\r\n      renderer.render(scene, camera);\r\n    };\r\n\r\n    animate();\r\n\r\n    // Resize handling\r\n    const onResize = () => {\r\n      camera.aspect = window.innerWidth / window.innerHeight;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    };\r\n\r\n    window.addEventListener('resize', onResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', onResize);\r\n      scene.dispose();\r\n      renderer.dispose();\r\n    };\r\n  }, []);\r\n\r\n  return <div ref={sceneRef} className=\"title-bg\" />;\r\n};\r\n\r\nexport default TitleBG;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE7BC,SAAS,CAAC,MAAM;IACd,MAAMO,KAAK,GAAG,IAAIN,KAAK,CAACO,KAAK,CAAC,CAAC;IAC/B,MAAMC,MAAM,GAAG,IAAIR,KAAK,CAACS,iBAAiB,CAAC,EAAE,EAAEC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC;IACjG,MAAMC,QAAQ,GAAG,IAAIb,KAAK,CAACc,aAAa,CAAC,CAAC;IAC1CD,QAAQ,CAACE,OAAO,CAACL,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACvDP,QAAQ,CAACW,OAAO,CAACC,WAAW,CAACJ,QAAQ,CAACK,UAAU,CAAC;;IAEjD;IACA,MAAMC,QAAQ,GAAG,IAAInB,KAAK,CAACoB,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/C,MAAMC,QAAQ,GAAG,IAAIrB,KAAK,CAACsB,iBAAiB,CAAC;MAAEC,KAAK,EAAE;IAAS,CAAC,CAAC;IACjE,MAAMC,IAAI,GAAG,IAAIxB,KAAK,CAACyB,IAAI,CAACN,QAAQ,EAAEE,QAAQ,CAAC;IAC/Cf,KAAK,CAACoB,GAAG,CAACF,IAAI,CAAC;;IAEf;IACAhB,MAAM,CAACmB,QAAQ,CAACC,CAAC,GAAG,CAAC;;IAErB;IACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;MACpBC,qBAAqB,CAACD,OAAO,CAAC;MAC9BL,IAAI,CAACO,QAAQ,CAACC,CAAC,IAAI,IAAI;MACvBR,IAAI,CAACO,QAAQ,CAACE,CAAC,IAAI,IAAI;MACvBpB,QAAQ,CAACqB,MAAM,CAAC5B,KAAK,EAAEE,MAAM,CAAC;IAChC,CAAC;IAEDqB,OAAO,CAAC,CAAC;;IAET;IACA,MAAMM,QAAQ,GAAGA,CAAA,KAAM;MACrB3B,MAAM,CAAC4B,MAAM,GAAG1B,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW;MACtDJ,MAAM,CAAC6B,sBAAsB,CAAC,CAAC;MAC/BxB,QAAQ,CAACE,OAAO,CAACL,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACzD,CAAC;IAEDF,MAAM,CAAC4B,gBAAgB,CAAC,QAAQ,EAAEH,QAAQ,CAAC;IAE3C,OAAO,MAAM;MACXzB,MAAM,CAAC6B,mBAAmB,CAAC,QAAQ,EAAEJ,QAAQ,CAAC;MAC9C7B,KAAK,CAACkC,OAAO,CAAC,CAAC;MACf3B,QAAQ,CAAC2B,OAAO,CAAC,CAAC;IACpB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOtC,OAAA;IAAKuC,GAAG,EAAEpC,QAAS;IAACqC,SAAS,EAAC;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpD,CAAC;AAAC1C,EAAA,CA9CID,OAAO;AAAA4C,EAAA,GAAP5C,OAAO;AAgDb,eAAeA,OAAO;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}