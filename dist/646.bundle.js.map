{"version":3,"file":"646.bundle.js","mappings":"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","sources":["webpack://my-3d-portfolio/./src/blocks/Components/TiltedCard/TiltedCard.jsx","webpack://my-3d-portfolio/./src/components/Skills.js"],"sourcesContent":["import { useRef, useState } from \"react\";\r\nimport { motion, useMotionValue, useSpring } from \"framer-motion\";\r\nimport \"./TiltedCard.css\";\r\nimport React from \"react\";\r\n\r\nconst springValues = {\r\n  damping: 30,\r\n  stiffness: 100,\r\n  mass: 2,\r\n};\r\n\r\nexport default function TiltedCard({\r\n  imageSrc,\r\n  altText = \"Tilted card image\",\r\n  captionText = \"\",\r\n  containerHeight = \"300px\",\r\n  containerWidth = \"100%\",\r\n  imageHeight = \"300px\",\r\n  imageWidth = \"300px\",\r\n  scaleOnHover = 1.1,\r\n  rotateAmplitude = 14,\r\n  showMobileWarning = true,\r\n  showTooltip = true,\r\n  overlayContent = null,\r\n  displayOverlayContent = false,\r\n  progressBarValue = 70, // Example progress bar value\r\n}) {\r\n  const ref = useRef(null);\r\n\r\n  const x = useMotionValue();\r\n  const y = useMotionValue();\r\n  const rotateX = useSpring(useMotionValue(0), springValues);\r\n  const rotateY = useSpring(useMotionValue(0), springValues);\r\n  const scale = useSpring(1, springValues);\r\n  const opacity = useSpring(0);\r\n  const rotateFigcaption = useSpring(0, {\r\n    stiffness: 350,\r\n    damping: 30,\r\n    mass: 1,\r\n  });\r\n  const progressBarScale = useSpring(1, springValues); // New spring for scaling the progress bar\r\n\r\n  const [lastY, setLastY] = useState(0);\r\n\r\n  function handleMouse(e) {\r\n    if (!ref.current) return;\r\n\r\n    const rect = ref.current.getBoundingClientRect();\r\n    const offsetX = e.clientX - rect.left - rect.width / 2;\r\n    const offsetY = e.clientY - rect.top - rect.height / 2;\r\n\r\n    const rotationX = (offsetY / (rect.height / 2)) * -rotateAmplitude;\r\n    const rotationY = (offsetX / (rect.width / 2)) * rotateAmplitude;\r\n\r\n    rotateX.set(rotationX);\r\n    rotateY.set(rotationY);\r\n\r\n    x.set(e.clientX - rect.left);\r\n    y.set(e.clientY - rect.top);\r\n\r\n    const velocityY = offsetY - lastY;\r\n    rotateFigcaption.set(-velocityY * 0.6);\r\n    setLastY(offsetY);\r\n  }\r\n\r\n  function handleMouseEnter() {\r\n    scale.set(scaleOnHover);\r\n    opacity.set(1);\r\n    progressBarScale.set(1.2); // Increase scale on hover for the progress bar\r\n  }\r\n\r\n  function handleMouseLeave() {\r\n    opacity.set(0);\r\n    scale.set(1);\r\n    rotateX.set(0);\r\n    rotateY.set(0);\r\n    rotateFigcaption.set(0);\r\n    progressBarScale.set(1); // Reset scale for the progress bar\r\n  }\r\n\r\n  return (\r\n    <figure\r\n      ref={ref}\r\n      className=\"tilted-card-figure\"\r\n      style={{\r\n        height: containerHeight,\r\n        width: containerWidth,\r\n      }}\r\n      onMouseMove={handleMouse}\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n    >\r\n      {showMobileWarning && (\r\n        <div className=\"tilted-card-mobile-alert\">\r\n          This effect is not optimized for mobile. Check on desktop.\r\n        </div>\r\n      )}\r\n\r\n      <motion.div\r\n        className=\"tilted-card-inner\"\r\n        style={{\r\n          width: imageWidth,\r\n          height: imageHeight,\r\n          rotateX,\r\n          rotateY,\r\n          scale,\r\n        }}\r\n      >\r\n        <motion.img\r\n          src={imageSrc}\r\n          alt={altText}\r\n          className=\"tilted-card-img\"\r\n          style={{\r\n            width: imageWidth,\r\n            height: imageHeight,\r\n          }}\r\n        />\r\n\r\n        {displayOverlayContent && overlayContent && (\r\n          <motion.div className=\"tilted-card-overlay\">\r\n            {overlayContent}\r\n          </motion.div>\r\n        )}\r\n      </motion.div>\r\n\r\n      {/* Motion Progress Bar Container with Tilt and Scale */}\r\n      <motion.div\r\n        className=\"progress-bar-container\"\r\n        style={{\r\n          rotateX,\r\n          rotateY,\r\n          scale: progressBarScale, // Apply scaling here\r\n          opacity,\r\n          transformStyle: \"preserve-3d\",\r\n          height: \"10px\", // The height of the progress bar container\r\n        }}\r\n      >\r\n        <motion.div\r\n          className=\"progress-bar-fill\"\r\n          style={{\r\n            width: `${progressBarValue}%`, // Dynamically controlled by the progressBarValue prop\r\n            backgroundColor: \"#4caf50\", // Green color for progress\r\n            height: \"100%\", // Full height of the container\r\n            borderRadius: \"5px\",\r\n          }}\r\n        />\r\n      </motion.div>\r\n\r\n      {showTooltip && (\r\n        <motion.figcaption\r\n          className=\"tilted-card-caption\"\r\n          style={{\r\n            x,\r\n            y,\r\n            opacity,\r\n            rotate: rotateFigcaption,\r\n          }}\r\n        >\r\n          {captionText}\r\n        </motion.figcaption>\r\n      )}\r\n    </figure>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport TiltedCard from '../blocks/Components/TiltedCard/TiltedCard'; // Import the TiltedCard component\r\nconst SkillsSection = () => {\r\n  const skills = [\r\n    { imageSrc: '/assets/Blender.png', captionText: 'Blender', progressBarValue: 80 },\r\n    { imageSrc: '/assets/Mattext.png', captionText: 'Mattext', progressBarValue: 60 },\r\n  ];\r\n\r\n  return (\r\n    <section className=\"skills-section\">\r\n      <h2>My Skills</h2>\r\n      <div className=\"skills-container\">\r\n        {skills.map((skill, index) => (\r\n          <TiltedCard\r\n            key={index}\r\n            imageSrc={skill.imageSrc}\r\n            captionText={skill.captionText}\r\n            progressBarValue={skill.progressBarValue}\r\n            containerHeight=\"300px\"\r\n            containerWidth=\"250px\"\r\n            scaleOnHover={1.1}\r\n            rotateAmplitude={14}\r\n            displayOverlayContent={true}\r\n            overlayContent={<div>More Info About {skill.captionText}</div>}\r\n          />\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SkillsSection;\r\n"],"names":["springValues","damping","stiffness","mass","TiltedCard","_ref","imageSrc","altText","captionText","containerHeight","containerWidth","imageHeight","imageWidth","scaleOnHover","rotateAmplitude","showMobileWarning","showTooltip","overlayContent","displayOverlayContent","progressBarValue","ref","useRef","x","useMotionValue","y","rotateX","useSpring","rotateY","scale","opacity","rotateFigcaption","progressBarScale","lastY","setLastY","useState","React","className","style","height","width","onMouseMove","e","current","rect","getBoundingClientRect","offsetX","clientX","left","offsetY","clientY","top","rotationX","rotationY","set","velocityY","onMouseEnter","onMouseLeave","motion","div","img","src","alt","transformStyle","concat","backgroundColor","borderRadius","figcaption","rotate","SkillsSection","map","skill","index","key"],"sourceRoot":""}