{"ast":null,"code":"import { ShaderMaterial, UniformsUtils } from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { FilmShader } from '../shaders/FilmShader.js';\nclass FilmPass extends Pass {\n  constructor(noiseIntensity, scanlinesIntensity, scanlinesCount, grayscale) {\n    super();\n    const shader = FilmShader;\n    this.uniforms = UniformsUtils.clone(shader.uniforms);\n    this.material = new ShaderMaterial({\n      uniforms: this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader\n    });\n    if (grayscale !== undefined) this.uniforms.grayscale.value = grayscale;\n    if (noiseIntensity !== undefined) this.uniforms.nIntensity.value = noiseIntensity;\n    if (scanlinesIntensity !== undefined) this.uniforms.sIntensity.value = scanlinesIntensity;\n    if (scanlinesCount !== undefined) this.uniforms.sCount.value = scanlinesCount;\n    this.fsQuad = new FullScreenQuad(this.material);\n  }\n  render(renderer, writeBuffer, readBuffer, deltaTime /*, maskActive */) {\n    this.uniforms['tDiffuse'].value = readBuffer.texture;\n    this.uniforms['time'].value += deltaTime;\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  }\n  dispose() {\n    this.material.dispose();\n    this.fsQuad.dispose();\n  }\n}\nexport { FilmPass };","map":{"version":3,"names":["ShaderMaterial","UniformsUtils","Pass","FullScreenQuad","FilmShader","FilmPass","constructor","noiseIntensity","scanlinesIntensity","scanlinesCount","grayscale","shader","uniforms","clone","material","vertexShader","fragmentShader","undefined","value","nIntensity","sIntensity","sCount","fsQuad","render","renderer","writeBuffer","readBuffer","deltaTime","texture","renderToScreen","setRenderTarget","clear","dispose"],"sources":["F:/Portfolio/3D-portfolio/node_modules/three/examples/jsm/postprocessing/FilmPass.js"],"sourcesContent":["import {\r\n\tShaderMaterial,\r\n\tUniformsUtils\r\n} from 'three';\r\nimport { Pass, FullScreenQuad } from './Pass.js';\r\nimport { FilmShader } from '../shaders/FilmShader.js';\r\n\r\nclass FilmPass extends Pass {\r\n\r\n\tconstructor( noiseIntensity, scanlinesIntensity, scanlinesCount, grayscale ) {\r\n\r\n\t\tsuper();\r\n\r\n\t\tconst shader = FilmShader;\r\n\r\n\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\r\n\r\n\t\tthis.material = new ShaderMaterial( {\r\n\r\n\t\t\tuniforms: this.uniforms,\r\n\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\tfragmentShader: shader.fragmentShader\r\n\r\n\t\t} );\r\n\r\n\t\tif ( grayscale !== undefined )\tthis.uniforms.grayscale.value = grayscale;\r\n\t\tif ( noiseIntensity !== undefined ) this.uniforms.nIntensity.value = noiseIntensity;\r\n\t\tif ( scanlinesIntensity !== undefined ) this.uniforms.sIntensity.value = scanlinesIntensity;\r\n\t\tif ( scanlinesCount !== undefined ) this.uniforms.sCount.value = scanlinesCount;\r\n\r\n\t\tthis.fsQuad = new FullScreenQuad( this.material );\r\n\r\n\t}\r\n\r\n\trender( renderer, writeBuffer, readBuffer, deltaTime /*, maskActive */ ) {\r\n\r\n\t\tthis.uniforms[ 'tDiffuse' ].value = readBuffer.texture;\r\n\t\tthis.uniforms[ 'time' ].value += deltaTime;\r\n\r\n\t\tif ( this.renderToScreen ) {\r\n\r\n\t\t\trenderer.setRenderTarget( null );\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer.setRenderTarget( writeBuffer );\r\n\t\t\tif ( this.clear ) renderer.clear();\r\n\t\t\tthis.fsQuad.render( renderer );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.material.dispose();\r\n\r\n\t\tthis.fsQuad.dispose();\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { FilmPass };\r\n"],"mappings":"AAAA,SACCA,cAAc,EACdC,aAAa,QACP,OAAO;AACd,SAASC,IAAI,EAAEC,cAAc,QAAQ,WAAW;AAChD,SAASC,UAAU,QAAQ,0BAA0B;AAErD,MAAMC,QAAQ,SAASH,IAAI,CAAC;EAE3BI,WAAWA,CAAEC,cAAc,EAAEC,kBAAkB,EAAEC,cAAc,EAAEC,SAAS,EAAG;IAE5E,KAAK,CAAC,CAAC;IAEP,MAAMC,MAAM,GAAGP,UAAU;IAEzB,IAAI,CAACQ,QAAQ,GAAGX,aAAa,CAACY,KAAK,CAAEF,MAAM,CAACC,QAAS,CAAC;IAEtD,IAAI,CAACE,QAAQ,GAAG,IAAId,cAAc,CAAE;MAEnCY,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBG,YAAY,EAAEJ,MAAM,CAACI,YAAY;MACjCC,cAAc,EAAEL,MAAM,CAACK;IAExB,CAAE,CAAC;IAEH,IAAKN,SAAS,KAAKO,SAAS,EAAG,IAAI,CAACL,QAAQ,CAACF,SAAS,CAACQ,KAAK,GAAGR,SAAS;IACxE,IAAKH,cAAc,KAAKU,SAAS,EAAG,IAAI,CAACL,QAAQ,CAACO,UAAU,CAACD,KAAK,GAAGX,cAAc;IACnF,IAAKC,kBAAkB,KAAKS,SAAS,EAAG,IAAI,CAACL,QAAQ,CAACQ,UAAU,CAACF,KAAK,GAAGV,kBAAkB;IAC3F,IAAKC,cAAc,KAAKQ,SAAS,EAAG,IAAI,CAACL,QAAQ,CAACS,MAAM,CAACH,KAAK,GAAGT,cAAc;IAE/E,IAAI,CAACa,MAAM,GAAG,IAAInB,cAAc,CAAE,IAAI,CAACW,QAAS,CAAC;EAElD;EAEAS,MAAMA,CAAEC,QAAQ,EAAEC,WAAW,EAAEC,UAAU,EAAEC,SAAS,CAAC,mBAAoB;IAExE,IAAI,CAACf,QAAQ,CAAE,UAAU,CAAE,CAACM,KAAK,GAAGQ,UAAU,CAACE,OAAO;IACtD,IAAI,CAAChB,QAAQ,CAAE,MAAM,CAAE,CAACM,KAAK,IAAIS,SAAS;IAE1C,IAAK,IAAI,CAACE,cAAc,EAAG;MAE1BL,QAAQ,CAACM,eAAe,CAAE,IAAK,CAAC;MAChC,IAAI,CAACR,MAAM,CAACC,MAAM,CAAEC,QAAS,CAAC;IAE/B,CAAC,MAAM;MAENA,QAAQ,CAACM,eAAe,CAAEL,WAAY,CAAC;MACvC,IAAK,IAAI,CAACM,KAAK,EAAGP,QAAQ,CAACO,KAAK,CAAC,CAAC;MAClC,IAAI,CAACT,MAAM,CAACC,MAAM,CAAEC,QAAS,CAAC;IAE/B;EAED;EAEAQ,OAAOA,CAAA,EAAG;IAET,IAAI,CAAClB,QAAQ,CAACkB,OAAO,CAAC,CAAC;IAEvB,IAAI,CAACV,MAAM,CAACU,OAAO,CAAC,CAAC;EAEtB;AAED;AAEA,SAAS3B,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}