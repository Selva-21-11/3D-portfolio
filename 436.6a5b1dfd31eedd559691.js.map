{"version":3,"file":"436.6a5b1dfd31eedd559691.js","mappings":"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","sources":["webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/use-motion-value.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/use-spring.mjs","webpack://my-3d-portfolio/./src/blocks/Components/TiltedCard/TiltedCard.jsx","webpack://my-3d-portfolio/./src/components/Skills.js"],"sourcesContent":["import { useContext, useState, useEffect } from 'react';\r\nimport { motionValue } from './index.mjs';\r\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\r\nimport { useConstant } from '../utils/use-constant.mjs';\r\n\r\n/**\r\n * Creates a `MotionValue` to track the state and velocity of a value.\r\n *\r\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\r\n *\r\n * ```jsx\r\n * export const MyComponent = () => {\r\n *   const scale = useMotionValue(1)\r\n *\r\n *   return <motion.div style={{ scale }} />\r\n * }\r\n * ```\r\n *\r\n * @param initial - The initial state.\r\n *\r\n * @public\r\n */\r\nfunction useMotionValue(initial) {\r\n    const value = useConstant(() => motionValue(initial));\r\n    /**\r\n     * If this motion value is being used in static mode, like on\r\n     * the Framer canvas, force components to rerender when the motion\r\n     * value is updated.\r\n     */\r\n    const { isStatic } = useContext(MotionConfigContext);\r\n    if (isStatic) {\r\n        const [, setLatest] = useState(initial);\r\n        useEffect(() => value.on(\"change\", setLatest), []);\r\n    }\r\n    return value;\r\n}\r\n\r\nexport { useMotionValue };\r\n","import { useContext, useRef, useInsertionEffect } from 'react';\r\nimport { animateValue } from '../animation/animators/MainThreadAnimation.mjs';\r\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\r\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\r\nimport { useMotionValue } from './use-motion-value.mjs';\r\nimport { isMotionValue } from './utils/is-motion-value.mjs';\r\nimport { frame, frameData } from '../frameloop/frame.mjs';\r\n\r\nfunction toNumber(v) {\r\n    if (typeof v === \"number\")\r\n        return v;\r\n    return parseFloat(v);\r\n}\r\n/**\r\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\r\n *\r\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\r\n * to another `MotionValue`.\r\n *\r\n * @remarks\r\n *\r\n * ```jsx\r\n * const x = useSpring(0, { stiffness: 300 })\r\n * const y = useSpring(x, { damping: 10 })\r\n * ```\r\n *\r\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\r\n * @param springConfig - Configuration options for the spring.\r\n * @returns `MotionValue`\r\n *\r\n * @public\r\n */\r\nfunction useSpring(source, config = {}) {\r\n    const { isStatic } = useContext(MotionConfigContext);\r\n    const activeSpringAnimation = useRef(null);\r\n    const value = useMotionValue(isMotionValue(source) ? toNumber(source.get()) : source);\r\n    const latestValue = useRef(value.get());\r\n    const latestSetter = useRef(() => { });\r\n    const startAnimation = () => {\r\n        /**\r\n         * If the previous animation hasn't had the chance to even render a frame, render it now.\r\n         */\r\n        const animation = activeSpringAnimation.current;\r\n        if (animation && animation.time === 0) {\r\n            animation.sample(frameData.delta);\r\n        }\r\n        stopAnimation();\r\n        activeSpringAnimation.current = animateValue({\r\n            keyframes: [value.get(), latestValue.current],\r\n            velocity: value.getVelocity(),\r\n            type: \"spring\",\r\n            restDelta: 0.001,\r\n            restSpeed: 0.01,\r\n            ...config,\r\n            onUpdate: latestSetter.current,\r\n        });\r\n    };\r\n    const stopAnimation = () => {\r\n        if (activeSpringAnimation.current) {\r\n            activeSpringAnimation.current.stop();\r\n        }\r\n    };\r\n    useInsertionEffect(() => {\r\n        return value.attach((v, set) => {\r\n            /**\r\n             * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\r\n             * at that level, but this will work for now\r\n             */\r\n            if (isStatic)\r\n                return set(v);\r\n            latestValue.current = v;\r\n            latestSetter.current = set;\r\n            frame.update(startAnimation);\r\n            return value.get();\r\n        }, stopAnimation);\r\n    }, [JSON.stringify(config)]);\r\n    useIsomorphicLayoutEffect(() => {\r\n        if (isMotionValue(source)) {\r\n            return source.on(\"change\", (v) => value.set(toNumber(v)));\r\n        }\r\n    }, [value]);\r\n    return value;\r\n}\r\n\r\nexport { useSpring };\r\n","import { useRef, useState, useCallback } from \"react\";\r\nimport { motion, useMotionValue, useSpring } from \"framer-motion\";\r\nimport \"./TiltedCard.css\";\r\n\r\nconst springValues = {\r\n  damping: 30,\r\n  stiffness: 100,\r\n  mass: 2,\r\n};\r\n\r\nexport default function TiltedCard({\r\n  imageSrc,\r\n  altText = \"Tilted card image\",\r\n  captionText = \"\",\r\n  containerHeight = \"180px\",\r\n  containerWidth = \"180px\",\r\n  imageHeight = \"180px\",\r\n  imageWidth = \"180px\",\r\n  scaleOnHover = 1.1,\r\n  rotateAmplitude = 14,\r\n  showMobileWarning = true,\r\n  showTooltip = true,\r\n  overlayContent = null,\r\n  displayOverlayContent = false,\r\n  progressBarValue = 70,\r\n}) {\r\n  const ref = useRef(null);\r\n  const [lastY, setLastY] = useState(0);\r\n\r\n  const x = useMotionValue(0);\r\n  const y = useMotionValue(0);\r\n  const rotateX = useSpring(0, springValues);\r\n  const rotateY = useSpring(0, springValues);\r\n  const scale = useSpring(1, springValues);\r\n  const opacity = useSpring(0);\r\n  const rotateFigcaption = useSpring(0, { stiffness: 350, damping: 30, mass: 1 });\r\n  const progressBarScale = useSpring(1, springValues);\r\n\r\n  // Mouse move handler optimized\r\n  const handleMouse = useCallback(\r\n    (e) => {\r\n      if (!ref.current) return;\r\n\r\n      const rect = ref.current.getBoundingClientRect();\r\n      const offsetX = e.clientX - rect.left - rect.width / 2;\r\n      const offsetY = e.clientY - rect.top - rect.height / 2;\r\n\r\n      rotateX.set((offsetY / (rect.height / 2)) * -rotateAmplitude);\r\n      rotateY.set((offsetX / (rect.width / 2)) * rotateAmplitude);\r\n\r\n      x.set(e.clientX - rect.left);\r\n      y.set(e.clientY - rect.top);\r\n\r\n      const velocityY = offsetY - lastY;\r\n      rotateFigcaption.set(-velocityY * 0.6);\r\n      setLastY(offsetY);\r\n    },\r\n    [lastY, rotateX, rotateY, x, y, rotateFigcaption] // Only re-create if dependencies change\r\n  );\r\n\r\n  // Mouse enter/leave handlers for hover effect\r\n  const handleMouseEnter = useCallback(() => {\r\n    scale.set(scaleOnHover);\r\n    opacity.set(1);\r\n    progressBarScale.set(1.2);\r\n  }, [scale, opacity, progressBarScale, scaleOnHover]);\r\n\r\n  const handleMouseLeave = useCallback(() => {\r\n    opacity.set(0);\r\n    scale.set(1);\r\n    rotateX.set(0);\r\n    rotateY.set(0);\r\n    rotateFigcaption.set(0);\r\n    progressBarScale.set(1);\r\n  }, [opacity, scale, rotateX, rotateY, rotateFigcaption, progressBarScale]);\r\n\r\n  return (\r\n    <figure\r\n      ref={ref}\r\n      className=\"tilted-card-figure\"\r\n      style={{ height: containerHeight, width: containerWidth }}\r\n      onMouseMove={handleMouse}\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n    >\r\n      {showMobileWarning && (\r\n        <div className=\"tilted-card-mobile-alert\">\r\n          This effect is not optimized for mobile. Check on desktop.\r\n        </div>\r\n      )}\r\n\r\n      <motion.div\r\n        className=\"tilted-card-inner\"\r\n        style={{\r\n          width: imageWidth,\r\n          height: imageHeight,\r\n          rotateX,\r\n          rotateY,\r\n          scale,\r\n        }}\r\n      >\r\n        <motion.img\r\n          src={imageSrc}\r\n          alt={altText}\r\n          className=\"tilted-card-img\"\r\n          style={{ width: imageWidth, height: imageHeight }}\r\n        />\r\n\r\n        {displayOverlayContent && overlayContent && (\r\n          <motion.div className=\"tilted-card-overlay\">{overlayContent}</motion.div>\r\n        )}\r\n      </motion.div>\r\n\r\n      {/* Motion Progress Bar */}\r\n      <motion.div\r\n        className=\"progress-bar-container\"\r\n        style={{\r\n          rotateX,\r\n          rotateY,\r\n          scale: progressBarScale,\r\n          opacity,\r\n          transformStyle: \"preserve-3d\",\r\n        }}\r\n      >\r\n        <motion.div\r\n          className=\"progress-bar-fill\"\r\n          style={{\r\n            width: `${progressBarValue}%`,\r\n            backgroundColor: \"#0084ff\",\r\n            height: \"100%\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n        />\r\n      </motion.div>\r\n\r\n      {showTooltip && (\r\n        <motion.figcaption\r\n          className=\"tilted-card-caption\"\r\n          style={{\r\n            x,\r\n            y,\r\n            opacity,\r\n            rotate: rotateFigcaption,\r\n          }}\r\n        >\r\n          {captionText}\r\n        </motion.figcaption>\r\n      )}\r\n    </figure>\r\n  );\r\n}\r\n","import React, { useRef, useEffect } from 'react';\r\nimport TiltedCard from '../blocks/Components/TiltedCard/TiltedCard'; // Import the TiltedCard component\r\n\r\n\r\nconst SkillsSection = () => {\r\n  const skills = [\r\n    { imageSrc: './assets/Blender.png', captionText: 'Blender', progressBarValue: 80, leveltext:'Expertise' },\r\n    { imageSrc: './assets/unreal-engine.png', captionText: 'Unreal Engine', progressBarValue: 60, leveltext:'Expertise' },\r\n    { imageSrc: './assets/adobe-photoshop.png', captionText: 'Photoshop', progressBarValue: 80, leveltext:'Expertise' },\r\n    { imageSrc: './assets/Html.png', captionText: 'Unreal Engine', progressBarValue: 60, leveltext:'Expertise' },\r\n    { imageSrc: './assets/CSS.png', captionText: 'Unreal Engine', progressBarValue: 60, leveltext:'Expertise' },\r\n    { imageSrc: './assets/Javascript.png', captionText: 'Unreal Engine', progressBarValue: 60, leveltext:'Expertise' },\r\n    { imageSrc: './assets/Verge3d.png', captionText: 'Unreal Engine', progressBarValue: 60, leveltext:'Expertise' },\r\n  ];\r\n\r\n  const sectionRef = useRef(null); // Reference for the whole skills section\r\n\r\n  // Handle mouse movement for parallax effect\r\n  const handleMouseMove = (e) => {\r\n    const { clientX: mouseX, clientY: mouseY } = e;\r\n    const { offsetWidth: width, offsetHeight: height } = sectionRef.current;\r\n\r\n    const centerX = width / 2;\r\n    const centerY = height / 2;\r\n\r\n    // Calculate the relative mouse position\r\n    const deltaX = (mouseX - centerX) / centerX;\r\n    const deltaY = (mouseY - centerY) / centerY;\r\n\r\n    // Apply even more subtle 3D effect on the entire skills section\r\n    sectionRef.current.style.transform = `perspective(1200px) rotateX(${deltaY * 2}deg) rotateY(${deltaX * 2}deg)`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const section = sectionRef.current;\r\n\r\n    // Add event listener for mousemove\r\n    const onMouseMove = (e) => {\r\n      requestAnimationFrame(() => handleMouseMove(e)); // Smooth, real-time changes\r\n    };\r\n\r\n    section.addEventListener('mousemove', onMouseMove);\r\n\r\n    // Cleanup the event listener when the component is unmounted\r\n    return () => {\r\n      section.removeEventListener('mousemove', onMouseMove);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"skills-section\" ref={sectionRef}>\r\n\r\n\r\n      {/* Glass effect container with camera perspective */}\r\n      <div className=\"skills-container-wrapper\">\r\n        <div className=\"skills-container\">\r\n          {skills.map((skill, index) => (\r\n            <TiltedCard\r\n              key={index}\r\n              imageSrc={skill.imageSrc}\r\n              captionText={skill.captionText}\r\n              progressBarValue={skill.progressBarValue}\r\n              containerHeight=\"200px\"\r\n              containerWidth=\"200px\"\r\n              scaleOnHover={1.1}\r\n              rotateAmplitude={14}\r\n              displayOverlayContent={true}\r\n              overlayContent={<div>{skill.leveltext}</div>}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SkillsSection;\r\n"],"names":["useMotionValue","initial","value","isStatic","useContext","MotionConfigContext","setLatest","useState","useEffect","on","toNumber","v","parseFloat","useSpring","source","config","activeSpringAnimation","useRef","get","latestValue","latestSetter","startAnimation","animation","current","time","sample","delta","stopAnimation","keyframes","velocity","getVelocity","type","restDelta","restSpeed","onUpdate","stop","useInsertionEffect","attach","set","update","JSON","stringify","springValues","damping","stiffness","mass","TiltedCard","_ref","imageSrc","altText","captionText","containerHeight","containerWidth","imageHeight","imageWidth","scaleOnHover","rotateAmplitude","showMobileWarning","showTooltip","overlayContent","displayOverlayContent","progressBarValue","ref","lastY","setLastY","x","y","rotateX","rotateY","scale","opacity","rotateFigcaption","progressBarScale","handleMouse","useCallback","e","rect","getBoundingClientRect","offsetX","clientX","left","width","offsetY","clientY","top","height","velocityY","handleMouseEnter","handleMouseLeave","React","createElement","className","style","onMouseMove","onMouseEnter","onMouseLeave","motion","div","img","src","alt","transformStyle","concat","backgroundColor","borderRadius","figcaption","rotate","SkillsSection","sectionRef","section","requestAnimationFrame","mouseX","mouseY","offsetWidth","offsetHeight","centerX","centerY","deltaX","deltaY","transform","handleMouseMove","addEventListener","removeEventListener","leveltext","map","skill","index","key"],"sourceRoot":""}