{"version":3,"file":"646.bundle.js","mappings":"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","sources":["webpack://my-3d-portfolio/./src/blocks/Components/TiltedCard/TiltedCard.jsx","webpack://my-3d-portfolio/./src/components/Skills.js"],"sourcesContent":["import { useRef, useState } from \"react\";\nimport { motion, useMotionValue, useSpring } from \"framer-motion\";\nimport \"./TiltedCard.css\";\nimport React from \"react\";\n\nconst springValues = {\n  damping: 30,\n  stiffness: 100,\n  mass: 2,\n};\n\nexport default function TiltedCard({\n  imageSrc,\n  altText = \"Tilted card image\",\n  captionText = \"\",\n  containerHeight = \"180px\",\n  containerWidth = \"180px\",\n  imageHeight = \"180px\",\n  imageWidth = \"180px\",\n  scaleOnHover = 1.1,\n  rotateAmplitude = 14,\n  showMobileWarning = true,\n  showTooltip = true,\n  overlayContent = null,\n  displayOverlayContent = false,\n  progressBarValue = 70, // Example progress bar value\n}) {\n  const ref = useRef(null);\n\n  const x = useMotionValue();\n  const y = useMotionValue();\n  const rotateX = useSpring(useMotionValue(0), springValues);\n  const rotateY = useSpring(useMotionValue(0), springValues);\n  const scale = useSpring(1, springValues);\n  const opacity = useSpring(0);\n  const rotateFigcaption = useSpring(0, {\n    stiffness: 350,\n    damping: 30,\n    mass: 1,\n  });\n  const progressBarScale = useSpring(1, springValues); // New spring for scaling the progress bar\n\n  const [lastY, setLastY] = useState(0);\n\n  function handleMouse(e) {\n    if (!ref.current) return;\n\n    const rect = ref.current.getBoundingClientRect();\n    const offsetX = e.clientX - rect.left - rect.width / 2;\n    const offsetY = e.clientY - rect.top - rect.height / 2;\n\n    const rotationX = (offsetY / (rect.height / 2)) * -rotateAmplitude;\n    const rotationY = (offsetX / (rect.width / 2)) * rotateAmplitude;\n\n    rotateX.set(rotationX);\n    rotateY.set(rotationY);\n\n    x.set(e.clientX - rect.left);\n    y.set(e.clientY - rect.top);\n\n    const velocityY = offsetY - lastY;\n    rotateFigcaption.set(-velocityY * 0.6);\n    setLastY(offsetY);\n  }\n\n  function handleMouseEnter() {\n    scale.set(scaleOnHover);\n    opacity.set(1);\n    progressBarScale.set(1.2); // Increase scale on hover for the progress bar\n  }\n\n  function handleMouseLeave() {\n    opacity.set(0);\n    scale.set(1);\n    rotateX.set(0);\n    rotateY.set(0);\n    rotateFigcaption.set(0);\n    progressBarScale.set(1); // Reset scale for the progress bar\n  }\n\n  return (\n    <figure\n      ref={ref}\n      className=\"tilted-card-figure\"\n      style={{\n        height: containerHeight,\n        width: containerWidth,\n      }}\n      onMouseMove={handleMouse}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      {showMobileWarning && (\n        <div className=\"tilted-card-mobile-alert\">\n          This effect is not optimized for mobile. Check on desktop.\n        </div>\n      )}\n\n      <motion.div\n        className=\"tilted-card-inner\"\n        style={{\n          width: imageWidth,\n          height: imageHeight,\n          rotateX,\n          rotateY,\n          scale,\n        }}\n      >\n        <motion.img\n          src={imageSrc}\n          alt={altText}\n          className=\"tilted-card-img\"\n          style={{\n            width: imageWidth,\n            height: imageHeight,\n          }}\n        />\n\n        {displayOverlayContent && overlayContent && (\n          <motion.div className=\"tilted-card-overlay\">\n            {overlayContent}\n          </motion.div>\n        )}\n      </motion.div>\n\n      {/* Motion Progress Bar Container with Tilt and Scale */}\n      <motion.div\n        className=\"progress-bar-container\"\n        style={{\n          rotateX,\n          rotateY,\n          scale: progressBarScale, // Apply scaling here\n          opacity,\n          transformStyle: \"preserve-3d\",\n        }}\n      >\n        <motion.div\n          className=\"progress-bar-fill\"\n          style={{\n            width: `${progressBarValue}%`, // Dynamically controlled by the progressBarValue prop\n            backgroundColor: \"#4caf50\", // Green color for progress\n            height: \"100%\", // Full height of the container\n            borderRadius: \"5px\",\n          }}\n        />\n      </motion.div>\n\n      {showTooltip && (\n        <motion.figcaption\n          className=\"tilted-card-caption\"\n          style={{\n            x,\n            y,\n            opacity,\n            rotate: rotateFigcaption,\n          }}\n        >\n          {captionText}\n        </motion.figcaption>\n      )}\n    </figure>\n  );\n}\n","import React, { useRef, useEffect } from 'react';\nimport TiltedCard from '../blocks/Components/TiltedCard/TiltedCard'; // Import the TiltedCard component\n\n\nconst SkillsSection = () => {\n  const skills = [\n    { imageSrc: './assets/Blender.png', captionText: 'Blender', progressBarValue: 80 },\n    { imageSrc: '/assets/unreal-engine.png', captionText: 'Unreal Engine', progressBarValue: 60 },\n    { imageSrc: '/assets/adobe-photoshop.png', captionText: 'Photoshop', progressBarValue: 80 },\n    { imageSrc: '/assets/adobe-photoshop.png', captionText: 'Photoshop', progressBarValue: 80 },\n    { imageSrc: '/assets/unreal-engine.png', captionText: 'Unreal Engine', progressBarValue: 60 },\n    { imageSrc: '/assets/unreal-engine.png', captionText: 'Unreal Engine', progressBarValue: 60 },\n    { imageSrc: '/assets/unreal-engine.png', captionText: 'Unreal Engine', progressBarValue: 60 },\n    { imageSrc: '/assets/unreal-engine.png', captionText: 'Unreal Engine', progressBarValue: 60 },\n  ];\n\n  const sectionRef = useRef(null); // Reference for the whole skills section\n\n  // Handle mouse movement for parallax effect\n  const handleMouseMove = (e) => {\n    const { clientX: mouseX, clientY: mouseY } = e;\n    const { offsetWidth: width, offsetHeight: height } = sectionRef.current;\n\n    const centerX = width / 2;\n    const centerY = height / 2;\n\n    // Calculate the relative mouse position\n    const deltaX = (mouseX - centerX) / centerX;\n    const deltaY = (mouseY - centerY) / centerY;\n\n    // Apply even more subtle 3D effect on the entire skills section\n    sectionRef.current.style.transform = `perspective(1200px) rotateX(${deltaY * 2}deg) rotateY(${deltaX * 2}deg)`;\n  };\n\n  useEffect(() => {\n    const section = sectionRef.current;\n\n    // Add event listener for mousemove\n    const onMouseMove = (e) => {\n      requestAnimationFrame(() => handleMouseMove(e)); // Smooth, real-time changes\n    };\n\n    section.addEventListener('mousemove', onMouseMove);\n\n    // Cleanup the event listener when the component is unmounted\n    return () => {\n      section.removeEventListener('mousemove', onMouseMove);\n    };\n  }, []);\n\n  return (\n    <section className=\"skills-section\" ref={sectionRef}>\n\n\n      {/* Glass effect container with camera perspective */}\n      <div className=\"skills-container-wrapper\">\n        <div className=\"skills-container\">\n          {skills.map((skill, index) => (\n            <TiltedCard\n              key={index}\n              imageSrc={skill.imageSrc}\n              captionText={skill.captionText}\n              progressBarValue={skill.progressBarValue}\n              containerHeight=\"200px\"\n              containerWidth=\"200px\"\n              scaleOnHover={1.1}\n              rotateAmplitude={14}\n              displayOverlayContent={true}\n              overlayContent={<div>{skill.captionText}</div>}\n            />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default SkillsSection;\n"],"names":["springValues","damping","stiffness","mass","TiltedCard","_ref","imageSrc","altText","captionText","containerHeight","containerWidth","imageHeight","imageWidth","scaleOnHover","rotateAmplitude","showMobileWarning","showTooltip","overlayContent","displayOverlayContent","progressBarValue","ref","useRef","x","useMotionValue","y","rotateX","useSpring","rotateY","scale","opacity","rotateFigcaption","progressBarScale","lastY","setLastY","useState","React","className","style","height","width","onMouseMove","e","current","rect","getBoundingClientRect","offsetX","clientX","left","offsetY","clientY","top","rotationX","rotationY","set","velocityY","onMouseEnter","onMouseLeave","motion","div","img","src","alt","transformStyle","concat","backgroundColor","borderRadius","figcaption","rotate","SkillsSection","sectionRef","useEffect","section","requestAnimationFrame","mouseX","mouseY","offsetWidth","offsetHeight","centerX","centerY","deltaX","deltaY","transform","handleMouseMove","addEventListener","removeEventListener","map","skill","index","key"],"sourceRoot":""}