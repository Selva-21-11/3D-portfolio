{"version":3,"file":"811.bundle.js","mappings":";qHASiBA,EAAE,EAAQ,MAASC,EAAEC,OAAOC,IAAI,iBAAgDC,GAA7BF,OAAOC,IAAI,kBAAoBE,OAAOC,UAAUC,gBAAeC,EAAER,EAAES,mDAAmDC,kBAAkBC,EAAE,CAACC,KAAI,EAAGC,KAAI,EAAGC,QAAO,EAAGC,UAAS,GAChP,SAASC,EAAEC,EAAEC,EAAEC,GAAG,IAAIC,EAAEC,EAAE,CAAC,EAAEC,EAAE,KAAKC,EAAE,KAAiF,IAAIH,UAAhF,IAASD,IAAIG,EAAE,GAAGH,QAAG,IAASD,EAAEN,MAAMU,EAAE,GAAGJ,EAAEN,UAAK,IAASM,EAAEL,MAAMU,EAAEL,EAAEL,KAAcK,EAAEd,EAAEoB,KAAKN,EAAEE,KAAKT,EAAEJ,eAAea,KAAKC,EAAED,GAAGF,EAAEE,IAAI,GAAGH,GAAGA,EAAEQ,aAAa,IAAIL,KAAKF,EAAED,EAAEQ,kBAAe,IAASJ,EAAED,KAAKC,EAAED,GAAGF,EAAEE,IAAI,MAAM,CAACM,SAASzB,EAAE0B,KAAKV,EAAEL,IAAIU,EAAET,IAAIU,EAAEK,MAAMP,EAAEQ,OAAOrB,EAAEsB,QAAQ,CAAoBC,EAAQC,IAAIhB,EAAEe,EAAQE,KAAKjB,kBCPxWkB,EAAOH,QAAU,EAAjB,uGCQF,MAAMI,EAAe,CAACC,EAAOC,MAEZ,WAATA,GAKiB,iBAAVD,IAAsBE,MAAMC,QAAQH,KAE1B,iBAAVA,IACNI,EAAA,EAAQC,KAAKL,IAAoB,MAAVA,GACvBA,EAAMM,WAAW,wBCP1B,MAAMC,EACF,WAAAC,EAAY,SAAEC,GAAW,EAAI,MAAEC,EAAQ,EAAC,KAAEnB,EAAO,YAAW,OAAEoB,EAAS,EAAC,YAAEC,EAAc,EAAC,WAAEC,EAAa,UAAWC,IAE/GC,KAAKC,WAAY,EACjBD,KAAKE,qBAAsB,EAC3BF,KAAKG,UAAY,IAAKC,MACtBJ,KAAKD,QAAU,CACXL,WACAC,QACAnB,OACAoB,SACAC,cACAC,gBACGC,GAEPC,KAAKK,uBACT,CAWA,aAAAC,GACI,OAAKN,KAAKO,YAEHP,KAAKO,WAAaP,KAAKG,UA/BZ,GAgCZH,KAAKO,WAFAP,KAAKG,SAIpB,CAMA,YAAIK,GAIA,OAHKR,KAAKS,WAAcT,KAAKE,sBACzB,SAEGF,KAAKS,SAChB,CAMA,mBAAAC,CAAoBC,EAAWC,GAC3BZ,KAAKO,WAAa,IAAKH,MACvBJ,KAAKE,qBAAsB,EAC3B,MAAM,KAAEhB,EAAI,KAAEV,EAAI,SAAEqC,EAAQ,MAAElB,EAAK,WAAEmB,EAAU,SAAEC,EAAQ,YAAEC,GAAiBhB,KAAKD,QAKjF,IAAKiB,IC5Db,SAAoBL,EAAWzB,EAAMV,EAAMqC,GAMvC,MAAMI,EAAiBN,EAAU,GACjC,GAAuB,OAAnBM,EACA,OAAO,EAMX,GAAa,YAAT/B,GAA+B,eAATA,EACtB,OAAO,EACX,MAAMgC,EAAiBP,EAAUA,EAAUQ,OAAS,GAC9CC,EAAqBpC,EAAaiC,EAAgB/B,GAClDmC,EAAqBrC,EAAakC,EAAgBhC,GAGxD,OAFA,OAAQkC,IAAuBC,EAAoB,6BAA6BnC,WAAc+B,UAAuBC,OAAoBD,+DAA4EA,8BAA2CC,oCAE3PE,IAAuBC,KA9BhC,SAA6BV,GACzB,MAAMhC,EAAUgC,EAAU,GAC1B,GAAyB,IAArBA,EAAUQ,OACV,OAAO,EACX,IAAK,IAAIG,EAAI,EAAGA,EAAIX,EAAUQ,OAAQG,IAClC,GAAIX,EAAUW,KAAO3C,EACjB,OAAO,CAEnB,CAyBY4C,CAAoBZ,KACb,WAATnC,IAAqB,QAAYA,KAAUqC,EACrD,CDkC6BW,CAAWb,EAAWzB,EAAMV,EAAMqC,GAAW,CAE9D,GAAI,IAAsBlC,UAAYgB,EAKlC,OAJAoB,GACIA,GAAS,OAAiBJ,EAAWX,KAAKD,QAASa,IACvDE,GAAcA,SACdd,KAAKyB,yBAKLzB,KAAKD,QAAQ2B,SAAW,CAEhC,CACA,MAAMC,EAAoB3B,KAAK4B,aAAajB,EAAWC,IAC7B,IAAtBe,IAEJ3B,KAAKS,UAAY,CACbE,YACAC,mBACGe,GAEP3B,KAAK6B,iBACT,CACA,cAAAA,GAAmB,CAMnB,IAAAC,CAAKC,EAASC,GACV,OAAOhC,KAAKiC,uBAAuBH,KAAKC,EAASC,EACrD,CACA,OAAAE,GACIlC,KAAKD,QAAQvB,KAAO,YACpBwB,KAAKD,QAAQoC,KAAO,QACxB,CACA,qBAAA9B,GACIL,KAAKiC,uBAAyB,IAAIG,SAASL,IACvC/B,KAAKyB,uBAAyBM,CAAO,GAE7C,8GEjHJ,SAASM,EAAS7E,EAAGK,EAAGyE,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACD9E,EAAc,GAATK,EAAIL,GAAS8E,EACzBA,EAAI,GACGzE,EACPyE,EAAI,EAAI,EACD9E,GAAKK,EAAIL,IAAM,EAAI,EAAI8E,GAAK,EAChC9E,CACX,mCCbA,SAAS+E,EAAaxE,EAAGE,GACrB,OAAQT,GAAOA,EAAI,EAAIS,EAAIF,CAC/B,CCSA,MAAMyE,EAAiB,CAACC,EAAMC,EAAIC,KAC9B,MAAMC,EAAWH,EAAOA,EAClBI,EAAOF,GAAKD,EAAKA,EAAKE,GAAYA,EACxC,OAAOC,EAAO,EAAI,EAAIC,KAAKC,KAAKF,EAAK,EAEnCG,EAAa,CAACC,EAAA,EAAKC,EAAA,EAAMC,EAAA,GAE/B,SAASC,EAAOC,GACZ,MAAM7E,GAFYmE,EAEQU,EAFFL,EAAWM,MAAM9E,GAASA,EAAKc,KAAKqD,MAA3C,IAACA,EAIlB,IADA,OAAQY,QAAQ/E,GAAO,IAAI6E,0EACtBE,QAAQ/E,GACT,OAAO,EACX,IAAIgF,EAAQhF,EAAKiF,MAAMJ,GAKvB,OAJI7E,IAAS2E,EAAA,IAETK,EFZR,UAAoB,IAAEE,EAAG,WAAEC,EAAU,UAAEC,EAAS,MAAEC,IAC9CH,GAAO,IAEPE,GAAa,IACb,IAAIE,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALAL,GAAc,IAQT,CACD,MAAM9F,EAAI+F,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrCnG,EAAI,EAAIoG,EAAY/F,EAC1BiG,EAAMzB,EAAS7E,EAAGK,EAAG6F,EAAM,EAAI,GAC/BK,EAAQ1B,EAAS7E,EAAGK,EAAG6F,GACvBM,EAAO3B,EAAS7E,EAAGK,EAAG6F,EAAM,EAAI,EACpC,MAVII,EAAMC,EAAQC,EAAOJ,EAWzB,MAAO,CACHE,IAAKhB,KAAKmB,MAAY,IAANH,GAChBC,MAAOjB,KAAKmB,MAAc,IAARF,GAClBC,KAAMlB,KAAKmB,MAAa,IAAPD,GACjBH,QAER,CEbgBK,CAAWV,IAEhBA,CACX,CACA,MAAMW,EAAW,CAAC1B,EAAMC,KACpB,MAAM0B,EAAWhB,EAAOX,GAClB4B,EAASjB,EAAOV,GACtB,IAAK0B,IAAaC,EACd,OAAO9B,EAAaE,EAAMC,GAE9B,MAAM4B,EAAU,IAAKF,GACrB,OAAQzB,IACJ2B,EAAQR,IAAMtB,EAAe4B,EAASN,IAAKO,EAAOP,IAAKnB,GACvD2B,EAAQP,MAAQvB,EAAe4B,EAASL,MAAOM,EAAON,MAAOpB,GAC7D2B,EAAQN,KAAOxB,EAAe4B,EAASJ,KAAMK,EAAOL,KAAMrB,GAC1D2B,EAAQT,OAAQ,OAAUO,EAASP,MAAOQ,EAAOR,MAAOlB,GACjDO,EAAA,EAAKqB,UAAUD,GACzB,6CC3CL,MAAME,EAAkB,IAAIC,IAAI,CAAC,OAAQ,WCUzC,SAASC,EAAU3G,EAAGE,GAClB,OAAQT,IAAM,OAAYO,EAAGE,EAAGT,EACpC,CACA,SAASmH,EAAS5G,GACd,MAAiB,iBAANA,EACA2G,EAEW,iBAAN3G,GACL,OAAmBA,GACpBwE,EACAc,EAAA,EAAM/D,KAAKvB,GACPoG,EACAS,EAELzF,MAAMC,QAAQrB,GACZ8G,EAEW,iBAAN9G,EACLsF,EAAA,EAAM/D,KAAKvB,GAAKoG,EAAWW,EAE/BvC,CACX,CACA,SAASsC,EAAS9G,EAAGE,GACjB,MAAM8G,EAAS,IAAIhH,GACbiH,EAAYD,EAAO5D,OACnB8D,EAAalH,EAAEmH,KAAI,CAACvC,EAAGrB,IAAMqD,EAAShC,EAATgC,CAAYhC,EAAG1E,EAAEqD,MACpD,OAAQ9D,IACJ,IAAK,IAAI8D,EAAI,EAAGA,EAAI0D,EAAW1D,IAC3ByD,EAAOzD,GAAK2D,EAAW3D,GAAG9D,GAE9B,OAAOuH,CAAM,CAErB,CACA,SAASD,EAAU/G,EAAGE,GAClB,MAAM8G,EAAS,IAAKhH,KAAME,GACpBgH,EAAa,CAAC,EACpB,IAAK,MAAMxH,KAAOsH,OACCI,IAAXpH,EAAEN,SAAiC0H,IAAXlH,EAAER,KAC1BwH,EAAWxH,GAAOkH,EAAS5G,EAAEN,GAAXkH,CAAiB5G,EAAEN,GAAMQ,EAAER,KAGrD,OAAQkF,IACJ,IAAK,MAAMlF,KAAOwH,EACdF,EAAOtH,GAAOwH,EAAWxH,GAAKkF,GAElC,OAAOoC,CAAM,CAErB,CAcA,MAAMH,EAAa,CAACQ,EAAQC,KACxB,MAAMC,EAAWjG,EAAA,EAAQkG,kBAAkBF,GACrCG,GAAc,OAAoBJ,GAClCK,GAAc,OAAoBJ,GAIxC,OAHuBG,EAAYE,QAAQC,IAAIxE,SAAWsE,EAAYC,QAAQC,IAAIxE,QAC9EqE,EAAYE,QAAQrC,MAAMlC,SAAWsE,EAAYC,QAAQrC,MAAMlC,QAC/DqE,EAAYE,QAAQE,OAAOzE,QAAUsE,EAAYC,QAAQE,OAAOzE,OAE3DqD,EAAgBqB,IAAIT,KACpBK,EAAYK,OAAO3E,QACnBqD,EAAgBqB,IAAIR,KAChBG,EAAYM,OAAO3E,OD5EpC,SAAuBiE,EAAQC,GAC3B,OAAIb,EAAgBqB,IAAIT,GACZ5H,GAAOA,GAAK,EAAI4H,EAASC,EAGzB7H,GAAOA,GAAK,EAAI6H,EAASD,CAEzC,CCsEmBW,CAAcX,EAAQC,IAE1B,EAAAW,EAAA,GAAKnB,EA3BpB,SAAoBO,EAAQC,GACxB,IAAIY,EACJ,MAAMC,EAAgB,GAChBC,EAAW,CAAE9C,MAAO,EAAGsC,IAAK,EAAGC,OAAQ,GAC7C,IAAK,IAAItE,EAAI,EAAGA,EAAI+D,EAAOS,OAAO3E,OAAQG,IAAK,CAC3C,MAAM9C,EAAO6G,EAAOe,MAAM9E,GACpB+E,EAAcjB,EAAOM,QAAQlH,GAAM2H,EAAS3H,IAC5C8H,EAAoD,QAArCL,EAAKb,EAAOU,OAAOO,UAAiC,IAAPJ,EAAgBA,EAAK,EACvFC,EAAc5E,GAAKgF,EACnBH,EAAS3H,IACb,CACA,OAAO0H,CACX,CAe6BK,CAAWf,EAAaC,GAAcA,EAAYK,QAASR,KAGhF,QAAQ,EAAM,mBAAmBF,WAAgBC,6KAC1C9C,EAAa6C,EAAQC,GAChC,ECvFJ,SAASmB,EAAI/D,EAAMC,EAAIlF,GACnB,MAAoB,iBAATiF,GACO,iBAAPC,GACM,iBAANlF,GACA,OAAUiF,EAAMC,EAAIlF,GAEjBmH,EAASlC,EAChBgE,CAAMhE,EAAMC,EACvB,eCRA,SAASgE,EAAsBC,EAAcrE,EAAG3D,GAC5C,MAAMiI,EAAQ9D,KAAK+D,IAAIvE,EAFI,EAEwB,GACnD,OAAO,OAAkB3D,EAAUgI,EAAaC,GAAQtE,EAAIsE,EAChE,CCNA,MAAME,EAYY,IAZZA,EAaW,EAbXA,EAgBY,KAhBZA,EAiBW,GCuDjB,MAAMC,EAAiB,GAQvB,SAASC,EAAgBC,EAAcC,GACnC,OAAOD,EAAenE,KAAKC,KAAK,EAAImE,EAAeA,EACvD,CC3EA,MAAMC,EAAe,CAAC,WAAY,UAC5BC,EAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,EAAatH,EAASuH,GAC3B,OAAOA,EAAKC,MAAM9J,QAAyB0H,IAAjBpF,EAAQtC,IACtC,CAuCA,SAAS+J,EAAOC,EFzCI,GEyCqDC,EF1C7D,IE2CR,MAAM3H,EAA6C,iBAA5B0H,EACjB,CACEE,eAAgBF,EAChB9G,UAAW,CAAC,EAAG,GACf+G,UAEFD,EACN,IAAI,UAAEG,EAAS,UAAEC,GAAc9H,EAC/B,MAAMqF,EAASrF,EAAQY,UAAU,GAC3B0E,EAAStF,EAAQY,UAAUZ,EAAQY,UAAUQ,OAAS,GAKtD2G,EAAQ,CAAEC,MAAM,EAAO9I,MAAOmG,IAC9B,UAAE4C,EAAS,QAAEC,EAAO,KAAEC,EAAI,SAAExG,EAAQ,SAAEb,EAAQ,uBAAEsH,GAtD1D,SAA0BpI,GACtB,IAAIqI,EAAgB,CAChBvH,SFTM,EEUNmH,UFbO,IEcPC,QFbK,GEcLC,KFbE,EEcFC,wBAAwB,KACrBpI,GAGP,IAAKsH,EAAatH,EAASqH,IACvBC,EAAatH,EAASoH,GACtB,GAAIpH,EAAQ4H,eAAgB,CACxB,MAAMA,EAAiB5H,EAAQ4H,eACzBU,EAAQ,EAAIvF,KAAKwF,IAAwB,IAAjBX,GACxBK,EAAYK,EAAOA,EACnBJ,EAAU,GACZ,EAAAM,EAAA,GAAM,IAAM,EAAG,GAAKxI,EAAQ2H,QAAU,IACtC5E,KAAKC,KAAKiF,GACdI,EAAgB,IACTA,EACHF,KF7BN,EE8BMF,YACAC,UAER,KACK,CACD,MAAMO,EDlClB,UAAoB,SAAE9G,EDER,ICF0C,OAAEgG,EDG9C,GCH4E,SAAE7G,EDA5E,ECA8G,KAAEqH,EDDpH,ICEN,IAAIO,EACAC,GACJ,OAAQhH,IAAY,ODaP,ICb0D,8CACvE,IAAIwF,EAAe,EAAIQ,EAIvBR,GAAe,EAAAqB,EAAA,GDSH,IACA,ECV+DrB,GAC3ExF,GAAW,EAAA6G,EAAA,GDME,IACA,ICP4D,OAAsB7G,IAC3FwF,EAAe,GAIfuB,EAAYxB,IACR,MAAM0B,EAAmB1B,EAAeC,EAClC0B,EAAQD,EAAmBjH,EAIjC,MArBI,MAkBMiH,EAAmB9H,GACnBmG,EAAgBC,EAAcC,GAC9BpE,KAAK+F,KAAKD,EACQ,EAEhCF,EAAczB,IACV,MACM2B,EADmB3B,EAAeC,EACPxF,EAC3BxD,EAAI0K,EAAQ/H,EAAWA,EACvB1C,EAAI2E,KAAKgG,IAAI5B,EAAc,GAAKpE,KAAKgG,IAAI7B,EAAc,GAAKvF,EAC5D7E,EAAIiG,KAAK+F,KAAKD,GACd5K,EAAIgJ,EAAgBlE,KAAKgG,IAAI7B,EAAc,GAAIC,GAErD,OA/BI,KA8BYuB,EAASxB,GAA0B,GAAK,EAAI,KACzC/I,EAAIC,GAAKtB,GAAMmB,CAAC,IAOvCyK,EAAYxB,GACEnE,KAAK+F,KAAK5B,EAAevF,KACxBuF,EAAepG,GAAYa,EAAW,GAC1C,KAEXgH,EAAczB,GACAnE,KAAK+F,KAAK5B,EAAevF,IACIA,EAAWA,GAAvCb,EAAWoG,KAI9B,MACMA,EAmBV,SAAyBwB,EAAUC,EAAYK,GAC3C,IAAIC,EAASD,EACb,IAAK,IAAIzH,EAAI,EAAGA,EAAIyF,EAAgBzF,IAChC0H,GAAkBP,EAASO,GAAUN,EAAWM,GAEpD,OAAOA,CACX,CAzByBC,CAAgBR,EAAUC,EAD1B,EAAIhH,GAGzB,GADAA,GAAW,OAAsBA,GAC7BwH,MAAMjC,GACN,MAAO,CACHe,UDxDG,ICyDHC,QDxDC,GCyDDvG,YAGH,CACD,MAAMsG,EAAYlF,KAAKgG,IAAI7B,EAAc,GAAKiB,EAC9C,MAAO,CACHF,YACAC,QAAwB,EAAff,EAAmBpE,KAAKC,KAAKmF,EAAOF,GAC7CtG,WAER,CACJ,CChC4ByH,CAAWpJ,GAC3BqI,EAAgB,IACTA,KACAI,EACHN,KFvCN,GEyCEE,EAAcD,wBAAyB,CAC3C,CAEJ,OAAOC,CACX,CAiBsFgB,CAAiB,IAC5FrJ,EACHc,WAAW,OAAsBd,EAAQc,UAAY,KAEnDwI,EAAkBxI,GAAY,EAC9BqG,EAAee,GAAW,EAAInF,KAAKC,KAAKiF,EAAYE,IACpDoB,EAAejE,EAASD,EACxBmE,GAAsB,OAAsBzG,KAAKC,KAAKiF,EAAYE,IAQlEsB,EAAkB1G,KAAK2G,IAAIH,GAAgB,EAOjD,IAAII,EACJ,GAPA9B,IAAcA,EAAY4B,EACpB1C,EACAA,GACNe,IAAcA,EAAY2B,EACpB1C,EACAA,GAEFI,EAAe,EAAG,CAClB,MAAMyC,EAAc3C,EAAgBuC,EAAqBrC,GAEzDwC,EAAiBpH,IACb,MAAMmG,EAAW3F,KAAK+F,KAAK3B,EAAeqC,EAAsBjH,GAChE,OAAQ+C,EACJoD,IACOY,EACCnC,EAAeqC,EAAsBD,GACrCK,EACA7G,KAAK8G,IAAID,EAAcrH,GACvBgH,EAAexG,KAAK+G,IAAIF,EAAcrH,GAAI,CAE9D,MACK,GAAqB,IAAjB4E,EAELwC,EAAiBpH,GAAM+C,EACnBvC,KAAK+F,KAAKU,EAAsBjH,IAC3BgH,GACID,EAAkBE,EAAsBD,GAAgBhH,OAEpE,CAED,MAAMwH,EAAoBP,EAAsBzG,KAAKC,KAAKmE,EAAeA,EAAe,GACxFwC,EAAiBpH,IACb,MAAMmG,EAAW3F,KAAK+F,KAAK3B,EAAeqC,EAAsBjH,GAE1DyH,EAAWjH,KAAKkH,IAAIF,EAAoBxH,EAAG,KACjD,OAAQ+C,EACHoD,IACKY,EACEnC,EAAeqC,EAAsBD,GACrCxG,KAAKmH,KAAKF,GACVD,EACIR,EACAxG,KAAKoH,KAAKH,IAClBD,CAAkB,CAElC,CACA,MAAMK,EAAY,CACdC,mBAAoBjC,GAAyBzG,GAAmB,KAChE2I,KAAO/H,IACH,MAAM3D,EAAU+K,EAAcpH,GAC9B,GAAK6F,EAmBDL,EAAMC,KAAOzF,GAAKZ,MAnBO,CACzB,IAAI4I,EAAkB,EAMlBpD,EAAe,IACfoD,EACU,IAANhI,GACM,OAAsB+G,GACtB3C,EAAsBgD,EAAepH,EAAG3D,IAEtD,MAAM4L,EAA2BzH,KAAK2G,IAAIa,IAAoB1C,EACxD4C,EAA+B1H,KAAK2G,IAAIpE,EAAS1G,IAAYkJ,EACnEC,EAAMC,KACFwC,GAA4BC,CACpC,CAKA,OADA1C,EAAM7I,MAAQ6I,EAAMC,KAAO1C,EAAS1G,EAC7BmJ,CAAK,EAEhB2C,SAAU,KACN,MAAML,EAAqBtH,KAAKkH,KAAI,QAAsBG,GAAY,MAChEO,GAAS,SAAsBC,GAAaR,EAAUE,KAAKD,EAAqBO,GAAU1L,OAAOmL,EAAoB,IAC3H,OAAOA,EAAqB,MAAQM,CAAM,GAGlD,OAAOP,CACX,CChKA,SAASS,GAAQ,UAAEjK,EAAS,SAAEE,EAAW,EAAG,MAAEgK,EAAQ,GAAG,aAAEC,EAAe,IAAG,cAAEC,EAAgB,GAAE,gBAAEC,EAAkB,IAAG,aAAEC,EAAY,IAAEjB,EAAG,IAAEnD,EAAG,UAAEgB,EAAY,GAAG,UAAED,IAC/J,MAAMxC,EAASzE,EAAU,GACnBmH,EAAQ,CACVC,MAAM,EACN9I,MAAOmG,GAGL8F,EAAmBvI,QACTwC,IAAR6E,EACOnD,OACC1B,IAAR0B,GAEG/D,KAAK2G,IAAIO,EAAMrH,GAAKG,KAAK2G,IAAI5C,EAAMlE,GAD/BqH,EAC0CnD,EAEzD,IAAIsE,EAAYN,EAAQhK,EACxB,MAAMuK,EAAQhG,EAAS+F,EACjB9F,OAA0BF,IAAjB8F,EAA6BG,EAAQH,EAAaG,GAK7D/F,IAAW+F,IACXD,EAAY9F,EAASD,GACzB,MAAMiG,EAAa/I,IAAO6I,EAAYrI,KAAK+F,KAAKvG,EAAIwI,GAC9CQ,EAAchJ,GAAM+C,EAASgG,EAAU/I,GACvCiJ,EAAiBjJ,IACnB,MAAMsG,EAAQyC,EAAU/I,GAClBkJ,EAASF,EAAWhJ,GAC1BwF,EAAMC,KAAOjF,KAAK2G,IAAIb,IAAUf,EAChCC,EAAM7I,MAAQ6I,EAAMC,KAAO1C,EAASmG,CAAM,EAQ9C,IAAIC,EACAC,EACJ,MAAMC,EAAsBrJ,IAjCN,IAACK,IAkCAmF,EAAM7I,YAlCSkG,IAAR6E,GAAqBrH,EAAIqH,QAAiB7E,IAAR0B,GAAqBlE,EAAIkE,KAoCrF4E,EAAsBnJ,EACtBoJ,EAAWlE,EAAO,CACd7G,UAAW,CAACmH,EAAM7I,MAAOiM,EAAgBpD,EAAM7I,QAC/C4B,SAAU6F,EAAsB4E,EAAYhJ,EAAGwF,EAAM7I,OACrDgJ,QAAS8C,EACT/C,UAAWgD,EACXnD,YACAD,cACF,EAGN,OADA+D,EAAmB,GACZ,CACHvB,mBAAoB,KACpBC,KAAO/H,IAOH,IAAIsJ,GAAkB,EAUtB,OATKF,QAAoCvG,IAAxBsG,IACbG,GAAkB,EAClBL,EAAcjJ,GACdqJ,EAAmBrJ,SAMK6C,IAAxBsG,GAAqCnJ,GAAKmJ,EACnCC,EAASrB,KAAK/H,EAAImJ,KAGxBG,GAAmBL,EAAcjJ,GAC3BwF,EACX,EAGZ,eClFA,MAAM+D,GAAuB,OAAY,IAAM,EAAG,EAAG,GAC/CC,GAAwB,OAAY,EAAG,EAAG,IAAM,GAChDC,GAA0B,OAAY,IAAM,EAAG,IAAM,8CCI3D,MAAMC,EAAe,CACjBC,OAAQC,EAAA,EACRL,OAAM,EACNE,UAAS,EACTD,QAAO,EACPK,OAAM,KACNC,UAAS,KACTC,QAAO,KACPC,OAAM,KACNC,UAAS,KACTC,QAAO,KACPC,WAAU,KAERC,EAA8BC,IAChC,IAAI,QAAmBA,GAAa,EAEhC,OAAgC,IAAtBA,EAAWxL,OAAc,2DACnC,MAAOyL,EAAIC,EAAIC,EAAIC,GAAMJ,EACzB,OAAO,OAAYC,EAAIC,EAAIC,EAAIC,EACnC,CACK,MAA0B,iBAAfJ,IAEZ,YAAuCxH,IAA7B6G,EAAaW,GAA2B,wBAAwBA,MACnEX,EAAaW,IAEjBA,CAAU,gBCvBrB,SAAShM,GAAU,SAAEe,EAAW,IAAKf,UAAWqM,EAAc,MAAEC,EAAK,KAAE9K,EAAO,cAK1E,MAAM+K,ECfY,CAAC/K,GACZhD,MAAMC,QAAQ+C,IAA4B,iBAAZA,EAAK,GDclBgL,CAAchL,GAChCA,EAAK+C,IAAIwH,GACTA,EAA2BvK,GAK3B2F,EAAQ,CACVC,MAAM,EACN9I,MAAO+N,EAAe,IAKpBI,EE7BV,SAA8BC,EAAQ3L,GAClC,OAAO2L,EAAOnI,KAAKoI,GAAMA,EAAI5L,GACjC,CF2B0B6L,CAGtBN,GAASA,EAAM9L,SAAW6L,EAAe7L,OACnC8L,EG/BV,SAAuBO,GACnB,MAAMH,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQI,GACxB,MAAMzD,EAAMqD,EAAOA,EAAOlM,OAAS,GACnC,IAAK,IAAIG,EAAI,EAAGA,GAAKmM,EAAWnM,IAAK,CACjC,MAAMoM,GAAiB,EAAA/C,EAAA,GAAS,EAAG8C,EAAWnM,GAC9C+L,EAAOM,MAAK,OAAU3D,EAAK,EAAG0D,GAClC,CACJ,CDLIE,CAAWP,EAAQG,EAAIrM,OAAS,GACzBkM,CACX,CH4BUQ,CAAcb,GAAiBtL,GAC/BoM,EKGV,SAAqBC,EAAOhJ,GAAUwD,MAAOyF,GAAU,EAAI,KAAE7L,EAAI,MAAEsE,GAAU,CAAC,GAC1E,MAAMwH,EAAcF,EAAM5M,OAM1B,IALA,OAAU8M,IAAgBlJ,EAAO5D,OAAQ,wDAKrB,IAAhB8M,EACA,MAAO,IAAMlJ,EAAO,GACxB,GAAoB,IAAhBkJ,GAAqBlJ,EAAO,KAAOA,EAAO,GAC1C,MAAO,IAAMA,EAAO,GACxB,MAAMmJ,EAAmBH,EAAM,KAAOA,EAAM,GAExCA,EAAM,GAAKA,EAAME,EAAc,KAC/BF,EAAQ,IAAIA,GAAOI,UACnBpJ,EAAS,IAAIA,GAAQoJ,WAEzB,MAAMC,EAlDV,SAAsBrJ,EAAQ5C,EAAMkM,GAChC,MAAMD,EAAS,GACTE,EAAeD,GAAe7H,EAC9B+H,EAAYxJ,EAAO5D,OAAS,EAClC,IAAK,IAAIG,EAAI,EAAGA,EAAIiN,EAAWjN,IAAK,CAChC,IAAImF,EAAQ6H,EAAavJ,EAAOzD,GAAIyD,EAAOzD,EAAI,IAC/C,GAAIa,EAAM,CACN,MAAMqM,EAAiBrP,MAAMC,QAAQ+C,GAAQA,EAAKb,IAAM4K,EAAA,EAAO/J,EAC/DsE,GAAQ,EAAAT,EAAA,GAAKwI,EAAgB/H,EACjC,CACA2H,EAAOT,KAAKlH,EAChB,CACA,OAAO2H,CACX,CAqCmBK,CAAa1J,EAAQ5C,EAAMsE,GACpC8H,EAAYH,EAAOjN,OACnBuN,EAAgB/L,IAClB,GAAIuL,GAAoBvL,EAAIoL,EAAM,GAC9B,OAAOhJ,EAAO,GAClB,IAAIzD,EAAI,EACR,GAAIiN,EAAY,EACZ,KAAOjN,EAAIyM,EAAM5M,OAAS,KAClBwB,EAAIoL,EAAMzM,EAAI,IADOA,KAKjC,MAAMqN,GAAkB,EAAAhE,EAAA,GAASoD,EAAMzM,GAAIyM,EAAMzM,EAAI,GAAIqB,GACzD,OAAOyL,EAAO9M,GAAGqN,EAAgB,EAErC,OAAOX,EACArL,GAAM+L,GAAa,EAAAnG,EAAA,GAAMwF,EAAM,GAAIA,EAAME,EAAc,GAAItL,IAC5D+L,CACV,CLtC8BE,CAAYxB,EAAeJ,EAAgB,CACjE7K,KAAMhD,MAAMC,QAAQ8N,GACdA,GA9BSpH,EA+BKkH,EA/BGtC,EA+BawC,EA9BjCpH,EAAOZ,KAAI,IAAMwF,GAAUqB,IAAW8C,OAAO,EAAG/I,EAAO3E,OAAS,MAD3E,IAAuB2E,EAAQ4E,EAiC3B,MAAO,CACHN,mBAAoB1I,EACpB2I,KAAO/H,IACHwF,EAAM7I,MAAQ6O,EAAkBxL,GAChCwF,EAAMC,KAAOzF,GAAKZ,EACXoG,GAGnB,qCM7CA,MAAMgH,GAAmBC,IACrB,MAAMC,EAAgB,EAAGC,eAAgBF,EAAOE,GAChD,MAAO,CACHC,MAAO,IAAM,MAAMH,OAAOC,GAAe,GACzCG,KAAM,KAAM,SAAYH,GAKxB5O,IAAK,IAAO,MAAUgP,aAAe,MAAUH,UAAY,KAAK7O,MACnE,iBCAL,MAAMiP,GAAa,CACfC,MAAO1E,EACPA,QAAO,EACP2E,MAAO5O,EACPA,UAAWA,EACX6G,OAAM,GAEJgI,GAAqBC,GAAYA,EAAU,IAMjD,MAAMC,WAA4BlQ,GAAA,EAC9B,WAAAC,CAAYM,GACR4P,MAAM5P,GAINC,KAAK4P,SAAW,KAIhB5P,KAAK6P,WAAa,KAIlB7P,KAAK8P,YAAc,EAInB9P,KAAK+P,cAAgB,EAMrB/P,KAAKgQ,iBAAmB,UAIxBhQ,KAAKiQ,UAAY,KACjBjQ,KAAK8H,MAAQ,OAKb9H,KAAKmP,KAAO,KAGR,GAFAnP,KAAKkQ,SAASC,SACdnQ,KAAKC,WAAY,EACE,SAAfD,KAAK8H,MACL,OACJ9H,KAAKoQ,WACL,MAAM,OAAEC,GAAWrQ,KAAKD,QACxBsQ,GAAUA,GAAQ,EAEtB,MAAM,KAAEnR,EAAI,YAAEoR,EAAW,QAAEC,EAAO,UAAE5P,GAAcX,KAAKD,QACjDyQ,GAAsBD,aAAyC,EAASA,EAAQE,mBAAqB,IAE3GzQ,KAAKkQ,SAAW,IAAIM,EAAmB7P,GADpB,CAAC+P,EAAmB9P,IAAkBZ,KAAKU,oBAAoBgQ,EAAmB9P,IACvC1B,EAAMoR,EAAaC,GACjFvQ,KAAKkQ,SAASS,iBAClB,CACA,OAAAzO,GACIyN,MAAMzN,UAEFlC,KAAKS,WACLvD,OAAO0T,OAAO5Q,KAAKS,UAAWT,KAAK4B,aAAa5B,KAAKS,UAAUE,WAEvE,CACA,YAAAiB,CAAaiP,GACT,MAAM,KAAErS,EAAO,YAAW,OAAEoB,EAAS,EAAC,YAAEC,EAAc,EAAC,WAAEC,EAAU,SAAEe,EAAW,GAAOb,KAAKD,QACtF+Q,GAAmB,QAAYtS,GAC/BA,EACA6Q,GAAW7Q,IAASmC,EAO1B,IAAIoQ,EACAC,EACAF,IAAqBnQ,GACK,iBAAnBkQ,EAAY,KAInBE,GAAwB,EAAA/K,EAAA,GAAKwJ,GAAmBhJ,EAAIqK,EAAY,GAAIA,EAAY,KAChFA,EAAc,CAAC,EAAG,MAEtB,MAAM1G,EAAY2G,EAAiB,IAAK9Q,KAAKD,QAASY,UAAWkQ,IAK9C,WAAf/Q,IACAkR,EAAoBF,EAAiB,IAC9B9Q,KAAKD,QACRY,UAAW,IAAIkQ,GAAa1C,UAC5BtN,UAAWA,KAWkB,OAAjCsJ,EAAUC,qBACVD,EAAUC,oBAAqB,QAAsBD,IAEzD,MAAM,mBAAEC,GAAuBD,EACzB8G,EAAmB7G,EAAqBvK,EAE9C,MAAO,CACHsK,YACA6G,oBACAD,wBACA3G,qBACA6G,mBACAC,cAPkBD,GAAoBrR,EAAS,GAAKC,EAS5D,CACA,cAAAgC,GACI,MAAM,SAAEnC,GAAW,GAASM,KAAKD,QACjCC,KAAKmR,OACyB,WAA1BnR,KAAKgQ,kBAAkCtQ,EAIvCM,KAAK8H,MAAQ9H,KAAKgQ,iBAHlBhQ,KAAKoR,OAKb,CACA,IAAAC,CAAKpC,EAAWqC,GAAS,GACrB,MAAM,SAAE9Q,GAAaR,KAErB,IAAKQ,EAAU,CACX,MAAM,UAAEG,GAAcX,KAAKD,QAC3B,MAAO,CAAEgI,MAAM,EAAM9I,MAAO0B,EAAUA,EAAUQ,OAAS,GAC7D,CACA,MAAM,cAAEP,EAAa,UAAEuJ,EAAS,kBAAE6G,EAAiB,sBAAED,EAAqB,UAAEpQ,EAAS,mBAAEyJ,EAAkB,cAAE8G,EAAa,iBAAED,GAAsBzQ,EAChJ,GAAuB,OAAnBR,KAAKiQ,UACL,OAAO9F,EAAUE,KAAK,GAC1B,MAAM,MAAE1K,EAAK,OAAEC,EAAM,WAAEE,EAAU,YAAED,EAAW,SAAEkB,GAAaf,KAAKD,QAO9DC,KAAKuR,MAAQ,EACbvR,KAAKiQ,UAAYnN,KAAKkH,IAAIhK,KAAKiQ,UAAWhB,GAErCjP,KAAKuR,MAAQ,IAClBvR,KAAKiQ,UAAYnN,KAAKkH,IAAIiF,EAAYiC,EAAgBlR,KAAKuR,MAAOvR,KAAKiQ,YAGvEqB,EACAtR,KAAK8P,YAAcb,EAEI,OAAlBjP,KAAK4P,SACV5P,KAAK8P,YAAc9P,KAAK4P,SAMxB5P,KAAK8P,YACDhN,KAAKmB,MAAMgL,EAAYjP,KAAKiQ,WAAajQ,KAAKuR,MAGtD,MAAMC,EAAmBxR,KAAK8P,YAAcnQ,GAASK,KAAKuR,OAAS,EAAI,GAAK,GACtEE,EAAiBzR,KAAKuR,OAAS,EAC/BC,EAAmB,EACnBA,EAAmBN,EACzBlR,KAAK8P,YAAchN,KAAK+D,IAAI2K,EAAkB,GAE3B,aAAfxR,KAAK8H,OAA0C,OAAlB9H,KAAK4P,WAClC5P,KAAK8P,YAAcoB,GAEvB,IAAIQ,EAAU1R,KAAK8P,YACf6B,EAAiBxH,EACrB,GAAIvK,EAAQ,CAMR,MAAM+K,EAAW7H,KAAKkH,IAAIhK,KAAK8P,YAAaoB,GAAiBD,EAK7D,IAAIW,EAAmB9O,KAAK+O,MAAMlH,GAK9BmH,EAAoBnH,EAAW,GAK9BmH,GAAqBnH,GAAY,IAClCmH,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmB9O,KAAKkH,IAAI4H,EAAkBhS,EAAS,GAIhC2D,QAAQqO,EAAmB,KAE3B,YAAf9R,GACAgS,EAAoB,EAAIA,EACpBjS,IACAiS,GAAqBjS,EAAcoR,IAGnB,WAAfnR,IACL6R,EAAiBX,IAGzBU,GAAU,EAAAnJ,EAAA,GAAM,EAAG,EAAGuJ,GAAqBb,CAC/C,CAMA,MAAMnJ,EAAQ2J,EACR,CAAE1J,MAAM,EAAO9I,MAAO0B,EAAU,IAChCgR,EAAetH,KAAKqH,GACtBX,IACAjJ,EAAM7I,MAAQ8R,EAAsBjJ,EAAM7I,QAE9C,IAAI,KAAE8I,GAASD,EACV2J,GAAyC,OAAvBrH,IACnBrC,EACI/H,KAAKuR,OAAS,EACRvR,KAAK8P,aAAeoB,EACpBlR,KAAK8P,aAAe,GAElC,MAAMiC,EAAwC,OAAlB/R,KAAK4P,WACb,aAAf5P,KAAK8H,OAAwC,YAAf9H,KAAK8H,OAAuBC,GAU/D,OATIgK,QAAyC5M,IAAlBvE,IACvBkH,EAAM7I,OAAQ,QAAiB0B,EAAWX,KAAKD,QAASa,IAExDG,GACAA,EAAS+G,EAAM7I,OAEf8S,GACA/R,KAAKgS,SAEFlK,CACX,CACA,YAAIpG,GACA,MAAM,SAAElB,GAAaR,KACrB,OAAOQ,GAAW,OAAsBA,EAAS4J,oBAAsB,CAC3E,CACA,QAAI6H,GACA,OAAO,OAAsBjS,KAAK8P,YACtC,CACA,QAAImC,CAAKC,GACLA,GAAU,OAAsBA,GAChClS,KAAK8P,YAAcoC,EACG,OAAlBlS,KAAK4P,UAAoC,IAAf5P,KAAKuR,MAC/BvR,KAAK4P,SAAWsC,EAEXlS,KAAKmS,SACVnS,KAAKiQ,UAAYjQ,KAAKmS,OAAO/R,MAAQ8R,EAAUlS,KAAKuR,MAE5D,CACA,SAAIA,GACA,OAAOvR,KAAK+P,aAChB,CACA,SAAIwB,CAAMa,GACN,MAAMC,EAAarS,KAAK+P,gBAAkBqC,EAC1CpS,KAAK+P,cAAgBqC,EACjBC,IACArS,KAAKiS,MAAO,OAAsBjS,KAAK8P,aAE/C,CACA,IAAAqB,GAII,GAHKnR,KAAKkQ,SAASoC,aACftS,KAAKkQ,SAASqC,UAEbvS,KAAKS,UAEN,YADAT,KAAKgQ,iBAAmB,WAG5B,GAAIhQ,KAAKC,UACL,OACJ,MAAM,OAAEkS,EAASrD,GAAe,OAAE0D,EAAM,UAAEvC,GAAcjQ,KAAKD,QACxDC,KAAKmS,SACNnS,KAAKmS,OAASA,GAAQlD,GAAcjP,KAAKqR,KAAKpC,MAElDuD,GAAUA,IACV,MAAMpS,EAAMJ,KAAKmS,OAAO/R,MACF,OAAlBJ,KAAK4P,SACL5P,KAAKiQ,UAAY7P,EAAMJ,KAAK4P,SAEtB5P,KAAKiQ,UAGS,aAAfjQ,KAAK8H,QACV9H,KAAKiQ,UAAY7P,GAHjBJ,KAAKiQ,UAAYA,QAA6CA,EAAYjQ,KAAKM,gBAKhE,aAAfN,KAAK8H,OACL9H,KAAKK,wBAETL,KAAK6P,WAAa7P,KAAKiQ,UACvBjQ,KAAK4P,SAAW,KAKhB5P,KAAK8H,MAAQ,UACb9H,KAAKmS,OAAOjD,OAChB,CACA,KAAAkC,GACI,IAAInL,EACCjG,KAAKS,WAIVT,KAAK8H,MAAQ,SACb9H,KAAK4P,SAAuC,QAA3B3J,EAAKjG,KAAK8P,mBAAgC,IAAP7J,EAAgBA,EAAK,GAJrEjG,KAAKgQ,iBAAmB,QAKhC,CACA,QAAAyC,GACuB,YAAfzS,KAAK8H,OACL9H,KAAKmR,OAETnR,KAAKgQ,iBAAmBhQ,KAAK8H,MAAQ,WACrC9H,KAAK4P,SAAW,IACpB,CACA,MAAAoC,GACIhS,KAAKoQ,WACLpQ,KAAK8H,MAAQ,WACb,MAAM,WAAEhH,GAAed,KAAKD,QAC5Be,GAAcA,GAClB,CACA,MAAAqP,GAC4B,OAApBnQ,KAAK6P,YACL7P,KAAKqR,KAAKrR,KAAK6P,YAEnB7P,KAAKoQ,WACLpQ,KAAKK,uBACT,CACA,QAAA+P,GACIpQ,KAAK8H,MAAQ,OACb9H,KAAK0S,aACL1S,KAAKyB,yBACLzB,KAAKK,wBACLL,KAAKiQ,UAAYjQ,KAAK6P,WAAa,KACnC7P,KAAKkQ,SAASC,QAClB,CACA,UAAAuC,GACS1S,KAAKmS,SAEVnS,KAAKmS,OAAOhD,OACZnP,KAAKmS,YAAShN,EAClB,CACA,MAAAmM,CAAOW,GAEH,OADAjS,KAAKiQ,UAAY,EACVjQ,KAAKqR,KAAKY,GAAM,EAC3B,EAGJ,SAASU,GAAa5S,GAClB,OAAO,IAAI2P,GAAoB3P,EACnC,mCClYA,MAAM6S,EAAa3T,GAAoB,OAAVA,EAC7B,SAAS4T,EAAiBlS,GAAW,OAAEf,EAAM,WAAEE,EAAa,QAAUc,GAClE,MAAM8P,EAAoB/P,EAAUmS,OAAOF,GACrCG,EAAQnT,GAAyB,SAAfE,GAAyBF,EAAS,GAAM,EAC1D,EACA8Q,EAAkBvP,OAAS,EACjC,OAAQ4R,QAA2B5N,IAAlBvE,EAEXA,EADA8P,EAAkBqC,EAE5B,mCCHA,MAAMC,GAAsB,UAAAC,eAAc,CACtCC,mBAAqB1V,GAAMA,EAC3B2V,UAAU,EACVC,cAAe,wDCPnB,MAAM3G,EAAcjP,IAAOA,GAAK,GAAK,EAAI,IAAM,QAAOA,GAAK,IAAO,EAAIsF,KAAKgG,IAAI,GAAI,IAAMtL,EAAI,2FCE7F,MAAMgP,GAAwB,OAAY,IAAM,KAAM,IAAM,KACtDF,GAAuB,OAAcE,GACrCD,GAA0B,OAAaD,+ECH7C,MAAMH,EAAU3O,GAAM,EAAIsF,KAAK8G,IAAI9G,KAAKuQ,KAAK7V,IACvC6O,GAAU,OAAcF,GACxBC,GAAY,OAAaD,kDCe/B,MAAMmH,EAAa,CAAChR,EAAGiR,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAMjR,GAAK,EAAMkR,EAAK,EAAMD,IAAOjR,EAAI,EAAMiR,GACrGjR,EACEmR,EAAuB,KACvBC,EAA2B,GAkBjC,SAASC,EAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAO,IAGX,OAAQzR,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAIgR,EAvB3C,SAAyBU,EAAGC,EAAYC,EAAYN,EAAKE,GACrD,IAAIK,EACAC,EACA9S,EAAI,EACR,GACI8S,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWb,EAAWc,EAAUR,EAAKE,GAAOE,EACxCG,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZtR,KAAK2G,IAAI0K,GAAYV,KACxBnS,EAAIoS,GACV,OAAOU,CACX,CAK6BC,CAEkC/R,EAFd,EAAG,EAAGsR,EAAKE,GAEOD,EAAKE,EACxE,mCC9CA,MAAMO,EAAgB5J,GAAYlN,GAAMA,GAAK,GAAMkN,EAAO,EAAIlN,GAAK,GAAK,EAAIkN,EAAO,GAAK,EAAIlN,KAAO,mCCAnG,MAAM+W,EAAiB7J,GAAYlN,GAAM,EAAIkN,EAAO,EAAIlN,kDCCxD,MAAMgX,EAAa,CACf,OACA,mBACA,SACA,YACA,SACA,cAEEC,EAAa,GACnB,SAASC,EAAoBC,EAAmBC,GAC5C,IAAIC,GAAe,EACfC,GAAoB,EACxB,MAAMhN,EAAQ,CACVc,MAAO,EACPqG,UAAW,EACXG,cAAc,GAEZ2F,EAAmB,IAAOF,GAAe,EACzCG,EAAQR,EAAWS,QAAO,CAACC,EAAKzX,KAClCyX,EAAIzX,GCtBZ,SAA0BoX,GAKtB,IAAIM,EAAY,IAAI1Q,IAChB2Q,EAAY,IAAI3Q,IAKhB2K,GAAe,EACfiG,GAAiB,EAIrB,MAAMC,EAAc,IAAIC,QACxB,IAAIC,EAAkB,CAClB5M,MAAO,EACPqG,UAAW,EACXG,cAAc,GAElB,SAASqG,EAAgBC,GACjBJ,EAAYzP,IAAI6P,KAChBC,EAAKC,SAASF,GACdb,KAEJa,EAASF,EACb,CACA,MAAMG,EAAO,CAITC,SAAU,CAACF,EAAUG,GAAY,EAAOC,GAAY,KAChD,MACMC,EADoBD,GAAa1G,EACL+F,EAAYC,EAK9C,OAJIS,GACAP,EAAYU,IAAIN,GACfK,EAAMlQ,IAAI6P,IACXK,EAAMC,IAAIN,GACPA,CAAQ,EAKnBvF,OAASuF,IACLN,EAAUa,OAAOP,GACjBJ,EAAYW,OAAOP,EAAS,EAKhCQ,QAAUC,IACNX,EAAkBW,EAMd/G,EACAiG,GAAiB,GAGrBjG,GAAe,GACd+F,EAAWC,GAAa,CAACA,EAAWD,GAErCA,EAAUiB,QAAQX,GAGlBN,EAAUkB,QACVjH,GAAe,EACXiG,IACAA,GAAiB,EACjBM,EAAKO,QAAQC,IACjB,GAGR,OAAOR,CACX,CDxDmBW,CAAiBvB,GACrBG,IACR,CAAC,IACE,KAAEqB,EAAI,iBAAEC,EAAgB,OAAEzH,EAAM,UAAE0H,EAAS,OAAEC,EAAM,WAAEC,GAAe3B,EACpE4B,EAAe,KACjB,MAAM3H,EAAY,IAAmB4H,gBAC/B/O,EAAMmH,UACN6H,YAAY1W,MAClByU,GAAe,EACf/M,EAAMc,MAAQkM,EACR,IAAO,GACPhS,KAAK+D,IAAI/D,KAAKkH,IAAIiF,EAAYnH,EAAMmH,UAAWwF,GAAa,GAClE3M,EAAMmH,UAAYA,EAClBnH,EAAMsH,cAAe,EAErBmH,EAAKL,QAAQpO,GACb0O,EAAiBN,QAAQpO,GACzBiH,EAAOmH,QAAQpO,GACf2O,EAAUP,QAAQpO,GAClB4O,EAAOR,QAAQpO,GACf6O,EAAWT,QAAQpO,GACnBA,EAAMsH,cAAe,EACjByF,GAAgBD,IAChBE,GAAoB,EACpBH,EAAkBiC,GACtB,EAuBJ,MAAO,CAAEhB,SAdQpB,EAAWS,QAAO,CAACC,EAAKzX,KACrC,MAAMkY,EAAOX,EAAMvX,GAMnB,OALAyX,EAAIzX,GAAO,CAACyY,EAASL,GAAY,EAAOC,GAAY,KAC3CjB,IATTA,GAAe,EACfC,GAAoB,EACfhN,EAAMsH,cACPuF,EAAkBiC,IAQXjB,EAAKC,SAASM,EAASL,EAAWC,IAEtCZ,CAAG,GACX,CAAC,GAMe/E,OALH+F,IACZ,IAAK,IAAI5U,EAAI,EAAGA,EAAIkT,EAAWrT,OAAQG,IACnC0T,EAAMR,EAAWlT,IAAI6O,OAAO+F,EAChC,EAEuBpO,QAAOkN,QACtC,sFEpEA,MAAQY,SAAUmB,EAAO5G,OAAQ6G,EAAalP,MAAOqO,EAAWnB,MAAOiC,IAAgB,OAAqD,oBAA1BC,sBAAwCA,sBAAwB,KAAM,2DCAxL,IAAI9W,EACJ,SAAS+W,IACL/W,OAAM+E,CACV,CASA,MAAM8M,EAAO,CACT7R,IAAK,UACW+E,IAAR/E,GACA6R,EAAKmF,IAAI,KAAUhI,cAAgB,IAAmByH,gBAChD,KAAU5H,UACV6H,YAAY1W,OAEfA,GAEXgX,IAAMlF,IACF9R,EAAM8R,EACNmF,eAAeF,EAAU,mBCxBjC,SAASG,EAA8BC,GACnC,GAAqB,oBAAVC,MACP,OAAOD,EAMX,MAAME,EAAiB,IAAIC,IAO3B,OAAO,IAAIF,OANuB,IAAIG,IAI3BJ,KAAoBI,IAEa,CAMxCC,IAAK,CAACC,EAASpa,IACC,WAARA,EACO8Z,GAINE,EAAe5R,IAAIpI,IACpBga,EAAeL,IAAI3Z,EAAK8Z,EAAiB9Z,IAEtCga,EAAeG,IAAIna,KAGtC,CCnCA,SAASqa,EAAoBnV,GACzB,OAAc,OAANA,GACS,iBAANA,GACY,mBAAZA,EAAEuM,KACjB,mBCJA,MAAM6I,EAAqBpV,GAChBxD,MAAMC,QAAQuD,GCDzB,SAASqV,EAAe3N,EAAM4N,GAC1B,IAAK9Y,MAAMC,QAAQ6Y,GACf,OAAO,EACX,MAAMC,EAAaD,EAAK9W,OACxB,GAAI+W,IAAe7N,EAAKlJ,OACpB,OAAO,EACX,IAAK,IAAIG,EAAI,EAAGA,EAAI4W,EAAY5W,IAC5B,GAAI2W,EAAK3W,KAAO+I,EAAK/I,GACjB,OAAO,EAEf,OAAO,CACX,CCRA,SAAS6W,EAAexV,GACpB,MAAoB,iBAANA,GAAkBxD,MAAMC,QAAQuD,EAClD,CCLA,SAASyV,EAAcC,GACnB,MAAMvQ,EAAQ,CAAC,CAAC,EAAG,CAAC,GAKpB,OAJAuQ,SAA8DA,EAAcvS,OAAOsQ,SAAQ,CAACnX,EAAOxB,KAC/FqK,EAAM,GAAGrK,GAAOwB,EAAM2Y,MACtB9P,EAAM,GAAGrK,GAAOwB,EAAMqZ,aAAa,IAEhCxQ,CACX,CACA,SAASyQ,EAAwB9Z,EAAOkO,EAAY6L,EAAQH,GAIxD,GAA0B,mBAAf1L,EAA2B,CAClC,MAAOhO,EAASkC,GAAYuX,EAAcC,GAC1C1L,EAAaA,OAAsBxH,IAAXqT,EAAuBA,EAAS/Z,EAAM+Z,OAAQ7Z,EAASkC,EACnF,CAaA,GAR0B,iBAAf8L,IACPA,EAAalO,EAAMga,UAAYha,EAAMga,SAAS9L,IAOxB,mBAAfA,EAA2B,CAClC,MAAOhO,EAASkC,GAAYuX,EAAcC,GAC1C1L,EAAaA,OAAsBxH,IAAXqT,EAAuBA,EAAS/Z,EAAM+Z,OAAQ7Z,EAASkC,EACnF,CACA,OAAO8L,CACX,CC/BA,SAAS+L,EAAeL,EAAe1L,EAAY6L,GAC/C,MAAM/Z,EAAQ4Z,EAAcM,WAC5B,OAAOJ,EAAwB9Z,EAAOkO,OAAuBxH,IAAXqT,EAAuBA,EAAS/Z,EAAM+Z,OAAQH,EACpG,CCLA,MAAMO,EAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,EAAe,CAAC,aAAcD,2BCPpC,MAAME,EAAiB,IAAIrU,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,YACG,oBCDP,SAASsU,EAAeV,EAAe5a,EAAKwB,GACpCoZ,EAAcW,SAASvb,GACvB4a,EAAcY,SAASxb,GAAK2Z,IAAInY,GAGhCoZ,EAAca,SAASzb,GAAK,QAAYwB,GAEhD,eCbA,SAASka,EAAqBd,EAAe5a,GACzC,MAAM2b,EAAaf,EAAcY,SAAS,cAK1C,GCN6Bha,EDMDma,ECLrB7V,SAAQ,OAActE,IAAUA,EAAM+W,KDMzC,OAAOoD,EAAWpD,IAAIvY,GCP9B,IAAiCwB,CDSjC,CERA,MAAMoa,EAAeC,GAAQA,EAAIC,QAAQ,mBAAoB,SAASC,cCAhEC,EAA+B,QAAUJ,EADjB,kBCA9B,SAASK,EAAqBrB,GAC1B,OAAOA,EAAc5Z,MAAMgb,EAC/B,mFCDA,MAAME,EAAqBhX,GAAM,cAAcrD,KAAKqD,0BCGpD,MAAMiX,EAAc,IAAInV,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAASoV,EAAmBlX,GACxB,MAAOzD,EAAMD,GAAS0D,EAAEmX,MAAM,GAAI,GAAGC,MAAM,KAC3C,GAAa,gBAAT7a,EACA,OAAOyD,EACX,MAAOiD,GAAU3G,EAAM+a,MAAM,MAAe,GAC5C,IAAKpU,EACD,OAAOjD,EACX,MAAMsX,EAAOhb,EAAMsa,QAAQ3T,EAAQ,IACnC,IAAIsU,EAAeN,EAAY/T,IAAI3G,GAAQ,EAAI,EAG/C,OAFI0G,IAAW3G,IACXib,GAAgB,KACbhb,EAAO,IAAMgb,EAAeD,EAAO,GAC9C,CACA,MAAME,EAAgB,uBAChBrH,EAAS,IACRzT,EAAA,EACH+a,kBAAoBzX,IAChB,MAAM0X,EAAY1X,EAAEqX,MAAMG,GAC1B,OAAOE,EAAYA,EAAUnV,IAAI2U,GAAoBS,KAAK,KAAO3X,CAAC,qCCvB1E,MAAM4X,EAA0B,CAE5BC,YAAa,EAAAC,GACbC,eAAgB,EAAAD,GAChBE,iBAAkB,EAAAF,GAClBG,kBAAmB,EAAAH,GACnBI,gBAAiB,EAAAJ,GACjBK,aAAc,EAAAL,GACdM,OAAQ,EAAAN,GACRO,oBAAqB,EAAAP,GACrBQ,qBAAsB,EAAAR,GACtBS,wBAAyB,EAAAT,GACzBU,uBAAwB,EAAAV,GAExBW,MAAO,EAAAX,GACPY,SAAU,EAAAZ,GACVa,OAAQ,EAAAb,GACRc,UAAW,EAAAd,GACXe,IAAK,EAAAf,GACLgB,MAAO,EAAAhB,GACPiB,OAAQ,EAAAjB,GACRkB,KAAM,EAAAlB,GAENmB,QAAS,EAAAnB,GACToB,WAAY,EAAApB,GACZqB,aAAc,EAAArB,GACdsB,cAAe,EAAAtB,GACfuB,YAAa,EAAAvB,GACbwB,OAAQ,EAAAxB,GACRyB,UAAW,EAAAzB,GACX0B,YAAa,EAAA1B,GACb2B,aAAc,EAAA3B,GACd4B,WAAY,EAAA5B,GAEZ6B,oBAAqB,EAAA7B,GACrB8B,oBAAqB,EAAA9B,IClCnB+B,EAAsB,CACxBC,OAAQ,KACRC,QAAS,KACTC,QAAS,KACTC,QAAS,KACTC,MAAK,KACLC,OAAQ,KACRC,OAAQ,KACRC,OAAQ,KACRC,KAAM,KACNC,MAAO,KACPC,MAAO,KACPC,SAAU,EAAA3C,GACV4C,WAAY,EAAA5C,GACZ6C,WAAY,EAAA7C,GACZ8C,WAAY,EAAA9C,GACZzG,EAAG,EAAAyG,GACH+C,EAAG,EAAA/C,GACHgD,EAAG,EAAAhD,GACHiD,YAAa,EAAAjD,GACbkD,qBAAsB,EAAAlD,GACtBmD,QAAS,KACTC,QAAS,KACTC,QAAS,KACTC,QAAS,EAAAtD,ICzBP,EAAM,IACL,KACHlW,UAAWzB,KAAKmB,OCEd+Z,EAAmB,IAClBzD,KACAiC,EACHyB,OAAQ,EACRC,KAAM,EAAAzD,GAEN0D,YAAa,KACbC,cAAe,KACfC,WAAY,GCPVC,EAAoB,IACnBN,EAEH3a,MAAK,IACLkb,gBAAiBlb,EAAA,EACjBmb,aAAcnb,EAAA,EACdob,KAAMpb,EAAA,EACNqb,OAAQrb,EAAA,EAERsb,YAAatb,EAAA,EACbub,eAAgBvb,EAAA,EAChBwb,iBAAkBxb,EAAA,EAClByb,kBAAmBzb,EAAA,EACnB0b,gBAAiB1b,EAAA,EACjByP,OAAM,EACNkM,aAAclM,GAKZmM,EAAuBxhB,GAAQ6gB,EAAkB7gB,GCvBvD,SAAS2c,EAAkB3c,EAAKwB,GAC5B,IAAIigB,EAAmBD,EAAoBxhB,GAI3C,OAHIyhB,IAAqBpM,IACrBoM,EAAmB7f,EAAA,GAEhB6f,EAAiB9E,kBAClB8E,EAAiB9E,kBAAkBnb,QACnCkG,CACV,CCHA,MAAMga,EAAmB,IAAI1a,IAAI,CAAC,OAAQ,OAAQ,8BCNlD,MAAM2a,EAAqBzc,GAAM,+BAA+BrD,KAAKqD,gBCUrE,MAAM0c,EAEN,2DASA,SAASC,GAAiB3gB,EAAS4R,EAASgP,EAAQ,IAChD,OAAUA,GAFG,EAEgB,yDAAyD5gB,yDACtF,MAAO6gB,EAAOC,GAVlB,SAA0B9gB,GACtB,MAAMqb,EAAQqF,EAAsBK,KAAK/gB,GACzC,IAAKqb,EACD,MAAO,CAAC,GACZ,MAAO,CAAE2F,EAAQC,EAAQH,GAAYzF,EACrC,MAAO,CAAC,KAAK2F,QAAuCA,EAASC,IAAUH,EAC3E,CAI8BI,CAAiBlhB,GAE3C,IAAK6gB,EACD,OAEJ,MAAMhf,EAAWsf,OAAOC,iBAAiBxP,GAASyP,iBAAiBR,GACnE,GAAIhf,EAAU,CACV,MAAMyf,EAAUzf,EAAS0f,OACzB,OAAOd,EAAkBa,GAAWE,WAAWF,GAAWA,CAC9D,CACA,OAAO,OAAmBR,GACpBH,GAAiBG,EAAUlP,EAASgP,EAAQ,GAC5CE,CACV,gBCpCA,MAAMW,GAAiBzd,GAAOnE,GAASA,EAAKc,KAAKqD,GCK3C0d,GAAsB,CAAC,KAAQ,EAAA5F,GAAI,KAAS,KAAS,EAAA6F,GAAI,EAAAC,GCLlD,CACTjhB,KAAOqD,GAAY,SAANA,EACbc,MAAQd,GAAMA,IDOZ6d,GAA0B7d,GAAM0d,GAAoB/c,KAAK8c,GAAczd,IEH7E,MAAM8d,WAA6B,IAC/B,WAAAhhB,CAAYihB,EAAqB5f,EAAY5B,EAAMoR,EAAaC,GAC5DZ,MAAM+Q,EAAqB5f,EAAY5B,EAAMoR,EAAaC,GAAS,EACvE,CACA,aAAAoQ,GACI,MAAM,oBAAED,EAAmB,QAAEnQ,EAAO,KAAErR,GAASc,KAC/C,IAAKuQ,IAAYA,EAAQ5R,QACrB,OACJgR,MAAMgR,gBAIN,IAAK,IAAIrf,EAAI,EAAGA,EAAIof,EAAoBvf,OAAQG,IAAK,CACjD,IAAIsf,EAAWF,EAAoBpf,GACnC,GAAwB,iBAAbsf,IACPA,EAAWA,EAASV,QAChB,OAAmBU,IAAW,CAC9B,MAAMpgB,EAAW8e,GAAiBsB,EAAUrQ,EAAQ5R,cACnCwG,IAAb3E,IACAkgB,EAAoBpf,GAAKd,GAEzBc,IAAMof,EAAoBvf,OAAS,IACnCnB,KAAKY,cAAgBggB,EAE7B,CAER,CAaA,GAPA5gB,KAAK6gB,wBAOA/H,EAAejT,IAAI3G,IAAwC,IAA/BwhB,EAAoBvf,OACjD,OAEJ,MAAOiE,EAAQC,GAAUqb,EACnBI,EAAaN,GAAuBpb,GACpC2b,EAAaP,GAAuBnb,GAI1C,GAAIyb,IAAeC,EAMnB,IAAI,SAAcD,KAAe,SAAcC,GAC3C,IAAK,IAAIzf,EAAI,EAAGA,EAAIof,EAAoBvf,OAAQG,IAAK,CACjD,MAAMrC,EAAQyhB,EAAoBpf,GACb,iBAAVrC,IACPyhB,EAAoBpf,GAAK6e,WAAWlhB,GAE5C,MAMAe,KAAKghB,kBAAmB,CAEhC,CACA,oBAAAH,GACI,MAAM,oBAAEH,EAAmB,KAAExhB,GAASc,KAChCihB,EAAsB,GAC5B,IAAK,IAAI3f,EAAI,EAAGA,EAAIof,EAAoBvf,OAAQG,KC9E/B,iBADTrC,EDgFOyhB,EAAoBpf,IC9ElB,IAAVrC,EAEQ,OAAVA,GACY,SAAVA,GAA8B,MAAVA,GAAiB0a,EAAkB1a,KD4EtDgiB,EAAoBtT,KAAKrM,GCjFzC,IAAgBrC,EDoFJgiB,EAAoB9f,QN5EhC,SAAqCuf,EAAqBO,EAAqB/hB,GAC3E,IACIgiB,EADA5f,EAAI,EAER,KAAOA,EAAIof,EAAoBvf,SAAW+f,GAAoB,CAC1D,MAAMN,EAAWF,EAAoBpf,GACb,iBAAbsf,IACNzB,EAAiBtZ,IAAI+a,KACtB,OAAoBA,GAAU9a,OAAO3E,SACrC+f,EAAqBR,EAAoBpf,IAE7CA,GACJ,CACA,GAAI4f,GAAsBhiB,EACtB,IAAK,MAAMiiB,KAAaF,EACpBP,EAAoBS,GAAa/G,EAAkBlb,EAAMgiB,EAGrE,CM4DYE,CAA4BV,EAAqBO,EAAqB/hB,EAE9E,CACA,mBAAAmiB,GACI,MAAM,QAAE9Q,EAAO,oBAAEmQ,EAAmB,KAAExhB,GAASc,KAC/C,IAAKuQ,IAAYA,EAAQ5R,QACrB,OACS,WAATO,IACAc,KAAKshB,iBAAmBxB,OAAOyB,aAEnCvhB,KAAKwhB,eAAiB,MAAiBtiB,GAAMqR,EAAQkR,qBAAsB3B,OAAOC,iBAAiBxP,EAAQ5R,UAC3G+hB,EAAoB,GAAK1gB,KAAKwhB,eAE9B,MAAME,EAAkBhB,EAAoBA,EAAoBvf,OAAS,QACjDgE,IAApBuc,GACAnR,EAAQ0I,SAAS/Z,EAAMwiB,GAAiBC,KAAKD,GAAiB,EAEtE,CACA,eAAAE,GACI,IAAI3b,EACJ,MAAM,QAAEsK,EAAO,KAAErR,EAAI,oBAAEwhB,GAAwB1gB,KAC/C,IAAKuQ,IAAYA,EAAQ5R,QACrB,OACJ,MAAMM,EAAQsR,EAAQ0I,SAAS/Z,GAC/BD,GAASA,EAAM0iB,KAAK3hB,KAAKwhB,gBAAgB,GACzC,MAAMK,EAAqBnB,EAAoBvf,OAAS,EAClDP,EAAgB8f,EAAoBmB,GAC1CnB,EAAoBmB,GAAsB,MAAiB3iB,GAAMqR,EAAQkR,qBAAsB3B,OAAOC,iBAAiBxP,EAAQ5R,UACzG,OAAlBiC,QAAiDuE,IAAvBnF,KAAKY,gBAC/BZ,KAAKY,cAAgBA,IAGa,QAAjCqF,EAAKjG,KAAK8hB,yBAAsC,IAAP7b,OAAgB,EAASA,EAAG9E,SACtEnB,KAAK8hB,kBAAkB1L,SAAQ,EAAE2L,EAAoBC,MACjDzR,EACK0I,SAAS8I,GACT3K,IAAI4K,EAAoB,IAGrChiB,KAAK6gB,sBACT,4BE5HJ,MAAMoB,GAAoB,IAAIxd,IAAI,CAC9B,UACA,WACA,SACA,6BCLJ,MAAMyd,IAA8B,cAAK,IAAMhlB,OAAOE,eAAeiB,KAAK8jB,QAAQhlB,UAAW,aCgEvFilB,GAA6B,CAC/B3V,WAAU,IACVF,UAAS,KACTH,UAAS,MAKb,MAAMiW,WAA6B7iB,GAAA,EAC/B,WAAAC,CAAYM,GACR4P,MAAM5P,GACN,MAAM,KAAEb,EAAI,YAAEoR,EAAW,QAAEC,EAAO,UAAE5P,GAAcX,KAAKD,QACvDC,KAAKkQ,SAAW,IAAIuQ,GAAqB9f,GAAW,CAAC+P,EAAmB9P,IAAkBZ,KAAKU,oBAAoBgQ,EAAmB9P,IAAgB1B,EAAMoR,EAAaC,GACzKvQ,KAAKkQ,SAASS,iBAClB,CACA,YAAA/O,CAAajB,EAAWC,GACpB,IAAI,SAAEc,EAAW,IAAG,MAAEuL,EAAK,KAAE9K,EAAI,KAAE3D,EAAI,YAAE8R,EAAW,KAAEpR,EAAI,UAAE+Q,GAAejQ,KAAKD,QAKhF,IAAKuQ,EAAYgS,QAAUhS,EAAYgS,MAAM3jB,QACzC,OAAO,EAjBnB,IA1CuCoB,EA0E/B,GARoB,iBAAToC,IACP,WACkBA,KAzBZigB,KA0BNjgB,EAAOigB,GAA2BjgB,IArEPpC,EA0EGC,KAAKD,SAzEnC,QAAYA,EAAQvB,OACP,WAAjBuB,EAAQvB,QACP,QAAuBuB,EAAQoC,MAuEiB,CAC7C,MAAM,WAAErB,EAAU,SAAEC,EAAQ,YAAEuP,EAAW,QAAEC,KAAYxQ,GAAYC,KAAKD,QAClEwiB,EAvElB,SAA8B5hB,EAAWZ,GAMrC,MAAMyiB,EAAkB,IAAI9S,GAAA,EAAoB,IACzC3P,EACHY,YACAf,OAAQ,EACRD,MAAO,EACPqB,aAAa,IAEjB,IAAI8G,EAAQ,CAAEC,MAAM,EAAO9I,MAAO0B,EAAU,IAC5C,MAAM8hB,EAAwB,GAK9B,IAAIngB,EAAI,EACR,MAAQwF,EAAMC,MAAQzF,EA/BN,KAgCZwF,EAAQ0a,EAAgBlR,OAAOhP,GAC/BmgB,EAAsB9U,KAAK7F,EAAM7I,OACjCqD,GAvCY,GAyChB,MAAO,CACH2K,WAAO9H,EACPxE,UAAW8hB,EACX/gB,SAAUY,EA5CE,GA6CZH,KAAM,SAEd,CAwC0CugB,CAAqB/hB,EAAWZ,GAKrC,KAJzBY,EAAY4hB,EAAsB5hB,WAIpBQ,SACVR,EAAU,GAAKA,EAAU,IAE7Be,EAAW6gB,EAAsB7gB,SACjCuL,EAAQsV,EAAsBtV,MAC9B9K,EAAOogB,EAAsBpgB,KAC7B3D,EAAO,WACX,CACA,MAAMmkB,ECpHd,SAA6BpS,EAASqS,EAAWjiB,GAAW,MAAEhB,EAAQ,EAAC,SAAE+B,EAAW,IAAG,OAAE9B,EAAS,EAAC,WAAEE,EAAa,OAAM,KAAEqC,EAAO,YAAW,MAAE8K,GAAW,CAAC,GACtJ,MAAM4V,EAAkB,CAAE,CAACD,GAAYjiB,GACnCsM,IACA4V,EAAgBxV,OAASJ,GAC7B,MAAMvC,GAAS,QAAwBvI,EAAMT,GAM7C,OAFIvC,MAAMC,QAAQsL,KACdmY,EAAgBnY,OAASA,GACtB6F,EAAQuS,QAAQD,EAAiB,CACpCljB,QACA+B,WACAgJ,OAASvL,MAAMC,QAAQsL,GAAmB,SAATA,EACjC+T,KAAM,OACNsE,WAAYnjB,EAAS,EACrBojB,UAA0B,YAAfljB,EAA2B,YAAc,UAE5D,CDkG0BmjB,CAAoB3S,EAAYgS,MAAM3jB,QAASO,EAAMyB,EAAW,IAAKX,KAAKD,QAAS2B,WAAUuL,QAAO9K,SAyBtH,OAtBAwgB,EAAU1S,UAAYA,QAA6CA,EAAYjQ,KAAKM,gBAChFN,KAAKkjB,kBACL,QAAeP,EAAW3iB,KAAKkjB,iBAC/BljB,KAAKkjB,qBAAkB/d,GAWvBwd,EAAUQ,SAAW,KACjB,MAAM,WAAEriB,GAAed,KAAKD,QAC5BuQ,EAAY8G,KAAI,QAAiBzW,EAAWX,KAAKD,QAASa,IAC1DE,GAAcA,IACdd,KAAKmQ,SACLnQ,KAAKyB,wBAAwB,EAG9B,CACHkhB,YACAjhB,WACAuL,QACAzO,OACA2D,OACAxB,UAAWA,EAEnB,CACA,YAAIe,GACA,MAAM,SAAElB,GAAaR,KACrB,IAAKQ,EACD,OAAO,EACX,MAAM,SAAEkB,GAAalB,EACrB,OAAO,OAAsBkB,EACjC,CACA,QAAIuQ,GACA,MAAM,SAAEzR,GAAaR,KACrB,IAAKQ,EACD,OAAO,EACX,MAAM,UAAEmiB,GAAcniB,EACtB,OAAO,OAAsBmiB,EAAU7S,aAAe,EAC1D,CACA,QAAImC,CAAKC,GACL,MAAM,SAAE1R,GAAaR,KACrB,IAAKQ,EACD,OACJ,MAAM,UAAEmiB,GAAcniB,EACtBmiB,EAAU7S,aAAc,OAAsBoC,EAClD,CACA,SAAIX,GACA,MAAM,SAAE/Q,GAAaR,KACrB,IAAKQ,EACD,OAAO,EACX,MAAM,UAAEmiB,GAAcniB,EACtB,OAAOmiB,EAAUS,YACrB,CACA,SAAI7R,CAAMa,GACN,MAAM,SAAE5R,GAAaR,KACrB,IAAKQ,EACD,OACJ,MAAM,UAAEmiB,GAAcniB,EACtBmiB,EAAUS,aAAehR,CAC7B,CACA,SAAItK,GACA,MAAM,SAAEtH,GAAaR,KACrB,IAAKQ,EACD,MAAO,OACX,MAAM,UAAEmiB,GAAcniB,EACtB,OAAOmiB,EAAUU,SACrB,CACA,aAAIpT,GACA,MAAM,SAAEzP,GAAaR,KACrB,IAAKQ,EACD,OAAO,KACX,MAAM,UAAEmiB,GAAcniB,EAGtB,OAAOmiB,EAAU1S,SACrB,CAKA,cAAAqT,CAAeC,GACX,GAAKvjB,KAAKS,UAGL,CACD,MAAM,SAAED,GAAaR,KACrB,IAAKQ,EACD,OAAO0L,EAAA,EACX,MAAM,UAAEyW,GAAcniB,GACtB,QAAemiB,EAAWY,EAC9B,MARIvjB,KAAKkjB,gBAAkBK,EAS3B,OAAOrX,EAAA,CACX,CACA,IAAAiF,GACI,GAAInR,KAAKC,UACL,OACJ,MAAM,SAAEO,GAAaR,KACrB,IAAKQ,EACD,OACJ,MAAM,UAAEmiB,GAAcniB,EACM,aAAxBmiB,EAAUU,WACVrjB,KAAKK,wBAETsiB,EAAUxR,MACd,CACA,KAAAC,GACI,MAAM,SAAE5Q,GAAaR,KACrB,IAAKQ,EACD,OACJ,MAAM,UAAEmiB,GAAcniB,EACtBmiB,EAAUvR,OACd,CACA,IAAAjC,GAGI,GAFAnP,KAAKkQ,SAASC,SACdnQ,KAAKC,WAAY,EACE,SAAfD,KAAK8H,MACL,OACJ9H,KAAKyB,yBACLzB,KAAKK,wBACL,MAAM,SAAEG,GAAaR,KACrB,IAAKQ,EACD,OACJ,MAAM,UAAEmiB,EAAS,UAAEhiB,EAAS,SAAEe,EAAQ,KAAElD,EAAI,KAAE2D,EAAI,MAAE8K,GAAUzM,EAC9D,GAA4B,SAAxBmiB,EAAUU,WACc,aAAxBV,EAAUU,UACV,OAUJ,GAAIrjB,KAAKiS,KAAM,CACX,MAAM,YAAE3B,EAAW,SAAEvP,EAAQ,WAAED,EAAU,QAAEyP,KAAYxQ,GAAYC,KAAKD,QAClEyiB,EAAkB,IAAI9S,GAAA,EAAoB,IACzC3P,EACHY,YACAe,WACAlD,OACA2D,OACA8K,QACAjM,aAAa,IAEXwiB,GAAa,OAAsBxjB,KAAKiS,MAC9C3B,EAAYmT,gBAAgBjB,EAAgBlR,OAAOkS,EAhQ3C,IAgQqEvkB,MAAOujB,EAAgBlR,OAAOkS,GAAYvkB,MAhQ/G,GAiQZ,CACA,MAAM,OAAEoR,GAAWrQ,KAAKD,QACxBsQ,GAAUA,IACVrQ,KAAKmQ,QACT,CACA,QAAAsC,GACI,MAAM,SAAEjS,GAAaR,KAChBQ,GAELA,EAASmiB,UAAU3Q,QACvB,CACA,MAAA7B,GACI,MAAM,SAAE3P,GAAaR,KAChBQ,GAELA,EAASmiB,UAAUxS,QACvB,CACA,eAAOuT,CAAS3jB,GACZ,MAAM,YAAEuQ,EAAW,KAAEpR,EAAI,YAAEW,EAAW,WAAEC,EAAU,QAAEmI,EAAO,KAAEzJ,GAASuB,EACtE,KAAKuQ,GACAA,EAAYgS,OACXhS,EAAYgS,MAAM3jB,mBAAmBglB,aACvC,OAAO,EAEX,MAAM,SAAE5iB,EAAQ,kBAAE6iB,GAAsBtT,EAAYgS,MAAM3J,WAC1D,OAAQuJ,MACJhjB,GACA+iB,GAAkBpc,IAAI3G,KAKrB6B,IACA6iB,IACA/jB,GACc,WAAfC,GACY,IAAZmI,GACS,YAATzJ,CACR,EEvTJ,MAAMqlB,GAAoB,CACtBrlB,KAAM,SACNwJ,UAAW,IACXC,QAAS,GACTL,UAAW,IAQTkc,GAAsB,CACxBtlB,KAAM,YACNkD,SAAU,IAMRS,GAAO,CACT3D,KAAM,YACN2D,KAAM,CAAC,IAAM,GAAK,IAAM,GACxBT,SAAU,IAERqiB,GAAuB,CAACC,GAAYrjB,eAClCA,EAAUQ,OAAS,EACZ2iB,GAEF,IAAeje,IAAIme,GACjBA,EAASzkB,WAAW,SAxBQ,CACvCf,KAAM,SACNwJ,UAAW,IACXC,QAAoB,IAsBatH,EAAU,GAtBnB,EAAImC,KAAKC,KAAK,KAAO,GAC7C6E,UAAW,IAsBDic,GAEH1hB,GCzBL8hB,GAAqB,CAAC/kB,EAAMD,EAAOoG,EAAQ6e,EAAa,CAAC,EAAG3T,EAAS4T,IAAerjB,IACtF,MAAMsjB,GAAkB,QAAmBF,EAAYhlB,IAAS,CAAC,EAM3DS,EAAQykB,EAAgBzkB,OAASukB,EAAWvkB,OAAS,EAK3D,IAAI,QAAE+R,EAAU,GAAMwS,EACtBxS,IAAoB,OAAsB/R,GAC1C,IAAII,EAAU,CACVY,UAAWxB,MAAMC,QAAQiG,GAAUA,EAAS,CAAC,KAAMA,GACnDlD,KAAM,UACNtB,SAAU5B,EAAMqZ,iBACb8L,EACHzkB,OAAQ+R,EACR3Q,SAAW4B,IACP1D,EAAMmY,IAAIzU,GACVyhB,EAAgBrjB,UAAYqjB,EAAgBrjB,SAAS4B,EAAE,EAE3D7B,WAAY,KACRA,IACAsjB,EAAgBtjB,YAAcsjB,EAAgBtjB,YAAY,EAE9D5B,OACAoR,YAAarR,EACbsR,QAAS4T,OAAYhf,EAAYoL,ICpCzC,UAA6B,KAAE8T,EAAM1kB,MAAO2kB,EAAM,cAAEC,EAAa,gBAAEC,EAAe,iBAAEC,EAAgB,OAAE7kB,EAAM,WAAEE,EAAU,YAAED,EAAW,KAAE4C,EAAI,QAAEiP,KAAYwS,IACrJ,QAAShnB,OAAOoK,KAAK4c,GAAY/iB,MACrC,EDwCSujB,CAAoBN,KACrBrkB,EAAU,IACHA,KACAgkB,GAAqB7kB,EAAMa,KAQlCA,EAAQ2B,WACR3B,EAAQ2B,UAAW,OAAsB3B,EAAQ2B,WAEjD3B,EAAQF,cACRE,EAAQF,aAAc,OAAsBE,EAAQF,mBAEnCsF,IAAjBpF,EAAQ0C,OACR1C,EAAQY,UAAU,GAAKZ,EAAQ0C,MAEnC,IAAIkiB,GAAa,EAmBjB,KAlBqB,IAAjB5kB,EAAQvB,MACc,IAArBuB,EAAQ2B,WAAmB3B,EAAQF,eACpCE,EAAQ2B,SAAW,EACG,IAAlB3B,EAAQJ,QACRglB,GAAa,KAGjB,IAAsBhmB,SACtB,IAAmBimB,kBACnBD,GAAa,EACb5kB,EAAQ2B,SAAW,EACnB3B,EAAQJ,MAAQ,GAOhBglB,IAAeR,QAA6Bhf,IAAhBlG,EAAM2Y,MAAqB,CACvD,MAAMhX,GAAgB,QAAiBb,EAAQY,UAAWyjB,GAC1D,QAAsBjf,IAAlBvE,EAOA,OANA,KAAMmO,QAAO,KACThP,EAAQgB,SAASH,GACjBb,EAAQe,YAAY,IAIjB,IAAI,KAAsB,GAEzC,CAMA,OAAKqjB,GAAa9B,GAAqBqB,SAAS3jB,GACrC,IAAIsiB,GAAqBtiB,GAGzB,IAAI2P,GAAA,EAAoB3P,EACnC,EE9FJ,SAAS8kB,IAAqB,cAAEC,EAAa,eAAEC,GAAkBtnB,GAC7D,MAAMunB,EAAcF,EAAc1nB,eAAeK,KAAgC,IAAxBsnB,EAAetnB,GAExE,OADAsnB,EAAetnB,IAAO,EACfunB,CACX,CACA,SAASC,GAAc5M,EAAe6M,GAAqB,MAAEvlB,EAAQ,EAAC,mBAAEwlB,EAAkB,KAAE3mB,GAAS,CAAC,GAClG,IAAIyH,EACJ,IAAI,WAAEie,EAAa7L,EAAc0L,uBAAsB,cAAEqB,KAAkB/f,GAAW6f,EAClFC,IACAjB,EAAaiB,GACjB,MAAME,EAAa,GACbC,EAAqB9mB,GACvB6Z,EAAckN,gBACdlN,EAAckN,eAAeC,WAAWhnB,GAC5C,IAAK,MAAMf,KAAO4H,EAAQ,CACtB,MAAMpG,EAAQoZ,EAAcY,SAASxb,EAAgD,QAA1CwI,EAAKoS,EAAcoN,aAAahoB,UAAyB,IAAPwI,EAAgBA,EAAK,MAC5Gyf,EAAcrgB,EAAO5H,GAC3B,QAAoB0H,IAAhBugB,GACCJ,GACGT,GAAqBS,EAAoB7nB,GAC7C,SAEJ,MAAM2mB,EAAkB,CACpBzkB,YACG,QAAmBukB,GAAc,CAAC,EAAGzmB,IAM5C,IAAI0mB,GAAY,EAChB,GAAIrE,OAAO6F,uBAAwB,CAC/B,MAAMC,EAAWlM,EAAqBrB,GACtC,GAAIuN,EAAU,CACV,MAAM3V,EAAY6P,OAAO6F,uBAAuBC,EAAUnoB,EAAK,MAC7C,OAAdwS,IACAmU,EAAgBnU,UAAYA,EAC5BkU,GAAY,EAEpB,CACJ,CACAhL,EAAqBd,EAAe5a,GACpCwB,EAAMiQ,MAAM+U,GAAmBxmB,EAAKwB,EAAOymB,EAAarN,EAAcwN,oBAAsB/M,EAAejT,IAAIpI,GACzG,CAAEe,MAAM,GACR4lB,EAAiB/L,EAAe8L,IACtC,MAAMxB,EAAY1jB,EAAM0jB,UACpBA,GACA0C,EAAW1X,KAAKgV,EAExB,CAQA,OAPIyC,GACAhjB,QAAQ0jB,IAAIT,GAAYvjB,MAAK,KACzB,KAAMiN,QAAO,KACTqW,G7BnDhB,SAAmB/M,EAAe1L,GAC9B,MAAMnM,EAAWkY,EAAeL,EAAe1L,GAC/C,IAAI,cAAEyY,EAAgB,CAAC,EAAC,WAAElB,EAAa,CAAC,KAAM7e,GAAW7E,GAAY,CAAC,EACtE6E,EAAS,IAAKA,KAAW+f,GACzB,IAAK,MAAM3nB,KAAO4H,EAEd0T,EAAeV,EAAe5a,G8BjBAkF,E9BgBa0C,EAAO5H,G8Bd/Csa,EAAkBpV,GAAKA,EAAEA,EAAExB,OAAS,IAAM,EAAIwB,IAFpB,IAACA,C9BmBtC,C6B2CiCojB,CAAU1N,EAAe+M,EAAc,GAC1D,IAGHC,CACX,CErEA,SAASW,GAAe3N,EAAe4N,EAASlmB,EAAU,CAAC,GACvD,IAAIkG,EACJ,MAAMzF,EAAWkY,EAAeL,EAAe4N,EAA0B,SAAjBlmB,EAAQvB,KACjB,QAAxCyH,EAAKoS,EAAc6N,uBAAoC,IAAPjgB,OAAgB,EAASA,EAAGuS,YAC7ErT,GACN,IAAI,WAAE+e,EAAa7L,EAAc0L,wBAA0B,CAAC,GAAMvjB,GAAY,CAAC,EAC3ET,EAAQolB,qBACRjB,EAAankB,EAAQolB,oBAMzB,MAAMgB,EAAe3lB,EACf,IAAM4B,QAAQ0jB,IAAIb,GAAc5M,EAAe7X,EAAUT,IACzD,IAAMqC,QAAQL,UAKdqkB,EAAqB/N,EAAcgO,iBAAmBhO,EAAcgO,gBAAgBnI,KACpF,CAACoI,EAAe,KACd,MAAM,cAAE/B,EAAgB,EAAC,gBAAEC,EAAe,iBAAEC,GAAsBP,EAClE,OAkBZ,SAAyB7L,EAAe4N,EAAS1B,EAAgB,EAAGC,EAAkB,EAAGC,EAAmB,EAAG1kB,GAC3G,MAAMslB,EAAa,GACbkB,GAAsBlO,EAAcgO,gBAAgBnI,KAAO,GAAKsG,EAChEgC,EAA+C,IAArB/B,EAC1B,CAACnjB,EAAI,IAAMA,EAAIkjB,EACf,CAACljB,EAAI,IAAMilB,EAAqBjlB,EAAIkjB,EAU1C,OATArlB,MAAMsD,KAAK4V,EAAcgO,iBACpBI,KAAKC,IACLtQ,SAAQ,CAACuQ,EAAOrlB,KACjBqlB,EAAMC,OAAO,iBAAkBX,GAC/BZ,EAAW1X,KAAKqY,GAAeW,EAAOV,EAAS,IACxClmB,EACHJ,MAAO4kB,EAAgBiC,EAAwBllB,KAChDQ,MAAK,IAAM6kB,EAAMC,OAAO,oBAAqBX,KAAU,IAEvD7jB,QAAQ0jB,IAAIT,EACvB,CAlCmBwB,CAAgBxO,EAAe4N,EAAS1B,EAAgB+B,EAAc9B,EAAiBC,EAAkB1kB,EAAQ,EAE1H,IAAMqC,QAAQL,WAKd,KAAEsiB,GAASH,EACjB,GAAIG,EAAM,CACN,MAAOyC,EAAOC,GAAiB,mBAAT1C,EAChB,CAAC8B,EAAcC,GACf,CAACA,EAAoBD,GAC3B,OAAOW,IAAQhlB,MAAK,IAAMilB,KAC9B,CAEI,OAAO3kB,QAAQ0jB,IAAI,CAACK,IAAgBC,EAAmBrmB,EAAQJ,QAEvE,CAkBA,SAAS+mB,GAAgB3oB,EAAGE,GACxB,OAAOF,EAAEipB,iBAAiB/oB,EAC9B,CC5DA,MAAMgpB,GAAkBpO,EAAa1X,OACrC,SAAS+lB,GAAkB7O,GACvB,IAAKA,EACD,OACJ,IAAKA,EAAc8O,sBAAuB,CACtC,MAAMC,EAAU/O,EAAcgP,QACxBH,GAAkB7O,EAAcgP,SAChC,CAAC,EAIP,YAHoCliB,IAAhCkT,EAAc5Z,MAAM6oB,UACpBF,EAAQE,QAAUjP,EAAc5Z,MAAM6oB,SAEnCF,CACX,CACA,MAAMA,EAAU,CAAC,EACjB,IAAK,IAAI9lB,EAAI,EAAGA,EAAI2lB,GAAiB3lB,IAAK,CACtC,MAAMpC,EAAO2Z,EAAavX,GACpBimB,EAAOlP,EAAc5Z,MAAMS,IAC7BiZ,EAAeoP,KAAkB,IAATA,KACxBH,EAAQloB,GAAQqoB,EAExB,CACA,OAAOH,CACX,CChBA,MAAMI,GAAuB,IAAI5O,GAAsBzK,UACjDsZ,GAAoB7O,EAAqBzX,OAI/C,SAASumB,GAAqBrP,GAC1B,IAAIyK,EAJR,SAAqBzK,GACjB,OAAQgN,GAAejjB,QAAQ0jB,IAAIT,EAAWngB,KAAI,EAAGyd,YAAW5iB,aCRpE,SAA8BsY,EAAe1L,EAAY5M,EAAU,CAAC,GAEhE,IAAI4iB,EACJ,GAFAtK,EAAcuO,OAAO,iBAAkBja,GAEnCxN,MAAMC,QAAQuN,GAAa,CAC3B,MAAM0Y,EAAa1Y,EAAWzH,KAAK+gB,GAAYD,GAAe3N,EAAe4N,EAASlmB,KACtF4iB,EAAYvgB,QAAQ0jB,IAAIT,EAC5B,MACK,GAA0B,iBAAf1Y,EACZgW,EAAYqD,GAAe3N,EAAe1L,EAAY5M,OAErD,CACD,MAAM4nB,EAA2C,mBAAfhb,EAC5B+L,EAAeL,EAAe1L,EAAY5M,EAAQyY,QAClD7L,EACNgW,EAAYvgB,QAAQ0jB,IAAIb,GAAc5M,EAAesP,EAAoB5nB,GAC7E,CACA,OAAO4iB,EAAU7gB,MAAK,KAClBuW,EAAcuO,OAAO,oBAAqBja,EAAW,GAE7D,CDXkFib,CAAqBvP,EAAesK,EAAW5iB,KACjI,CAEkB8nB,CAAYxP,GACtBvQ,EAAQggB,KACRC,GAAkB,EAKtB,MAAMC,EAA2BxpB,GAAS,CAAC0W,EAAKvI,KAC5C,IAAI1G,EACJ,MAAMzF,EAAWkY,EAAeL,EAAe1L,EAAqB,SAATnO,EACZ,QAAxCyH,EAAKoS,EAAc6N,uBAAoC,IAAPjgB,OAAgB,EAASA,EAAGuS,YAC7ErT,GACN,GAAI3E,EAAU,CACV,MAAM,WAAE0jB,EAAU,cAAEkB,KAAkB/f,GAAW7E,EACjD0U,EAAM,IAAKA,KAAQ7P,KAAW+f,EAClC,CACA,OAAOlQ,CAAG,EAmBd,SAAS+S,EAAeC,GACpB,MAAM,MAAEzpB,GAAU4Z,EACZ+O,EAAUF,GAAkB7O,EAAcgP,SAAW,CAAC,EAKtDhC,EAAa,GAKb8C,EAAc,IAAI1jB,IAMxB,IAAI2jB,EAAkB,CAAC,EAKnBC,EAAsBC,IAO1B,IAAK,IAAIhnB,EAAI,EAAGA,EAAImmB,GAAmBnmB,IAAK,CACxC,MAAM9C,EAAOgpB,GAAqBlmB,GAC5BinB,EAAYzgB,EAAMtJ,GAClB+oB,OAAuBpiB,IAAhB1G,EAAMD,GACbC,EAAMD,GACN4oB,EAAQ5oB,GACRgqB,EAAgBrQ,EAAeoP,GAK/BkB,EAAcjqB,IAAS0pB,EAAoBK,EAAUG,SAAW,MAClD,IAAhBD,IACAJ,EAAsB/mB,GAO1B,IAAIqnB,EAAcpB,IAASH,EAAQ5oB,IAC/B+oB,IAAS9oB,EAAMD,IACfgqB,EAeJ,GAXIG,GACAZ,GACA1P,EAAcuQ,yBACdD,GAAc,GAMlBJ,EAAUzD,cAAgB,IAAKsD,IAI7BG,EAAUG,UAA4B,OAAhBD,IAElBlB,IAASgB,EAAUM,UAErB/Q,EAAoByP,IACJ,kBAATA,EACP,SAOJ,MAAMuB,GA0Kc7Q,EA1K4BsQ,EAAUM,SA2K9C,iBADcxe,EA1K0Ckd,GA4KjEld,IAAS4N,IAEX9Y,MAAMC,QAAQiL,KACX2N,EAAe3N,EAAM4N,IA9KzB,IAAI8Q,EAAoBD,GAEnBtqB,IAAS0pB,GACNK,EAAUG,WACTC,GACDH,GAEHlnB,EAAI+mB,GAAuBG,EAC5BQ,GAAuB,EAK3B,MAAMC,EAAiB9pB,MAAMC,QAAQmoB,GAAQA,EAAO,CAACA,GAKrD,IAAI2B,EAAiBD,EAAehU,OAAO+S,EAAwBxpB,GAAO,CAAC,IACvD,IAAhBiqB,IACAS,EAAiB,CAAC,GAUtB,MAAM,mBAAEC,EAAqB,CAAC,GAAMZ,EAC9Ba,EAAU,IACTD,KACAD,GAEDG,EAAiB5rB,IACnBsrB,GAAoB,EAChBZ,EAAYtiB,IAAIpI,KAChBurB,GAAuB,EACvBb,EAAYlS,OAAOxY,IAEvB8qB,EAAUxD,eAAetnB,IAAO,EAChC,MAAM6S,EAAc+H,EAAcY,SAASxb,GACvC6S,IACAA,EAAYgZ,WAAY,EAAK,EAErC,IAAK,MAAM7rB,KAAO2rB,EAAS,CACvB,MAAM/e,EAAO6e,EAAezrB,GACtBwa,EAAOkR,EAAmB1rB,GAEhC,GAAI2qB,EAAgBhrB,eAAeK,GAC/B,SAIJ,IAAI8rB,GAAkB,EAElBA,EADAxR,EAAkB1N,IAAS0N,EAAkBE,IAC1BD,EAAe3N,EAAM4N,GAGtB5N,IAAS4N,EAE3BsR,EACIlf,QAEAgf,EAAc5rB,GAId0qB,EAAYnS,IAAIvY,QAGN0H,IAATkF,GAAsB8d,EAAYtiB,IAAIpI,GAK3C4rB,EAAc5rB,GAOd8qB,EAAUzD,cAAcrnB,IAAO,CAEvC,CAKA8qB,EAAUM,SAAWtB,EACrBgB,EAAUY,mBAAqBD,EAI3BX,EAAUG,WACVN,EAAkB,IAAKA,KAAoBc,IAE3CnB,GAAmB1P,EAAcmR,wBACjCT,GAAoB,GAQpBA,KAFyBJ,IAAeG,GACIE,IAE5C3D,EAAW1X,QAAQsb,EAAe/jB,KAAKyd,IAAc,CACjDA,UAAWA,EACX5iB,QAAS,CAAEvB,YAGvB,CAuDR,IAAgCyZ,EAAM5N,EAjD9B,GAAI8d,EAAYjK,KAAM,CAClB,MAAMuL,EAAoB,CAAC,EAC3BtB,EAAY/R,SAAS3Y,IACjB,MAAMisB,EAAiBrR,EAAcsR,cAAclsB,GAC7C6S,EAAc+H,EAAcY,SAASxb,GACvC6S,IACAA,EAAYgZ,WAAY,GAE5BG,EAAkBhsB,GAAOisB,QAAuDA,EAAiB,IAAI,IAEzGrE,EAAW1X,KAAK,CAAEgV,UAAW8G,GACjC,CACA,IAAIG,EAAgBrmB,QAAQ8hB,EAAWlkB,QAOvC,OANI4mB,IACmB,IAAlBtpB,EAAM6oB,SAAqB7oB,EAAM6oB,UAAY7oB,EAAMqkB,SACnDzK,EAAcuQ,yBACfgB,GAAgB,GAEpB7B,GAAkB,EACX6B,EAAgB9G,EAAQuC,GAAcjjB,QAAQL,SACzD,CAkBA,MAAO,CACHkmB,iBACA4B,UAhBJ,SAAmBrrB,EAAMkqB,GACrB,IAAIziB,EAEJ,GAAI6B,EAAMtJ,GAAMkqB,WAAaA,EACzB,OAAOtmB,QAAQL,UAEsB,QAAxCkE,EAAKoS,EAAcgO,uBAAoC,IAAPpgB,GAAyBA,EAAGmQ,SAASuQ,IAAY,IAAI1gB,EAAI,OAAuC,QAA/BA,EAAK0gB,EAAMpB,sBAAmC,IAAPtf,OAAgB,EAASA,EAAG4jB,UAAUrrB,EAAMkqB,EAAS,IAC9M5gB,EAAMtJ,GAAMkqB,SAAWA,EACvB,MAAMrD,EAAa4C,EAAezpB,GAClC,IAAK,MAAMf,KAAOqK,EACdA,EAAMrK,GAAKqnB,cAAgB,CAAC,EAEhC,OAAOO,CACX,EAIIyE,mBAjQJ,SAA4BC,GACxBjH,EAAUiH,EAAa1R,EAC3B,EAgQImN,SAAU,IAAM1d,EAChBkiB,MAAO,KACHliB,EAAQggB,KACRC,GAAkB,CAAI,EAGlC,CAUA,SAASkC,GAAgBvB,GAAW,GAChC,MAAO,CACHA,WACA5D,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjBoE,mBAAoB,CAAC,EAE7B,CACA,SAASrB,KACL,MAAO,CACHhF,QAASmH,IAAgB,GACzBC,YAAaD,KACbE,WAAYF,KACZG,SAAUH,KACVI,UAAWJ,KACXK,WAAYL,KACZM,KAAMN,KAEd,CEzUA,MAAMO,GACF,WAAA/qB,CAAYgrB,GACRzqB,KAAK0qB,WAAY,EACjB1qB,KAAKyqB,KAAOA,CAChB,CACA,MAAA1b,GAAW,ECHf,IAAI4b,GAAK,ECCT,MAAMtF,GAAa,CACf1C,UAAW,CACP6H,QCDR,cAA+BA,GAM3B,WAAA/qB,CAAYgrB,GACR9a,MAAM8a,GACNA,EAAKlF,iBAAmBkF,EAAKlF,eAAiBmC,GAAqB+C,GACvE,CACA,mCAAAG,GACI,MAAM,QAAE9H,GAAY9iB,KAAKyqB,KAAK9R,WAC1Bb,EAAoBgL,KACpB9iB,KAAK6qB,gBAAkB/H,EAAQgI,UAAU9qB,KAAKyqB,MAEtD,CAIA,KAAAM,GACI/qB,KAAK4qB,qCACT,CACA,MAAA7b,GACI,MAAM,QAAE+T,GAAY9iB,KAAKyqB,KAAK9R,YACtBmK,QAASkI,GAAgBhrB,KAAKyqB,KAAKQ,WAAa,CAAC,EACrDnI,IAAYkI,GACZhrB,KAAK4qB,qCAEb,CACA,OAAAM,GACI,IAAIjlB,EACJjG,KAAKyqB,KAAKlF,eAAeyE,QACO,QAA/B/jB,EAAKjG,KAAK6qB,uBAAoC,IAAP5kB,GAAyBA,EAAG5H,KAAK2B,KAC7E,ID9BAuqB,KAAM,CACFC,QDLR,cAAmCA,GAC/B,WAAA/qB,GACIkQ,SAASwb,WACTnrB,KAAK2qB,GAAKA,IACd,CACA,MAAA5b,GACI,IAAK/O,KAAKyqB,KAAKvE,gBACX,OACJ,MAAM,UAAEkF,EAAS,eAAEC,GAAmBrrB,KAAKyqB,KAAKvE,iBACxCkF,UAAWE,GAAkBtrB,KAAKyqB,KAAKc,qBAAuB,CAAC,EACvE,IAAKvrB,KAAKyqB,KAAKlF,gBAAkB6F,IAAcE,EAC3C,OAEJ,MAAME,EAAgBxrB,KAAKyqB,KAAKlF,eAAesE,UAAU,QAASuB,GAC9DC,IAAmBD,GACnBI,EAAc1pB,MAAK,IAAMupB,EAAerrB,KAAK2qB,KAErD,CACA,KAAAI,GACI,MAAM,SAAEU,GAAazrB,KAAKyqB,KAAKvE,iBAAmB,CAAC,EAC/CuF,IACAzrB,KAAKkrB,QAAUO,EAASzrB,KAAK2qB,IAErC,CACA,OAAAO,GAAY,KG3BhB,SAASQ,GAAYrmB,EAAQsmB,EAAWC,EAAS7rB,EAAU,CAAE8rB,SAAS,IAElE,OADAxmB,EAAOymB,iBAAiBH,EAAWC,EAAS7rB,GACrC,IAAMsF,EAAO0mB,oBAAoBJ,EAAWC,EACvD,CCDA,SAASI,GAAiBC,GACtB,MAAO,CACHC,MAAO,CACHlY,EAAGiY,EAAME,MACT3O,EAAGyO,EAAMG,OAGrB,CCNA,SAASC,GAAgBhnB,EAAQsmB,EAAWC,EAAS7rB,GACjD,OAAO2rB,GAAYrmB,EAAQsmB,EDMR,CAACC,GACZK,IAAU,QAAiBA,IAAUL,EAAQK,EAAOD,GAAiBC,ICPvCK,CAAeV,GAAU7rB,EACnE,CCLA,MAAMqd,GAAW,CAACrf,EAAGE,IAAM6E,KAAK2G,IAAI1L,EAAIE,kBCWxC,MAAMsuB,GACF,WAAA9sB,CAAYwsB,EAAOO,GAAU,mBAAEtZ,EAAkB,cAAEuZ,EAAa,iBAAEC,GAAmB,GAAW,CAAC,GAgE7F,GA5DA1sB,KAAK2sB,WAAa,KAIlB3sB,KAAK4sB,cAAgB,KAIrB5sB,KAAK6sB,kBAAoB,KAIzB7sB,KAAKwsB,SAAW,CAAC,EAIjBxsB,KAAKysB,cAAgB3M,OACrB9f,KAAK8sB,YAAc,KACf,IAAM9sB,KAAK4sB,gBAAiB5sB,KAAK6sB,kBAC7B,OACJ,MAAME,EAAOC,GAAWhtB,KAAK6sB,kBAAmB7sB,KAAKitB,SAC/CC,EAAmC,OAApBltB,KAAK2sB,WAIpBQ,EDxClB,SAAoBpvB,EAAGE,GAEnB,MAAMmvB,EAAShQ,GAASrf,EAAEiW,EAAG/V,EAAE+V,GACzBqZ,EAASjQ,GAASrf,EAAEyf,EAAGvf,EAAEuf,GAC/B,OAAO1a,KAAKC,KAAKqqB,GAAU,EAAIC,GAAU,EAC7C,CCmC4CC,CAAWP,EAAK1f,OAAQ,CAAE2G,EAAG,EAAGwJ,EAAG,KAAQ,EAC3E,IAAK0P,IAAiBC,EAClB,OACJ,MAAM,MAAEjB,GAAUa,GACZ,UAAE9d,GAAc,KACtBjP,KAAKitB,QAAQtf,KAAK,IAAKue,EAAOjd,cAC9B,MAAM,QAAEse,EAAO,OAAEC,GAAWxtB,KAAKwsB,SAC5BU,IACDK,GAAWA,EAAQvtB,KAAK4sB,cAAeG,GACvC/sB,KAAK2sB,WAAa3sB,KAAK4sB,eAE3BY,GAAUA,EAAOxtB,KAAK4sB,cAAeG,EAAK,EAE9C/sB,KAAKytB,kBAAoB,CAACxB,EAAOc,KAC7B/sB,KAAK4sB,cAAgBX,EACrBjsB,KAAK6sB,kBAAoBa,GAAeX,EAAM/sB,KAAKkT,oBAEnD,KAAMnE,OAAO/O,KAAK8sB,aAAa,EAAK,EAExC9sB,KAAK2tB,gBAAkB,CAAC1B,EAAOc,KAC3B/sB,KAAK4tB,MACL,MAAM,MAAEC,EAAK,aAAEC,EAAY,gBAAEC,GAAoB/tB,KAAKwsB,SAGtD,GAFIxsB,KAAK0sB,kBACLqB,GAAmBA,KACjB/tB,KAAK4sB,gBAAiB5sB,KAAK6sB,kBAC7B,OACJ,MAAMmB,EAAUhB,GAA0B,kBAAff,EAAMztB,KAC3BwB,KAAK6sB,kBACLa,GAAeX,EAAM/sB,KAAKkT,oBAAqBlT,KAAKitB,SACtDjtB,KAAK2sB,YAAckB,GACnBA,EAAM5B,EAAO+B,GAEjBF,GAAgBA,EAAa7B,EAAO+B,EAAQ,IAG3C,QAAiB/B,GAClB,OACJjsB,KAAK0sB,iBAAmBA,EACxB1sB,KAAKwsB,SAAWA,EAChBxsB,KAAKkT,mBAAqBA,EAC1BlT,KAAKysB,cAAgBA,GAAiB3M,OACtC,MACMmO,EAAcP,GADP1B,GAAiBC,GACWjsB,KAAKkT,qBACxC,MAAEgZ,GAAU+B,GACZ,UAAEhf,GAAc,KACtBjP,KAAKitB,QAAU,CAAC,IAAKf,EAAOjd,cAC5B,MAAM,eAAEif,GAAmB1B,EAC3B0B,GACIA,EAAejC,EAAOe,GAAWiB,EAAajuB,KAAKitB,UACvDjtB,KAAKmuB,iBAAkB,EAAAnoB,GAAA,GAAKqmB,GAAgBrsB,KAAKysB,cAAe,cAAezsB,KAAKytB,mBAAoBpB,GAAgBrsB,KAAKysB,cAAe,YAAazsB,KAAK2tB,iBAAkBtB,GAAgBrsB,KAAKysB,cAAe,gBAAiBzsB,KAAK2tB,iBAC9O,CACA,cAAAS,CAAe5B,GACXxsB,KAAKwsB,SAAWA,CACpB,CACA,GAAAoB,GACI5tB,KAAKmuB,iBAAmBnuB,KAAKmuB,mBAC7B,QAAYnuB,KAAK8sB,YACrB,EAEJ,SAASY,GAAeX,EAAM7Z,GAC1B,OAAOA,EAAqB,CAAEgZ,MAAOhZ,EAAmB6Z,EAAKb,QAAWa,CAC5E,CACA,SAASsB,GAActwB,EAAGE,GACtB,MAAO,CAAE+V,EAAGjW,EAAEiW,EAAI/V,EAAE+V,EAAGwJ,EAAGzf,EAAEyf,EAAIvf,EAAEuf,EACtC,CACA,SAASwP,IAAW,MAAEd,GAASe,GAC3B,MAAO,CACHf,QACAtjB,MAAOylB,GAAcnC,EAAOoC,GAAgBrB,IAC5C5f,OAAQghB,GAAcnC,EAAOqC,GAAiBtB,IAC9CpsB,SAAUyX,GAAY2U,EAAS,IAEvC,CACA,SAASsB,GAAiBtB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASqB,GAAgBrB,GACrB,OAAOA,EAAQA,EAAQ9rB,OAAS,EACpC,CACA,SAASmX,GAAY2U,EAASuB,GAC1B,GAAIvB,EAAQ9rB,OAAS,EACjB,MAAO,CAAE6S,EAAG,EAAGwJ,EAAG,GAEtB,IAAIlc,EAAI2rB,EAAQ9rB,OAAS,EACrBstB,EAAmB,KACvB,MAAMC,EAAYJ,GAAgBrB,GAClC,KAAO3rB,GAAK,IACRmtB,EAAmBxB,EAAQ3rB,KACvBotB,EAAUzf,UAAYwf,EAAiBxf,WACvC,OAAsBuf,MAG1BltB,IAEJ,IAAKmtB,EACD,MAAO,CAAEza,EAAG,EAAGwJ,EAAG,GAEtB,MAAMvL,GAAO,OAAsByc,EAAUzf,UAAYwf,EAAiBxf,WAC1E,GAAa,IAATgD,EACA,MAAO,CAAE+B,EAAG,EAAGwJ,EAAG,GAEtB,MAAMlT,EAAkB,CACpB0J,GAAI0a,EAAU1a,EAAIya,EAAiBza,GAAK/B,EACxCuL,GAAIkR,EAAUlR,EAAIiR,EAAiBjR,GAAKvL,GAQ5C,OANI3H,EAAgB0J,IAAMsU,MACtBhe,EAAgB0J,EAAI,GAEpB1J,EAAgBkT,IAAM8K,MACtBhe,EAAgBkT,EAAI,GAEjBlT,CACX,CCzJA,SAASqkB,GAAYjxB,GACjB,OAAQA,GACW,iBAARA,GACPR,OAAOC,UAAUC,eAAeiB,KAAKX,EAAK,UAClD,2BCIA,SAASkxB,GAAWC,GAChB,OAAOA,EAAKhoB,IAAMgoB,EAAK7kB,GAC3B,CAIA,SAAS8kB,GAAclmB,EAAOmmB,EAAQ1pB,EAAQD,EAAS,IACnDwD,EAAMxD,OAASA,EACfwD,EAAMomB,aAAc,QAAUD,EAAO/kB,IAAK+kB,EAAOloB,IAAK+B,EAAMxD,QAC5DwD,EAAMiU,MAAQ+R,GAAWvpB,GAAUupB,GAAWG,GAC9CnmB,EAAMqmB,WACF,QAAU5pB,EAAO2E,IAAK3E,EAAOwB,IAAK+B,EAAMxD,QAAUwD,EAAMomB,aACvDpmB,EAAMiU,OAjBG,OAiBmBjU,EAAMiU,OAhBzB,QAiBV3T,MAAMN,EAAMiU,UACZjU,EAAMiU,MAAQ,IAEbjU,EAAMqmB,YAlBO,KAmBdrmB,EAAMqmB,WAlBQ,KAmBd/lB,MAAMN,EAAMqmB,cACZrmB,EAAMqmB,UAAY,EAE1B,CACA,SAASC,GAAatmB,EAAOmmB,EAAQ1pB,EAAQD,GACzC0pB,GAAclmB,EAAMoL,EAAG+a,EAAO/a,EAAG3O,EAAO2O,EAAG5O,EAASA,EAAOyY,aAAU1Y,GACrE2pB,GAAclmB,EAAM4U,EAAGuR,EAAOvR,EAAGnY,EAAOmY,EAAGpY,EAASA,EAAO0Y,aAAU3Y,EACzE,CACA,SAASgqB,GAAiB9pB,EAAQ+pB,EAAU/H,GACxChiB,EAAO2E,IAAMqd,EAAOrd,IAAMolB,EAASplB,IACnC3E,EAAOwB,IAAMxB,EAAO2E,IAAM4kB,GAAWQ,EACzC,CAKA,SAASC,GAAyBhqB,EAAQiqB,EAAQjI,GAC9ChiB,EAAO2E,IAAMslB,EAAOtlB,IAAMqd,EAAOrd,IACjC3E,EAAOwB,IAAMxB,EAAO2E,IAAM4kB,GAAWU,EACzC,CACA,SAASC,GAAqBlqB,EAAQiqB,EAAQjI,GAC1CgI,GAAyBhqB,EAAO2O,EAAGsb,EAAOtb,EAAGqT,EAAOrT,GACpDqb,GAAyBhqB,EAAOmY,EAAG8R,EAAO9R,EAAG6J,EAAO7J,EACxD,gBCnBA,SAASgS,GAA4BX,EAAM7kB,EAAKnD,GAC5C,MAAO,CACHmD,SAAa7E,IAAR6E,EAAoB6kB,EAAK7kB,IAAMA,OAAM7E,EAC1C0B,SAAa1B,IAAR0B,EACCgoB,EAAKhoB,IAAMA,GAAOgoB,EAAKhoB,IAAMgoB,EAAK7kB,UAClC7E,EAEd,CAcA,SAASsqB,GAA4BC,EAAYC,GAC7C,IAAI3lB,EAAM2lB,EAAgB3lB,IAAM0lB,EAAW1lB,IACvCnD,EAAM8oB,EAAgB9oB,IAAM6oB,EAAW7oB,IAO3C,OAJI8oB,EAAgB9oB,IAAM8oB,EAAgB3lB,IACtC0lB,EAAW7oB,IAAM6oB,EAAW1lB,OAC3BA,EAAKnD,GAAO,CAACA,EAAKmD,IAEhB,CAAEA,MAAKnD,MAClB,CAuCA,MAAM+oB,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHhmB,IAAKimB,GAAoBH,EAAaC,GACtClpB,IAAKopB,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,iBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC9HA,MAWMC,GAAY,KAAM,CACpBnc,EAFqB,CAAGhK,IAAK,EAAGnD,IAAK,GAGrC2W,EAHqB,CAAGxT,IAAK,EAAGnD,IAAK,KCVzC,SAASupB,GAAS1a,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAAS2a,IAAwB,IAAE7U,EAAG,KAAEG,EAAI,MAAEF,EAAK,OAAEC,IACjD,MAAO,CACH1H,EAAG,CAAEhK,IAAK2R,EAAM9U,IAAK4U,GACrB+B,EAAG,CAAExT,IAAKwR,EAAK3U,IAAK6U,GAE5B,CCVA,SAAS4U,GAAgBzT,GACrB,YAAiB1X,IAAV0X,GAAiC,IAAVA,CAClC,CACA,SAAS0T,IAAS,MAAE1T,EAAK,OAAEC,EAAM,OAAEC,IAC/B,OAASuT,GAAgBzT,KACpByT,GAAgBxT,KAChBwT,GAAgBvT,EACzB,CACA,SAASyT,GAAa1qB,GAClB,OAAQyqB,GAASzqB,IACb2qB,GAAe3qB,IACfA,EAAO2X,GACP3X,EAAO2W,QACP3W,EAAO4W,SACP5W,EAAO6W,SACP7W,EAAOoX,OACPpX,EAAOqX,KACf,CACA,SAASsT,GAAe3qB,GACpB,OAAO4qB,GAAc5qB,EAAOkO,IAAM0c,GAAc5qB,EAAO0X,EAC3D,CACA,SAASkT,GAAczxB,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCjBA,SAAS0xB,GAAWzE,EAAOrP,EAAOmS,GAG9B,OAAOA,EADQnS,GADYqP,EAAQ8C,EAGvC,CAIA,SAAS4B,GAAgB1E,EAAO+C,EAAWpS,EAAOmS,EAAa6B,GAI3D,YAHiB1rB,IAAb0rB,IACA3E,EAAQyE,GAAWzE,EAAO2E,EAAU7B,IAEjC2B,GAAWzE,EAAOrP,EAAOmS,GAAeC,CACnD,CAIA,SAAS6B,GAAejC,EAAMI,EAAY,EAAGpS,EAAQ,EAAGmS,EAAa6B,GACjEhC,EAAK7kB,IAAM4mB,GAAgB/B,EAAK7kB,IAAKilB,EAAWpS,EAAOmS,EAAa6B,GACpEhC,EAAKhoB,IAAM+pB,GAAgB/B,EAAKhoB,IAAKooB,EAAWpS,EAAOmS,EAAa6B,EACxE,CAIA,SAASE,GAAcC,GAAK,EAAEhd,EAAC,EAAEwJ,IAC7BsT,GAAeE,EAAIhd,EAAGA,EAAEib,UAAWjb,EAAE6I,MAAO7I,EAAEgb,aAC9C8B,GAAeE,EAAIxT,EAAGA,EAAEyR,UAAWzR,EAAEX,MAAOW,EAAEwR,YAClD,CACA,MAAMiC,GAAsB,cACtBC,GAAsB,gBA6D5B,SAASC,GAActC,EAAMzR,GACzByR,EAAK7kB,IAAM6kB,EAAK7kB,IAAMoT,EACtByR,EAAKhoB,IAAMgoB,EAAKhoB,IAAMuW,CAC1B,CAMA,SAASgU,GAAcvC,EAAMwC,EAAeC,EAAWT,EAAUU,EAAa,IAG1ET,GAAejC,EAAMwC,EAAeC,GAFhB,QAAUzC,EAAK7kB,IAAK6kB,EAAKhoB,IAAK0qB,GAEUV,EAChE,CAIA,SAASW,GAAaR,EAAKzsB,GACvB6sB,GAAcJ,EAAIhd,EAAGzP,EAAUyP,EAAGzP,EAAUuY,OAAQvY,EAAUsY,MAAOtY,EAAUsZ,SAC/EuT,GAAcJ,EAAIxT,EAAGjZ,EAAUiZ,EAAGjZ,EAAUwY,OAAQxY,EAAUsY,MAAOtY,EAAUuZ,QACnF,CCjHA,SAAS2D,GAAmBgQ,EAAU/D,GAClC,OAAO2C,GHeX,SAA4BnE,EAAOwB,GAC/B,IAAKA,EACD,OAAOxB,EACX,MAAMwF,EAAUhE,EAAe,CAAE1Z,EAAGkY,EAAMvQ,KAAM6B,EAAG0O,EAAM1Q,MACnDmW,EAAcjE,EAAe,CAAE1Z,EAAGkY,EAAMzQ,MAAO+B,EAAG0O,EAAMxQ,SAC9D,MAAO,CACHF,IAAKkW,EAAQlU,EACb7B,KAAM+V,EAAQ1d,EACd0H,OAAQiW,EAAYnU,EACpB/B,MAAOkW,EAAY3d,EAE3B,CG1BmC4d,CAAmBH,EAASI,wBAAyBnE,GACxF,CCJA,MAAMoE,GAAmB,EAAGnzB,aACjBA,EAAUA,EAAQozB,cAAcC,YAAc,KCkBnDC,GAAsB,IAAIC,QAKhC,MAAMC,GACF,WAAA1yB,CAAY4Y,GACRrY,KAAKoyB,aAAe,KACpBpyB,KAAKqyB,YAAa,EAClBryB,KAAKsyB,iBAAmB,KACxBtyB,KAAKgvB,YAAc,CAAEhb,EAAG,EAAGwJ,EAAG,GAI9Bxd,KAAKuyB,aAAc,EACnBvyB,KAAKwyB,uBAAwB,EAI7BxyB,KAAKyyB,QP5BW,CACpBze,EAFqB,CAAGhK,IAAK,EAAGnD,IAAK,GAGrC2W,EAHqB,CAAGxT,IAAK,EAAGnD,IAAK,IO8BjC7G,KAAKqY,cAAgBA,CACzB,CACA,KAAAnJ,CAAMwjB,GAAa,aAAEC,GAAe,GAAU,CAAC,GAI3C,MAAM,gBAAEzM,GAAoBlmB,KAAKqY,cACjC,GAAI6N,IAAiD,IAA9BA,EAAgBkF,UACnC,OACJ,MA6FM,iBAAEsB,GAAqB1sB,KAAK2Y,WAClC3Y,KAAK4yB,WAAa,IAAIrG,GAAWmG,EAAa,CAC1CxE,eA/FoBjC,IACpB,MAAM,iBAAES,GAAqB1sB,KAAK2Y,WAGlC+T,EAAmB1sB,KAAK6yB,iBAAmB7yB,KAAK8yB,gBAC5CH,GACA3yB,KAAK2yB,aAAa3G,GAAiBC,GAAOC,MAC9C,EAyFAqB,QAvFY,CAACtB,EAAOc,KAEpB,MAAM,KAAEgG,EAAI,gBAAEC,EAAe,YAAEC,GAAgBjzB,KAAK2Y,WACpD,GAAIoa,IAASC,IACLhzB,KAAKoyB,cACLpyB,KAAKoyB,eACTpyB,KAAKoyB,cAAe,QAAYW,IAE3B/yB,KAAKoyB,cACN,OAERpyB,KAAKqyB,YAAa,EAClBryB,KAAKsyB,iBAAmB,KACxBtyB,KAAKkzB,qBACDlzB,KAAKqY,cAAc8a,aACnBnzB,KAAKqY,cAAc8a,WAAWC,oBAAqB,EACnDpzB,KAAKqY,cAAc8a,WAAW9tB,YAASF,GAK3CirB,IAAUvB,IACN,IAAIlwB,EAAUqB,KAAKqzB,mBAAmBxE,GAAMjX,OAAS,EAIrD,GAAI,KAAQtY,KAAKX,GAAU,CACvB,MAAM,WAAEw0B,GAAenzB,KAAKqY,cAC5B,GAAI8a,GAAcA,EAAW7D,OAAQ,CACjC,MAAMgE,EAAeH,EAAW7D,OAAOiE,UAAU1E,GAC7CyE,IAEA30B,EADeiwB,GAAW0E,IACNnT,WAAWxhB,GAAW,KAElD,CACJ,CACAqB,KAAKgvB,YAAYH,GAAQlwB,CAAO,IAGhCs0B,GACA,KAAMtc,YAAW,IAAMsc,EAAYhH,EAAOc,KAE9C5T,EAAqBnZ,KAAKqY,cAAe,aACzC,MAAM,eAAEkN,GAAmBvlB,KAAKqY,cAChCkN,GAAkBA,EAAesE,UAAU,aAAa,EAAK,EA4C7D2D,OA1CW,CAACvB,EAAOc,KAEnB,MAAM,gBAAEiG,EAAe,kBAAEQ,EAAiB,gBAAEC,EAAe,OAAEC,GAAY1zB,KAAK2Y,WAE9E,IAAKqa,IAAoBhzB,KAAKoyB,aAC1B,OACJ,MAAM,OAAE/kB,GAAW0f,EAEnB,GAAIyG,GAA+C,OAA1BxzB,KAAKsyB,iBAM1B,OALAtyB,KAAKsyB,iBAuWrB,SAA6BjlB,EAAQsmB,EAAgB,IACjD,IAAI3Q,EAAY,KAOhB,OANIlgB,KAAK2G,IAAI4D,EAAOmQ,GAAKmW,EACrB3Q,EAAY,IAEPlgB,KAAK2G,IAAI4D,EAAO2G,GAAK2f,IAC1B3Q,EAAY,KAETA,CACX,CAhXwC4Q,CAAoBvmB,QAEd,OAA1BrN,KAAKsyB,kBACLmB,GAAmBA,EAAgBzzB,KAAKsyB,mBAKhDtyB,KAAK6zB,WAAW,IAAK9G,EAAKb,MAAO7e,GACjCrN,KAAK6zB,WAAW,IAAK9G,EAAKb,MAAO7e,GAOjCrN,KAAKqY,cAAc3B,SAKnBgd,GAAUA,EAAOzH,EAAOc,EAAK,EAa7Be,aAXiB,CAAC7B,EAAOc,IAAS/sB,KAAKmP,KAAK8c,EAAOc,GAYnDgB,gBAXoB,IAAMqC,IAAUvB,IACpC,IAAI5oB,EACJ,MAAwC,WAAjCjG,KAAK8zB,kBAAkBjF,KAC0B,QAAlD5oB,EAAKjG,KAAKqzB,mBAAmBxE,GAAMlM,iBAA8B,IAAP1c,OAAgB,EAASA,EAAGkL,OAAO,KASpG,CACC+B,mBAAoBlT,KAAKqY,cAAc0b,wBACvCrH,mBACAD,cAAeqF,GAAiB9xB,KAAKqY,gBAE7C,CACA,IAAAlJ,CAAK8c,EAAOc,GACR,MAAMsF,EAAaryB,KAAKqyB,WAExB,GADAryB,KAAKmQ,UACAkiB,EACD,OACJ,MAAM,SAAExxB,GAAaksB,EACrB/sB,KAAKg0B,eAAenzB,GACpB,MAAM,UAAEozB,GAAcj0B,KAAK2Y,WACvBsb,GACA,KAAMtd,YAAW,IAAMsd,EAAUhI,EAAOc,IAEhD,CACA,MAAA5c,GACInQ,KAAKqyB,YAAa,EAClB,MAAM,WAAEc,EAAU,eAAE5N,GAAmBvlB,KAAKqY,cACxC8a,IACAA,EAAWC,oBAAqB,GAEpCpzB,KAAK4yB,YAAc5yB,KAAK4yB,WAAWhF,MACnC5tB,KAAK4yB,gBAAaztB,EAClB,MAAM,gBAAE6tB,GAAoBhzB,KAAK2Y,YAC5Bqa,GAAmBhzB,KAAKoyB,eACzBpyB,KAAKoyB,eACLpyB,KAAKoyB,aAAe,MAExB7M,GAAkBA,EAAesE,UAAU,aAAa,EAC5D,CACA,UAAAgK,CAAWhF,EAAMqF,EAAQ7mB,GACrB,MAAM,KAAE0lB,GAAS/yB,KAAK2Y,WAEtB,IAAKtL,IAAW8mB,GAAWtF,EAAMkE,EAAM/yB,KAAKsyB,kBACxC,OACJ,MAAM8B,EAAYp0B,KAAKqzB,mBAAmBxE,GAC1C,IAAIxkB,EAAOrK,KAAKgvB,YAAYH,GAAQxhB,EAAOwhB,GAEvC7uB,KAAKuyB,aAAevyB,KAAKuyB,YAAY1D,KACrCxkB,ERrLZ,SAA0B6hB,GAAO,IAAEliB,EAAG,IAAEnD,GAAO4rB,GAa3C,YAZYttB,IAAR6E,GAAqBkiB,EAAQliB,EAE7BkiB,EAAQuG,GACF,QAAUzoB,EAAKkiB,EAAOuG,EAAQzoB,KAC9BlH,KAAK+D,IAAIqlB,EAAOliB,QAET7E,IAAR0B,GAAqBqlB,EAAQrlB,IAElCqlB,EAAQuG,GACF,QAAU5rB,EAAKqlB,EAAOuG,EAAQ5rB,KAC9B/D,KAAKkH,IAAIkiB,EAAOrlB,IAEnBqlB,CACX,CQuKmBmI,CAAiBhqB,EAAMrK,KAAKuyB,YAAY1D,GAAO7uB,KAAKyyB,QAAQ5D,KAEvEuF,EAAUhd,IAAI/M,EAClB,CACA,kBAAA6oB,GACI,IAAIjtB,EACJ,MAAM,gBAAEquB,EAAe,YAAExE,GAAgB9vB,KAAK2Y,WACxC2W,EAAStvB,KAAKqY,cAAc8a,aAC7BnzB,KAAKqY,cAAc8a,WAAW7D,OAC7BtvB,KAAKqY,cAAc8a,WAAWoB,SAAQ,GACG,QAAxCtuB,EAAKjG,KAAKqY,cAAc8a,kBAA+B,IAAPltB,OAAgB,EAASA,EAAGqpB,OAC7EkF,EAAkBx0B,KAAKuyB,YACzB+B,GAAmB3F,GAAY2F,GAC1Bt0B,KAAKuyB,cACNvyB,KAAKuyB,YAAcvyB,KAAKy0B,yBAKxBz0B,KAAKuyB,eADL+B,IAAmBhF,IRvKnC,SAAiCiE,GAAW,IAAE/X,EAAG,KAAEG,EAAI,OAAED,EAAM,MAAED,IAC7D,MAAO,CACHzH,EAAGwb,GAA4B+D,EAAUvf,EAAG2H,EAAMF,GAClD+B,EAAGgS,GAA4B+D,EAAU/V,EAAGhC,EAAKE,GAEzD,CQmKmCgZ,CAAwBpF,EAAOiE,UAAWe,GAMrEt0B,KAAKyyB,QRhHb,SAA4B3C,EAAcF,IAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACH5b,EAAG6b,GAAmBC,EAAa,OAAQ,SAC3CtS,EAAGqS,GAAmBC,EAAa,MAAO,UAElD,CQqGuB6E,CAAmB7E,GAK9B0E,IAAoBx0B,KAAKuyB,aACzBjD,GACAtvB,KAAKuyB,cACJvyB,KAAKwyB,uBACNpC,IAAUvB,KACmB,IAArB7uB,KAAKuyB,aACLvyB,KAAKqzB,mBAAmBxE,KACxB7uB,KAAKuyB,YAAY1D,GR1IrC,SAA+BS,EAAQiD,GACnC,MAAMqC,EAAsB,CAAC,EAO7B,YANwBzvB,IAApBotB,EAAYvoB,MACZ4qB,EAAoB5qB,IAAMuoB,EAAYvoB,IAAMslB,EAAOtlB,UAE/B7E,IAApBotB,EAAY1rB,MACZ+tB,EAAoB/tB,IAAM0rB,EAAY1rB,IAAMyoB,EAAOtlB,KAEhD4qB,CACX,CQiI6CC,CAAsBvF,EAAOiE,UAAU1E,GAAO7uB,KAAKuyB,YAAY1D,IAC5F,GAGZ,CACA,qBAAA4F,GACI,MAAQH,gBAAiB/B,EAAW,yBAAEuC,GAA6B90B,KAAK2Y,WACxE,IAAK4Z,IAAgB5D,GAAY4D,GAC7B,OAAO,EACX,MAAMwC,EAAqBxC,EAAY5zB,SACvC,OAAiC,OAAvBo2B,EAA6B,0GACvC,MAAM,WAAE5B,GAAenzB,KAAKqY,cAE5B,IAAK8a,IAAeA,EAAW7D,OAC3B,OAAO,EACX,MAAM0F,EF7Od,SAAwBzkB,EAAS0kB,EAAoB/hB,GACjD,MAAMgiB,EAAczT,GAAmBlR,EAAS2C,IAC1C,OAAEiiB,GAAWF,EAKnB,OAJIE,IACAhE,GAAc+D,EAAYlhB,EAAGmhB,EAAO9nB,OAAO2G,GAC3Cmd,GAAc+D,EAAY1X,EAAG2X,EAAO9nB,OAAOmQ,IAExC0X,CACX,CEqO+BE,CAAeL,EAAoB5B,EAAW9qB,KAAMrI,KAAKqY,cAAc0b,yBAC9F,IAAIsB,ERnLZ,SAAiC9B,EAAWyB,GACxC,MAAO,CACHhhB,EAAGyb,GAA4B8D,EAAUvf,EAAGghB,EAAehhB,GAC3DwJ,EAAGiS,GAA4B8D,EAAU/V,EAAGwX,EAAexX,GAEnE,CQ8KkC8X,CAAwBnC,EAAW7D,OAAOiE,UAAWyB,GAK/E,GAAIF,EAA0B,CAC1B,MAAMS,EAAkBT,EL/OpC,UAAiC,EAAE9gB,EAAC,EAAEwJ,IAClC,MAAO,CAAEhC,IAAKgC,EAAExT,IAAKyR,MAAOzH,EAAEnN,IAAK6U,OAAQ8B,EAAE3W,IAAK8U,KAAM3H,EAAEhK,IAC9D,CK6O6DwrB,CAAwBH,IACzEr1B,KAAKwyB,wBAA0B+C,EAC3BA,IACAF,EAAsBhF,GAAwBkF,GAEtD,CACA,OAAOF,CACX,CACA,cAAArB,CAAenzB,GACX,MAAM,KAAEkyB,EAAI,aAAE0C,EAAY,YAAE3F,EAAW,eAAE4F,EAAc,iBAAEhJ,EAAgB,oBAAEiJ,GAAyB31B,KAAK2Y,WACnG4Z,EAAcvyB,KAAKuyB,aAAe,CAAC,EACnCqD,EAAqBxF,IAAUvB,IACjC,IAAKsF,GAAWtF,EAAMkE,EAAM/yB,KAAKsyB,kBAC7B,OAEJ,IAAIpO,EAAcqO,GAAeA,EAAY1D,IAAU,CAAC,EACpDnC,IACAxI,EAAa,CAAEla,IAAK,EAAGnD,IAAK,IAOhC,MAAMmE,EAAkB8kB,EAAc,IAAM,IACtC/kB,EAAgB+kB,EAAc,GAAK,IACnCllB,EAAU,CACZpM,KAAM,UACNqC,SAAU40B,EAAe50B,EAASguB,GAAQ,EAC1C7jB,kBACAD,gBACAD,aAAc,IACdjD,UAAW,EACXD,UAAW,MACR8tB,KACAxR,GAKP,OAAOlkB,KAAK61B,wBAAwBhH,EAAMjkB,EAAQ,IAGtD,OAAOxI,QAAQ0jB,IAAI8P,GAAoB9zB,KAAK6zB,EAChD,CACA,uBAAAE,CAAwBhH,EAAM3K,GAC1B,MAAMkQ,EAAYp0B,KAAKqzB,mBAAmBxE,GAE1C,OADA1V,EAAqBnZ,KAAKqY,cAAewW,GAClCuF,EAAUllB,MAAM+U,GAAmB4K,EAAMuF,EAAW,EAAGlQ,EAAYlkB,KAAKqY,eAAe,GAClG,CACA,aAAAya,GACI1C,IAAUvB,GAAS7uB,KAAKqzB,mBAAmBxE,GAAM1f,QACrD,CACA,cAAA0jB,GACIzC,IAAUvB,IAAW,IAAI5oB,EAAI,OAA0D,QAAlDA,EAAKjG,KAAKqzB,mBAAmBxE,GAAMlM,iBAA8B,IAAP1c,OAAgB,EAASA,EAAGmL,OAAO,GACtI,CACA,iBAAA0iB,CAAkBjF,GACd,IAAI5oB,EACJ,OAA0D,QAAlDA,EAAKjG,KAAKqzB,mBAAmBxE,GAAMlM,iBAA8B,IAAP1c,OAAgB,EAASA,EAAG6B,KAClG,CAOA,kBAAAurB,CAAmBxE,GACf,MAAMiH,EAAU,QAAQjH,EAAKkH,gBACvBt3B,EAAQuB,KAAKqY,cAAcM,WAEjC,OAD4Bla,EAAMq3B,IAG5B91B,KAAKqY,cAAcY,SAAS4V,GAAOpwB,EAAM6oB,QACrC7oB,EAAM6oB,QAAQuH,QACd1pB,IAAc,EAC5B,CACA,YAAAwtB,CAAazG,GACTkE,IAAUvB,IACN,MAAM,KAAEkE,GAAS/yB,KAAK2Y,WAEtB,IAAKwb,GAAWtF,EAAMkE,EAAM/yB,KAAKsyB,kBAC7B,OACJ,MAAM,WAAEa,GAAenzB,KAAKqY,cACtB+b,EAAYp0B,KAAKqzB,mBAAmBxE,GAC1C,GAAIsE,GAAcA,EAAW7D,OAAQ,CACjC,MAAM,IAAEtlB,EAAG,IAAEnD,GAAQssB,EAAW7D,OAAOiE,UAAU1E,GACjDuF,EAAUhd,IAAI8U,EAAM2C,IAAQ,QAAU7kB,EAAKnD,EAAK,IACpD,IAER,CAMA,8BAAAmvB,GACI,IAAKh2B,KAAKqY,cAAc1Z,QACpB,OACJ,MAAM,KAAEo0B,EAAI,gBAAEuB,GAAoBt0B,KAAK2Y,YACjC,WAAEwa,GAAenzB,KAAKqY,cAC5B,IAAKsW,GAAY2F,KAAqBnB,IAAenzB,KAAKuyB,YACtD,OAKJvyB,KAAK8yB,gBAKL,MAAMmD,EAAc,CAAEjiB,EAAG,EAAGwJ,EAAG,GAC/B4S,IAAUvB,IACN,MAAMuF,EAAYp0B,KAAKqzB,mBAAmBxE,GAC1C,GAAIuF,IAAkC,IAArBp0B,KAAKuyB,YAAuB,CACzC,MAAM/mB,EAAS4oB,EAAUxc,MACzBqe,EAAYpH,GRnS5B,SAAoBE,EAAQ1pB,GACxB,IAAID,EAAS,GACb,MAAM8wB,EAAetH,GAAWG,GAC1BoH,EAAevH,GAAWvpB,GAOhC,OANI8wB,EAAeD,EACf9wB,GAAS,EAAAuF,GAAA,GAAStF,EAAO2E,IAAK3E,EAAOwB,IAAMqvB,EAAcnH,EAAO/kB,KAE3DksB,EAAeC,IACpB/wB,GAAS,EAAAuF,GAAA,GAASokB,EAAO/kB,IAAK+kB,EAAOloB,IAAMsvB,EAAc9wB,EAAO2E,OAE7D,EAAAzB,GAAA,GAAM,EAAG,EAAGnD,EACvB,CQwRoCgxB,CAAW,CAAEpsB,IAAKwB,EAAQ3E,IAAK2E,GAAUxL,KAAKuyB,YAAY1D,GAClF,KAKJ,MAAM,kBAAEjL,GAAsB5jB,KAAKqY,cAAcM,WACjD3Y,KAAKqY,cAAc1Z,QAAQ03B,MAAM9xB,UAAYqf,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACNuP,EAAW9qB,MAAQ8qB,EAAW9qB,KAAKiuB,eACnCnD,EAAWoD,eACXv2B,KAAKkzB,qBAKL9C,IAAUvB,IACN,IAAKsF,GAAWtF,EAAMkE,EAAM,MACxB,OAIJ,MAAMqB,EAAYp0B,KAAKqzB,mBAAmBxE,IACpC,IAAE7kB,EAAG,IAAEnD,GAAQ7G,KAAKuyB,YAAY1D,GACtCuF,EAAUhd,KAAI,QAAUpN,EAAKnD,EAAKovB,EAAYpH,IAAO,GAE7D,CACA,YAAA2H,GACI,IAAKx2B,KAAKqY,cAAc1Z,QACpB,OACJszB,GAAoB7a,IAAIpX,KAAKqY,cAAerY,MAC5C,MAIMy2B,EAAsBpK,GAJZrsB,KAAKqY,cAAc1Z,QAIkB,eAAgBstB,IACjE,MAAM,KAAE8G,EAAI,aAAE2D,GAAe,GAAS12B,KAAK2Y,WAC3Coa,GAAQ2D,GAAgB12B,KAAKkP,MAAM+c,EAAM,IAEvC0K,EAAyB,KAC3B,MAAM,gBAAErC,GAAoBt0B,KAAK2Y,WAC7BgW,GAAY2F,IAAoBA,EAAgB31B,UAChDqB,KAAKuyB,YAAcvyB,KAAKy0B,wBAC5B,GAEE,WAAEtB,GAAenzB,KAAKqY,cACtBue,EAA4BzD,EAAWrH,iBAAiB,UAAW6K,GACrExD,IAAeA,EAAW7D,SAC1B6D,EAAW9qB,MAAQ8qB,EAAW9qB,KAAKiuB,eACnCnD,EAAWoD,gBAEf,KAAMhgB,KAAKogB,GAKX,MAAME,EAAqBnL,GAAY5L,OAAQ,UAAU,IAAM9f,KAAKg2B,mCAK9Dc,EAA2B3D,EAAWrH,iBAAiB,aAAa,EAAIljB,QAAOmuB,uBAC7E/2B,KAAKqyB,YAAc0E,IACnB3G,IAAUvB,IACN,MAAMve,EAActQ,KAAKqzB,mBAAmBxE,GACvCve,IAELtQ,KAAKgvB,YAAYH,IAASjmB,EAAMimB,GAAMI,UACtC3e,EAAY8G,IAAI9G,EAAYsH,MAAQhP,EAAMimB,GAAMI,WAAU,IAE9DjvB,KAAKqY,cAAc3B,SAE1B,IACD,MAAO,KACHmgB,IACAJ,IACAG,IACAE,GAA4BA,GAA0B,CAE9D,CACA,QAAAne,GACI,MAAMla,EAAQuB,KAAKqY,cAAcM,YAC3B,KAAEoa,GAAO,EAAK,kBAAES,GAAoB,EAAK,gBAAER,GAAkB,EAAK,gBAAEsB,GAAkB,EAAK,YAAExE,EAAcF,GAAc,aAAE6F,GAAe,GAAUh3B,EAC1J,MAAO,IACAA,EACHs0B,OACAS,oBACAR,kBACAsB,kBACAxE,cACA2F,eAER,EAEJ,SAAStB,GAAWnR,EAAW+P,EAAMT,GACjC,SAAkB,IAATS,GAAiBA,IAAS/P,GACT,OAArBsP,GAA6BA,IAAqBtP,EAC3D,CCzcA,MAAMgU,GAAgBpL,GAAY,CAACK,EAAOc,KAClCnB,GACA,KAAMjV,YAAW,IAAMiV,EAAQK,EAAOc,IAC1C,4BCJJ,MAAM,IAAkB,KAAA9Z,eAAc,MCHhCgkB,IAAqB,KAAAhkB,eAAc,CAAC,GCGpCikB,IAA2B,KAAAjkB,eAAc,CAAC,GCD1CkkB,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQ1I,GAC7B,OAAIA,EAAKhoB,MAAQgoB,EAAK7kB,IACX,EACHutB,GAAU1I,EAAKhoB,IAAMgoB,EAAK7kB,KAAQ,GAC9C,CAQA,MAAMwtB,GAAsB,CACxBC,QAAS,CAACjsB,EAAQif,KACd,IAAKA,EAAKplB,OACN,OAAOmG,EAKX,GAAsB,iBAAXA,EAAqB,CAC5B,IAAI,EAAAiP,GAAGnb,KAAKkM,GAIR,OAAOA,EAHPA,EAAS2U,WAAW3U,EAK5B,CAOA,MAAO,GAFG8rB,GAAgB9rB,EAAQif,EAAKplB,OAAO2O,OACpCsjB,GAAgB9rB,EAAQif,EAAKplB,OAAOmY,KAC1B,GCjCtBka,GAAmB,CACrBD,QAAS,CAACjsB,GAAUmsB,YAAWC,sBAC3B,MAAMC,EAAWrsB,EACXssB,EAASz4B,EAAA,EAAQoE,MAAM+H,GAE7B,GAAIssB,EAAO32B,OAAS,EAChB,OAAO02B,EACX,MAAMvyB,EAAWjG,EAAA,EAAQkG,kBAAkBiG,GACrC6B,EAA8B,iBAAdyqB,EAAO,GAAkB,EAAI,EAE7CC,EAASH,EAAgB5jB,EAAE6I,MAAQ8a,EAAU3jB,EAC7CgkB,EAASJ,EAAgBpa,EAAEX,MAAQ8a,EAAUna,EACnDsa,EAAO,EAAIzqB,IAAW0qB,EACtBD,EAAO,EAAIzqB,IAAW2qB,EAOtB,MAAMC,GAAe,QAAUF,EAAQC,EAAQ,IAO/C,MALkC,iBAAvBF,EAAO,EAAIzqB,KAClByqB,EAAO,EAAIzqB,IAAW4qB,GAEQ,iBAAvBH,EAAO,EAAIzqB,KAClByqB,EAAO,EAAIzqB,IAAW4qB,GACnB3yB,EAASwyB,EAAO,GC9BzBI,GAAkB,CAAC,iBCEzB,MAAQtiB,SAAUuiB,GAAWhoB,OAAQioB,KAAoB,QAAoB/gB,gBAAgB,GCW7F,MAAMghB,WAAiC,GAAAC,UAMnC,iBAAAC,GACI,MAAM,cAAElgB,EAAa,YAAEmgB,EAAW,kBAAEC,EAAiB,SAAEC,GAAa14B,KAAKvB,OACnE,WAAE00B,GAAe9a,EFpB/B,IAA2BsgB,IEqBDC,GFpBtB17B,OAAO0T,OAAOsnB,GAAiBS,GEqBvBxF,IACIqF,EAAYK,OACZL,EAAYK,MAAM7iB,IAAImd,GACtBsF,GAAqBA,EAAkBhN,UAAYiN,GACnDD,EAAkBhN,SAAS0H,GAE/BA,EAAW9qB,KAAKywB,YAChB3F,EAAWrH,iBAAiB,qBAAqB,KAC7C9rB,KAAK+4B,cAAc,IAEvB5F,EAAW6F,WAAW,IACf7F,EAAWpzB,QACdsrB,eAAgB,IAAMrrB,KAAK+4B,kBAGnC5B,GAAsBE,gBAAiB,CAC3C,CACA,uBAAA4B,CAAwBhO,GACpB,MAAM,iBAAEiO,EAAgB,cAAE7gB,EAAa,KAAE0a,EAAI,UAAE3H,GAAcprB,KAAKvB,MAC5D00B,EAAa9a,EAAc8a,WACjC,OAAKA,GASLA,EAAW/H,UAAYA,EACnB2H,GACA9H,EAAUiO,mBAAqBA,QACV/zB,IAArB+zB,EACA/F,EAAWgG,aAGXn5B,KAAK+4B,eAEL9N,EAAUG,YAAcA,IACpBA,EACA+H,EAAWiG,UAELjG,EAAWkG,YAMjB,KAAM1iB,YAAW,KACb,MAAM2iB,EAAQnG,EAAWoG,WACpBD,GAAUA,EAAME,QAAQr4B,QACzBnB,KAAK+4B,cACT,KAIL,MAnCI,IAoCf,CACA,kBAAAU,GACI,MAAM,WAAEtG,GAAenzB,KAAKvB,MAAM4Z,cAC9B8a,IACAA,EAAW9qB,KAAKywB,YAChBX,GAAUxhB,YAAW,MACZwc,EAAWuG,kBAAoBvG,EAAWwG,UAC3C35B,KAAK+4B,cACT,IAGZ,CACA,oBAAAa,GACI,MAAM,cAAEvhB,EAAa,YAAEmgB,EAAaC,kBAAmBoB,GAAoB75B,KAAKvB,OAC1E,WAAE00B,GAAe9a,EACnB8a,IACAA,EAAW2G,4BACPtB,GAAeA,EAAYK,OAC3BL,EAAYK,MAAMkB,OAAO5G,GACzB0G,GAAkBA,EAAeG,YACjCH,EAAeG,WAAW7G,GAEtC,CACA,YAAA4F,GACI,MAAM,aAAEA,GAAiB/4B,KAAKvB,MAC9Bs6B,GAAgBA,GACpB,CACA,MAAAriB,GACI,OAAO,IACX,EAEJ,SAASujB,GAAcx7B,GACnB,MAAO2sB,EAAW2N,GCtFtB,SAAqBjO,GAAY,GAC7B,MAAM1D,GAAU,KAAA8S,YAAW,IAC3B,GAAgB,OAAZ9S,EACA,MAAO,EAAC,EAAM,MAClB,MAAM,UAAEgE,EAAS,eAAEC,EAAc,SAAEI,GAAarE,EAG1CuD,GAAK,KAAAwP,UACX,KAAAC,YAAU,KACFtP,GACAW,EAASd,EAAG,GACjB,CAACG,IACJ,MAAMiO,GAAe,KAAAsB,cAAY,IAAMvP,GAAaO,GAAkBA,EAAeV,IAAK,CAACA,EAAIU,EAAgBP,IAC/G,OAAQM,GAAaC,EAAiB,EAAC,EAAO0N,GAAgB,EAAC,EACnE,CDwEsCuB,GAC5B9B,GAAc,KAAA0B,YAAWjD,IAC/B,OAAQ,KAAAp4B,KAAIw5B,GAA0B,IAAK55B,EAAO+5B,YAAaA,EAAaC,mBAAmB,KAAAyB,YAAWhD,IAA2B9L,UAAWA,EAAW2N,aAAcA,GAC7K,CACA,MAAMH,GAAyB,CAC3B9d,aAAc,IACP0c,GACH+C,QAAS,CACL,sBACA,uBACA,yBACA,4BAGRvf,oBAAqBwc,GACrBvc,qBAAsBuc,GACtBrc,uBAAwBqc,GACxBtc,wBAAyBsc,GACzBgD,UAAW9C,8BElIf,MAAM+C,GAAiB,CAAC18B,EAAGE,IAAMF,EAAEwhB,MAAQthB,EAAEshB,MCG7C,MAAMmb,GACF,WAAAj7B,GACIO,KAAK26B,SAAW,GAChB36B,KAAK46B,SAAU,CACnB,CACA,GAAA5kB,CAAI2Q,IACA,SAAc3mB,KAAK26B,SAAUhU,GAC7B3mB,KAAK46B,SAAU,CACnB,CACA,MAAAb,CAAOpT,IACH,SAAW3mB,KAAK26B,SAAUhU,GAC1B3mB,KAAK46B,SAAU,CACnB,CACA,OAAAxkB,CAAQV,GACJ1V,KAAK46B,SAAW56B,KAAK26B,SAASlU,KAAKgU,IACnCz6B,KAAK46B,SAAU,EACf56B,KAAK26B,SAASvkB,QAAQV,EAC1B,iBCZJ,SAASmlB,GAAmB57B,GACxB,MAAM67B,GAAiB,OAAc77B,GAASA,EAAM2Y,MAAQ3Y,EAC5D,OtCRmB0D,EsCQEm4B,EtCPdv3B,QAAQZ,GAAkB,iBAANA,GAAkBA,EAAE6D,KAAO7D,EAAEo4B,SsCQlDD,EAAeC,UACfD,EtCVY,IAACn4B,CsCWvB,CCRA,MAAMq4B,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQ75B,OACrB+5B,GAAYj8B,GAA2B,iBAAVA,EAAqBkhB,WAAWlhB,GAASA,EACtEk8B,GAAQl8B,GAA2B,iBAAVA,GAAsB,EAAAwb,GAAGnb,KAAKL,GA0C7D,SAASm8B,GAAUt1B,EAAQu1B,GACvB,YAA8Bl2B,IAAvBW,EAAOu1B,GACRv1B,EAAOu1B,GACPv1B,EAAOgV,YACjB,CAwBA,MAAMwgB,GAAgCC,GAAS,EAAG,GAAKC,EAAA,IACjDC,GAAiCF,GAAS,GAAK,IAAMrvB,EAAA,GAC3D,SAASqvB,GAASvxB,EAAKnD,EAAK6D,GACxB,OAAQlN,GAEAA,EAAIwM,EACG,EACPxM,EAAIqJ,EACG,EACJ6D,GAAO,EAAAC,GAAA,GAASX,EAAKnD,EAAKrJ,GAEzC,CCpFA,SAASk+B,GAAa7M,EAAM8M,GACxB9M,EAAK7kB,IAAM2xB,EAAW3xB,IACtB6kB,EAAKhoB,IAAM80B,EAAW90B,GAC1B,CAMA,SAAS+0B,GAAY5K,EAAK6K,GACtBH,GAAa1K,EAAIhd,EAAG6nB,EAAU7nB,GAC9B0nB,GAAa1K,EAAIxT,EAAGqe,EAAUre,EAClC,CAMA,SAASse,GAAkBlzB,EAAOmzB,GAC9BnzB,EAAMqmB,UAAY8M,EAAY9M,UAC9BrmB,EAAMiU,MAAQkf,EAAYlf,MAC1BjU,EAAMomB,YAAc+M,EAAY/M,YAChCpmB,EAAMxD,OAAS22B,EAAY32B,MAC/B,CCrBA,SAAS42B,GAAiB9P,EAAO+C,EAAWpS,EAAOmS,EAAa6B,GAM5D,OAJA3E,EAAQyE,GADRzE,GAAS+C,EACiB,EAAIpS,EAAOmS,QACpB7pB,IAAb0rB,IACA3E,EAAQyE,GAAWzE,EAAO,EAAI2E,EAAU7B,IAErC9C,CACX,CAsBA,SAAS+P,GAAqBpN,EAAMqN,GAAaz+B,EAAK0+B,EAAUC,GAAYh3B,EAAQi3B,IAlBpF,SAAyBxN,EAAMI,EAAY,EAAGpS,EAAQ,EAAGzX,EAAS,GAAKyrB,EAAU8K,EAAa9M,EAAMwN,EAAaxN,GAM7G,GALI,KAAQvvB,KAAK2vB,KACbA,EAAY9O,WAAW8O,GAEvBA,GADyB,QAAUoN,EAAWryB,IAAKqyB,EAAWx1B,IAAKooB,EAAY,KAChDoN,EAAWryB,KAErB,iBAAdilB,EACP,OACJ,IAAID,GAAc,QAAU2M,EAAW3xB,IAAK2xB,EAAW90B,IAAKzB,GACxDypB,IAAS8M,IACT3M,GAAeC,GACnBJ,EAAK7kB,IAAMgyB,GAAiBnN,EAAK7kB,IAAKilB,EAAWpS,EAAOmS,EAAa6B,GACrEhC,EAAKhoB,IAAMm1B,GAAiBnN,EAAKhoB,IAAKooB,EAAWpS,EAAOmS,EAAa6B,EACzE,CAMIyL,CAAgBzN,EAAMqN,EAAWz+B,GAAMy+B,EAAWC,GAAWD,EAAWE,GAAYF,EAAWrf,MAAOzX,EAAQi3B,EAClH,CAIA,MAAME,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASC,GAAoBzL,EAAKkL,EAAYL,EAAWa,GACrDT,GAAqBjL,EAAIhd,EAAGkoB,EAAYK,GAAOV,EAAYA,EAAU7nB,OAAI7O,EAAWu3B,EAAYA,EAAU1oB,OAAI7O,GAC9G82B,GAAqBjL,EAAIxT,EAAG0e,EAAYM,GAAOX,EAAYA,EAAUre,OAAIrY,EAAWu3B,EAAYA,EAAUlf,OAAIrY,EAClH,CCjDA,SAASw3B,GAAgB/zB,GACrB,OAA2B,IAApBA,EAAMqmB,WAAmC,IAAhBrmB,EAAMiU,KAC1C,CACA,SAAS+f,GAAYh0B,GACjB,OAAO+zB,GAAgB/zB,EAAMoL,IAAM2oB,GAAgB/zB,EAAM4U,EAC7D,CACA,SAASqf,GAAW9+B,EAAGE,GACnB,OAAOF,EAAEiM,MAAQ/L,EAAE+L,KAAOjM,EAAE8I,MAAQ5I,EAAE4I,GAC1C,CAIA,SAASi2B,GAAkB/+B,EAAGE,GAC1B,OAAQ6E,KAAKmB,MAAMlG,EAAEiM,OAASlH,KAAKmB,MAAMhG,EAAE+L,MACvClH,KAAKmB,MAAMlG,EAAE8I,OAAS/D,KAAKmB,MAAMhG,EAAE4I,IAC3C,CACA,SAASk2B,GAAiBh/B,EAAGE,GACzB,OAAO6+B,GAAkB/+B,EAAEiW,EAAG/V,EAAE+V,IAAM8oB,GAAkB/+B,EAAEyf,EAAGvf,EAAEuf,EACnE,CACA,SAASwf,GAAYhM,GACjB,OAAOpC,GAAWoC,EAAIhd,GAAK4a,GAAWoC,EAAIxT,EAC9C,CACA,SAASyf,GAAgBl/B,EAAGE,GACxB,OAAQF,EAAEkxB,YAAchxB,EAAEgxB,WACtBlxB,EAAE8e,QAAU5e,EAAE4e,OACd9e,EAAEixB,cAAgB/wB,EAAE+wB,WAC5B,CC1BA,MAAMkO,GACF,WAAAz9B,GACIO,KAAKw5B,QAAU,EACnB,CACA,GAAAxjB,CAAIyU,IACA,SAAczqB,KAAKw5B,QAAS/O,GAC5BA,EAAK0S,gBACT,CACA,MAAApD,CAAOtP,GAKH,IAJA,SAAWzqB,KAAKw5B,QAAS/O,GACrBA,IAASzqB,KAAKo9B,WACdp9B,KAAKo9B,cAAWj4B,GAEhBslB,IAASzqB,KAAKq9B,KAAM,CACpB,MAAMD,EAAWp9B,KAAKw5B,QAAQx5B,KAAKw5B,QAAQr4B,OAAS,GAChDi8B,GACAp9B,KAAKo5B,QAAQgE,EAErB,CACJ,CACA,QAAA/D,CAAS5O,GACL,MAAM6S,EAAct9B,KAAKw5B,QAAQ+D,WAAWC,GAAW/S,IAAS+S,IAChE,GAAoB,IAAhBF,EACA,OAAO,EAIX,IAAIF,EACJ,IAAK,IAAI97B,EAAIg8B,EAAah8B,GAAK,EAAGA,IAAK,CACnC,MAAMk8B,EAASx9B,KAAKw5B,QAAQl4B,GAC5B,IAAyB,IAArBk8B,EAAOpS,UAAqB,CAC5BgS,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACAp9B,KAAKo5B,QAAQgE,IACN,EAKf,CACA,OAAAhE,CAAQ3O,EAAMgT,GACV,MAAML,EAAWp9B,KAAKq9B,KACtB,GAAI5S,IAAS2S,IAEbp9B,KAAKo9B,SAAWA,EAChBp9B,KAAKq9B,KAAO5S,EACZA,EAAKiT,OACDN,GAAU,CACVA,EAAS3L,UAAY2L,EAASD,iBAC9B1S,EAAK0S,iBACL1S,EAAKkT,WAAaP,EACdK,IACAhT,EAAKkT,WAAWC,iBAAkB,GAElCR,EAASS,WACTpT,EAAKoT,SAAWT,EAASS,SACzBpT,EAAKoT,SAASpY,aACV2X,EAASU,iBAAmBV,EAAS3X,cAEzCgF,EAAKpiB,MAAQoiB,EAAKpiB,KAAK01B,aACvBtT,EAAKuT,eAAgB,GAEzB,MAAM,UAAEC,GAAcxT,EAAK1qB,SACT,IAAdk+B,GACAb,EAASc,MAcjB,CACJ,CACA,qBAAAC,GACIn+B,KAAKw5B,QAAQpjB,SAASqU,IAClB,MAAM,QAAE1qB,EAAO,aAAEq+B,GAAiB3T,EAClC1qB,EAAQsrB,gBAAkBtrB,EAAQsrB,iBAC9B+S,GACAA,EAAar+B,QAAQsrB,gBACjB+S,EAAar+B,QAAQsrB,gBAC7B,GAER,CACA,cAAA8R,GACIn9B,KAAKw5B,QAAQpjB,SAASqU,IAClBA,EAAKgH,UAAYhH,EAAK0S,gBAAe,EAAM,GAEnD,CAKA,kBAAAkB,GACQr+B,KAAKq9B,MAAQr9B,KAAKq9B,KAAKQ,WACvB79B,KAAKq9B,KAAKQ,cAAW14B,EAE7B,EChFJ,MAAMm5B,GAAU,CACZ9/B,KAAM,kBACN+/B,WAAY,EACZC,qBAAsB,EACtBC,uBAAwB,GAEtBC,GAA4B,oBAAX5e,aAAiD3a,IAAvB2a,OAAO6e,YAClDC,GAAgB,CAAC,GAAI,IAAK,IAAK,KAC/BC,GAAmB,CAAEC,WAAY,UAMvC,IAAI,GAAK,EACT,SAASC,GAAyBthC,EAAK4a,EAAevS,EAAQk5B,GAC1D,MAAM,aAAEvZ,GAAiBpN,EAErBoN,EAAahoB,KACbqI,EAAOrI,GAAOgoB,EAAahoB,GAC3B4a,EAAc4mB,eAAexhC,EAAK,GAC9BuhC,IACAA,EAAsBvhC,GAAO,GAGzC,CACA,SAASyhC,GAAuCC,GAE5C,GADAA,EAAeC,2BAA4B,EACvCD,EAAe92B,OAAS82B,EACxB,OACJ,MAAM,cAAE9mB,GAAkB8mB,EAAep/B,QACzC,IAAKsY,EACD,OACJ,MAAMuN,EAAWlM,EAAqBrB,GACtC,GAAIyH,OAAOuf,4BAA4BzZ,EAAU,aAAc,CAC3D,MAAM,OAAE0J,EAAM,SAAEoJ,GAAayG,EAAep/B,QAC5C+f,OAAOwf,+BAA+B1Z,EAAU,YAAa,OAAS0J,GAAUoJ,GACpF,CACA,MAAM,OAAErR,GAAW8X,EACf9X,IAAWA,EAAO+X,2BAClBF,GAAuC7X,EAE/C,CACA,SAASkY,IAAqB,qBAAEC,EAAoB,cAAEC,EAAa,cAAEC,EAAa,kBAAEC,EAAiB,eAAEC,IACnG,OAAO,MACH,WAAAngC,CAAYgmB,EAAe,CAAC,EAAG4B,GAASoY,aAAqD,EAASA,MAIlGz/B,KAAK2qB,GAAK,KAIV3qB,KAAK6/B,YAAc,EAOnB7/B,KAAK26B,SAAW,IAAIl2B,IAKpBzE,KAAKD,QAAU,CAAC,EAMhBC,KAAK8/B,iBAAkB,EACvB9/B,KAAKozB,oBAAqB,EAO1BpzB,KAAKg+B,eAAgB,EAKrBh+B,KAAK+/B,mBAAoB,EAKzB//B,KAAKggC,yBAA0B,EAK/BhgC,KAAKigC,kBAAmB,EAIxBjgC,KAAKkgC,uBAAwB,EAC7BlgC,KAAKmgC,uBAAwB,EAK7BngC,KAAK+9B,YAAa,EAIlB/9B,KAAKogC,OAAQ,EAKbpgC,KAAKqgC,YAAa,EAIlBrgC,KAAKsgC,sBAAuB,EAO5BtgC,KAAKo/B,2BAA4B,EASjCp/B,KAAK23B,UAAY,CAAE3jB,EAAG,EAAGwJ,EAAG,GAI5Bxd,KAAKugC,cAAgB,IAAI7oB,IACzB1X,KAAKwgC,iBAAkB,EAEvBxgC,KAAKygC,iBAAkB,EACvBzgC,KAAK0gC,eAAiB,IAAM1gC,KAAK+O,SACjC/O,KAAK2gC,2BAA4B,EACjC3gC,KAAK4gC,kBAAoB,KACjB5gC,KAAK+9B,aACL/9B,KAAK+9B,YAAa,EAClB/9B,KAAK6gC,oBACT,EAOJ7gC,KAAK8gC,iBAAmB,KACpB9gC,KAAK2gC,2BAA4B,EAK7BjC,KACAJ,GAAQC,WACJD,GAAQE,qBACJF,GAAQG,uBACJ,GAEhBz+B,KAAK+gC,MAAM3qB,QAAQ4qB,IACnBhhC,KAAK+gC,MAAM3qB,QAAQ6qB,IACnBjhC,KAAK+gC,MAAM3qB,QAAQ8qB,IACnBlhC,KAAK+gC,MAAM3qB,QAAQ+qB,IACfzC,IACA5e,OAAO6e,YAAYyC,OAAO9C,GAC9B,EAKJt+B,KAAKqhC,yBAA2B,EAChCrhC,KAAKshC,cAAe,EACpBthC,KAAKuhC,WAAY,EACjBvhC,KAAKwhC,kBAAoB,EAKzBxhC,KAAKyhC,YAAc,IAAI/pB,IACvB1X,KAAKylB,aAAeA,EACpBzlB,KAAKqI,KAAOgf,EAASA,EAAOhf,MAAQgf,EAASrnB,KAC7CA,KAAK0hC,KAAOra,EAAS,IAAIA,EAAOqa,KAAMra,GAAU,GAChDrnB,KAAKqnB,OAASA,EACdrnB,KAAKuf,MAAQ8H,EAASA,EAAO9H,MAAQ,EAAI,EACzC,IAAK,IAAIje,EAAI,EAAGA,EAAItB,KAAK0hC,KAAKvgC,OAAQG,IAClCtB,KAAK0hC,KAAKpgC,GAAGg/B,sBAAuB,EAEpCtgC,KAAKqI,OAASrI,OACdA,KAAK+gC,MAAQ,IAAIrG,GACzB,CACA,gBAAA5O,CAAiB5sB,EAAM0sB,GAInB,OAHK5rB,KAAKugC,cAAc16B,IAAI3G,IACxBc,KAAKugC,cAAcnpB,IAAIlY,EAAM,IAAI,MAE9Bc,KAAKugC,cAAc3oB,IAAI1Y,GAAM8W,IAAI4V,EAC5C,CACA,eAAA+V,CAAgBziC,KAASyY,GACrB,MAAMiqB,EAAsB5hC,KAAKugC,cAAc3oB,IAAI1Y,GACnD0iC,GAAuBA,EAAoBhb,UAAUjP,EACzD,CACA,YAAAkqB,CAAa3iC,GACT,OAAOc,KAAKugC,cAAc16B,IAAI3G,EAClC,CAIA,KAAA6rB,CAAM0G,EAAUuM,EAAgBh+B,KAAKqI,KAAKm4B,iBACtC,GAAIxgC,KAAKyxB,SACL,OCnPhB,IAAsBlhB,EDoPVvQ,KAAKogC,OCpPK7vB,EDoPgBkhB,aCnPRqQ,YAAkC,QAApBvxB,EAAQwxB,QDoPxC/hC,KAAKyxB,SAAWA,EAChB,MAAM,SAAEiH,EAAQ,OAAEpJ,EAAM,cAAEjX,GAAkBrY,KAAKD,QASjD,GARIsY,IAAkBA,EAAc1Z,SAChC0Z,EAAc0S,MAAM0G,GAExBzxB,KAAKqI,KAAK04B,MAAM/qB,IAAIhW,MACpBA,KAAKqnB,QAAUrnB,KAAKqnB,OAAOsT,SAAS3kB,IAAIhW,MACpCg+B,IAAkB1O,GAAUoJ,KAC5B14B,KAAKg+B,eAAgB,GAErBwB,EAAsB,CACtB,IAAIwC,EACJ,MAAMC,EAAsB,IAAOjiC,KAAKqI,KAAK83B,uBAAwB,EACrEX,EAAqB/N,GAAU,KAC3BzxB,KAAKqI,KAAK83B,uBAAwB,EAClC6B,GAAeA,IACfA,EE9PpB,SAAetsB,EAAUwsB,GACrB,MAAMhzB,EAAQ,KAAK9O,MACb+hC,EAAe,EAAGlzB,gBACpB,MAAMyC,EAAUzC,EAAYC,EACxBwC,GAAWwwB,KACX,QAAYC,GACZzsB,EAAShE,EAAUwwB,GACvB,EAGJ,OADA,KAAM3rB,KAAK4rB,GAAc,GAClB,KAAM,QAAYA,EAC7B,CFmPkCxiC,CAAMsiC,EAAqB,KACrC9K,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC/Cp3B,KAAK+gC,MAAM3qB,QAAQgsB,IACvB,GAER,CACI1J,GACA14B,KAAKqI,KAAKg6B,mBAAmB3J,EAAU14B,OAGd,IAAzBA,KAAKD,QAAQ+iB,SACbzK,IACCqgB,GAAYpJ,IACbtvB,KAAK8rB,iBAAiB,aAAa,EAAGljB,QAAOmuB,mBAAkBuL,2BAA0BhT,OAAQiT,MAC7F,GAAIviC,KAAKwiC,yBAGL,OAFAxiC,KAAKqF,YAASF,OACdnF,KAAKyiC,oBAAiBt9B,GAI1B,MAAMu9B,EAAmB1iC,KAAKD,QAAQmkB,YAClC7L,EAAc0L,wBACd4e,IACE,uBAAEC,EAAsB,0BAAEC,GAA+BxqB,EAAcM,WAKvEmqB,GAAiB9iC,KAAK+iC,eACvBhG,GAAiB/8B,KAAK+iC,aAAcR,IACrCD,EAMEU,GAAgCjM,GAAoBuL,EAC1D,GAAItiC,KAAKD,QAAQkjC,YACZjjC,KAAK29B,YAAc39B,KAAK29B,WAAWlM,UACpCuR,GACCjM,IACI+L,IAAkB9iC,KAAK05B,kBAAoB,CAC5C15B,KAAK29B,aACL39B,KAAKo+B,aAAep+B,KAAK29B,WACzB39B,KAAKo+B,aAAaA,kBAAej5B,GAErCnF,KAAKkjC,mBAAmBt6B,EAAOo6B,GAC/B,MAAMG,EAAmB,KAClB,QAAmBT,EAAkB,UACxClwB,OAAQowB,EACR9hC,WAAY+hC,IAEZxqB,EAAcwN,oBACd7lB,KAAKD,QAAQkjC,cACbE,EAAiBxjC,MAAQ,EACzBwjC,EAAiB3kC,MAAO,GAE5BwB,KAAKg0B,eAAemP,EACxB,MAOSpM,GACDqL,GAAgBpiC,MAEhBA,KAAK25B,UAAY35B,KAAKD,QAAQsrB,gBAC9BrrB,KAAKD,QAAQsrB,iBAGrBrrB,KAAK+iC,aAAeR,CAAS,GAGzC,CACA,OAAArX,GACIlrB,KAAKD,QAAQ24B,UAAY14B,KAAKm5B,aAC9Bn5B,KAAKqI,KAAK04B,MAAMhH,OAAO/5B,MACvB,MAAMs5B,EAAQt5B,KAAKu5B,WACnBD,GAASA,EAAMS,OAAO/5B,MACtBA,KAAKqnB,QAAUrnB,KAAKqnB,OAAOsT,SAAS1kB,OAAOjW,MAC3CA,KAAKyxB,cAAWtsB,GAChB,QAAYnF,KAAK8gC,iBACrB,CAEA,WAAAsC,GACIpjC,KAAKkgC,uBAAwB,CACjC,CACA,aAAAmD,GACIrjC,KAAKkgC,uBAAwB,CACjC,CACA,eAAAoD,GACI,OAAOtjC,KAAKkgC,uBAAyBlgC,KAAKmgC,qBAC9C,CACA,sBAAAqC,GACI,OAAQxiC,KAAKozB,oBACRpzB,KAAKqnB,QAAUrnB,KAAKqnB,OAAOmb,2BAC5B,CACR,CAEA,WAAAe,GACQvjC,KAAKsjC,oBAETtjC,KAAK+9B,YAAa,EAClB/9B,KAAK+gC,OAAS/gC,KAAK+gC,MAAM3qB,QAAQotB,IACjCxjC,KAAK6/B,cACT,CACA,oBAAA4D,GACI,MAAM,cAAEprB,GAAkBrY,KAAKD,QAC/B,OAAOsY,GAAiBA,EAAcM,WAAWiL,iBACrD,CACA,UAAAuV,CAAWuK,GAAwB,GAE/B,GADA1jC,KAAKqI,KAAKm4B,iBAAkB,EACxBxgC,KAAKqI,KAAKi7B,kBAEV,YADAtjC,KAAKD,QAAQsrB,gBAAkBrrB,KAAKD,QAAQsrB,kBAoBhD,GALIvL,OAAOwf,iCACNt/B,KAAKo/B,2BACNF,GAAuCl/B,OAE1CA,KAAKqI,KAAK01B,YAAc/9B,KAAKqI,KAAKk7B,cAC/BvjC,KAAKg+B,cACL,OACJh+B,KAAKg+B,eAAgB,EACrB,IAAK,IAAI18B,EAAI,EAAGA,EAAItB,KAAK0hC,KAAKvgC,OAAQG,IAAK,CACvC,MAAMmpB,EAAOzqB,KAAK0hC,KAAKpgC,GACvBmpB,EAAK6V,sBAAuB,EAC5B7V,EAAK6L,aAAa,YACd7L,EAAK1qB,QAAQkjC,YACbxY,EAAK0O,YAAW,EAExB,CACA,MAAM,SAAET,EAAQ,OAAEpJ,GAAWtvB,KAAKD,QAClC,QAAiBoF,IAAbuzB,IAA2BpJ,EAC3B,OACJ,MAAM1L,EAAoB5jB,KAAKyjC,uBAC/BzjC,KAAK2jC,2BAA6B/f,EAC5BA,EAAkB5jB,KAAKylB,aAAc,SACrCtgB,EACNnF,KAAK4jC,iBACLF,GAAyB1jC,KAAK2hC,gBAAgB,aAClD,CACA,MAAA5yB,GAMI,GALA/O,KAAKygC,iBAAkB,EACEzgC,KAAKsjC,kBAQ1B,OAHAtjC,KAAKqjC,gBACLrjC,KAAK6gC,yBACL7gC,KAAK+gC,MAAM3qB,QAAQytB,IAGlB7jC,KAAK+9B,YACN/9B,KAAK+gC,MAAM3qB,QAAQ0tB,IAEvB9jC,KAAK+9B,YAAa,EAIlB/9B,KAAK+gC,MAAM3qB,QAAQ2tB,IAKnB/jC,KAAK+gC,MAAM3qB,QAAQmgB,IAKnBv2B,KAAK+gC,MAAM3qB,QAAQ4tB,IACnBhkC,KAAK6gC,oBAML,MAAMzgC,EAAM,KAAKA,MACjB,KAAUwI,OAAQ,EAAAL,GAAA,GAAM,EAAG,IAAO,GAAInI,EAAM,KAAU6O,WACtD,KAAUA,UAAY7O,EACtB,KAAUgP,cAAe,EACzB,KAAWL,OAAOmH,QAAQ,MAC1B,KAAWO,UAAUP,QAAQ,MAC7B,KAAWQ,OAAOR,QAAQ,MAC1B,KAAU9G,cAAe,CAC7B,CACA,SAAA0pB,GACS94B,KAAKygC,kBACNzgC,KAAKygC,iBAAkB,EACvBtI,GAAU5hB,KAAKvW,KAAK0gC,gBAE5B,CACA,iBAAAG,GACI7gC,KAAK+gC,MAAM3qB,QAAQ6tB,IACnBjkC,KAAKyhC,YAAYrrB,QAAQ8tB,GAC7B,CACA,wBAAAC,GACSnkC,KAAK2gC,4BACN3gC,KAAK2gC,2BAA4B,EACjC,KAAMlqB,UAAUzW,KAAK8gC,kBAAkB,GAAO,GAEtD,CACA,yBAAAhH,GAMI,KAAMnjB,YAAW,KACT3W,KAAKg+B,cACLh+B,KAAKqI,KAAKywB,YAGV94B,KAAKqI,KAAKu4B,mBACd,GAER,CAIA,cAAAgD,IACQ5jC,KAAK69B,UAAa79B,KAAKyxB,WAE3BzxB,KAAK69B,SAAW79B,KAAKu0B,UACzB,CACA,YAAAgC,GACI,IAAKv2B,KAAKyxB,SACN,OAGJ,GADAzxB,KAAKs2B,iBACCt2B,KAAKD,QAAQqkC,qBAAuBpkC,KAAK25B,UAC1C35B,KAAKg+B,eACN,OASJ,GAAIh+B,KAAK29B,aAAe39B,KAAK29B,WAAWlM,SACpC,IAAK,IAAInwB,EAAI,EAAGA,EAAItB,KAAK0hC,KAAKvgC,OAAQG,IACrBtB,KAAK0hC,KAAKpgC,GAClBg1B,eAGb,MAAM+N,EAAarkC,KAAKsvB,OACxBtvB,KAAKsvB,OAAStvB,KAAKu0B,SAAQ,GAC3Bv0B,KAAKskC,gB3BngBO,CACpBtwB,EAFqB,CAAGhK,IAAK,EAAGnD,IAAK,GAGrC2W,EAHqB,CAAGxT,IAAK,EAAGnD,IAAK,I2BqgB7B7G,KAAKg+B,eAAgB,EACrBh+B,KAAK43B,qBAAkBzyB,EACvBnF,KAAK2hC,gBAAgB,UAAW3hC,KAAKsvB,OAAOiE,WAC5C,MAAM,cAAElb,GAAkBrY,KAAKD,QAC/BsY,GACIA,EAAcuO,OAAO,gBAAiB5mB,KAAKsvB,OAAOiE,UAAW8Q,EAAaA,EAAW9Q,eAAYpuB,EACzG,CACA,YAAAmxB,CAAaiO,EAAQ,WACjB,IAAIvjB,EAAmBzd,QAAQvD,KAAKD,QAAQykC,cAAgBxkC,KAAKyxB,UAMjE,GALIzxB,KAAKm1B,QACLn1B,KAAKm1B,OAAO0K,cAAgB7/B,KAAKqI,KAAKw3B,aACtC7/B,KAAKm1B,OAAOoP,QAAUA,IACtBvjB,GAAmB,GAEnBA,EAAkB,CAClB,MAAMyjB,EAAS9E,EAAkB3/B,KAAKyxB,UACtCzxB,KAAKm1B,OAAS,CACV0K,YAAa7/B,KAAKqI,KAAKw3B,YACvB0E,QACAE,SACAp3B,OAAQqyB,EAAc1/B,KAAKyxB,UAC3BiT,QAAS1kC,KAAKm1B,OAASn1B,KAAKm1B,OAAOsP,OAASA,EAEpD,CACJ,CACA,cAAA7E,GACI,IAAKA,EACD,OACJ,MAAM+E,EAAmB3kC,KAAKg+B,eAC1Bh+B,KAAKsgC,sBACLtgC,KAAKD,QAAQqkC,oBACXQ,EAAgB5kC,KAAK43B,kBAAoBgF,GAAY58B,KAAK43B,iBAC1DhU,EAAoB5jB,KAAKyjC,uBACzBoB,EAAyBjhB,EACzBA,EAAkB5jB,KAAKylB,aAAc,SACrCtgB,EACA2/B,EAA8BD,IAA2B7kC,KAAK2jC,2BAChEgB,IACCC,GACGpU,GAAaxwB,KAAKylB,eAClBqf,KACJlF,EAAe5/B,KAAKyxB,SAAUoT,GAC9B7kC,KAAKsgC,sBAAuB,EAC5BtgC,KAAKm9B,iBAEb,CACA,OAAA5I,CAAQwQ,GAAkB,GACtB,MAAMC,EAAUhlC,KAAKo1B,iBACrB,IAAI7B,EAAYvzB,KAAKilC,oBAAoBD,GAi+BrD,IAAkBhU,EAv9BN,OAJI+T,IACAxR,EAAYvzB,KAAK+kC,gBAAgBxR,IA29B7C2R,IADclU,EAx9BGuC,GAy9BHvf,GACdkxB,GAAUlU,EAAIxT,GAz9BC,CACHqiB,YAAa7/B,KAAKqI,KAAKw3B,YACvBsF,YAAaH,EACbzR,YACA9N,aAAc,CAAC,EACfsJ,OAAQ/uB,KAAK2qB,GAErB,CACA,cAAAyK,GACI,IAAInvB,EACJ,MAAM,cAAEoS,GAAkBrY,KAAKD,QAC/B,IAAKsY,EACD,M3B1kBQ,CACpBrE,EAFqB,CAAGhK,IAAK,EAAGnD,IAAK,GAGrC2W,EAHqB,CAAGxT,IAAK,EAAGnD,IAAK,I2B4kB7B,MAAMmqB,EAAM3Y,EAAcoJ,qBAE1B,KADgD,QAAtBxb,EAAKjG,KAAKm1B,cAA2B,IAAPlvB,OAAgB,EAASA,EAAGy+B,WAAY1kC,KAAK0hC,KAAKn6B,KAAK69B,IACzF,CAElB,MAAM,OAAEjQ,GAAWn1B,KAAKqI,KACpB8sB,IACAhE,GAAcH,EAAIhd,EAAGmhB,EAAO9nB,OAAO2G,GACnCmd,GAAcH,EAAIxT,EAAG2X,EAAO9nB,OAAOmQ,GAE3C,CACA,OAAOwT,CACX,CACA,mBAAAiU,CAAoBjU,GAChB,IAAI/qB,EACJ,MAAMo/B,E3BzlBM,CACpBrxB,EAFqB,CAAGhK,IAAK,EAAGnD,IAAK,GAGrC2W,EAHqB,CAAGxT,IAAK,EAAGnD,IAAK,I2B4lB7B,GADA+0B,GAAYyJ,EAAkBrU,GACH,QAAtB/qB,EAAKjG,KAAKm1B,cAA2B,IAAPlvB,OAAgB,EAASA,EAAGy+B,QAC3D,OAAOW,EAMX,IAAK,IAAI/jC,EAAI,EAAGA,EAAItB,KAAK0hC,KAAKvgC,OAAQG,IAAK,CACvC,MAAMmpB,EAAOzqB,KAAK0hC,KAAKpgC,IACjB,OAAE6zB,EAAM,QAAEp1B,GAAY0qB,EACxBA,IAASzqB,KAAKqI,MAAQ8sB,GAAUp1B,EAAQykC,eAKpCrP,EAAOuP,SACP9I,GAAYyJ,EAAkBrU,GAElCG,GAAckU,EAAiBrxB,EAAGmhB,EAAO9nB,OAAO2G,GAChDmd,GAAckU,EAAiB7nB,EAAG2X,EAAO9nB,OAAOmQ,GAExD,CACA,OAAO6nB,CACX,CACA,cAAAC,CAAetU,EAAKuU,GAAgB,GAChC,MAAMC,E3BpnBM,CACpBxxB,EAFqB,CAAGhK,IAAK,EAAGnD,IAAK,GAGrC2W,EAHqB,CAAGxT,IAAK,EAAGnD,IAAK,I2BsnB7B+0B,GAAY4J,EAAgBxU,GAC5B,IAAK,IAAI1vB,EAAI,EAAGA,EAAItB,KAAK0hC,KAAKvgC,OAAQG,IAAK,CACvC,MAAMmpB,EAAOzqB,KAAK0hC,KAAKpgC,IAClBikC,GACD9a,EAAK1qB,QAAQykC,cACb/Z,EAAK0K,QACL1K,IAASA,EAAKpiB,MACdmpB,GAAagU,EAAgB,CACzBxxB,GAAIyW,EAAK0K,OAAO9nB,OAAO2G,EACvBwJ,GAAIiN,EAAK0K,OAAO9nB,OAAOmQ,IAG1BgT,GAAa/F,EAAKhF,eAEvB+L,GAAagU,EAAgB/a,EAAKhF,aACtC,CAIA,OAHI+K,GAAaxwB,KAAKylB,eAClB+L,GAAagU,EAAgBxlC,KAAKylB,cAE/B+f,CACX,CACA,eAAAT,CAAgB/T,GACZ,MAAMyU,E3B3oBM,CACpBzxB,EAFqB,CAAGhK,IAAK,EAAGnD,IAAK,GAGrC2W,EAHqB,CAAGxT,IAAK,EAAGnD,IAAK,I2B6oB7B+0B,GAAY6J,EAAqBzU,GACjC,IAAK,IAAI1vB,EAAI,EAAGA,EAAItB,KAAK0hC,KAAKvgC,OAAQG,IAAK,CACvC,MAAMmpB,EAAOzqB,KAAK0hC,KAAKpgC,GACvB,IAAKmpB,EAAKgH,SACN,SACJ,IAAKjB,GAAa/F,EAAKhF,cACnB,SACJ8K,GAAS9F,EAAKhF,eAAiBgF,EAAKmZ,iBACpC,MAAMlH,E3BppBE,CACpB1oB,EAFqB,CAAGhK,IAAK,EAAGnD,IAAK,GAGrC2W,EAHqB,CAAGxT,IAAK,EAAGnD,IAAK,I2BupBzB+0B,GAAYc,EADIjS,EAAK2K,kBAErBqH,GAAoBgJ,EAAqBhb,EAAKhF,aAAcgF,EAAKoT,SAAWpT,EAAKoT,SAAStK,eAAYpuB,EAAWu3B,EACrH,CAIA,OAHIlM,GAAaxwB,KAAKylB,eAClBgX,GAAoBgJ,EAAqBzlC,KAAKylB,cAE3CggB,CACX,CACA,cAAAC,CAAe98B,GACX5I,KAAK2lC,YAAc/8B,EACnB5I,KAAKqI,KAAK87B,2BACVnkC,KAAK+/B,mBAAoB,CAC7B,CACA,UAAA/G,CAAWj5B,GACPC,KAAKD,QAAU,IACRC,KAAKD,WACLA,EACHk+B,eAAiC94B,IAAtBpF,EAAQk+B,WAA0Bl+B,EAAQk+B,UAE7D,CACA,iBAAA4F,GACI7jC,KAAKm1B,YAAShwB,EACdnF,KAAKsvB,YAASnqB,EACdnF,KAAK69B,cAAW14B,EAChBnF,KAAK2jC,gCAA6Bx+B,EAClCnF,KAAK2lC,iBAAcxgC,EACnBnF,KAAKqF,YAASF,EACdnF,KAAKg+B,eAAgB,CACzB,CACA,kCAAA4H,GACS5lC,KAAK6lC,gBAQN7lC,KAAK6lC,eAAexE,2BACpB,KAAUpyB,WACVjP,KAAK6lC,eAAe5E,oBAAmB,EAE/C,CACA,kBAAAA,CAAmB6E,GAAqB,GACpC,IAAI7/B,EAMJ,MAAMo3B,EAAOr9B,KAAK+lC,UAClB/lC,KAAK+/B,oBAAsB//B,KAAK+/B,kBAAoB1C,EAAK0C,mBACzD//B,KAAKigC,mBAAqBjgC,KAAKigC,iBAAmB5C,EAAK4C,kBACvDjgC,KAAKggC,0BAA4BhgC,KAAKggC,wBAA0B3C,EAAK2C,yBACrE,MAAMgG,EAAWziC,QAAQvD,KAAKo+B,eAAiBp+B,OAASq9B,EAWxD,KANkByI,GACbE,GAAYhmC,KAAKggC,yBAClBhgC,KAAK+/B,oBACmB,QAAtB95B,EAAKjG,KAAKqnB,cAA2B,IAAPphB,OAAgB,EAASA,EAAG85B,oBAC5D//B,KAAKimC,gCACLjmC,KAAKqI,KAAK83B,uBAEV,OACJ,MAAM,OAAE7Q,EAAM,SAAEoJ,GAAa14B,KAAKD,QAIlC,GAAKC,KAAKsvB,SAAYA,GAAUoJ,GAAhC,CAQA,GANA14B,KAAKqhC,yBAA2B,KAAUpyB,WAMrCjP,KAAK2lC,cAAgB3lC,KAAKyiC,eAAgB,CAC3C,MAAMoD,EAAiB7lC,KAAKkmC,6BACxBL,GACAA,EAAevW,QACY,IAA3BtvB,KAAKwhC,mBACLxhC,KAAK6lC,eAAiBA,EACtB7lC,KAAK4lC,qCACL5lC,KAAKyiC,e3B5uBD,CACpBzuB,EAFqB,CAAGhK,IAAK,EAAGnD,IAAK,GAGrC2W,EAHqB,CAAGxT,IAAK,EAAGnD,IAAK,I2B8uBrB7G,KAAKmmC,qB3B7uBD,CACpBnyB,EAFqB,CAAGhK,IAAK,EAAGnD,IAAK,GAGrC2W,EAHqB,CAAGxT,IAAK,EAAGnD,IAAK,I2B+uBrB0oB,GAAqBvvB,KAAKmmC,qBAAsBnmC,KAAKsvB,OAAOiE,UAAWsS,EAAevW,OAAOiE,WAC7FqI,GAAY57B,KAAKyiC,eAAgBziC,KAAKmmC,uBAGtCnmC,KAAK6lC,eAAiB7lC,KAAKyiC,oBAAiBt9B,CAEpD,CAKA,GAAKnF,KAAKyiC,gBAAmBziC,KAAK2lC,YAAlC,C7B9tBZ,IAAyBtgC,EAAQ+pB,EAAU/H,E6BuwB/B,GApCKrnB,KAAKqF,SACNrF,KAAKqF,O3B/vBG,CACpB2O,EAFqB,CAAGhK,IAAK,EAAGnD,IAAK,GAGrC2W,EAHqB,CAAGxT,IAAK,EAAGnD,IAAK,I2BiwBzB7G,KAAKomC,qB3BhwBG,CACpBpyB,EAFqB,CAAGhK,IAAK,EAAGnD,IAAK,GAGrC2W,EAHqB,CAAGxT,IAAK,EAAGnD,IAAK,K2BswBzB7G,KAAKyiC,gBACLziC,KAAKmmC,sBACLnmC,KAAK6lC,gBACL7lC,KAAK6lC,eAAexgC,QACpBrF,KAAK4lC,qC7B9uBIvgC,E6B+uBOrF,KAAKqF,O7B/uBJ+pB,E6B+uBYpvB,KAAKyiC,e7B/uBPpb,E6B+uBuBrnB,KAAK6lC,eAAexgC,O7B9uBlF8pB,GAAiB9pB,EAAO2O,EAAGob,EAASpb,EAAGqT,EAAOrT,GAC9Cmb,GAAiB9pB,EAAOmY,EAAG4R,EAAS5R,EAAG6J,EAAO7J,I6BkvB7Bxd,KAAK2lC,aACNpiC,QAAQvD,KAAKo+B,cAEbp+B,KAAKqF,OAASrF,KAAKslC,eAAetlC,KAAKsvB,OAAOiE,WAG9CqI,GAAY57B,KAAKqF,OAAQrF,KAAKsvB,OAAOiE,WAEzCxC,GAAc/wB,KAAKqF,OAAQrF,KAAK2lC,cAMhC/J,GAAY57B,KAAKqF,OAAQrF,KAAKsvB,OAAOiE,WAKrCvzB,KAAKimC,+BAAgC,CACrCjmC,KAAKimC,gCAAiC,EACtC,MAAMJ,EAAiB7lC,KAAKkmC,6BACxBL,GACAtiC,QAAQsiC,EAAezH,gBACnB76B,QAAQvD,KAAKo+B,gBAChByH,EAAe9lC,QAAQykC,cACxBqB,EAAexgC,QACY,IAA3BrF,KAAKwhC,mBACLxhC,KAAK6lC,eAAiBA,EACtB7lC,KAAK4lC,qCACL5lC,KAAKyiC,e3B7yBD,CACpBzuB,EAFqB,CAAGhK,IAAK,EAAGnD,IAAK,GAGrC2W,EAHqB,CAAGxT,IAAK,EAAGnD,IAAK,I2B+yBrB7G,KAAKmmC,qB3B9yBD,CACpBnyB,EAFqB,CAAGhK,IAAK,EAAGnD,IAAK,GAGrC2W,EAHqB,CAAGxT,IAAK,EAAGnD,IAAK,I2BgzBrB0oB,GAAqBvvB,KAAKmmC,qBAAsBnmC,KAAKqF,OAAQwgC,EAAexgC,QAC5Eu2B,GAAY57B,KAAKyiC,eAAgBziC,KAAKmmC,uBAGtCnmC,KAAK6lC,eAAiB7lC,KAAKyiC,oBAAiBt9B,CAEpD,CAIIu5B,IACAJ,GAAQE,sBAhEF,CA5BA,CA8Fd,CACA,0BAAA0H,GACI,GAAKlmC,KAAKqnB,SACNkJ,GAASvwB,KAAKqnB,OAAO5B,gBACrBgL,GAAezwB,KAAKqnB,OAAO5B,cAG/B,OAAIzlB,KAAKqnB,OAAOgf,eACLrmC,KAAKqnB,OAGLrnB,KAAKqnB,OAAO6e,4BAE3B,CACA,YAAAG,GACI,OAAO9iC,SAASvD,KAAKyiC,gBACjBziC,KAAK2lC,aACL3lC,KAAKD,QAAQkjC,aACbjjC,KAAKsvB,OACb,CACA,cAAA4R,GACI,IAAIj7B,EACJ,MAAMo3B,EAAOr9B,KAAK+lC,UACZC,EAAWziC,QAAQvD,KAAKo+B,eAAiBp+B,OAASq9B,EACxD,IAAIiJ,GAAU,EAuBd,IAlBItmC,KAAK+/B,oBAA6C,QAAtB95B,EAAKjG,KAAKqnB,cAA2B,IAAPphB,OAAgB,EAASA,EAAG85B,sBACtFuG,GAAU,GAMVN,IACChmC,KAAKggC,yBAA2BhgC,KAAKigC,oBACtCqG,GAAU,GAMVtmC,KAAKqhC,2BAA6B,KAAUpyB,YAC5Cq3B,GAAU,GAEVA,EACA,OACJ,MAAM,OAAEhX,EAAM,SAAEoJ,GAAa14B,KAAKD,QAWlC,GANAC,KAAK8/B,gBAAkBv8B,QAASvD,KAAKqnB,QAAUrnB,KAAKqnB,OAAOyY,iBACvD9/B,KAAK05B,kBACL15B,KAAKumC,kBACJvmC,KAAK8/B,kBACN9/B,KAAK2lC,YAAc3lC,KAAKyiC,oBAAiBt9B,IAExCnF,KAAKsvB,SAAYA,IAAUoJ,EAC5B,OAKJkD,GAAY57B,KAAKskC,gBAAiBtkC,KAAKsvB,OAAOiE,WAI9C,MAAMiT,EAAiBxmC,KAAK23B,UAAU3jB,EAChCyyB,EAAiBzmC,KAAK23B,UAAUna,GvBp2BlD,SAAyBwT,EAAK2G,EAAW+O,EAAUC,GAAqB,GACpE,MAAMC,EAAaF,EAASvlC,OAC5B,IAAKylC,EACD,OAGJ,IAAInc,EACA7hB,EAFJ+uB,EAAU3jB,EAAI2jB,EAAUna,EAAI,EAG5B,IAAK,IAAIlc,EAAI,EAAGA,EAAIslC,EAAYtlC,IAAK,CACjCmpB,EAAOic,EAASplC,GAChBsH,EAAQ6hB,EAAKmN,gBAKb,MAAM,cAAEvf,GAAkBoS,EAAK1qB,QAC3BsY,GACAA,EAAc5Z,MAAM43B,OACkB,aAAtChe,EAAc5Z,MAAM43B,MAAMwQ,UAG1BF,GACAlc,EAAK1qB,QAAQykC,cACb/Z,EAAK0K,QACL1K,IAASA,EAAKpiB,MACdmpB,GAAaR,EAAK,CACdhd,GAAIyW,EAAK0K,OAAO9nB,OAAO2G,EACvBwJ,GAAIiN,EAAK0K,OAAO9nB,OAAOmQ,IAG3B5U,IAEA+uB,EAAU3jB,GAAKpL,EAAMoL,EAAE6I,MACvB8a,EAAUna,GAAK5U,EAAM4U,EAAEX,MAEvBkU,GAAcC,EAAKpoB,IAEnB+9B,GAAsBnW,GAAa/F,EAAKhF,eACxC+L,GAAaR,EAAKvG,EAAKhF,cAE/B,CAKIkS,EAAU3jB,EAAIkd,IACdyG,EAAU3jB,EAAIid,KACd0G,EAAU3jB,EAAI,GAEd2jB,EAAUna,EAAI0T,IACdyG,EAAUna,EAAIyT,KACd0G,EAAUna,EAAI,EAEtB,CuBozBYspB,CAAgB9mC,KAAKskC,gBAAiBtkC,KAAK23B,UAAW33B,KAAK0hC,KAAMsE,IAK7D3I,EAAK/N,QACJ+N,EAAKh4B,QACgB,IAArBrF,KAAK23B,UAAU3jB,GAAgC,IAArBhU,KAAK23B,UAAUna,IAC1C6f,EAAKh4B,OAASg4B,EAAK/N,OAAOiE,UAC1B8J,EAAK+I,qB3Bj5BG,CACpBpyB,EAFqB,CAAGhK,IAAK,EAAGnD,IAAK,GAGrC2W,EAHqB,CAAGxT,IAAK,EAAGnD,IAAK,K2Bo5B7B,MAAM,OAAExB,GAAWg4B,EACdh4B,GAYArF,KAAK43B,iBAAoB53B,KAAK+mC,qBAI/BjL,GAAkB97B,KAAK+mC,oBAAoB/yB,EAAGhU,KAAK43B,gBAAgB5jB,GACnE8nB,GAAkB97B,KAAK+mC,oBAAoBvpB,EAAGxd,KAAK43B,gBAAgBpa,IAJnExd,KAAKgnC,yBAeT9X,GAAalvB,KAAK43B,gBAAiB53B,KAAKskC,gBAAiBj/B,EAAQrF,KAAKylB,cAClEzlB,KAAK23B,UAAU3jB,IAAMwyB,GACrBxmC,KAAK23B,UAAUna,IAAMipB,GACpBxJ,GAAgBj9B,KAAK43B,gBAAgB5jB,EAAGhU,KAAK+mC,oBAAoB/yB,IACjEipB,GAAgBj9B,KAAK43B,gBAAgBpa,EAAGxd,KAAK+mC,oBAAoBvpB,KAClExd,KAAKshC,cAAe,EACpBthC,KAAKm9B,iBACLn9B,KAAK2hC,gBAAgB,mBAAoBt8B,IAKzCq5B,IACAJ,GAAQG,0BAnCJz+B,KAAK+mC,sBACL/mC,KAAKgnC,yBACLhnC,KAAKm9B,iBAmCjB,CACA,IAAAe,GACIl+B,KAAKuhC,WAAY,CAErB,CACA,IAAA7D,GACI19B,KAAKuhC,WAAY,CAErB,CACA,cAAApE,CAAe8J,GAAY,GACvB,IAAIhhC,EAEJ,GADsC,QAArCA,EAAKjG,KAAKD,QAAQsY,qBAAkC,IAAPpS,GAAyBA,EAAGk3B,iBACtE8J,EAAW,CACX,MAAM3N,EAAQt5B,KAAKu5B,WACnBD,GAASA,EAAM6D,gBACnB,CACIn9B,KAAKo+B,eAAiBp+B,KAAKo+B,aAAa3M,WACxCzxB,KAAKo+B,kBAAej5B,EAE5B,CACA,sBAAA6hC,GACIhnC,KAAK+mC,oB3Bz9BS,CACtB/yB,EAP0B,CAC1Bib,UAAW,EACXpS,MAAO,EACPzX,OAAQ,EACR4pB,YAAa,GAIbxR,EAR0B,CAC1ByR,UAAW,EACXpS,MAAO,EACPzX,OAAQ,EACR4pB,YAAa,I2B49BLhvB,KAAK43B,gB3B19BS,CACtB5jB,EAP0B,CAC1Bib,UAAW,EACXpS,MAAO,EACPzX,OAAQ,EACR4pB,YAAa,GAIbxR,EAR0B,CAC1ByR,UAAW,EACXpS,MAAO,EACPzX,OAAQ,EACR4pB,YAAa,I2B69BLhvB,KAAKknC,6B3B39BS,CACtBlzB,EAP0B,CAC1Bib,UAAW,EACXpS,MAAO,EACPzX,OAAQ,EACR4pB,YAAa,GAIbxR,EAR0B,CAC1ByR,UAAW,EACXpS,MAAO,EACPzX,OAAQ,EACR4pB,YAAa,G2B89BT,CACA,kBAAAkU,CAAmBt6B,EAAOo6B,GAA+B,GACrD,MAAMnF,EAAW79B,KAAK69B,SAChBsJ,EAAuBtJ,EACvBA,EAASpY,aACT,CAAC,EACD2hB,EAAc,IAAKpnC,KAAKylB,cACxBkgB,E3Bn+BQ,CACtB3xB,EAP0B,CAC1Bib,UAAW,EACXpS,MAAO,EACPzX,OAAQ,EACR4pB,YAAa,GAIbxR,EAR0B,CAC1ByR,UAAW,EACXpS,MAAO,EACPzX,OAAQ,EACR4pB,YAAa,I2Bs+BAhvB,KAAK6lC,gBACL7lC,KAAK6lC,eAAe9lC,QAAQkjC,aAC7BjjC,KAAKyiC,eAAiBziC,KAAKmmC,0BAAuBhhC,GAEtDnF,KAAKimC,gCAAkCjD,EACvC,MAAMqE,E3Bp+BM,CACpBrzB,EAFqB,CAAGhK,IAAK,EAAGnD,IAAK,GAGrC2W,EAHqB,CAAGxT,IAAK,EAAGnD,IAAK,I2Bw+BvBygC,GAFiBzJ,EAAWA,EAAS9O,YAAS5pB,MAC/BnF,KAAKsvB,OAAStvB,KAAKsvB,OAAOP,YAAS5pB,GAElDm0B,EAAQt5B,KAAKu5B,WACbgO,GAAgBjO,GAASA,EAAME,QAAQr4B,QAAU,EACjDqmC,EAAyBjkC,QAAQ+jC,IAClCC,IAC0B,IAA3BvnC,KAAKD,QAAQk+B,YACZj+B,KAAK0hC,KAAKn6B,KAAKkgC,KAEpB,IAAIC,EADJ1nC,KAAKwhC,kBAAoB,EAEzBxhC,KAAK2nC,eAAkBn8B,IACnB,MAAMb,EAAWa,EAAS,IFj/B1C,IAAmBzN,EAAGE,EE0/CN8G,EAAQtC,EAAMC,EAAIlF,EAxgBlBoqC,GAAajC,EAAY3xB,EAAGpL,EAAMoL,EAAGrJ,GACrCi9B,GAAajC,EAAYnoB,EAAG5U,EAAM4U,EAAG7S,GACrC3K,KAAK0lC,eAAeC,GAChB3lC,KAAKyiC,gBACLziC,KAAKmmC,sBACLnmC,KAAKsvB,QACLtvB,KAAK6lC,gBACL7lC,KAAK6lC,eAAevW,SACpBC,GAAqB8X,EAAgBrnC,KAAKsvB,OAAOiE,UAAWvzB,KAAK6lC,eAAevW,OAAOiE,WAggB3FxuB,EA/fW/E,KAAKyiC,eA+fRhgC,EA/fwBzC,KAAKmmC,qBA+fvBzjC,EA/f6C2kC,EA+fzC7pC,EA/fyDmN,EAggBvFk9B,GAAQ9iC,EAAOiP,EAAGvR,EAAKuR,EAAGtR,EAAGsR,EAAGxW,GAChCqqC,GAAQ9iC,EAAOyY,EAAG/a,EAAK+a,EAAG9a,EAAG8a,EAAGhgB,GA5fZkqC,IFhgCL3pC,EEigCeiC,KAAKyiC,eFjgCjBxkC,EEigCiCypC,EFhgC5C7K,GAAW9+B,EAAEiW,EAAG/V,EAAE+V,IAAM6oB,GAAW9+B,EAAEyf,EAAGvf,EAAEuf,MEigC7Bxd,KAAK+/B,mBAAoB,GAExB2H,IACDA,E3BrgCA,CACpB1zB,EAFqB,CAAGhK,IAAK,EAAGnD,IAAK,GAGrC2W,EAHqB,CAAGxT,IAAK,EAAGnD,IAAK,K2BugCrB+0B,GAAY8L,EAAoB1nC,KAAKyiC,iBAErC6E,IACAtnC,KAAK89B,gBAAkBsJ,EL3gC3C,SAAmB/hC,EAAQyiC,EAAQzK,EAAM1yB,EAAU68B,EAAwBD,GACnEC,GACAniC,EAAOuY,SAAU,QAAU,OAEVzY,IAAjBk4B,EAAKzf,QAAwByf,EAAKzf,QAAU,EAAG0d,GAAgB3wB,IAC/DtF,EAAO0iC,aAAc,aAA6B5iC,IAAnB2iC,EAAOlqB,QAAwBkqB,EAAOlqB,QAAU,EAAG,EAAG6d,GAAiB9wB,KAEjG48B,IACLliC,EAAOuY,SAAU,aAA6BzY,IAAnB2iC,EAAOlqB,QAAwBkqB,EAAOlqB,QAAU,OAAoBzY,IAAjBk4B,EAAKzf,QAAwByf,EAAKzf,QAAU,EAAGjT,IAKjI,IAAK,IAAIrJ,EAAI,EAAGA,EAAI25B,GAAY35B,IAAK,CACjC,MAAM0mC,EAAc,SAAShN,GAAQ15B,WACrC,IAAI2mC,EAAe7M,GAAU0M,EAAQE,GACjCE,EAAa9M,GAAUiC,EAAM2K,QACZ7iC,IAAjB8iC,QAA6C9iC,IAAf+iC,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACA/M,GAAK8M,KAAkB9M,GAAK+M,IAE5B7iC,EAAO2iC,GAAellC,KAAK+D,KAAI,QAAUq0B,GAAS+M,GAAe/M,GAASgN,GAAav9B,GAAW,IAC9F,KAAQrL,KAAK4oC,IAAe,KAAQ5oC,KAAK2oC,MACzC5iC,EAAO2iC,IAAgB,MAI3B3iC,EAAO2iC,GAAeE,EAE9B,EAIIJ,EAAOrrB,QAAU4gB,EAAK5gB,UACtBpX,EAAOoX,QAAS,QAAUqrB,EAAOrrB,QAAU,EAAG4gB,EAAK5gB,QAAU,EAAG9R,GAExE,CKo+BoBw9B,CAAUf,EAAaD,EAAsBnnC,KAAKylB,aAAc9a,EAAU68B,EAAwBD,IAEtGvnC,KAAKqI,KAAK87B,2BACVnkC,KAAKm9B,iBACLn9B,KAAKwhC,kBAAoB72B,CAAQ,EAErC3K,KAAK2nC,eAAe3nC,KAAKD,QAAQkjC,WAAa,IAAO,EACzD,CACA,cAAAjP,CAAej0B,GACXC,KAAK2hC,gBAAgB,kBACrB3hC,KAAK05B,kBAAoB15B,KAAK05B,iBAAiBvqB,OAC3CnP,KAAKo+B,cAAgBp+B,KAAKo+B,aAAa1E,kBACvC15B,KAAKo+B,aAAa1E,iBAAiBvqB,OAEnCnP,KAAKumC,oBACL,QAAYvmC,KAAKumC,kBACjBvmC,KAAKumC,sBAAmBphC,GAO5BnF,KAAKumC,iBAAmB,KAAMx3B,QAAO,KACjCooB,GAAsBC,wBAAyB,EAC/Cp3B,KAAK05B,iBG1iCrB,SAA4Bz6B,EAAO0B,EAAWZ,GAC1C,MAAMqoC,GAAgB,OHyiCiC,MGziCF,QHyiCE,GGviCvD,OADAA,EAAcl5B,MAAM+U,GAAmB,GAAImkB,EHmCvB,IGnCiDroC,IAC9DqoC,EAAczlB,SACzB,CHsiCwC0lB,CAAmB,EArgCnC,EAqgCuD,IACxDtoC,EACHgB,SAAWyK,IACPxL,KAAK2nC,eAAen8B,GACpBzL,EAAQgB,UAAYhB,EAAQgB,SAASyK,EAAO,EAEhD1K,WAAY,KACRf,EAAQe,YAAcf,EAAQe,aAC9Bd,KAAKsoC,mBAAmB,IAG5BtoC,KAAKo+B,eACLp+B,KAAKo+B,aAAa1E,iBAAmB15B,KAAK05B,kBAE9C15B,KAAKumC,sBAAmBphC,CAAS,GAEzC,CACA,iBAAAmjC,GACQtoC,KAAKo+B,eACLp+B,KAAKo+B,aAAa1E,sBAAmBv0B,EACrCnF,KAAKo+B,aAAaR,qBAAkBz4B,GAExC,MAAMm0B,EAAQt5B,KAAKu5B,WACnBD,GAASA,EAAM6E,wBACfn+B,KAAKo+B,aACDp+B,KAAK05B,iBACD15B,KAAK89B,qBACD34B,EACZnF,KAAK2hC,gBAAgB,oBACzB,CACA,eAAAS,GACQpiC,KAAK05B,mBACL15B,KAAK2nC,gBAAkB3nC,KAAK2nC,eAriCpB,KAsiCR3nC,KAAK05B,iBAAiBvqB,QAE1BnP,KAAKsoC,mBACT,CACA,uBAAAC,GACI,MAAMlL,EAAOr9B,KAAK+lC,UAClB,IAAI,qBAAEK,EAAoB,OAAE/gC,EAAM,OAAEiqB,EAAM,aAAE7J,GAAiB4X,EAC7D,GAAK+I,GAAyB/gC,GAAWiqB,EAAzC,CAOA,GAAItvB,OAASq9B,GACTr9B,KAAKsvB,QACLA,GACAkZ,GAA0BxoC,KAAKD,QAAQ0oC,cAAezoC,KAAKsvB,OAAOiE,UAAWjE,EAAOiE,WAAY,CAChGluB,EAASrF,KAAKqF,Q3BtlCN,CACpB2O,EAFqB,CAAGhK,IAAK,EAAGnD,IAAK,GAGrC2W,EAHqB,CAAGxT,IAAK,EAAGnD,IAAK,I2BwlCzB,MAAM6hC,EAAU9Z,GAAW5uB,KAAKsvB,OAAOiE,UAAUvf,GACjD3O,EAAO2O,EAAEhK,IAAMqzB,EAAKh4B,OAAO2O,EAAEhK,IAC7B3E,EAAO2O,EAAEnN,IAAMxB,EAAO2O,EAAEhK,IAAM0+B,EAC9B,MAAMC,EAAU/Z,GAAW5uB,KAAKsvB,OAAOiE,UAAU/V,GACjDnY,EAAOmY,EAAExT,IAAMqzB,EAAKh4B,OAAOmY,EAAExT,IAC7B3E,EAAOmY,EAAE3W,IAAMxB,EAAOmY,EAAExT,IAAM2+B,CAClC,CACA/M,GAAYwK,EAAsB/gC,GAMlCmsB,GAAa4U,EAAsB3gB,GAOnCyJ,GAAalvB,KAAKknC,6BAA8BlnC,KAAKskC,gBAAiB8B,EAAsB3gB,EA/BlF,CAgCd,CACA,kBAAA4c,CAAmB3J,EAAUjO,GACpBzqB,KAAKyhC,YAAY57B,IAAI6yB,IACtB14B,KAAKyhC,YAAYrqB,IAAIshB,EAAU,IAAIwE,IAEzBl9B,KAAKyhC,YAAY7pB,IAAI8gB,GAC7B1iB,IAAIyU,GACV,MAAMme,EAASne,EAAK1qB,QAAQ8oC,uBAC5Bpe,EAAK2O,QAAQ,CACTlV,WAAY0kB,EAASA,EAAO1kB,gBAAa/e,EACzCs4B,sBAAuBmL,GAAUA,EAAOE,4BAClCF,EAAOE,4BAA4Bre,QACnCtlB,GAEd,CACA,MAAAw0B,GACI,MAAML,EAAQt5B,KAAKu5B,WACnB,OAAOD,GAAQA,EAAM+D,OAASr9B,IAClC,CACA,OAAA+lC,GACI,IAAI9/B,EACJ,MAAM,SAAEyyB,GAAa14B,KAAKD,QAC1B,OAAO24B,IAAuC,QAA1BzyB,EAAKjG,KAAKu5B,kBAA+B,IAAPtzB,OAAgB,EAASA,EAAGo3B,OAAgBr9B,IACtG,CACA,WAAA+oC,GACI,IAAI9iC,EACJ,MAAM,SAAEyyB,GAAa14B,KAAKD,QAC1B,OAAO24B,EAAsC,QAA1BzyB,EAAKjG,KAAKu5B,kBAA+B,IAAPtzB,OAAgB,EAASA,EAAGm3B,cAAWj4B,CAChG,CACA,QAAAo0B,GACI,MAAM,SAAEb,GAAa14B,KAAKD,QAC1B,GAAI24B,EACA,OAAO14B,KAAKqI,KAAKo5B,YAAY7pB,IAAI8gB,EACzC,CACA,OAAAU,EAAQ,WAAEiH,EAAU,WAAEnc,EAAU,sBAAEuZ,GAA2B,CAAC,GAC1D,MAAMnE,EAAQt5B,KAAKu5B,WACfD,GACAA,EAAMF,QAAQp5B,KAAMy9B,GACpB4C,IACArgC,KAAK43B,qBAAkBzyB,EACvBnF,KAAKqgC,YAAa,GAElBnc,GACAlkB,KAAKg5B,WAAW,CAAE9U,cAC1B,CACA,QAAAmV,GACI,MAAMC,EAAQt5B,KAAKu5B,WACnB,QAAID,GACOA,EAAMD,SAASr5B,KAK9B,CACA,oBAAAwjC,GACI,MAAM,cAAEnrB,GAAkBrY,KAAKD,QAC/B,IAAKsY,EACD,OAEJ,IAAI2wB,GAAyB,EAK7B,MAAM,aAAEvjB,GAAiBpN,EAWzB,IAVIoN,EAAahI,GACbgI,EAAahJ,QACbgJ,EAAa/I,SACb+I,EAAa9I,SACb8I,EAAa7I,SACb6I,EAAavI,OACbuI,EAAatI,SACb6rB,GAAyB,IAGxBA,EACD,OACJ,MAAMC,EAAc,CAAC,EACjBxjB,EAAahI,GACbshB,GAAyB,IAAK1mB,EAAe4wB,EAAajpC,KAAK89B,iBAGnE,IAAK,IAAIx8B,EAAI,EAAGA,EAAIs9B,GAAcz9B,OAAQG,IACtCy9B,GAAyB,SAASH,GAAct9B,KAAM+W,EAAe4wB,EAAajpC,KAAK89B,iBACvFiB,GAAyB,OAAOH,GAAct9B,KAAM+W,EAAe4wB,EAAajpC,KAAK89B,iBAIzFzlB,EAAc3B,SAEd,IAAK,MAAMjZ,KAAOwrC,EACd5wB,EAAc4mB,eAAexhC,EAAKwrC,EAAYxrC,IAC1CuC,KAAK89B,kBACL99B,KAAK89B,gBAAgBrgC,GAAOwrC,EAAYxrC,IAKhD4a,EAAc8kB,gBAClB,CACA,mBAAA+L,CAAoBC,GAChB,IAAIljC,EAAImjC,EACR,IAAKppC,KAAKyxB,UAAYzxB,KAAKogC,MACvB,OACJ,IAAKpgC,KAAKuhC,UACN,OAAO1C,GAEX,MAAMwK,EAAS,CACXvK,WAAY,IAEVlb,EAAoB5jB,KAAKyjC,uBAC/B,GAAIzjC,KAAKqgC,WAQL,OAPArgC,KAAKqgC,YAAa,EAClBgJ,EAAOzrB,QAAU,GACjByrB,EAAOC,cACHzO,GAAmBsO,aAA6C,EAASA,EAAUG,gBAAkB,GACzGD,EAAO9kC,UAAYqf,EACbA,EAAkB5jB,KAAKylB,aAAc,IACrC,OACC4jB,EAEX,MAAMhM,EAAOr9B,KAAK+lC,UAClB,IAAK/lC,KAAK43B,kBAAoB53B,KAAKsvB,SAAW+N,EAAKh4B,OAAQ,CACvD,MAAMkkC,EAAc,CAAC,EAerB,OAdIvpC,KAAKD,QAAQ24B,WACb6Q,EAAY3rB,aACsBzY,IAA9BnF,KAAKylB,aAAa7H,QACZ5d,KAAKylB,aAAa7H,QAClB,EACV2rB,EAAYD,cACRzO,GAAmBsO,aAA6C,EAASA,EAAUG,gBAAkB,IAEzGtpC,KAAKshC,eAAiB9Q,GAAaxwB,KAAKylB,gBACxC8jB,EAAYhlC,UAAYqf,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACN5jB,KAAKshC,cAAe,GAEjBiI,CACX,CACA,MAAMC,EAAiBnM,EAAKS,iBAAmBT,EAAK5X,aACpDzlB,KAAKuoC,0BACLc,EAAO9kC,UIrwCnB,SAAkCqE,EAAO+uB,EAAW8R,GAChD,IAAIllC,EAAY,GAOhB,MAAMmlC,EAAa9gC,EAAMoL,EAAEib,UAAY0I,EAAU3jB,EAC3C21B,EAAa/gC,EAAM4U,EAAEyR,UAAY0I,EAAUna,EAC3CosB,GAAcH,aAAyD,EAASA,EAAgBhsB,IAAM,EAW5G,IAVIisB,GAAcC,GAAcC,KAC5BrlC,EAAY,eAAemlC,QAAiBC,QAAiBC,SAM7C,IAAhBjS,EAAU3jB,GAA2B,IAAhB2jB,EAAUna,IAC/BjZ,GAAa,SAAS,EAAIozB,EAAU3jB,MAAM,EAAI2jB,EAAUna,OAExDisB,EAAiB,CACjB,MAAM,qBAAE9rB,EAAoB,OAAElB,EAAM,QAAEC,EAAO,QAAEC,EAAO,MAAEO,EAAK,MAAEC,GAAUssB,EACrE9rB,IACApZ,EAAY,eAAeoZ,QAA2BpZ,KACtDkY,IACAlY,GAAa,UAAUkY,UACvBC,IACAnY,GAAa,WAAWmY,UACxBC,IACApY,GAAa,WAAWoY,UACxBO,IACA3Y,GAAa,SAAS2Y,UACtBC,IACA5Y,GAAa,SAAS4Y,SAC9B,CAKA,MAAM0sB,EAAgBjhC,EAAMoL,EAAE6I,MAAQ8a,EAAU3jB,EAC1C81B,EAAgBlhC,EAAM4U,EAAEX,MAAQ8a,EAAUna,EAIhD,OAHsB,IAAlBqsB,GAAyC,IAAlBC,IACvBvlC,GAAa,SAASslC,MAAkBC,MAErCvlC,GAAa,MACxB,CJutC+BwlC,CAAyB/pC,KAAKknC,6BAA8BlnC,KAAK23B,UAAW6R,GAC3F5lB,IACAylB,EAAO9kC,UAAYqf,EAAkB4lB,EAAgBH,EAAO9kC,YAEhE,MAAM,EAAEyP,EAAC,EAAEwJ,GAAMxd,KAAK43B,gBACtByR,EAAOW,gBAAkB,GAAc,IAAXh2B,EAAE5O,WAA4B,IAAXoY,EAAEpY,YAC7Ci4B,EAAKS,gBAKLuL,EAAOzrB,QACHyf,IAASr9B,KACiG,QAAnGopC,EAAuC,QAAjCnjC,EAAKujC,EAAe5rB,eAA4B,IAAP3X,EAAgBA,EAAKjG,KAAKylB,aAAa7H,eAA4B,IAAPwrB,EAAgBA,EAAK,EACjIppC,KAAK49B,gBACD59B,KAAKylB,aAAa7H,QAClB4rB,EAAezB,YAO7BsB,EAAOzrB,QACHyf,IAASr9B,UACwBmF,IAA3BqkC,EAAe5rB,QACX4rB,EAAe5rB,QACf,QAC2BzY,IAA/BqkC,EAAezB,YACXyB,EAAezB,YACf,EAKlB,IAAK,MAAMtqC,KAAOy6B,GAAiB,CAC/B,QAA4B/yB,IAAxBqkC,EAAe/rC,GACf,SACJ,MAAM,QAAEg6B,EAAO,QAAE8C,GAAYrC,GAAgBz6B,GAOvCwsC,EAAiC,SAArBZ,EAAO9kC,UACnBilC,EAAe/rC,GACfg6B,EAAQ+R,EAAe/rC,GAAM4/B,GACnC,GAAI9C,EAAS,CACT,MAAM2P,EAAM3P,EAAQp5B,OACpB,IAAK,IAAIG,EAAI,EAAGA,EAAI4oC,EAAK5oC,IACrB+nC,EAAO9O,EAAQj5B,IAAM2oC,CAE7B,MAEIZ,EAAO5rC,GAAOwsC,CAEtB,CAYA,OANIjqC,KAAKD,QAAQ24B,WACb2Q,EAAOC,cACHjM,IAASr9B,KACH66B,GAAmBsO,aAA6C,EAASA,EAAUG,gBAAkB,GACrG,QAEPD,CACX,CACA,aAAApF,GACIjkC,KAAK29B,WAAa39B,KAAK69B,cAAW14B,CACtC,CAEA,SAAAglC,GACInqC,KAAKqI,KAAK04B,MAAM3qB,SAASqU,IAAW,IAAIxkB,EAAI,OAAwC,QAAhCA,EAAKwkB,EAAKiP,wBAAqC,IAAPzzB,OAAgB,EAASA,EAAGkJ,MAAM,IAC9HnP,KAAKqI,KAAK04B,MAAM3qB,QAAQytB,IACxB7jC,KAAKqI,KAAKo5B,YAAYprB,OAC1B,EAER,CACA,SAASkgB,GAAa9L,GAClBA,EAAK8L,cACT,CACA,SAASyN,GAAmBvZ,GACxB,IAAIxkB,EACJ,MAAM43B,GAAuC,QAA1B53B,EAAKwkB,EAAKkT,kBAA+B,IAAP13B,OAAgB,EAASA,EAAG43B,WAAapT,EAAKoT,SACnG,GAAIpT,EAAKkP,UACLlP,EAAK6E,QACLuO,GACApT,EAAKoX,aAAa,aAAc,CAChC,MAAQtO,UAAWjE,EAAQ6V,YAAaiF,GAAmB3f,EAAK6E,QAC1D,cAAEmZ,GAAkBhe,EAAK1qB,QACzBimC,EAAWnI,EAAS9O,SAAWtE,EAAK6E,OAAOP,OAG3B,SAAlB0Z,EACArY,IAAUvB,IACN,MAAMwb,EAAerE,EACfnI,EAASsH,YAAYtW,GACrBgP,EAAStK,UAAU1E,GACnB1tB,EAASytB,GAAWyb,GAC1BA,EAAargC,IAAMslB,EAAOT,GAAM7kB,IAChCqgC,EAAaxjC,IAAMwjC,EAAargC,IAAM7I,CAAM,IAG3CqnC,GAA0BC,EAAe5K,EAAStK,UAAWjE,IAClEc,IAAUvB,IACN,MAAMwb,EAAerE,EACfnI,EAASsH,YAAYtW,GACrBgP,EAAStK,UAAU1E,GACnB1tB,EAASytB,GAAWU,EAAOT,IACjCwb,EAAaxjC,IAAMwjC,EAAargC,IAAM7I,EAIlCspB,EAAKgY,iBAAmBhY,EAAKiP,mBAC7BjP,EAAKsV,mBAAoB,EACzBtV,EAAKgY,eAAe5T,GAAMhoB,IACtB4jB,EAAKgY,eAAe5T,GAAM7kB,IAAM7I,EACxC,IAGR,MAAMmpC,E3B33CY,CACtBt2B,EAP0B,CAC1Bib,UAAW,EACXpS,MAAO,EACPzX,OAAQ,EACR4pB,YAAa,GAIbxR,EAR0B,CAC1ByR,UAAW,EACXpS,MAAO,EACPzX,OAAQ,EACR4pB,YAAa,I2B83CTE,GAAaob,EAAahb,EAAQuO,EAAStK,WAC3C,MAAMgX,E3B73CY,CACtBv2B,EAP0B,CAC1Bib,UAAW,EACXpS,MAAO,EACPzX,OAAQ,EACR4pB,YAAa,GAIbxR,EAR0B,CAC1ByR,UAAW,EACXpS,MAAO,EACPzX,OAAQ,EACR4pB,YAAa,I2Bg4CLgX,EACA9W,GAAaqb,EAAa9f,EAAK6a,eAAe8E,GAAgB,GAAOvM,EAASsH,aAG9EjW,GAAaqb,EAAajb,EAAQuO,EAAStK,WAE/C,MAAMwD,GAAoB6F,GAAY0N,GACtC,IAAIhI,GAA2B,EAC/B,IAAK7X,EAAKkT,WAAY,CAClB,MAAMkI,EAAiBpb,EAAKyb,6BAK5B,GAAIL,IAAmBA,EAAelI,WAAY,CAC9C,MAAQE,SAAU2M,EAAgBlb,OAAQmb,GAAiB5E,EAC3D,GAAI2E,GAAkBC,EAAc,CAChC,MAAMC,E3B14CF,CACpB12B,EAFqB,CAAGhK,IAAK,EAAGnD,IAAK,GAGrC2W,EAHqB,CAAGxT,IAAK,EAAGnD,IAAK,I2B44CrB0oB,GAAqBmb,EAAkB7M,EAAStK,UAAWiX,EAAejX,WAC1E,MAAM8T,E3B54CF,CACpBrzB,EAFqB,CAAGhK,IAAK,EAAGnD,IAAK,GAGrC2W,EAHqB,CAAGxT,IAAK,EAAGnD,IAAK,I2B84CrB0oB,GAAqB8X,EAAgB/X,EAAQmb,EAAalX,WACrDwJ,GAAiB2N,EAAkBrD,KACpC/E,GAA2B,GAE3BuD,EAAe9lC,QAAQkjC,aACvBxY,EAAKgY,eAAiB4E,EACtB5c,EAAK0b,qBAAuBuE,EAC5BjgB,EAAKob,eAAiBA,EAE9B,CACJ,CACJ,CACApb,EAAKkX,gBAAgB,YAAa,CAC9BrS,SACAuO,WACAj1B,MAAO2hC,EACPD,cACAvT,mBACAuL,4BAER,MACK,GAAI7X,EAAKkP,SAAU,CACpB,MAAM,eAAEtO,GAAmBZ,EAAK1qB,QAChCsrB,GAAkBA,GACtB,CAMAZ,EAAK1qB,QAAQmkB,gBAAa/e,CAC9B,CACA,SAAS67B,GAAoBvW,GAIrBiU,IACAJ,GAAQC,aAEP9T,EAAKpD,SAQLoD,EAAK4b,iBACN5b,EAAKsV,kBAAoBtV,EAAKpD,OAAO0Y,mBAOzCtV,EAAKuV,0BAA4BvV,EAAKuV,wBAA0Bz8B,QAAQknB,EAAKsV,mBACzEtV,EAAKpD,OAAO0Y,mBACZtV,EAAKpD,OAAO2Y,0BAChBvV,EAAKwV,mBAAqBxV,EAAKwV,iBAAmBxV,EAAKpD,OAAO4Y,kBAClE,CACA,SAASkB,GAAgB1W,GACrBA,EAAKsV,kBACDtV,EAAKuV,wBACDvV,EAAKwV,kBACD,CAChB,CACA,SAASgE,GAAcxZ,GACnBA,EAAKwZ,eACT,CACA,SAASJ,GAAkBpZ,GACvBA,EAAKoZ,mBACT,CACA,SAASC,GAAmBrZ,GACxBA,EAAKuT,eAAgB,CACzB,CACA,SAAS+F,GAAoBtZ,GACzB,MAAM,cAAEpS,GAAkBoS,EAAK1qB,QAC3BsY,GAAiBA,EAAcM,WAAWgyB,uBAC1CtyB,EAAcuO,OAAO,uBAEzB6D,EAAKmV,gBACT,CACA,SAASwC,GAAgB3X,GACrBA,EAAK2X,kBACL3X,EAAKkb,YAAclb,EAAKgY,eAAiBhY,EAAKplB,YAASF,EACvDslB,EAAKsV,mBAAoB,CAC7B,CACA,SAASkB,GAAmBxW,GACxBA,EAAKwW,oBACT,CACA,SAASC,GAAezW,GACpBA,EAAKyW,gBACT,CACA,SAASsC,GAAqB/Y,GAC1BA,EAAK+Y,sBACT,CACA,SAASU,GAAoB5K,GACzBA,EAAM+E,oBACV,CACA,SAASuJ,GAAa7iC,EAAQ6D,EAAOpL,GACjCuH,EAAOkqB,WAAY,QAAUrmB,EAAMqmB,UAAW,EAAGzxB,GACjDuH,EAAO8X,OAAQ,QAAUjU,EAAMiU,MAAO,EAAGrf,GACzCuH,EAAOK,OAASwD,EAAMxD,OACtBL,EAAOiqB,YAAcpmB,EAAMomB,WAC/B,CACA,SAAS6Y,GAAQ9iC,EAAQtC,EAAMC,EAAIlF,GAC/BuH,EAAOiF,KAAM,QAAUvH,EAAKuH,IAAKtH,EAAGsH,IAAKxM,GACzCuH,EAAO8B,KAAM,QAAUpE,EAAKoE,IAAKnE,EAAGmE,IAAKrJ,EAC7C,CAKA,SAASiqC,GAAoBhd,GACzB,OAAQA,EAAKqT,sBAAwD34B,IAArCslB,EAAKqT,gBAAgBiK,WACzD,CACA,MAAMpF,GAA0B,CAC5BjhC,SAAU,IACVS,KAAM,CAAC,GAAK,EAAG,GAAK,IAElByoC,GAAqBC,GAAgC,oBAAdC,WACzCA,UAAUC,WACVD,UAAUC,UAAUvxB,cAAcwxB,SAASH,GAMzCI,GAAaL,GAAkB,kBAAoBA,GAAkB,WACrE9nC,KAAKmB,MACLiI,EAAA,EACN,SAASg5B,GAAUrW,GAEfA,EAAK7kB,IAAMihC,GAAWpc,EAAK7kB,KAC3B6kB,EAAKhoB,IAAMokC,GAAWpc,EAAKhoB,IAC/B,CAKA,SAAS2hC,GAA0BC,EAAe5K,EAAUvO,GACxD,MAA0B,aAAlBmZ,GACe,oBAAlBA,I7B3hDOxpC,E6B4hDI+9B,GAAYa,G7B5hDTx4B,E6B4hDoB23B,GAAY1N,K7B3hD5CxsB,KAAK2G,IAAIxK,EAAQoG,I6B2hDoC,K7B5hDhE,IAAgBpG,EAAOoG,C6B6hDvB,CACA,SAAS+/B,GAAuB3a,GAC5B,IAAIxkB,EACJ,OAAOwkB,IAASA,EAAKpiB,OAAgC,QAAtBpC,EAAKwkB,EAAK0K,cAA2B,IAAPlvB,OAAgB,EAASA,EAAGy+B,QAC7F,CKziDA,MAAMwG,GAAyB3L,GAAqB,CAChDC,qBAAsB,CAAC9hC,EAAKkpB,IAAW8E,GAAYhuB,EAAK,SAAUkpB,GAClE8Y,cAAe,KAAM,CACjB1rB,EAAGm3B,SAASC,gBAAgBC,YAAcF,SAASG,KAAKD,WACxD7tB,EAAG2tB,SAASC,gBAAgBG,WAAaJ,SAASG,KAAKC,YAE3D5L,kBAAmB,KAAM,ICNvB1K,GAAqB,CACvBt2B,aAASwG,GAEPqmC,GAAqBjM,GAAqB,CAC5CG,cAAgBjO,IAAa,CACzBzd,EAAGyd,EAAS4Z,WACZ7tB,EAAGiU,EAAS8Z,YAEhB9L,cAAe,KACX,IAAKxK,GAAmBt2B,QAAS,CAC7B,MAAM8sC,EAAe,IAAIP,GAAuB,CAAC,GACjDO,EAAa1gB,MAAMjL,QACnB2rB,EAAazS,WAAW,CAAEwL,cAAc,IACxCvP,GAAmBt2B,QAAU8sC,CACjC,CACA,OAAOxW,GAAmBt2B,OAAO,EAErCihC,eAAgB,CAACnO,EAAUxyB,KACvBwyB,EAAS4E,MAAM9xB,eAAsBY,IAAVlG,EAAsBA,EAAQ,MAAM,EAEnE0gC,kBAAoBlO,GAAaluB,QAAuD,UAA/Cuc,OAAOC,iBAAiB0R,GAAUia,YClBzE3Y,GAAO,CACT4Y,IAAK,CACDnhB,Q1BKR,cAAyBA,GACrB,WAAA/qB,GACIkQ,SAASwb,WACTnrB,KAAK4rC,0BAA4B1/B,EAAA,CACrC,CACA,aAAA2/B,CAAcC,GACV9rC,KAAK+rC,QAAU,IAAIxf,GAAWuf,EAAkB9rC,KAAKgsC,oBAAqB,CACtE94B,mBAAoBlT,KAAKyqB,KAAKsJ,wBAC9BtH,cAAeqF,GAAiB9xB,KAAKyqB,OAE7C,CACA,iBAAAuhB,GACI,MAAM,kBAAEC,EAAiB,WAAEC,EAAU,MAAEC,EAAK,SAAEC,GAAapsC,KAAKyqB,KAAK9R,WACrE,MAAO,CACHuV,eAAgB8I,GAAaiV,GAC7B1e,QAASyJ,GAAakV,GACtB1e,OAAQ2e,EACRte,MAAO,CAAC5B,EAAOc,YACJ/sB,KAAK+rC,QACRK,GACA,KAAMz1B,YAAW,IAAMy1B,EAASngB,EAAOc,IAC3C,EAGZ,CACA,KAAAhC,GACI/qB,KAAK4rC,0BAA4Bvf,GAAgBrsB,KAAKyqB,KAAK9rB,QAAS,eAAgBstB,GAAUjsB,KAAK6rC,cAAc5f,IACrH,CACA,MAAAld,GACI/O,KAAK+rC,SAAW/rC,KAAK+rC,QAAQ3d,eAAepuB,KAAKgsC,oBACrD,CACA,OAAA9gB,GACIlrB,KAAK4rC,4BACL5rC,KAAK+rC,SAAW/rC,KAAK+rC,QAAQne,KACjC,I0BrCAmF,KAAM,CACFvI,QCNR,cAA0BA,GACtB,WAAA/qB,CAAYgrB,GACR9a,MAAM8a,GACNzqB,KAAKqsC,oBAAsBngC,EAAA,EAC3BlM,KAAKmuB,gBAAkBjiB,EAAA,EACvBlM,KAAKssC,SAAW,IAAIna,GAA0B1H,EAClD,CACA,KAAAM,GAGI,MAAM,aAAEwhB,GAAiBvsC,KAAKyqB,KAAK9R,WAC/B4zB,IACAvsC,KAAKqsC,oBAAsBE,EAAazhB,UAAU9qB,KAAKssC,WAE3DtsC,KAAKmuB,gBAAkBnuB,KAAKssC,SAAS9V,gBAAkBtqB,EAAA,CAC3D,CACA,OAAAgf,GACIlrB,KAAKqsC,sBACLrsC,KAAKmuB,iBACT,GDZIqe,eAAgBhB,GAChBvR,cAAa,KEPrB,SAASwS,GAAiBhiB,EAAMwB,EAAOygB,GACnC,MAAM,MAAEjuC,GAAUgsB,EACdA,EAAKlF,gBAAkB9mB,EAAM0rB,YAC7BM,EAAKlF,eAAesE,UAAU,aAA4B,UAAd6iB,GAEhD,MACMh3B,EAAWjX,EADE,UAAYiuC,GAE3Bh3B,GACA,KAAMiB,YAAW,IAAMjB,EAASuW,EAAOD,GAAiBC,KAEhE,CCVA,SAAS0gB,GAAiBliB,EAAMwB,EAAOygB,GACnC,MAAM,MAAEjuC,GAAUgsB,EACdA,EAAKlF,gBAAkB9mB,EAAM2rB,UAC7BK,EAAKlF,eAAesE,UAAU,WAA0B,UAAd6iB,GAE9C,MACMh3B,EAAWjX,EADE,SAAyB,QAAdiuC,EAAsB,GAAKA,IAErDh3B,GACA,KAAMiB,YAAW,IAAMjB,EAASuW,EAAOD,GAAiBC,KAEhE,CCVA,MAAM2gB,GAAoB,IAAI1a,QAMxB2a,GAAY,IAAI3a,QAChB4a,GAAwBC,IAC1B,MAAMr3B,EAAWk3B,GAAkBh1B,IAAIm1B,EAAM1nC,QAC7CqQ,GAAYA,EAASq3B,EAAM,EAEzBC,GAA4BC,IAC9BA,EAAQ72B,QAAQ02B,GAAqB,ECdzC,MAAMI,GAAiB,CACnB3lC,KAAM,EACNue,IAAK,GCAHqnB,GAAoB,CACtBC,OAAQ,CACJ5iB,QDAR,cAA4BA,GACxB,WAAA/qB,GACIkQ,SAASwb,WACTnrB,KAAKqtC,gBAAiB,EACtBrtC,KAAKstC,UAAW,CACpB,CACA,aAAAC,GACIvtC,KAAKkrB,UACL,MAAM,SAAEsiB,EAAW,CAAC,GAAMxtC,KAAKyqB,KAAK9R,YAC9B,KAAEtQ,EAAM4T,OAAQwxB,EAAU,OAAEC,EAAS,OAAM,KAAEC,GAASH,EACtDztC,EAAU,CACZsI,KAAMA,EAAOA,EAAK1J,aAAUwG,EAC5BsoC,aACAG,UAA6B,iBAAXF,EAAsBA,EAASR,GAAeQ,IA+BpE,ODbR,SAA6Bn9B,EAASxQ,EAAS2V,GAC3C,MAAMm4B,EApBV,UAAkC,KAAExlC,KAAStI,IACzC,MAAM+tC,EAAazlC,GAAQ8iC,SAItB0B,GAAUhnC,IAAIioC,IACfjB,GAAUz1B,IAAI02B,EAAY,CAAC,GAE/B,MAAMC,EAAgBlB,GAAUj1B,IAAIk2B,GAC9BrwC,EAAMuwC,KAAKC,UAAUluC,GAQ3B,OAHKguC,EAActwC,KACfswC,EAActwC,GAAO,IAAIywC,qBAAqBlB,GAA0B,CAAE3kC,UAAStI,KAEhFguC,EAActwC,EACzB,CAEsC0wC,CAAyBpuC,GAG3D,OAFA6sC,GAAkBx1B,IAAI7G,EAASmF,GAC/Bm4B,EAA0BO,QAAQ79B,GAC3B,KACHq8B,GAAkB32B,OAAO1F,GACzBs9B,EAA0BQ,UAAU99B,EAAQ,CAEpD,CCKe+9B,CAAoBtuC,KAAKyqB,KAAK9rB,QAASoB,GA7BhBgtC,IAC1B,MAAM,eAAEwB,GAAmBxB,EAI3B,GAAI/sC,KAAKstC,WAAaiB,EAClB,OAMJ,GALAvuC,KAAKstC,SAAWiB,EAKZZ,IAASY,GAAkBvuC,KAAKqtC,eAChC,OAEKkB,IACLvuC,KAAKqtC,gBAAiB,GAEtBrtC,KAAKyqB,KAAKlF,gBACVvlB,KAAKyqB,KAAKlF,eAAesE,UAAU,cAAe0kB,GAMtD,MAAM,gBAAEC,EAAe,gBAAEC,GAAoBzuC,KAAKyqB,KAAK9R,WACjDjD,EAAW64B,EAAiBC,EAAkBC,EACpD/4B,GAAYA,EAASq3B,EAAM,GAGnC,CACA,KAAAhiB,GACI/qB,KAAKutC,eACT,CACA,MAAAx+B,GACI,GAAoC,oBAAzBm/B,qBACP,OACJ,MAAM,MAAEzvC,EAAK,UAAEwsB,GAAcjrB,KAAKyqB,KACR,CAAC,SAAU,SAAU,QAAQljB,KAO/D,UAAkC,SAAEimC,EAAW,CAAC,IAAOA,SAAUkB,EAAe,CAAC,GAAM,CAAC,GACpF,OAAQxvC,GAASsuC,EAAStuC,KAAUwvC,EAAaxvC,EACrD,CAToEyvC,CAAyBlwC,EAAOwsB,KAExFjrB,KAAKutC,eAEb,CACA,OAAAriB,GAAY,ICxDZ0jB,IAAK,CACDpkB,QHMR,cAA2BA,GACvB,KAAAO,GACI,MAAM,QAAEpsB,GAAYqB,KAAKyqB,KACpB9rB,IAELqB,KAAKkrB,SAAU,QAAMvsB,GAAUguB,IAC3BggB,GAAiB3sC,KAAKyqB,KAAMkC,EAAY,SACjC,CAACkiB,GAAYC,aAAcnC,GAAiB3sC,KAAKyqB,KAAMokB,EAAUC,EAAU,MAAQ,YAC3F,CAAEC,gBAAiB/uC,KAAKyqB,KAAKhsB,MAAMuwC,kBAC1C,CACA,OAAA9jB,GAAY,IGdZ+jB,MAAO,CACHzkB,QCTR,cAA2BA,GACvB,WAAA/qB,GACIkQ,SAASwb,WACTnrB,KAAK0oB,UAAW,CACpB,CACA,OAAAwmB,GACI,IAAIC,GAAiB,EAOrB,IACIA,EAAiBnvC,KAAKyqB,KAAK9rB,QAAQywC,QAAQ,iBAC/C,CACA,MAAOjxC,GACHgxC,GAAiB,CACrB,CACKA,GAAmBnvC,KAAKyqB,KAAKlF,iBAElCvlB,KAAKyqB,KAAKlF,eAAesE,UAAU,cAAc,GACjD7pB,KAAK0oB,UAAW,EACpB,CACA,MAAA2mB,GACSrvC,KAAK0oB,UAAa1oB,KAAKyqB,KAAKlF,iBAEjCvlB,KAAKyqB,KAAKlF,eAAesE,UAAU,cAAc,GACjD7pB,KAAK0oB,UAAW,EACpB,CACA,KAAAqC,GACI/qB,KAAKkrB,SAAU,EAAAllB,GAAA,GAAK0lB,GAAY1rB,KAAKyqB,KAAK9rB,QAAS,SAAS,IAAMqB,KAAKkvC,YAAYxjB,GAAY1rB,KAAKyqB,KAAK9rB,QAAS,QAAQ,IAAMqB,KAAKqvC,WACzI,CACA,OAAAnkB,GAAY,IDtBZokB,MAAO,CACH9kB,QJAR,cAA2BA,GACvB,KAAAO,GACI,MAAM,QAAEpsB,GAAYqB,KAAKyqB,KACpB9rB,IAELqB,KAAKkrB,SAAU,QAAMvsB,GAAUguB,IAC3B8f,GAAiBzsC,KAAKyqB,KAAMkC,EAAY,SAChCkiB,GAAapC,GAAiBzsC,KAAKyqB,KAAMokB,EAAU,UAEnE,CACA,OAAA3jB,GAAY,KMvBVoE,GAAS,CACXA,OAAQ,CACJkd,eAAgBhB,GAChBvR,cAAa,KCHfsV,IAAc,KAAAt8B,eAAc,CAAEu8B,QAAQ,mBCA5C,MAAMC,IAAgB,KAAAx8B,eAAc,CAAC,GCCrC,SAASkU,GAAsB1oB,GAC3B,OAAQqZ,EAAoBrZ,EAAMqkB,UAC9BjK,EAAatR,MAAMrI,GAASiZ,EAAe1Z,EAAMS,KACzD,CACA,SAASwwC,GAAcjxC,GACnB,OAAO8E,QAAQ4jB,GAAsB1oB,IAAUA,EAAMga,SACzD,CCFA,SAASk3B,GAA0BpoB,GAC/B,OAAOpoB,MAAMC,QAAQmoB,GAAQA,EAAKjN,KAAK,KAAOiN,CAClD,gBCVA,MAAMqoB,GAAe,CACjBjtB,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJ4H,KAAM,CAAC,QACPwI,KAAM,CAAC,OAAQ,gBACfkc,MAAO,CAAC,cACRK,MAAO,CAAC,aAAc,eAAgB,cACtCV,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCjD,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDyB,OAAQ,CAAC,cAAe,kBAAmB,mBAC3C9d,OAAQ,CAAC,SAAU,aAEjBugB,GAAqB,CAAC,EAC5B,IAAK,MAAMpyC,KAAOmyC,GACdC,GAAmBpyC,GAAO,CACtBqyC,UAAYrxC,GAAUmxC,GAAanyC,GAAK8J,MAAMrI,KAAWT,EAAMS,MCvBvE,MAAM6wC,GAAwBhzC,OAAOC,IAAI,yBCOzC,SAASgzC,GAAaC,EAAa53B,EAAe63B,GAC9C,OAAO,KAAA7V,cAAa5I,IACZA,GACAwe,EAAYE,SAAWF,EAAYE,QAAQ1e,GAE3CpZ,IACIoZ,EACApZ,EAAc0S,MAAM0G,GAGpBpZ,EAAc6S,WAGlBglB,IAC2B,mBAAhBA,EACPA,EAAYze,GAEP9C,GAAYuhB,KACjBA,EAAYvxC,QAAU8yB,GAE9B,GAOJ,CAACpZ,GACL,gBCxBA,SAAS+3B,GAAiB9X,EAAW2X,EAAaxxC,EAAO4xC,EAAqBC,GAC1E,IAAIrqC,EAAImjC,EACR,MAAQ/wB,cAAegP,IAAW,KAAA6S,YAAWuV,IACvCc,GAAc,KAAArW,YAAWqV,IACzBrpB,GAAkB,KAAAgU,YAAW,IAC7BsW,GAAsB,KAAAtW,YAAWlnB,GAAA,GAAqBI,cACtDq9B,GAAmB,KAAAC,QAAO,MAIhCL,EAAsBA,GAAuBE,EAAYI,UACpDF,EAAiB9xC,SAAW0xC,IAC7BI,EAAiB9xC,QAAU0xC,EAAoB/X,EAAW,CACtD2X,cACA5oB,SACA5oB,QACAynB,kBACAsD,wBAAuBtD,IACW,IAA5BA,EAAgBoB,QAEtBkpB,yBAGR,MAAMn4B,EAAgBo4B,EAAiB9xC,QAKjCiyC,GAA2B,KAAA1W,YAAWhD,KACxC7e,GACCA,EAAc8a,aACfmd,GACwB,SAAvBj4B,EAAc7Z,MAA0C,QAAvB6Z,EAAc7Z,MA2DxD,SAA8B6Z,EAAe5Z,EAAO6xC,EAA2BzH,GAC3E,MAAM,SAAEnQ,EAAQ,OAAEpJ,EAAM,KAAEyD,EAAI,gBAAEuB,EAAe,aAAEkQ,EAAY,WAAEvB,GAAgBxkC,EAC/E4Z,EAAc8a,WAAa,IAAImd,EAA0Bj4B,EAAcoN,aAAchnB,EAAM,8BACrF0G,EACA0rC,GAAyBx4B,EAAcgP,SAC7ChP,EAAc8a,WAAW6F,WAAW,CAChCN,WACApJ,SACA8U,oBAAqB7gC,QAAQwvB,IAAUuB,GAAmB3F,GAAY2F,GACtEjc,gBAQAowB,cAAiC,iBAAXnZ,EAAsBA,EAAS,OACrDuZ,yBACArE,eACAvB,cAER,CAhFQ,CAAqBwN,EAAiB9xC,QAASF,EAAO6xC,EAA2BM,GAErF,MAAMlmB,GAAY,KAAAgmB,SAAO,IACzB,KAAAI,qBAAmB,KAKXz4B,GAAiBqS,EAAU/rB,SAC3B0Z,EAActJ,OAAOtQ,EAAOynB,EAChC,IAMJ,MAAM6qB,EAAoBtyC,EAAMgb,GAC1Bu3B,GAAe,KAAAN,QAAOntC,QAAQwtC,MACY,QAAzC9qC,EAAK6Z,OAAOmxB,+BAA4C,IAAPhrC,OAAgB,EAASA,EAAG5H,KAAKyhB,OAAQixB,MAC9C,QAA7C3H,EAAKtpB,OAAOuf,mCAAgD,IAAP+J,OAAgB,EAASA,EAAG/qC,KAAKyhB,OAAQixB,KAqCpG,OApCA,SAA0B,KACjB14B,IAELqS,EAAU/rB,SAAU,EACpBmhB,OAAOoxB,iBAAkB,EACzB74B,EAAc84B,iBACdhZ,GAAUzhB,OAAO2B,EAAc3B,QAW3Bs6B,EAAaryC,SAAW0Z,EAAckN,gBACtClN,EAAckN,eAAe0C,iBACjC,KAEJ,KAAAmS,YAAU,KACD/hB,KAEA24B,EAAaryC,SAAW0Z,EAAckN,gBACvClN,EAAckN,eAAe0C,iBAE7B+oB,EAAaryC,UAEb0Y,gBAAe,KACX,IAAIpR,EAC0C,QAA7CA,EAAK6Z,OAAOsxB,mCAAgD,IAAPnrC,GAAyBA,EAAG5H,KAAKyhB,OAAQixB,EAAkB,IAErHC,EAAaryC,SAAU,GAC3B,IAEG0Z,CACX,CAwBA,SAASw4B,GAAyBx4B,GAC9B,GAAKA,EAEL,OAAiD,IAA1CA,EAActY,QAAQsxC,gBACvBh5B,EAAc8a,WACd0d,GAAyBx4B,EAAcgP,OACjD,CC1GA,SAASiqB,IAA8B,kBAAEC,EAAiB,oBAAElB,EAAmB,UAAEmB,EAAS,eAAEC,EAAc,UAAEnZ,IACxG,IAAIryB,EAAImjC,EAER,SAASsI,EAAgBjzC,EAAOyxC,GAK5B,IAAIjW,EACJ,MAAM0X,EAAiB,KAChB,KAAAzX,YAAWlnB,GAAA,MACXvU,EACHi6B,SAAUkZ,GAAYnzC,KAEpB,SAAE0U,GAAaw+B,EACfvqB,ELpCd,SAAgC3oB,GAC5B,MAAM,QAAE6oB,EAAO,QAAExE,GMFrB,SAAgCrkB,EAAO2oB,GACnC,GAAID,GAAsB1oB,GAAQ,CAC9B,MAAM,QAAE6oB,EAAO,QAAExE,GAAYrkB,EAC7B,MAAO,CACH6oB,SAAqB,IAAZA,GAAqBnP,EAAemP,GACvCA,OACAniB,EACN2d,QAAS3K,EAAe2K,GAAWA,OAAU3d,EAErD,CACA,OAAyB,IAAlB1G,EAAMozC,QAAoBzqB,EAAU,CAAC,CAChD,CNTiC0qB,CAAuBrzC,GAAO,KAAAy7B,YAAWuV,KACtE,OAAO,KAAAsC,UAAQ,KAAM,CAAGzqB,UAASxE,aAAY,CAAC6sB,GAA0BroB,GAAUqoB,GAA0B7sB,IAChH,CKiCwBkvB,CAAuBvzC,GACjCwxC,EAAcwB,EAAehzC,EAAO0U,GAC1C,IAAKA,GAAY,KAAW,EAgCf,KAAA+mB,YAAWqV,IAAaC,OA9BjC,MAAMyC,EA4ClB,SAAoCxzC,GAChC,MAAM,KAAEs0B,EAAI,OAAEzD,GAAWugB,GACzB,IAAK9c,IAASzD,EACV,MAAO,CAAC,EACZ,MAAM4iB,EAAW,IAAKnf,KAASzD,GAC/B,MAAO,CACH2K,eAAgBlH,aAAmC,EAASA,EAAK+c,UAAUrxC,MAAY6wB,aAAuC,EAASA,EAAOwgB,UAAUrxC,IAClJyzC,EAASjY,mBACT90B,EACNqnC,eAAgB0F,EAAS1F,eAEjC,CAvDqC2F,CAA2BR,GACpD1X,EAAgBgY,EAAiBhY,cAOjC7S,EAAQ/O,cAAgB+3B,GAAiB9X,EAAW2X,EAAa0B,EAAgBtB,EAAqB4B,EAAiBzF,eAC3H,CAKA,OAAQ,KAAA1tC,MAAK2wC,GAAc2C,SAAU,CAAEnzC,MAAOmoB,EAASuT,SAAU,CAACV,GAAiB7S,EAAQ/O,eAAiB,KAAAxZ,KAAIo7B,EAAe,CAAE5hB,cAAe+O,EAAQ/O,iBAAkBs5B,IAAqB,KAAMH,EAAUlZ,EAAW75B,EAAOuxC,GAAaC,EAAa7oB,EAAQ/O,cAAe63B,GAAcD,EAAa98B,EAAUiU,EAAQ/O,iBACnU,CAhCAk5B,GEzBJ,SAAsBc,GAClB,IAAK,MAAM50C,KAAO40C,EACdxC,GAAmBpyC,GAAO,IACnBoyC,GAAmBpyC,MACnB40C,EAAS50C,GAGxB,CFkByB60C,CAAaf,GAiClCG,EAAgBa,YAAc,UAA+B,iBAAdja,EACzCA,EACA,UAAkG,QAAvF8Q,EAAsC,QAAhCnjC,EAAKqyB,EAAUia,mBAAgC,IAAPtsC,EAAgBA,EAAKqyB,EAAUp5B,YAAyB,IAAPkqC,EAAgBA,EAAK,QACrI,MAAMoJ,GAA4B,KAAAC,YAAWf,GAE7C,OADAc,EAA0BzC,IAAyBzX,EAC5Cka,CACX,CACA,SAASZ,IAAY,SAAElZ,IACnB,MAAMga,GAAgB,KAAAxY,YAAWjD,IAAoBtM,GACrD,OAAO+nB,QAA8BvtC,IAAbuzB,EAClBga,EAAgB,IAAMha,EACtBA,CACV,CGpEA,MAAMia,GAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,GAAeta,GACpB,MAKqB,iBAAdA,IAIHA,EAAU0S,SAAS,SAOvB2H,GAAqBE,QAAQva,IAAc,GAIvC,SAASh5B,KAAKg5B,GAItB,gBCFA,MAAMwa,GAAsBlK,GAAW,CAACnqC,EAAO0U,KAC3C,MAAMiU,GAAU,KAAA8S,YAAWuV,IACrBvpB,GAAkB,KAAAgU,YAAW,IAC7B6Y,EAAO,IAnBjB,UAAmB,4BAAEC,EAA2B,kBAAEC,EAAiB,SAAElyC,GAAatC,EAAO2oB,EAASlB,GAC9F,MAAMpe,EAAQ,CACV2d,aAAcytB,GAAiBz0C,EAAO2oB,EAASlB,EAAiB8sB,GAChEG,YAAaF,KAWjB,OATIlyC,IAMA+G,EAAMqoC,QAAW1e,GAAa1wB,EAAS,CAAEtC,QAAOE,QAAS8yB,KAAa3pB,IACtEA,EAAM/G,SAAYsX,GAAkBtX,EAASsX,IAE1CvQ,CACX,CAIuBsrC,CAAUxK,EAAQnqC,EAAO2oB,EAASlB,GACrD,OAAO/S,EAAW4/B,KAAS,QAAYA,EAAK,EAEhD,SAASG,GAAiBz0C,EAAO2oB,EAASlB,EAAiBmtB,GACvD,MAAMvtC,EAAS,CAAC,EACVwtC,EAAeD,EAAmB50C,EAAO,CAAC,GAChD,IAAK,MAAMhB,KAAO61C,EACdxtC,EAAOrI,GAAOo9B,GAAmByY,EAAa71C,IAElD,IAAI,QAAE6pB,EAAO,QAAExE,GAAYrkB,EAC3B,MAAM80C,EAA0BpsB,GAAsB1oB,GAChD+0C,EAAkB9D,GAAcjxC,GAClC2oB,GACAosB,IACCD,IACiB,IAAlB90C,EAAMozC,eACU1sC,IAAZmiB,IACAA,EAAUF,EAAQE,cACNniB,IAAZ2d,IACAA,EAAUsE,EAAQtE,UAE1B,IAAI2wB,IAA4BvtB,IACE,IAA5BA,EAAgBoB,QAEtBmsB,EAA4BA,IAAyC,IAAZnsB,EACzD,MAAMosB,EAAeD,EAA4B3wB,EAAUwE,EAC3D,GAAIosB,GACwB,kBAAjBA,IACN57B,EAAoB47B,GAAe,CACpC,MAAMC,EAAOx0C,MAAMC,QAAQs0C,GAAgBA,EAAe,CAACA,GAC3D,IAAK,IAAIpyC,EAAI,EAAGA,EAAIqyC,EAAKxyC,OAAQG,IAAK,CAClC,MAAMd,EAAW+X,EAAwB9Z,EAAOk1C,EAAKryC,IACrD,GAAId,EAAU,CACV,MAAM,cAAE4kB,EAAa,WAAElB,KAAe7e,GAAW7E,EACjD,IAAK,MAAM/C,KAAO4H,EAAQ,CACtB,IAAIqgB,EAAcrgB,EAAO5H,GACrB0B,MAAMC,QAAQsmB,KAQdA,EAAcA,EAHA+tB,EACR/tB,EAAYvkB,OAAS,EACrB,IAGU,OAAhBukB,IACA5f,EAAOrI,GAAOioB,EAEtB,CACA,IAAK,MAAMjoB,KAAO2nB,EACdtf,EAAOrI,GAAO2nB,EAAc3nB,EAEpC,CACJ,CACJ,CACA,OAAOqI,CACX,CClFA,MAAM8tC,GAAiB,CAAC30C,EAAOT,IACpBA,GAAyB,iBAAVS,EAChBT,EAAK+F,UAAUtF,GACfA,ECFJ40C,GAAiB,CACnB7/B,EAAG,aACHwJ,EAAG,aACHC,EAAG,aACHE,qBAAsB,eAEpBm2B,GAAgB,IAAmB3yC,OCJzC,SAAS4yC,GAAgBjsC,EAAO2d,EAAc7B,GAC1C,MAAM,MAAEyS,EAAK,KAAE2d,EAAI,gBAAEhK,GAAoBliC,EAEzC,IAAI0oB,GAAe,EACfyjB,GAAqB,EAOzB,IAAK,MAAMx2C,KAAOgoB,EAAc,CAC5B,MAAMxmB,EAAQwmB,EAAahoB,GAC3B,GAAI,IAAeoI,IAAIpI,GAEnB+yB,GAAe,OAGd,IAAI,OAAkB/yB,GACvBu2C,EAAKv2C,GAAOwB,MAGX,CAED,MAAMi1C,EAAcN,GAAe30C,EAAO+e,EAAiBvgB,IACvDA,EAAI8B,WAAW,WAEf00C,GAAqB,EACrBjK,EAAgBvsC,GACZy2C,GAGJ7d,EAAM54B,GAAOy2C,CAErB,CACJ,CAiBA,GAhBKzuB,EAAalhB,YACVisB,GAAgB5M,EAChByS,EAAM9xB,UD3BlB,SAAwBkhB,EAAclhB,EAAWqf,GAE7C,IAAIuwB,EAAkB,GAClBC,GAAqB,EAKzB,IAAK,IAAI9yC,EAAI,EAAGA,EAAIwyC,GAAexyC,IAAK,CACpC,MAAM7D,EAAM,IAAmB6D,GACzBrC,EAAQwmB,EAAahoB,GAC3B,QAAc0H,IAAVlG,EACA,SACJ,IAAIo1C,GAAiB,EAOrB,GALIA,EADiB,iBAAVp1C,EACUA,KAAWxB,EAAI8B,WAAW,SAAW,EAAI,GAGnB,IAAtB4gB,WAAWlhB,IAE3Bo1C,GAAkBzwB,EAAmB,CACtC,MAAMswB,EAAcN,GAAe30C,EAAO+e,EAAiBvgB,IACtD42C,IACDD,GAAqB,EAErBD,GAAmB,GADGN,GAAep2C,IAAQA,KACNy2C,OAEvCtwB,IACArf,EAAU9G,GAAOy2C,EAEzB,CACJ,CAUA,OATAC,EAAkBA,EAAgBj0B,OAG9B0D,EACAuwB,EAAkBvwB,EAAkBrf,EAAW6vC,EAAqB,GAAKD,GAEpEC,IACLD,EAAkB,QAEfA,CACX,CCf8BG,CAAe7uB,EAAc3d,EAAMvD,UAAWqf,GAE3DyS,EAAM9xB,YAKX8xB,EAAM9xB,UAAY,SAOtB0vC,EAAoB,CACpB,MAAM,QAAEp2B,EAAU,MAAK,QAAEC,EAAU,MAAK,QAAEC,EAAU,GAAOisB,EAC3D3T,EAAM2T,gBAAkB,GAAGnsB,KAAWC,KAAWC,GACrD,CACJ,CC5DA,MAAMw2B,GAAW,CACblnC,OAAQ,oBACRmnC,MAAO,oBAELC,GAAY,CACdpnC,OAAQ,mBACRmnC,MAAO,mBCNX,SAAS,GAAWpvC,EAAQiI,EAAQ6Q,GAChC,MAAyB,iBAAX9Y,EACRA,EACA,EAAAqV,GAAGlW,UAAU8I,EAAS6Q,EAAO9Y,EACvC,CCCA,SAASsvC,GAAc5sC,GAAO,MAAE6sC,EAAK,MAAEC,EAAK,UAAEC,EAAS,QAAEh3B,EAAO,QAAEC,EAAO,WAAEg3B,EAAU,YAAEC,EAAc,EAAC,WAAEC,EAAa,KAElHxpC,GAAUypC,EAAUrxB,GAMnB,GALAmwB,GAAgBjsC,EAAO0D,EAAQoY,GAK3BqxB,EAIA,YAHIntC,EAAMuuB,MAAM6e,UACZptC,EAAMqtC,MAAMD,QAAUptC,EAAMuuB,MAAM6e,UAI1CptC,EAAMqtC,MAAQrtC,EAAMuuB,MACpBvuB,EAAMuuB,MAAQ,CAAC,EACf,MAAM,MAAE8e,EAAK,MAAE9e,EAAK,WAAE+e,GAAettC,EAKjCqtC,EAAM5wC,YACF6wC,IACA/e,EAAM9xB,UAAY4wC,EAAM5wC,kBACrB4wC,EAAM5wC,WAGb6wC,SACajwC,IAAZ0Y,QAAqC1Y,IAAZ2Y,GAAyBuY,EAAM9xB,aACzD8xB,EAAM2T,gBDzBd,SAAgCoL,EAAYv3B,EAASC,GAGjD,MAAO,GAFW,GAAWD,EAASu3B,EAAWphC,EAAGohC,EAAWh6B,UAC7C,GAAW0C,EAASs3B,EAAW53B,EAAG43B,EAAW95B,SAEnE,CCqBgC+5B,CAAuBD,OAAwBjwC,IAAZ0Y,EAAwBA,EAAU,QAAiB1Y,IAAZ2Y,EAAwBA,EAAU,UAG1H3Y,IAAVwvC,IACAQ,EAAMnhC,EAAI2gC,QACAxvC,IAAVyvC,IACAO,EAAM33B,EAAIo3B,QACIzvC,IAAd0vC,IACAM,EAAMt4B,MAAQg4B,QAEC1vC,IAAf2vC,GF7BR,SAAsBK,EAAOh0C,EAAQm0C,EAAU,EAAGjoC,EAAS,EAAGkoC,GAAc,GAExEJ,EAAML,WAAa,EAGnB,MAAMxtC,EAAOiuC,EAAchB,GAAWE,GAEtCU,EAAM7tC,EAAK+F,QAAU,EAAAoN,GAAGlW,WAAW8I,GAEnC,MAAMynC,EAAa,EAAAr6B,GAAGlW,UAAUpD,GAC1B4zC,EAAc,EAAAt6B,GAAGlW,UAAU+wC,GACjCH,EAAM7tC,EAAKktC,OAAS,GAAGM,KAAcC,GACzC,CEkBQS,CAAaL,EAAOL,EAAYC,EAAaC,GAAY,EAEjE,CCjDA,MCAMC,GAAYQ,GAAuB,iBAARA,GAA0C,QAAtBA,EAAIj8B,cCAzD,SAASk8B,GAAWnlC,GAAS,MAAE8lB,EAAK,KAAE2d,GAAQ7K,EAAWhW,GACrDj2B,OAAO0T,OAAOL,EAAQ8lB,MAAOA,EAAOlD,GAAcA,EAAW+V,oBAAoBC,IAEjF,IAAK,MAAM1rC,KAAOu2C,EACdzjC,EAAQ8lB,MAAMsf,YAAYl4C,EAAKu2C,EAAKv2C,GAE5C,CCHA,MAAMm4C,GAAsB,IAAInxC,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAASoxC,GAAUtlC,EAAS4iC,EAAa2C,EAAY3iB,GACjDuiB,GAAWnlC,EAAS4iC,OAAahuC,EAAWguB,GAC5C,IAAK,MAAM11B,KAAO01C,EAAYgC,MAC1B5kC,EAAQwlC,aAAcH,GAAoB/vC,IAAIpI,GAA0BA,EAAnB4b,EAAY5b,GAAY01C,EAAYgC,MAAM13C,GAEvG,CCNA,SAASu4C,GAAoBv4C,GAAK,OAAE6xB,EAAM,SAAEoJ,IACxC,OAAQ,IAAe7yB,IAAIpI,IACvBA,EAAI8B,WAAW,YACb+vB,QAAuBnqB,IAAbuzB,OACLR,GAAgBz6B,IAAgB,YAARA,EACvC,CCLA,SAASu1C,GAA4Bv0C,EAAOwsB,EAAW5S,GACnD,IAAIpS,EACJ,MAAM,MAAEowB,GAAU53B,EACZw3C,EAAY,CAAC,EACnB,IAAK,MAAMx4C,KAAO44B,IACV,OAAcA,EAAM54B,KACnBwtB,EAAUoL,QACP,OAAcpL,EAAUoL,MAAM54B,KAClCu4C,GAAoBv4C,EAAKgB,SACgI0G,KAAnD,QAApGc,EAAKoS,aAAqD,EAASA,EAAcY,SAASxb,UAAyB,IAAPwI,OAAgB,EAASA,EAAGqjB,cAC1I2sB,EAAUx4C,GAAO44B,EAAM54B,IAG/B,OAAOw4C,CACX,CCbA,SAAS,GAA4Bx3C,EAAOwsB,EAAW5S,GACnD,MAAM49B,EAAYjD,GAA8Bv0C,EAAOwsB,EAAW5S,GAClE,IAAK,MAAM5a,KAAOgB,IACV,OAAcA,EAAMhB,MACpB,OAAcwtB,EAAUxtB,OAIxBw4C,GAHuD,IAArC,IAAmBpD,QAAQp1C,GACvC,OAASA,EAAIy4C,OAAO,GAAGngB,cAAgBt4B,EAAI04C,UAAU,GACrD14C,GACiBgB,EAAMhB,IAGrC,OAAOw4C,CACX,CCUA,MAAMG,GAAc,CAAC,IAAK,IAAK,QAAS,SAAU,KAAM,KAAM,KACxDC,GAAkB,CACpB5E,eAAgBqB,GAAmB,CAC/BE,4BAA6B,GAC7BC,kBC5BqB,KAAM,CTD/B5c,MAAO,CAAC,EACR9xB,UAAW,CAAC,EACZylC,gBAAiB,CAAC,EAClBgK,KAAM,CAAC,ESAPmB,MAAO,CAAC,ID2BJp0C,SAAU,EAAGtC,QAAOwsB,YAAWtsB,UAASw0C,cAAa1tB,mBACjD,IAAK9mB,EACD,OACJ,IAAI6xB,IAAiB/xB,EAAMs0B,KAC3B,IAAKvC,EACD,IAAK,MAAM/yB,KAAOgoB,EACd,GAAI,IAAe5f,IAAIpI,GAAM,CACzB+yB,GAAe,EACf,KACJ,CAGR,IAAKA,EACD,OACJ,IAAI8lB,GAAgBrrB,EACpB,GAAIA,EAKA,IAAK,IAAI3pB,EAAI,EAAGA,EAAI80C,GAAYj1C,OAAQG,IAAK,CACzC,MAAM7D,EAAM24C,GAAY90C,GACpB7C,EAAMhB,KACNwtB,EAAUxtB,KACV64C,GAAe,EAEvB,CAECA,GAEL,KAAM//B,MAAK,MApDvB,SAA6Bkb,EAAU0hB,GACnC,IACIA,EAAYiC,WACoB,mBAArB3jB,EAAS8kB,QACV9kB,EAAS8kB,UACT9kB,EAASI,uBACvB,CACA,MAAO1zB,GAEHg1C,EAAYiC,WAAa,CACrBphC,EAAG,EACHwJ,EAAG,EACHpC,MAAO,EACPE,OAAQ,EAEhB,CACJ,CAqCgBk7B,CAAoB73C,EAASw0C,GAC7B,KAAMz8B,QAAO,KACTg+B,GAAcvB,EAAa1tB,EAAcwvB,GAASt2C,EAAQojC,SAAUtjC,EAAMmlB,mBAC1EiyB,GAAUl3C,EAASw0C,EAAY,GACjC,GACJ,KE/DRsD,GAAmB,CACrBhF,eAAgBqB,GAAmB,CAC/BE,4BAA2B,GAC3BC,kBVPsB,KAAM,CAChC5c,MAAO,CAAC,EACR9xB,UAAW,CAAC,EACZylC,gBAAiB,CAAC,EAClBgK,KAAM,CAAC,OWEX,SAAS0C,GAAkBrxC,EAAQ0pB,EAAQtwB,GACvC,IAAK,MAAMhB,KAAOsxB,GACT,OAAcA,EAAOtxB,KAAUu4C,GAAoBv4C,EAAKgB,KACzD4G,EAAO5H,GAAOsxB,EAAOtxB,GAGjC,CAkBA,SAASk5C,GAAal4C,EAAOwxC,GAEzB,MAAM2G,EAAY,CAAC,EACbvgB,EAbV,SAAkB53B,EAAOwxC,GACrB,MACM5Z,EAAQ,CAAC,EAMf,OAFAqgB,GAAkBrgB,EALA53B,EAAM43B,OAAS,CAAC,EAKE53B,GACpCvB,OAAO0T,OAAOylB,EAdlB,UAAgC,kBAAEzS,GAAqBqsB,GACnD,OAAO,KAAA8B,UAAQ,KACX,MAAMjqC,EXfsB,CAChCuuB,MAAO,CAAC,EACR9xB,UAAW,CAAC,EACZylC,gBAAiB,CAAC,EAClBgK,KAAM,CAAC,GWaH,OADAD,GAAgBjsC,EAAOmoC,EAAarsB,GAC7B1mB,OAAO0T,OAAO,CAAC,EAAG9I,EAAMksC,KAAMlsC,EAAMuuB,MAAM,GAClD,CAAC4Z,GACR,CAQyB4G,CAAuBp4C,EAAOwxC,IAC5C5Z,CACX,CAIkBygB,CAASr4C,EAAOwxC,GAoB9B,OAnBIxxC,EAAMs0B,OAA+B,IAAvBt0B,EAAMi4B,eAEpBkgB,EAAUG,WAAY,EAEtB1gB,EAAM2gB,WACF3gB,EAAM4gB,iBACF5gB,EAAM6gB,mBACF,OAEZ7gB,EAAM8gB,aACa,IAAf14C,EAAMs0B,KACA,OACA,QAAsB,MAAft0B,EAAMs0B,KAAe,IAAM,WAEzB5tB,IAAnB1G,EAAM24C,WACL34C,EAAM44C,OAAS54C,EAAM64C,YAAc74C,EAAM2rB,YAC1CwsB,EAAUQ,SAAW,GAEzBR,EAAUvgB,MAAQA,EACXugB,CACX,CChDA,MAAMW,GAAmB,IAAI9yC,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,SACA,UACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,kBACA,eACA,aAUJ,SAAS+yC,GAAkB/5C,GACvB,OAAQA,EAAI8B,WAAW,UAClB9B,EAAI8B,WAAW,SAAmB,cAAR9B,GAC3BA,EAAI8B,WAAW,WACf9B,EAAI8B,WAAW,UACf9B,EAAI8B,WAAW,UACf9B,EAAI8B,WAAW,aACfg4C,GAAiB1xC,IAAIpI,EAC7B,CCpDA,IAAIg6C,GAAiBh6C,IAAS+5C,GAAkB/5C,GAoBhD,KAnBiCi6C,GAyBLC,QAAQ,0BAA0BC,WArB1DH,GAAiBh6C,GAAQA,EAAI8B,WAAW,OAASi4C,GAAkB/5C,GAAOi6C,GAAYj6C,GAsB1F,CACA,MAAOwI,GAEP,CA7BA,IAAiCyxC,GCGjC,SAASG,GAAYp5C,EAAOwxC,EAAa6H,EAAWxf,GAChD,MAAMyf,GAAc,KAAAhG,UAAQ,KACxB,MAAMjqC,ELNqB,CTD/BuuB,MAAO,CAAC,EACR9xB,UAAW,CAAC,EACZylC,gBAAiB,CAAC,EAClBgK,KAAM,CAAC,ESAPmB,MAAO,CAAC,GKMJ,OADAT,GAAc5sC,EAAOmoC,EAAagF,GAAS3c,GAAY75B,EAAMmlB,mBACtD,IACA9b,EAAMqtC,MACT9e,MAAO,IAAKvuB,EAAMuuB,OACrB,GACF,CAAC4Z,IACJ,GAAIxxC,EAAM43B,MAAO,CACb,MAAM2hB,EAAY,CAAC,EACnBtB,GAAkBsB,EAAWv5C,EAAM43B,MAAO53B,GAC1Cs5C,EAAY1hB,MAAQ,IAAK2hB,KAAcD,EAAY1hB,MACvD,CACA,OAAO0hB,CACX,CCdA,SAASE,GAAgBC,GAAqB,GAsB1C,MArBkB,CAAC5f,EAAW75B,EAAOf,GAAO+nB,gBAAgBtS,KACxD,MAGM4kC,GAHiBnF,GAAeta,GAChCuf,GACAlB,IAC6Bl4C,EAAOgnB,EAActS,EAAUmlB,GAC5D6f,EFoBd,SAAqB15C,EAAO25C,EAAOF,GAC/B,MAAMC,EAAgB,CAAC,EACvB,IAAK,MAAM16C,KAAOgB,EAQF,WAARhB,GAA4C,iBAAjBgB,EAAMqH,SAEjC2xC,GAAch6C,KACU,IAAvBy6C,GAA+BV,GAAkB/5C,KAChD26C,IAAUZ,GAAkB/5C,IAE7BgB,EAAiB,WACdhB,EAAI8B,WAAW,aACnB44C,EAAc16C,GACVgB,EAAMhB,IAGlB,OAAO06C,CACX,CE3C8BE,CAAY55C,EAA4B,iBAAd65B,EAAwB4f,GAClEI,EAAehgB,IAAc,GAAAigB,SAC7B,IAAKJ,KAAkBJ,EAAar6C,OACpC,CAAC,GAMD,SAAEi9B,GAAal8B,EACf+5C,GAAmB,KAAAzG,UAAQ,KAAO,OAAcpX,GAAYA,EAAS/iB,MAAQ+iB,GAAW,CAACA,IAC/F,OAAO,KAAA8d,eAAcngB,EAAW,IACzBggB,EACH3d,SAAU6d,GACZ,CAGV,CCxBA,SAASE,GAA6BnH,EAAmBlB,GACrD,OAAO,SAA+B/X,GAAW,mBAAE4f,GAAuB,CAAEA,oBAAoB,IAW5F,OAAO5G,GAPQ,IAHIsB,GAAeta,GAC5B+d,GACAI,GAGFlF,oBACAC,UAAWyG,GAAgBC,GAC3B7H,sBACA/X,aAGR,CACJ,CCnBA,MAAMqgB,GAAuB,CAAEh6C,QAAS,MAClCi6C,GAA2B,CAAEj6C,SAAS,GCMtCk6C,GAAa,IAAIx4B,GAAqBhd,EAAA,EAAOhE,EAAA,GCR7Cy5C,GAAqB,IAAI5mB,QCsBzB6mB,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAMJ,MAAMC,GAQF,2BAAAhG,CAA4BiG,EAAQC,EAAYC,GAC5C,MAAO,CAAC,CACZ,CACA,WAAA15C,EAAY,OAAE4nB,EAAM,MAAE5oB,EAAK,gBAAEynB,EAAe,oBAAEsqB,EAAmB,sBAAEhnB,EAAqB,YAAEymB,GAAgBlwC,EAAU,CAAC,GAKjHC,KAAKrB,QAAU,KAIfqB,KAAK26B,SAAW,IAAIl2B,IAIpBzE,KAAK0vC,eAAgB,EACrB1vC,KAAKmnB,uBAAwB,EAQ7BnnB,KAAK6lB,mBAAqB,KAM1B7lB,KAAK8F,OAAS,IAAI4R,IAClB1X,KAAKyQ,iBAAmB,IAIxBzQ,KAAKqyC,SAAW,CAAC,EAKjBryC,KAAKo5C,mBAAqB,IAAI1hC,IAM9B1X,KAAKq5C,iBAAmB,CAAC,EAIzBr5C,KAAKs5C,OAAS,CAAC,EAMft5C,KAAKu5C,uBAAyB,CAAC,EAC/Bv5C,KAAKw5C,aAAe,IAAMx5C,KAAK4mB,OAAO,SAAU5mB,KAAKylB,cACrDzlB,KAAK0W,OAAS,KACL1W,KAAKrB,UAEVqB,KAAKy5C,eACLz5C,KAAK05C,eAAe15C,KAAKrB,QAASqB,KAAKmzC,YAAanzC,KAAKvB,MAAM43B,MAAOr2B,KAAKmzB,YAAW,EAE1FnzB,KAAK25C,kBAAoB,EACzB35C,KAAKm9B,eAAiB,KAClB,MAAM/8B,EAAM,KAAKA,MACbJ,KAAK25C,kBAAoBv5C,IACzBJ,KAAK25C,kBAAoBv5C,EACzB,KAAMsW,OAAO1W,KAAK0W,QAAQ,GAAO,GACrC,EAEJ,MAAM,aAAE+O,EAAY,YAAE0tB,EAAW,SAAEpyC,GAAakvC,EAChDjwC,KAAKe,SAAWA,EAChBf,KAAKylB,aAAeA,EACpBzlB,KAAK45C,WAAa,IAAKn0B,GACvBzlB,KAAK65C,cAAgBp7C,EAAM6oB,QAAU,IAAK7B,GAAiB,CAAC,EAC5DzlB,KAAKmzC,YAAcA,EACnBnzC,KAAKqnB,OAASA,EACdrnB,KAAKvB,MAAQA,EACbuB,KAAKkmB,gBAAkBA,EACvBlmB,KAAKuf,MAAQ8H,EAASA,EAAO9H,MAAQ,EAAI,EACzCvf,KAAKwwC,oBAAsBA,EAC3BxwC,KAAKD,QAAUA,EACfC,KAAKwpB,sBAAwBjmB,QAAQimB,GACrCxpB,KAAKmnB,sBAAwBA,GAAsB1oB,GACnDuB,KAAK0vC,cAAgBA,GAAcjxC,GAC/BuB,KAAK0vC,gBACL1vC,KAAKqmB,gBAAkB,IAAI5hB,KAE/BzE,KAAK4oB,uBAAyBrlB,QAAQ8jB,GAAUA,EAAO1oB,SAWvD,MAAM,WAAEya,KAAe0gC,GAAwB95C,KAAKgzC,4BAA4Bv0C,EAAO,CAAC,EAAGuB,MAC3F,IAAK,MAAMvC,KAAOq8C,EAAqB,CACnC,MAAM76C,EAAQ66C,EAAoBr8C,QACR0H,IAAtBsgB,EAAahoB,KAAsB,OAAcwB,IACjDA,EAAMmY,IAAIqO,EAAahoB,IAAM,EAErC,CACJ,CACA,KAAAstB,CAAM0G,GACFzxB,KAAKrB,QAAU8yB,EACfqnB,GAAmB1hC,IAAIqa,EAAUzxB,MAC7BA,KAAKmzB,aAAenzB,KAAKmzB,WAAW1B,UACpCzxB,KAAKmzB,WAAWpI,MAAM0G,GAEtBzxB,KAAKqnB,QAAUrnB,KAAK0vC,gBAAkB1vC,KAAKmnB,wBAC3CnnB,KAAK+5C,sBAAwB/5C,KAAKqnB,OAAO2yB,gBAAgBh6C,OAE7DA,KAAK8F,OAAOsQ,SAAQ,CAACnX,EAAOxB,IAAQuC,KAAKi6C,kBAAkBx8C,EAAKwB,KAC3D25C,GAAyBj6C,SChKtC,WAEI,GADAi6C,GAAyBj6C,SAAU,EAC9B,KAEL,GAAImhB,OAAOo6B,WAAY,CACnB,MAAMC,EAAmBr6B,OAAOo6B,WAAW,4BACrCE,EAA8B,IAAOzB,GAAqBh6C,QAAUw7C,EAAiB/K,QAC3F+K,EAAiBE,YAAYD,GAC7BA,GACJ,MAEIzB,GAAqBh6C,SAAU,CAEvC,CDoJY27C,GAEJt6C,KAAK6lB,mBAC4B,UAA7B7lB,KAAKwwC,sBAE8B,WAA7BxwC,KAAKwwC,qBAEDmI,GAAqBh6C,SAI/BqB,KAAKqnB,QACLrnB,KAAKqnB,OAAOsT,SAAS3kB,IAAIhW,MAC7BA,KAAK+O,OAAO/O,KAAKvB,MAAOuB,KAAKkmB,gBACjC,CACA,OAAAgF,GACI4tB,GAAmB7iC,OAAOjW,KAAKrB,SAC/BqB,KAAKmzB,YAAcnzB,KAAKmzB,WAAWjI,WACnC,QAAYlrB,KAAKw5C,eACjB,QAAYx5C,KAAK0W,QACjB1W,KAAKo5C,mBAAmBhjC,SAAS2jB,GAAWA,MAC5C/5B,KAAKo5C,mBAAmB/iC,QACxBrW,KAAK+5C,uBAAyB/5C,KAAK+5C,wBACnC/5C,KAAKqnB,QAAUrnB,KAAKqnB,OAAOsT,SAAS1kB,OAAOjW,MAC3C,IAAK,MAAMvC,KAAOuC,KAAKs5C,OACnBt5C,KAAKs5C,OAAO77C,GAAK4Y,QAErB,IAAK,MAAM5Y,KAAOuC,KAAKqyC,SAAU,CAC7B,MAAMkI,EAAUv6C,KAAKqyC,SAAS50C,GAC1B88C,IACAA,EAAQrvB,UACRqvB,EAAQ7vB,WAAY,EAE5B,CACA1qB,KAAKrB,QAAU,IACnB,CACA,iBAAAs7C,CAAkBx8C,EAAKwB,GACfe,KAAKo5C,mBAAmBvzC,IAAIpI,IAC5BuC,KAAKo5C,mBAAmBxhC,IAAIna,EAA5BuC,GAEJ,MAAMw6C,EAAmB,IAAe30C,IAAIpI,GACtCg9C,EAAiBx7C,EAAMy7C,GAAG,UAAWC,IACvC36C,KAAKylB,aAAahoB,GAAOk9C,EACzB36C,KAAKvB,MAAMsC,UAAY,KAAM0V,UAAUzW,KAAKw5C,cACxCgB,GAAoBx6C,KAAKmzB,aACzBnzB,KAAKmzB,WAAW8M,kBAAmB,EACvC,IAEE2a,EAAwB37C,EAAMy7C,GAAG,gBAAiB16C,KAAKm9B,gBAC7D,IAAI0d,EACA/6B,OAAOg7B,wBACPD,EAAkB/6B,OAAOg7B,sBAAsB96C,KAAMvC,EAAKwB,IAE9De,KAAKo5C,mBAAmBhiC,IAAI3Z,GAAK,KAC7Bg9C,IACAG,IACIC,GACAA,IACA57C,EAAMqjB,OACNrjB,EAAMkQ,MAAM,GAExB,CACA,gBAAA6X,CAAiB+zB,GAIb,OAAK/6C,KAAKrB,SACLqB,KAAKg7C,0BACNh7C,KAAKxB,OAASu8C,EAAMv8C,KAGjBwB,KAAKg7C,yBAAyBh7C,KAAKrB,QAASo8C,EAAMp8C,SAF9C,CAGf,CACA,cAAAwyC,GACI,IAAI1zC,EAAM,YACV,IAAKA,KAAOoyC,GAAoB,CAC5B,MAAMoL,EAAoBpL,GAAmBpyC,GAC7C,IAAKw9C,EACD,SACJ,MAAM,UAAEnL,EAAWtlB,QAAS0wB,GAAuBD,EAYnD,IARKj7C,KAAKqyC,SAAS50C,IACfy9C,GACApL,EAAU9vC,KAAKvB,SACfuB,KAAKqyC,SAAS50C,GAAO,IAAIy9C,EAAmBl7C,OAK5CA,KAAKqyC,SAAS50C,GAAM,CACpB,MAAM88C,EAAUv6C,KAAKqyC,SAAS50C,GAC1B88C,EAAQ7vB,UACR6vB,EAAQxrC,UAGRwrC,EAAQxvB,QACRwvB,EAAQ7vB,WAAY,EAE5B,CACJ,CACJ,CACA,YAAA+uB,GACIz5C,KAAKm7C,MAAMn7C,KAAKmzC,YAAanzC,KAAKylB,aAAczlB,KAAKvB,MACzD,CAMA,kBAAAgjB,GACI,OAAOzhB,KAAKrB,QACNqB,KAAKo7C,2BAA2Bp7C,KAAKrB,QAASqB,KAAKvB,OnF1QzC,CACpBuV,EAFqB,CAAGhK,IAAK,EAAGnD,IAAK,GAGrC2W,EAHqB,CAAGxT,IAAK,EAAGnD,IAAK,GmF6QrC,CACA,cAAAw0C,CAAe59C,GACX,OAAOuC,KAAKylB,aAAahoB,EAC7B,CACA,cAAAwhC,CAAexhC,EAAKwB,GAChBe,KAAKylB,aAAahoB,GAAOwB,CAC7B,CAKA,MAAA8P,CAAOtQ,EAAOynB,IACNznB,EAAMmlB,mBAAqB5jB,KAAKvB,MAAMmlB,oBACtC5jB,KAAKm9B,iBAETn9B,KAAKirB,UAAYjrB,KAAKvB,MACtBuB,KAAKvB,MAAQA,EACbuB,KAAKurB,oBAAsBvrB,KAAKkmB,gBAChClmB,KAAKkmB,gBAAkBA,EAIvB,IAAK,IAAI5kB,EAAI,EAAGA,EAAIy3C,GAAkB53C,OAAQG,IAAK,CAC/C,MAAM7D,EAAMs7C,GAAkBz3C,GAC1BtB,KAAKu5C,uBAAuB97C,KAC5BuC,KAAKu5C,uBAAuB97C,YACrBuC,KAAKu5C,uBAAuB97C,IAEvC,MACM69C,EAAW78C,EADK,KAAOhB,GAEzB69C,IACAt7C,KAAKu5C,uBAAuB97C,GAAOuC,KAAK06C,GAAGj9C,EAAK69C,GAExD,CACAt7C,KAAKq5C,iBErTb,SAAqC9oC,EAASlG,EAAM4N,GAChD,IAAK,MAAMxa,KAAO4M,EAAM,CACpB,MAAMkxC,EAAYlxC,EAAK5M,GACjB+9C,EAAYvjC,EAAKxa,GACvB,IAAI,OAAc89C,GAKdhrC,EAAQ2I,SAASzb,EAAK89C,QASrB,IAAI,OAAcC,GAKnBjrC,EAAQ2I,SAASzb,GAAK,QAAY89C,EAAW,CAAEj5B,MAAO/R,UAErD,GAAIirC,IAAcD,EAMnB,GAAIhrC,EAAQyI,SAASvb,GAAM,CACvB,MAAMg+C,EAAgBlrC,EAAQ0I,SAASxb,IACP,IAA5Bg+C,EAAcnyB,UACdmyB,EAAc95B,KAAK45B,GAEbE,EAAcC,aACpBD,EAAcrkC,IAAImkC,EAE1B,KACK,CACD,MAAMZ,EAAcpqC,EAAQ8qC,eAAe59C,GAC3C8S,EAAQ2I,SAASzb,GAAK,aAA4B0H,IAAhBw1C,EAA4BA,EAAcY,EAAW,CAAEj5B,MAAO/R,IACpG,CAER,CAEA,IAAK,MAAM9S,KAAOwa,OACI9S,IAAdkF,EAAK5M,IACL8S,EAAQorC,YAAYl+C,GAE5B,OAAO4M,CACX,CFiQgCuxC,CAA4B57C,KAAMA,KAAKgzC,4BAA4Bv0C,EAAOuB,KAAKirB,UAAWjrB,MAAOA,KAAKq5C,kBAC1Hr5C,KAAK67C,wBACL77C,KAAK67C,yBAET77C,KAAKe,UAAYf,KAAKe,SAASf,KACnC,CACA,QAAA2Y,GACI,OAAO3Y,KAAKvB,KAChB,CAIA,UAAAq9C,CAAW58C,GACP,OAAOc,KAAKvB,MAAMga,SAAWzY,KAAKvB,MAAMga,SAASvZ,QAAQiG,CAC7D,CAIA,oBAAA4e,GACI,OAAO/jB,KAAKvB,MAAMylB,UACtB,CACA,qBAAA6P,GACI,OAAO/zB,KAAKvB,MAAMyU,kBACtB,CACA,qBAAA6oC,GACI,OAAO/7C,KAAK0vC,cACN1vC,KACAA,KAAKqnB,OACDrnB,KAAKqnB,OAAO00B,6BACZ52C,CACd,CAIA,eAAA60C,CAAgBrzB,GACZ,MAAMq1B,EAAqBh8C,KAAK+7C,wBAChC,GAAIC,EAGA,OAFAA,EAAmB31B,iBACf21B,EAAmB31B,gBAAgBrQ,IAAI2Q,GACpC,IAAMq1B,EAAmB31B,gBAAgBpQ,OAAO0Q,EAE/D,CAIA,QAAAzN,CAASzb,EAAKwB,GAEV,MAAMw8C,EAAgBz7C,KAAK8F,OAAO8R,IAAIna,GAClCwB,IAAUw8C,IACNA,GACAz7C,KAAK27C,YAAYl+C,GACrBuC,KAAKi6C,kBAAkBx8C,EAAKwB,GAC5Be,KAAK8F,OAAOsR,IAAI3Z,EAAKwB,GACrBe,KAAKylB,aAAahoB,GAAOwB,EAAM2Y,MAEvC,CAIA,WAAA+jC,CAAYl+C,GACRuC,KAAK8F,OAAOmQ,OAAOxY,GACnB,MAAMw+C,EAAcj8C,KAAKo5C,mBAAmBxhC,IAAIna,GAC5Cw+C,IACAA,IACAj8C,KAAKo5C,mBAAmBnjC,OAAOxY,WAE5BuC,KAAKylB,aAAahoB,GACzBuC,KAAKk8C,2BAA2Bz+C,EAAKuC,KAAKmzC,YAC9C,CAIA,QAAAn6B,CAASvb,GACL,OAAOuC,KAAK8F,OAAOD,IAAIpI,EAC3B,CACA,QAAAwb,CAASxb,EAAKyc,GACV,GAAIla,KAAKvB,MAAMqH,QAAU9F,KAAKvB,MAAMqH,OAAOrI,GACvC,OAAOuC,KAAKvB,MAAMqH,OAAOrI,GAE7B,IAAIwB,EAAQe,KAAK8F,OAAO8R,IAAIna,GAK5B,YAJc0H,IAAVlG,QAAwCkG,IAAjB+U,IACvBjb,GAAQ,QAA6B,OAAjBib,OAAwB/U,EAAY+U,EAAc,CAAEoI,MAAOtiB,OAC/EA,KAAKkZ,SAASzb,EAAKwB,IAEhBA,CACX,CAMA,SAAAk9C,CAAU1+C,EAAK4H,GACX,IAAIY,EACJ,IAAIhH,OAAmCkG,IAA3BnF,KAAKylB,aAAahoB,IAAuBuC,KAAKrB,QAEI,QAAvDsH,EAAKjG,KAAKo8C,uBAAuBp8C,KAAKvB,MAAOhB,UAAyB,IAAPwI,EAAgBA,EAAKjG,KAAKq8C,sBAAsBr8C,KAAKrB,QAASlB,EAAKuC,KAAKD,SADxIC,KAAKylB,aAAahoB,GF3YV,IAACkF,EEwZf,OAXI1D,UACqB,iBAAVA,IACNmgB,EAAkBngB,IAAU0a,EAAkB1a,IAE/CA,EAAQkhB,WAAWlhB,IFjZZ0D,EEmZa1D,GFnZP45C,GAAWv1C,KAAK8c,GAAczd,KEmZbtD,EAAA,EAAQC,KAAK+F,KAC3CpG,EAAQmb,EAAkB3c,EAAK4H,KAEnCrF,KAAKs8C,cAAc7+C,GAAK,OAAcwB,GAASA,EAAM2Y,MAAQ3Y,KAE1D,OAAcA,GAASA,EAAM2Y,MAAQ3Y,CAChD,CAKA,aAAAq9C,CAAc7+C,EAAKwB,GACfe,KAAK45C,WAAWn8C,GAAOwB,CAC3B,CAKA,aAAA0qB,CAAclsB,GACV,IAAIwI,EACJ,MAAM,QAAEqhB,GAAYtnB,KAAKvB,MACzB,IAAI89C,EACJ,GAAuB,iBAAZj1B,GAA2C,iBAAZA,EAAsB,CAC5D,MAAMrB,EAAU1N,EAAwBvY,KAAKvB,MAAO6oB,EAAyC,QAA/BrhB,EAAKjG,KAAKkmB,uBAAoC,IAAPjgB,OAAgB,EAASA,EAAGuS,QAC7HyN,IACAs2B,EAAmBt2B,EAAQxoB,GAEnC,CAIA,GAAI6pB,QAAgCniB,IAArBo3C,EACX,OAAOA,EAMX,MAAMl3C,EAASrF,KAAKo8C,uBAAuBp8C,KAAKvB,MAAOhB,GACvD,YAAe0H,IAAXE,IAAyB,OAAcA,QAMRF,IAA5BnF,KAAK65C,cAAcp8C,SACD0H,IAArBo3C,OACEp3C,EACAnF,KAAK45C,WAAWn8C,GARX4H,CASf,CACA,EAAAq1C,CAAG/uB,EAAWjW,GAIV,OAHK1V,KAAKs5C,OAAO3tB,KACb3rB,KAAKs5C,OAAO3tB,GAAa,IAAI,MAE1B3rB,KAAKs5C,OAAO3tB,GAAW3V,IAAIN,EACtC,CACA,MAAAkR,CAAO+E,KAAchU,GACb3X,KAAKs5C,OAAO3tB,IACZ3rB,KAAKs5C,OAAO3tB,GAAW/E,UAAUjP,EAEzC,EGvdJ,MAAM6kC,WAAyBxD,GAC3B,WAAAv5C,GACIkQ,SAASwb,WACTnrB,KAAKyQ,iBAAmBgQ,EAC5B,CACA,wBAAAu6B,CAAyBj9C,EAAGE,GAMxB,OAAsC,EAA/BF,EAAE0+C,wBAAwBx+C,GAAS,GAAK,CACnD,CACA,sBAAAm+C,CAAuB39C,EAAOhB,GAC1B,OAAOgB,EAAM43B,MACP53B,EAAM43B,MAAM54B,QACZ0H,CACV,CACA,0BAAA+2C,CAA2Bz+C,GAAK,KAAEu2C,EAAI,MAAE3d,WAC7B2d,EAAKv2C,UACL44B,EAAM54B,EACjB,CACA,sBAAAo+C,GACQ77C,KAAK08C,oBACL18C,KAAK08C,2BACE18C,KAAK08C,mBAEhB,MAAM,SAAE/hB,GAAa36B,KAAKvB,OACtB,OAAck8B,KACd36B,KAAK08C,kBAAoB/hB,EAAS+f,GAAG,UAAWlvC,IACxCxL,KAAKrB,UACLqB,KAAKrB,QAAQg+C,YAAc,GAAGnxC,IAClC,IAGZ,EC3BJ,MAAMoxC,WAA0BJ,GAC5B,WAAA/8C,GACIkQ,SAASwb,WACTnrB,KAAKxB,KAAO,OACZwB,KAAK05C,eAAiBhE,EAC1B,CACA,qBAAA2G,CAAsB5qB,EAAUh0B,GAC5B,GAAI,IAAeoI,IAAIpI,GAAM,CACzB,MAAMo/C,EAAc59B,EAAoBxhB,GACxC,OAAOo/C,GAAcA,EAAYjF,SAAe,CACpD,CACK,CACD,MAAMkF,GAfQvsC,EAeyBkhB,EAdxC3R,OAAOC,iBAAiBxP,IAejBtR,IAAS,OAAkBxB,GAC3Bq/C,EAAc98B,iBAAiBviB,GAC/Bq/C,EAAcr/C,KAAS,EAC7B,MAAwB,iBAAVwB,EAAqBA,EAAMihB,OAASjhB,CACtD,CApBR,IAA0BsR,CAqBtB,CACA,0BAAA6qC,CAA2B3pB,GAAU,mBAAEve,IACnC,OAAOuO,GAAmBgQ,EAAUve,EACxC,CACA,KAAAioC,CAAMhI,EAAa1tB,EAAchnB,GAC7Bs1C,GAAgBZ,EAAa1tB,EAAchnB,EAAMmlB,kBACrD,CACA,2BAAAovB,CAA4Bv0C,EAAOwsB,EAAW5S,GAC1C,OAAO26B,GAA4Bv0C,EAAOwsB,EAAW5S,EACzD,EC5BJ,MAAM0kC,WAAyBP,GAC3B,WAAA/8C,GACIkQ,SAASwb,WACTnrB,KAAKxB,KAAO,MACZwB,KAAKi1C,UAAW,EAChBj1C,KAAKo7C,2BAA6BjrB,EACtC,CACA,sBAAAisB,CAAuB39C,EAAOhB,GAC1B,OAAOgB,EAAMhB,EACjB,CACA,qBAAA4+C,CAAsB5qB,EAAUh0B,GAC5B,GAAI,IAAeoI,IAAIpI,GAAM,CACzB,MAAMo/C,EAAc59B,EAAoBxhB,GACxC,OAAOo/C,GAAcA,EAAYjF,SAAe,CACpD,CAEA,OADAn6C,EAAOm4C,GAAoB/vC,IAAIpI,GAA0BA,EAAnB4b,EAAY5b,GAC3Cg0B,EAASurB,aAAav/C,EACjC,CACA,2BAAAu1C,CAA4Bv0C,EAAOwsB,EAAW5S,GAC1C,OAAO,GAA4B5Z,EAAOwsB,EAAW5S,EACzD,CACA,KAAA8iC,CAAMhI,EAAa1tB,EAAchnB,GAC7Bi2C,GAAcvB,EAAa1tB,EAAczlB,KAAKi1C,SAAUx2C,EAAMmlB,kBAClE,CACA,cAAA81B,CAAejoB,EAAU0hB,EAAahK,EAAWhW,GAC7C0iB,GAAUpkB,EAAU0hB,EAAahK,EAAWhW,EAChD,CACA,KAAApI,CAAM0G,GACFzxB,KAAKi1C,SAAWA,GAASxjB,EAASsQ,SAClCpyB,MAAMob,MAAM0G,EAChB,ECpCJ,MCFMwrB,GAAuB3lC,ECIeohC,GAA6B,IAClErzB,MACA8nB,MACApa,MACAzD,KFNwB,CAACgJ,EAAWv4B,IAChC6yC,GAAeta,GAChB,IAAIykB,GAAiBh9C,GACrB,IAAI68C,GAAkB78C,EAAS,CAC7BsxC,gBAAiB/Y,IAAc,GAAAigB,sDGT3C,MAAM2E,EAAyB19B,GAAW/hB,GAAuB,iBAARA,GAAoBA,EAAI8B,WAAWigB,GACtF29B,EACQD,EAAsB,MAC9BE,EACQF,EAAsB,UAC9BG,EAAsBp+C,KACAm+C,EAAsBn+C,IAIvCq+C,EAAuBh+C,KAAKL,EAAM8a,MAAM,MAAM,GAAGmG,QAEtDo9B,EAAyB,4KCR/B,MAAMC,EAAiB56C,GAAMA,IAAM,MAAUA,IAAM,EAAA8X,GAC7C+iC,EAAmB,CAACC,EAAQC,IAAQv9B,WAAWs9B,EAAO1jC,MAAM,MAAM2jC,IAClEC,EAAyB,CAACC,EAAMC,IAAS,CAACC,GAASv5C,gBACrD,GAAkB,SAAdA,IAAyBA,EACzB,OAAO,EACX,MAAMw5C,EAAWx5C,EAAUyV,MAAM,uBACjC,GAAI+jC,EACA,OAAOP,EAAiBO,EAAS,GAAIF,GAEpC,CACD,MAAMJ,EAASl5C,EAAUyV,MAAM,qBAC/B,OAAIyjC,EACOD,EAAiBC,EAAO,GAAIG,GAG5B,CAEf,GAEEI,EAAgB,IAAIv5C,IAAI,CAAC,IAAK,IAAK,MACnCw5C,EAAgC,IAAmBnrC,QAAQrV,IAASugD,EAAcn4C,IAAIpI,KAC5F,SAASygD,EAAgC7lC,GACrC,MAAMyJ,EAAoB,GAQ1B,OAPAm8B,EAA8B7nC,SAAS3Y,IACnC,MAAMwB,EAAQoZ,EAAcY,SAASxb,QACvB0H,IAAVlG,IACA6iB,EAAkBnU,KAAK,CAAClQ,EAAKwB,EAAM2Y,QACnC3Y,EAAMmY,IAAI3Z,EAAI8B,WAAW,SAAW,EAAI,GAC5C,IAEGuiB,CACX,CACA,MAAMq8B,EAAmB,CAErB/iC,MAAO,EAAGpH,MAAOgI,cAAc,IAAKF,eAAe,OAAU9H,EAAEnN,IAAMmN,EAAEhK,IAAMmW,WAAWnE,GAAemE,WAAWrE,GAClHR,OAAQ,EAAGkC,MAAO3B,aAAa,IAAKE,gBAAgB,OAAUyB,EAAE3W,IAAM2W,EAAExT,IAAMmW,WAAWtE,GAAcsE,WAAWpE,GAClHP,IAAK,CAACsiC,GAAStiC,SAAU2E,WAAW3E,GACpCG,KAAM,CAACmiC,GAASniC,UAAWwE,WAAWxE,GACtCD,OAAQ,EAAG8B,MAAOhC,SAAU2E,WAAW3E,IAAQgC,EAAE3W,IAAM2W,EAAExT,KACzDyR,MAAO,EAAGzH,MAAO2H,UAAWwE,WAAWxE,IAAS3H,EAAEnN,IAAMmN,EAAEhK,KAE1DgK,EAAG2pC,EAAuB,EAAG,IAC7BngC,EAAGmgC,EAAuB,EAAG,KAGjCQ,EAAiB9gC,WAAa8gC,EAAiBnqC,EAC/CmqC,EAAiB7gC,WAAa6gC,EAAiB3gC,2CC/C/C,MAAM4gC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAI55C,IAAI25C,mECtB/B,MAAME,EAAY,IAAI75C,IACtB,IAAI6N,GAAc,EACdisC,GAAsB,EAC1B,SAASC,IACL,GAAID,EAAqB,CACrB,MAAME,EAAqBt/C,MAAMsD,KAAK67C,GAAWxrC,QAAQ5C,GAAaA,EAAS8Q,mBACzE09B,EAAoB,IAAIj6C,IAAIg6C,EAAmBv5C,KAAKgL,GAAaA,EAASK,WAC1EouC,EAAsB,IAAIjnC,IAKhCgnC,EAAkBtoC,SAAS7F,IACvB,MAAMuR,GAAoB,QAAgCvR,GACrDuR,EAAkB3gB,SAEvBw9C,EAAoBvnC,IAAI7G,EAASuR,GACjCvR,EAAQmG,SAAQ,IAGpB+nC,EAAmBroC,SAASlG,GAAaA,EAASmR,wBAElDq9B,EAAkBtoC,SAAS7F,IACvBA,EAAQmG,SACR,MAAMkoC,EAAUD,EAAoB/mC,IAAIrH,GACpCquC,GACAA,EAAQxoC,SAAQ,EAAE3Y,EAAKwB,MACnB,IAAIgH,EAC6B,QAAhCA,EAAKsK,EAAQ0I,SAASxb,UAAyB,IAAPwI,GAAyBA,EAAGmR,IAAInY,EAAM,GAEvF,IAGJw/C,EAAmBroC,SAASlG,GAAaA,EAAS0R,oBAElD68B,EAAmBroC,SAASlG,SACU/K,IAA9B+K,EAASoR,kBACTxB,OAAO++B,SAAS,EAAG3uC,EAASoR,iBAChC,GAER,CACAi9B,GAAsB,EACtBjsC,GAAc,EACdgsC,EAAUloC,SAASlG,GAAaA,EAASuC,aACzC6rC,EAAUjoC,OACd,CACA,SAASyoC,IACLR,EAAUloC,SAASlG,IACfA,EAASyQ,gBACLzQ,EAAS8Q,mBACTu9B,GAAsB,EAC1B,GAER,CACA,SAASQ,IACLD,IACAN,GACJ,CACA,MAAM/tC,EACF,WAAAhR,CAAYihB,EAAqB5f,EAAY5B,EAAMoR,EAAaC,EAASyuC,GAAU,GAK/Eh/C,KAAKi/C,YAAa,EAMlBj/C,KAAKg/C,SAAU,EAKfh/C,KAAKghB,kBAAmB,EAKxBhhB,KAAKsS,aAAc,EACnBtS,KAAK0gB,oBAAsB,IAAIA,GAC/B1gB,KAAKc,WAAaA,EAClBd,KAAKd,KAAOA,EACZc,KAAKsQ,YAAcA,EACnBtQ,KAAKuQ,QAAUA,EACfvQ,KAAKg/C,QAAUA,CACnB,CACA,eAAAruC,GACI3Q,KAAKsS,aAAc,EACftS,KAAKg/C,SACLV,EAAUtoC,IAAIhW,MACTsS,IACDA,GAAc,EACd,KAAMiE,KAAKuoC,GACX,KAAMtoC,iBAAiBgoC,MAI3Bx+C,KAAK2gB,gBACL3gB,KAAKyS,WAEb,CACA,aAAAkO,GACI,MAAM,oBAAED,EAAmB,KAAExhB,EAAI,QAAEqR,EAAO,YAAED,GAAgBtQ,KAK5D,IAAK,IAAIsB,EAAI,EAAGA,EAAIof,EAAoBvf,OAAQG,IAC5C,GAA+B,OAA3Bof,EAAoBpf,GAIpB,GAAU,IAANA,EAAS,CACT,MAAM49C,EAAe5uC,aAAiD,EAASA,EAAYsH,MACrFhX,EAAgB8f,EAAoBA,EAAoBvf,OAAS,GACvE,QAAqBgE,IAAjB+5C,EACAx+B,EAAoB,GAAKw+B,OAExB,GAAI3uC,GAAWrR,EAAM,CACtB,MAAMigD,EAAc5uC,EAAQ4rC,UAAUj9C,EAAM0B,GACxCu+C,UACAz+B,EAAoB,GAAKy+B,EAEjC,MAC+Bh6C,IAA3Bub,EAAoB,KACpBA,EAAoB,GAAK9f,GAEzB0P,QAAgCnL,IAAjB+5C,GACf5uC,EAAY8G,IAAIsJ,EAAoB,GAE5C,MAEIA,EAAoBpf,GAAKof,EAAoBpf,EAAI,EAIjE,CACA,gBAAA89C,GAAqB,CACrB,mBAAA/9B,GAAwB,CACxB,eAAAg+B,GAAoB,CACpB,eAAAz9B,GAAoB,CACpB,QAAAnP,GACIzS,KAAKi/C,YAAa,EAClBj/C,KAAKc,WAAWd,KAAK0gB,oBAAqB1gB,KAAKY,eAC/C09C,EAAUroC,OAAOjW,KACrB,CACA,MAAAmQ,GACSnQ,KAAKi/C,aACNj/C,KAAKsS,aAAc,EACnBgsC,EAAUroC,OAAOjW,MAEzB,CACA,MAAAuS,GACSvS,KAAKi/C,YACNj/C,KAAK2Q,iBACb,oCChKJ,MAAM2uC,EAAqB,CACvB16B,gBAAgB,EAChB/N,iBAAiB,mBCFrB,SAAS0oC,EAAc/xC,EAAKgyC,IACG,IAAvBhyC,EAAIqlC,QAAQ2M,IACZhyC,EAAIG,KAAK6xC,EACjB,CACA,SAASC,EAAWjyC,EAAKgyC,GACrB,MAAMzsC,EAAQvF,EAAIqlC,QAAQ2M,GACtBzsC,GAAS,GACTvF,EAAIqB,OAAOkE,EAAO,EAC1B,6DCRA,MAAMxK,EAAQ,CAACyB,EAAKnD,EAAKlE,IACjBA,EAAIkE,EACGA,EACPlE,EAAIqH,EACGA,EACJrH,mCCLX,MAAM+8C,EAA8B,oBAAX5/B,wCCqBzB,MAAMpb,EAAY,CAACjC,EAAMC,EAAIiI,IAClBlI,GAAQC,EAAKD,GAAQkI,mCCfhC,MAAMg1C,EAAmB,CAAC5hD,EAAGE,IAAO0E,GAAM1E,EAAEF,EAAE4E,IACxCqD,EAAO,IAAI45C,IAAiBA,EAAa3qC,OAAO0qC,kDCNtD,MAAME,EACF,WAAApgD,GACIO,KAAK8/C,cAAgB,EACzB,CACA,GAAA9pC,CAAI4V,GAEA,OADA,QAAc5rB,KAAK8/C,cAAel0B,GAC3B,KAAM,QAAW5rB,KAAK8/C,cAAel0B,EAChD,CACA,MAAAhF,CAAO7oB,EAAGE,EAAGH,GACT,MAAMiiD,EAAmB//C,KAAK8/C,cAAc3+C,OAC5C,GAAK4+C,EAEL,GAAyB,IAArBA,EAIA//C,KAAK8/C,cAAc,GAAG/hD,EAAGE,EAAGH,QAG5B,IAAK,IAAIwD,EAAI,EAAGA,EAAIy+C,EAAkBz+C,IAAK,CAKvC,MAAMsqB,EAAU5rB,KAAK8/C,cAAcx+C,GACnCsqB,GAAWA,EAAQ7tB,EAAGE,EAAGH,EAC7B,CAER,CACA,OAAAkiD,GACI,OAAOhgD,KAAK8/C,cAAc3+C,MAC9B,CACA,KAAAkV,GACIrW,KAAK8/C,cAAc3+C,OAAS,CAChC,kDC3BJ,SAAS8+C,EAAYC,GACjB,MAAMxiD,GAAM,IAAAgzC,QAAO,MAInB,OAHoB,OAAhBhzC,EAAIiB,UACJjB,EAAIiB,QAAUuhD,KAEXxiD,EAAIiB,OACf,mCCfA,MAAMwhD,EAAwB,CAC1BxhD,SAAS,kDCEb,MAAMyhD,UAA4B,EAAY,EAAAC,gBAAkB,EAAAjmB,0BCGhE,SAASkmB,EAAkBz/C,EAAU0/C,GACjC,OAAOA,EAAgB1/C,GAAY,IAAO0/C,GAAiB,CAC/D,+FCEA,MAIMC,EAAsB,CACxB7hD,aAASwG,GAOb,MAAMs7C,EASF,WAAAhhD,CAAYygD,EAAMngD,EAAU,CAAC,GAKzBC,KAAK0gD,QAAU,UAQf1gD,KAAK2gD,iBAAmB,KAIxB3gD,KAAKs5C,OAAS,CAAC,EACft5C,KAAK4gD,gBAAkB,CAACj+C,EAAG+T,GAAS,KAChC,MAAM5G,EAAc,IAAK1P,MAMrBJ,KAAK6gD,YAAc/wC,GACnB9P,KAAK8gD,oBAET9gD,KAAKiY,KAAOjY,KAAKrB,QACjBqB,KAAK+gD,WAAWp+C,GAEZ3C,KAAKrB,UAAYqB,KAAKiY,MAAQjY,KAAKs5C,OAAO0H,QAC1ChhD,KAAKs5C,OAAO0H,OAAOp6B,OAAO5mB,KAAKrB,SAG/B+X,GAAU1W,KAAKs5C,OAAO2H,eACtBjhD,KAAKs5C,OAAO2H,cAAcr6B,OAAO5mB,KAAKrB,QAC1C,EAEJqB,KAAK07C,aAAc,EACnB17C,KAAK+gD,WAAWb,GAChBlgD,KAAKsiB,MAAQviB,EAAQuiB,KACzB,CACA,UAAAy+B,CAAWpiD,GA/DC,IAACM,EAgETe,KAAKrB,QAAUA,EACfqB,KAAK6gD,UAAY,IAAKzgD,MACQ,OAA1BJ,KAAK2gD,uBAAyCx7C,IAAZxG,IAClCqB,KAAK2gD,kBAnEA1hD,EAmE2Be,KAAKrB,SAlErCuK,MAAMiX,WAAWlhB,KAoEzB,CACA,iBAAA6hD,CAAkBI,EAAiBlhD,KAAKrB,SACpCqB,KAAKkhD,eAAiBA,EACtBlhD,KAAKmhD,cAAgBnhD,KAAK6gD,SAC9B,CAyCA,QAAAO,CAASC,GAIL,OAAOrhD,KAAK06C,GAAG,SAAU2G,EAC7B,CACA,EAAA3G,CAAG/uB,EAAWjW,GACL1V,KAAKs5C,OAAO3tB,KACb3rB,KAAKs5C,OAAO3tB,GAAa,IAAI,KAEjC,MAAMswB,EAAcj8C,KAAKs5C,OAAO3tB,GAAW3V,IAAIN,GAC/C,MAAkB,WAAdiW,EACO,KACHswB,IAKA,KAAM1lC,MAAK,KACFvW,KAAKs5C,OAAO0H,OAAOhB,WACpBhgD,KAAKmP,MACT,GACF,EAGH8sC,CACX,CACA,cAAAqF,GACI,IAAK,MAAMC,KAAiBvhD,KAAKs5C,OAC7Bt5C,KAAKs5C,OAAOiI,GAAelrC,OAEnC,CAMA,MAAAmrC,CAAOC,EAAeC,GAClB1hD,KAAKyhD,cAAgBA,EACrBzhD,KAAK0hD,kBAAoBA,CAC7B,CAgBA,GAAAtqC,CAAIzU,EAAG+T,GAAS,GACPA,GAAW1W,KAAKyhD,cAIjBzhD,KAAKyhD,cAAc9+C,EAAG3C,KAAK4gD,iBAH3B5gD,KAAK4gD,gBAAgBj+C,EAAG+T,EAKhC,CACA,eAAA+M,CAAgBxL,EAAMtZ,EAASiK,GAC3B5I,KAAKoX,IAAIzY,GACTqB,KAAKiY,UAAO9S,EACZnF,KAAKkhD,eAAiBjpC,EACtBjY,KAAKmhD,cAAgBnhD,KAAK6gD,UAAYj4C,CAC1C,CAKA,IAAA+Y,CAAKhf,EAAGg/C,GAAe,GACnB3hD,KAAK4gD,gBAAgBj+C,GACrB3C,KAAKiY,KAAOtV,EACZ3C,KAAKmhD,cAAgBnhD,KAAKkhD,oBAAiB/7C,EAC3Cw8C,GAAgB3hD,KAAKmP,OACjBnP,KAAK0hD,mBACL1hD,KAAK0hD,mBACb,CAQA,GAAA9pC,GAII,OAHI4oC,EAAoB7hD,SACpB6hD,EAAoB7hD,QAAQgP,KAAK3N,MAE9BA,KAAKrB,OAChB,CAIA,WAAAijD,GACI,OAAO5hD,KAAKiY,IAChB,CAQA,WAAAK,GACI,MAAMxI,EAAc,IAAK1P,MACzB,IAAKJ,KAAK2gD,uBACkBx7C,IAAxBnF,KAAKkhD,gBACLpxC,EAAc9P,KAAK6gD,UAnOJ,GAoOf,OAAO,EAEX,MAAMj4C,EAAQ9F,KAAKkH,IAAIhK,KAAK6gD,UAAY7gD,KAAKmhD,cAtO1B,IAwOnB,OAAO,OAAkBhhC,WAAWngB,KAAKrB,SACrCwhB,WAAWngB,KAAKkhD,gBAAiBt4C,EACzC,CAaA,KAAAsG,CAAM8kB,GAEF,OADAh0B,KAAKmP,OACE,IAAI/M,SAASL,IAChB/B,KAAK07C,aAAc,EACnB17C,KAAK2iB,UAAYqR,EAAejyB,GAC5B/B,KAAKs5C,OAAOuI,gBACZ7hD,KAAKs5C,OAAOuI,eAAej7B,QAC/B,IACD9kB,MAAK,KACA9B,KAAKs5C,OAAOwI,mBACZ9hD,KAAKs5C,OAAOwI,kBAAkBl7B,SAElC5mB,KAAK+hD,gBAAgB,GAE7B,CAMA,IAAA5yC,GACQnP,KAAK2iB,YACL3iB,KAAK2iB,UAAUxT,OACXnP,KAAKs5C,OAAO0I,iBACZhiD,KAAKs5C,OAAO0I,gBAAgBp7B,UAGpC5mB,KAAK+hD,gBACT,CAMA,WAAAE,GACI,QAASjiD,KAAK2iB,SAClB,CACA,cAAAo/B,UACW/hD,KAAK2iB,SAChB,CAUA,OAAAu/B,GACIliD,KAAKshD,iBACLthD,KAAKmP,OACDnP,KAAK0hD,mBACL1hD,KAAK0hD,mBAEb,EAEJ,SAASpxC,EAAY4vC,EAAMngD,GACvB,OAAO,IAAI0gD,EAAYP,EAAMngD,EACjC,iDC3RA,MAAMkD,EAAM,CACR3D,MAAoB,aAAc,KAClCmE,MAhCJ,SAAkBd,GACd,IAAIw/C,EAAI,GACJnkD,EAAI,GACJC,EAAI,GACJF,EAAI,GAmBR,OAjBI4E,EAAExB,OAAS,GACXghD,EAAIx/C,EAAEwzC,UAAU,EAAG,GACnBn4C,EAAI2E,EAAEwzC,UAAU,EAAG,GACnBl4C,EAAI0E,EAAEwzC,UAAU,EAAG,GACnBp4C,EAAI4E,EAAEwzC,UAAU,EAAG,KAInBgM,EAAIx/C,EAAEwzC,UAAU,EAAG,GACnBn4C,EAAI2E,EAAEwzC,UAAU,EAAG,GACnBl4C,EAAI0E,EAAEwzC,UAAU,EAAG,GACnBp4C,EAAI4E,EAAEwzC,UAAU,EAAG,GACnBgM,GAAKA,EACLnkD,GAAKA,EACLC,GAAKA,EACLF,GAAKA,GAEF,CACH+F,IAAKs+C,SAASD,EAAG,IACjBp+C,MAAOq+C,SAASpkD,EAAG,IACnBgG,KAAMo+C,SAASnkD,EAAG,IAClB4F,MAAO9F,EAAIqkD,SAASrkD,EAAG,IAAM,IAAM,EAE3C,EAIIwG,UAAW,IAAKA,wFC/BpB,MAAMpB,EAAO,CACT7D,MAAoB,OAAc,MAAO,OACzCmE,OAAqB,OAAW,MAAO,aAAc,aACrDc,UAAW,EAAGb,MAAKC,aAAYC,YAAWC,MAAOw+C,EAAU,KAC/C,QACJv/C,KAAKmB,MAAMP,GACX,KACA,KAAQa,WAAU,OAASZ,IAC3B,KACA,KAAQY,WAAU,OAASX,IAC3B,MACA,OAAS,KAAMW,UAAU89C,IACzB,wECbZ,MAAMh/C,EAAQ,CACV/D,KAAOqD,GAAM,IAAKrD,KAAKqD,IAAM,IAAIrD,KAAKqD,IAAM,IAAKrD,KAAKqD,GACtDc,MAAQd,GACA,IAAKrD,KAAKqD,GACH,IAAKc,MAAMd,GAEb,IAAKrD,KAAKqD,GACR,IAAKc,MAAMd,GAGX,IAAIc,MAAMd,GAGzB4B,UAAY5B,GACY,iBAANA,EACRA,EACAA,EAAEvF,eAAe,OACb,IAAKmH,UAAU5B,GACf,IAAK4B,UAAU5B,iFCjBjC,MACM2/C,EAAU,IACT,KACH/9C,UAAY5B,GAAMG,KAAKmB,MAHN,CAACtB,IAAM,OAAM,EAAG,IAAKA,GAGT4/C,CAAa5/C,KAExCO,EAAO,CACT5D,MAAoB,OAAc,MAAO,OACzCmE,OAAqB,OAAW,MAAO,QAAS,QAChDc,UAAW,EAAGT,MAAKC,QAAOC,OAAMH,MAAOw+C,EAAU,KAAQ,QACrDC,EAAQ/9C,UAAUT,GAClB,KACAw+C,EAAQ/9C,UAAUR,GAClB,KACAu+C,EAAQ/9C,UAAUP,GAClB,MACA,OAAS,KAAMO,UAAU89C,IACzB,2DCrBR,MAAMG,EAAmB,sHCQnBC,EAAgB,CAACjkD,EAAMkkD,IAAc//C,GAChCY,QAAsB,iBAANZ,GACnB6/C,EAAiBljD,KAAKqD,IACtBA,EAAEpD,WAAWf,IACZkkD,ICZT,SAAmB//C,GACf,OAAY,MAALA,CACX,CDWaggD,CAAUhgD,IACXzF,OAAOC,UAAUC,eAAeiB,KAAKsE,EAAG+/C,IAE9CE,EAAa,CAACC,EAAOC,EAAOC,IAAWpgD,IACzC,GAAiB,iBAANA,EACP,OAAOA,EACX,MAAO5E,EAAGE,EAAGH,EAAG+F,GAASlB,EAAEqX,MAAM,KACjC,MAAO,CACH,CAAC6oC,GAAQ1iC,WAAWpiB,GACpB,CAAC+kD,GAAQ3iC,WAAWliB,GACpB,CAAC8kD,GAAQ5iC,WAAWriB,GACpB+F,WAAiBsB,IAAVtB,EAAsBsc,WAAWtc,GAAS,EACpD,yDEzBL,MAAMm/C,EAAa,4ICanB,MAAMC,EAAe,SACfC,EAAc,QACdC,EAAY,MACZC,EAAqB,OACrBC,EAAc,MAEdC,EAAe,kOACrB,SAASC,EAAoBtkD,GACzB,MAAMukD,EAAgBvkD,EAAMwL,WACtB3E,EAAS,GACTJ,EAAU,CACZrC,MAAO,GACPuC,OAAQ,GACRD,IAAK,IAEHS,EAAQ,GACd,IAAI9E,EAAI,EACR,MAmBMyY,EAnBYypC,EAAcjqC,QAAQ+pC,GAAeG,IAC/CpgD,EAAA,EAAM/D,KAAKmkD,IACX/9C,EAAQrC,MAAMsK,KAAKrM,GACnB8E,EAAMuH,KAAKu1C,GACXp9C,EAAO6H,KAAKtK,EAAA,EAAMI,MAAMggD,KAEnBA,EAAYlkD,WAAW6jD,IAC5B19C,EAAQC,IAAIgI,KAAKrM,GACjB8E,EAAMuH,KAAKw1C,GACXr9C,EAAO6H,KAAK81C,KAGZ/9C,EAAQE,OAAO+H,KAAKrM,GACpB8E,EAAMuH,KAAKs1C,GACXn9C,EAAO6H,KAAKwS,WAAWsjC,OAEzBniD,EACK+hD,KAEatpC,MAAMspC,GAC9B,MAAO,CAAEv9C,SAAQiU,QAAOrU,UAASU,QACrC,CACA,SAASs9C,EAAkB/gD,GACvB,OAAO4gD,EAAoB5gD,GAAGmD,MAClC,CACA,SAASP,EAAkBwpB,GACvB,MAAM,MAAEhV,EAAK,MAAE3T,GAAUm9C,EAAoBx0B,GACvC40B,EAAc5pC,EAAM5Y,OAC1B,OAAQwB,IACJ,IAAIoC,EAAS,GACb,IAAK,IAAIzD,EAAI,EAAGA,EAAIqiD,EAAariD,IAE7B,GADAyD,GAAUgV,EAAMzY,QACH6D,IAATxC,EAAErB,GAAkB,CACpB,MAAM9C,EAAO4H,EAAM9E,GAEfyD,GADAvG,IAASykD,GACC,EAAAW,EAAA,GAASjhD,EAAErB,IAEhB9C,IAAS0kD,EACJ7/C,EAAA,EAAMkB,UAAU5B,EAAErB,IAGlBqB,EAAErB,EAEpB,CAEJ,OAAOyD,CAAM,CAErB,CACA,MAAM8+C,EAAwBlhD,GAAmB,iBAANA,EAAiB,EAAIA,EAM1DtD,EAAU,CACZC,KAhFJ,SAAcqD,GACV,IAAIsD,EAAImjC,EACR,OAAQlgC,MAAMvG,IACG,iBAANA,KAC0B,QAA9BsD,EAAKtD,EAAEqX,MAAM,YAAgC,IAAP/T,OAAgB,EAASA,EAAG9E,SAAW,KAC3C,QAA9BioC,EAAKzmC,EAAEqX,MAAMgpC,UAAgC,IAAP5Z,OAAgB,EAASA,EAAGjoC,SAAW,GAChF,CACZ,EA0EIsC,MAAOigD,EACPn+C,oBACA6U,kBATJ,SAA2BzX,GACvB,MAAMmhD,EAASJ,EAAkB/gD,GAEjC,OADoB4C,EAAkB5C,EAC/BohD,CAAYD,EAAO5+C,IAAI2+C,GAClC,qECjFA,MAAMj+C,EAAS,CACXtG,KAAOqD,GAAmB,iBAANA,EACpBc,MAAO0c,WACP5b,UAAY5B,GAAMA,GAEhBkB,EAAQ,IACP+B,EACHrB,UAAY5B,IAAM,OAAM,EAAG,EAAGA,IAE5Bka,EAAQ,IACPjX,EACHgyC,QAAS,kFCbb,MAAMoM,EAAkB/pC,IAAS,CAC7B3a,KAAOqD,GAAmB,iBAANA,GAAkBA,EAAEshD,SAAShqC,IAAiC,IAAxBtX,EAAEoX,MAAM,KAAK5Y,OACvEsC,MAAO0c,WACP5b,UAAY5B,GAAM,GAAGA,IAAIsX,MAEvBiqC,EAAwBF,EAAe,OACvCv0C,EAAwBu0C,EAAe,KACvCvpC,EAAmBupC,EAAe,MAClCzjC,EAAmByjC,EAAe,MAClC1jC,EAAmB0jC,EAAe,MAClCG,EAAqB,IACpB10C,EACHhM,MAAQd,GAAM8M,EAAQhM,MAAMd,GAAK,IACjC4B,UAAY5B,GAAM8M,EAAQlL,UAAc,IAAJ5B,oCCbxC,MAAMyhD,EAAa,+DCEnB,MAAMR,EAAYjhD,GAAMG,KAAKmB,MAAU,IAAJtB,GAAc,iFCoBjD,SAAS0hD,EAAe/8B,GACpB,MAAMroB,GAAQ,QAAY,KAAM,QAAYqoB,MAMtC,SAAEnU,IAAa,IAAA+mB,YAAW,KAChC,GAAI/mB,EAAU,CACV,MAAO,CAAEmxC,IAAa,IAAAC,UAASj9B,IAC/B,IAAA8S,YAAU,IAAMn7B,EAAMy7C,GAAG,SAAU4J,IAAY,GACnD,CACA,OAAOrlD,CACX,4GC3BA,SAASulD,EAAS7hD,GACd,MAAiB,iBAANA,EACAA,EACJwd,WAAWxd,EACtB,CAoBA,SAAS8hD,EAAU11B,EAAQ6Z,EAAS,CAAC,GACjC,MAAM,SAAEz1B,IAAa,IAAA+mB,YAAW,KAC1BwqB,GAAwB,IAAAhU,QAAO,MAC/BzxC,GAAQ,QAAe,OAAc8vB,GAAUy1B,EAASz1B,EAAOnX,OAASmX,GACxE4rB,GAAc,IAAAjK,QAAOzxC,EAAM2Y,OAC3B+sC,GAAe,IAAAjU,SAAO,SACtB1c,EAAiB,KAInB,MAAMrR,EAAY+hC,EAAsB/lD,QACpCgkB,GAAgC,IAAnBA,EAAU1Q,MACvB0Q,EAAUrR,OAAO,KAAU1I,OAE/BkqB,IACA4xB,EAAsB/lD,SAAU,OAAa,CACzCgC,UAAW,CAAC1B,EAAM2Y,MAAO+iC,EAAYh8C,SACrCkC,SAAU5B,EAAMqZ,cAChB9Z,KAAM,SACNqJ,UAAW,KACXD,UAAW,OACRghC,EACH7nC,SAAU4jD,EAAahmD,SACzB,EAEAm0B,EAAgB,KACd4xB,EAAsB/lD,SACtB+lD,EAAsB/lD,QAAQwQ,MAClC,EAqBJ,OAnBA,IAAA2hC,qBAAmB,IACR7xC,EAAMuiD,QAAO,CAAC7+C,EAAGyU,IAKhBjE,EACOiE,EAAIzU,IACfg4C,EAAYh8C,QAAUgE,EACtBgiD,EAAahmD,QAAUyY,EACvB,KAAMrI,OAAOilB,GACN/0B,EAAM2Y,QACdkb,IACJ,CAACkb,KAAKC,UAAUrF,MACnB,QAA0B,KACtB,IAAI,OAAc7Z,GACd,OAAOA,EAAO2rB,GAAG,UAAW/3C,GAAM1D,EAAMmY,IAAIotC,EAAS7hD,KACzD,GACD,CAAC1D,IACGA,CACX,mCClFA,MAAM2lD,EAAiB3lD,GAAUsE,QAAQtE,GAASA,EAAMqZ,2LCExD,MAAMusC,GAAyB,EAAAC,EAAA,IAAK,SAAgC3/C,IAA1B2a,OAAOilC,iBCAjD,MAAM,EACF,WAAAtlD,CAAY4lB,GAERrlB,KAAKmP,KAAO,IAAMnP,KAAKglD,OAAO,QAC9BhlD,KAAKqlB,WAAaA,EAAWvS,OAAOvP,QACxC,CACA,YAAI0hD,GAEA,OAAO7iD,QAAQ0jB,IAAI9lB,KAAKqlB,WAAWngB,KAAKyd,GAAc,aAAcA,EAAYA,EAAUsiC,SAAWtiC,IACzG,CAIA,MAAAuiC,CAAOC,GACH,OAAOnlD,KAAKqlB,WAAW,GAAG8/B,EAC9B,CACA,MAAAC,CAAOD,EAAUE,GACb,IAAK,IAAI/jD,EAAI,EAAGA,EAAItB,KAAKqlB,WAAWlkB,OAAQG,IACxCtB,KAAKqlB,WAAW/jB,GAAG6jD,GAAYE,CAEvC,CACA,cAAA/hC,CAAeC,EAAU9D,GACrB,MAAMqgC,EAAgB9/C,KAAKqlB,WAAWngB,KAAKyd,GACnCkiC,KAA4BliC,EAAUW,eAC/BX,EAAUW,eAAeC,GAEP,mBAAb9D,EACLA,EAASkD,QADf,IAIT,MAAO,KACHm9B,EAAc1pC,SAAQ,CAACjG,EAAQ7O,KAC3B6O,GAAUA,IACVnQ,KAAKqlB,WAAW/jB,GAAG6N,MAAM,GAC3B,CAEV,CACA,QAAI8C,GACA,OAAOjS,KAAKklD,OAAO,OACvB,CACA,QAAIjzC,CAAKA,GACLjS,KAAKolD,OAAO,OAAQnzC,EACxB,CACA,SAAIV,GACA,OAAOvR,KAAKklD,OAAO,QACvB,CACA,SAAI3zC,CAAMA,GACNvR,KAAKolD,OAAO,QAAS7zC,EACzB,CACA,aAAItB,GACA,OAAOjQ,KAAKklD,OAAO,YACvB,CACA,YAAIxjD,GACA,IAAImF,EAAM,EACV,IAAK,IAAIvF,EAAI,EAAGA,EAAItB,KAAKqlB,WAAWlkB,OAAQG,IACxCuF,EAAM/D,KAAK+D,IAAIA,EAAK7G,KAAKqlB,WAAW/jB,GAAGI,UAE3C,OAAOmF,CACX,CACA,MAAAm+C,CAAOM,GACHtlD,KAAKqlB,WAAWjP,SAASk2B,GAAaA,EAASgZ,MACnD,CACA,OAAApjD,GACIlC,KAAKglD,OAAO,UAChB,CACA,IAAA7zC,GACInR,KAAKglD,OAAO,OAChB,CACA,KAAA5zC,GACIpR,KAAKglD,OAAO,QAChB,CACA,MAAA70C,GACInQ,KAAKglD,OAAO,SAChB,CACA,QAAAvyC,GACIzS,KAAKglD,OAAO,WAChB,ECxEJ,MAAMO,UAA8B,EAChC,IAAAzjD,CAAK0jD,EAAWC,GACZ,OAAOrjD,QAAQ0jB,IAAI9lB,KAAKqlB,YAAYvjB,KAAK0jD,GAAWE,MAAMD,EAC9D,ECTJ,SAAS,EAAmBvhC,EAAYzmB,GACpC,OAAOymB,EACDA,EAAWzmB,IACTymB,EAAoB,SACpBA,OACF/e,CACV,CCFA,MAAMwgD,EAAuB,IAC7B,SAASC,EAAsBz7C,GAC3B,IAAIzI,EAAW,EAEXoG,EAAQqC,EAAUE,KAAK3I,GAC3B,MAAQoG,EAAMC,MAAQrG,EAAWikD,GAC7BjkD,GAHa,GAIboG,EAAQqC,EAAUE,KAAK3I,GAE3B,OAAOA,GAAYikD,EAAuBr9B,IAAW5mB,CACzD,CCdA,SAASV,EAAYxC,GACjB,MAAuB,mBAATA,CAClB,CCFA,SAAS8kB,EAAeX,EAAWY,GAC/BZ,EAAUY,SAAWA,EACrBZ,EAAUQ,SAAW,IACzB,CCHA,MAAM0iC,EAAsBn7C,GAAWvL,MAAMC,QAAQsL,IAAgC,iBAAdA,EAAO,GCIxEo7C,EAAgB,CAClBC,kBAAc5gD,GCFlB,SAAS6gD,EAAatwC,EAAUuwC,GAC5B,MAAMC,GAAW,EAAApB,EAAA,GAAKpvC,GACtB,MAAO,KAAQ,IAAIzP,EAAI,OAA8C,QAAtCA,EAAK6/C,EAAcG,UAAkC,IAAPhgD,EAAgBA,EAAKigD,GAAU,CAChH,CCJA,MAAMC,EAAqCH,GAAa,KACpD,IACI7a,SACKsN,cAAc,OACd31B,QAAQ,CAAElF,QAAS,GAAK,CAAElT,OAAQ,gBAC3C,CACA,MAAOvM,GACH,OAAO,CACX,CACA,OAAO,CAAI,GACZ,8BCVH,MAAMioD,EAAuB,CAAC17C,EAAQhJ,EACtC2kD,EAAa,MAET,IAAIC,EAAS,GACb,MAAMC,EAAYzjD,KAAK+D,IAAI/D,KAAKmB,MAAMvC,EAAW2kD,GAAa,GAC9D,IAAK,IAAI/kD,EAAI,EAAGA,EAAIilD,EAAWjlD,IAC3BglD,GAAU57C,GAAO,EAAAC,EAAA,GAAS,EAAG47C,EAAY,EAAGjlD,IAAM,KAEtD,MAAO,UAAUglD,EAAOnQ,UAAU,EAAGmQ,EAAOnlD,OAAS,KAAK,ECN9D,SAASqlD,EAAuB97C,GAC5B,OAAOnH,QAA2B,mBAAXmH,GAAyBy7C,MAC3Cz7C,GACkB,iBAAXA,IACHA,KAAU+7C,GAAwBN,MACvCN,EAAmBn7C,IAClBvL,MAAMC,QAAQsL,IAAWA,EAAOg8C,MAAMF,GAC/C,CACA,MAAMG,EAAsB,EAAE5oD,EAAGE,EAAGH,EAAGI,KAAO,gBAAgBH,MAAME,MAAMH,MAAMI,KAC1EuoD,EAAuB,CACzBx6C,OAAQ,SACR9J,KAAM,OACN0J,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXI,OAAsBw6C,EAAoB,CAAC,EAAG,IAAM,IAAM,IAC1Dt6C,QAAuBs6C,EAAoB,CAAC,IAAM,EAAG,EAAG,MACxDr6C,OAAsBq6C,EAAoB,CAAC,IAAM,IAAM,KAAO,MAC9Dn6C,QAAuBm6C,EAAoB,CAAC,IAAM,KAAM,IAAM,OAElE,SAAS,EAAwBj8C,EAAQhJ,GACrC,OAAKgJ,EAGsB,mBAAXA,GAAyBy7C,IAC9BC,EAAqB17C,EAAQhJ,GAE/BmkD,EAAmBn7C,GACjBi8C,EAAoBj8C,GAEtBvL,MAAMC,QAAQsL,GACZA,EAAOxF,KAAK0hD,GAAkB,EAAwBA,EAAellD,IACxE+kD,EAAqB36C,UAGlB26C,EAAqB/7C,QAb5B,CAeR,CCzCA,MAAM2nB,EAAa,CACfre,GAAG,EACHwJ,GAAG,GAEP,SAASqpC,IACL,OAAOx0B,EAAWre,GAAKqe,EAAW7U,CACtC,CCJA,SAASspC,EAAaC,EAAmBhnD,GACrC,MAAMinD,ECHV,SAAyBD,GAErB,GAAIA,aAA6B5kC,QAC7B,MAAO,CAAC4kC,GAEP,GAAiC,iBAAtBA,EAAgC,CAC5C,IAAI1+C,EAAO8iC,SASX,MAAM6b,EAAkJ3+C,EAAK4+C,iBAAiBF,GAC9K,OAAOC,EAAW7nD,MAAMsD,KAAKukD,GAAY,EAC7C,CACA,OAAO7nD,MAAMsD,KAAKskD,EACtB,CDhBqBG,CAAgBH,GAC3BI,EAAyB,IAAIC,gBAOnC,MAAO,CAACJ,EANa,CACjBn7B,SAAS,KACN9rB,EACHsnD,OAAQF,EAAuBE,QAEpB,IAAMF,EAAuBG,QAEhD,CELA,SAASC,EAAa7xC,GAClB,OAAQuW,IACsB,UAAtBA,EAAMu7B,aAA2BX,KAErCnxC,EAASuW,EAAM,CAEvB,CAQA,SAASqjB,EAAMyX,EAAmBU,EAAc1nD,EAAU,CAAC,GACvD,MAAOinD,EAAUU,EAAcv3C,GAAU22C,EAAaC,EAAmBhnD,GACnE4nD,EAAiBJ,GAAcK,IACjC,MAAM,OAAEviD,GAAWuiD,EACbC,EAAaJ,EAAaG,GAChC,GAA0B,mBAAfC,IAA8BxiD,EACrC,OACJ,MAAMyiD,EAAiBP,GAAcQ,IACjCF,EAAWE,GACX1iD,EAAO0mB,oBAAoB,eAAgB+7B,EAAe,IAE9DziD,EAAOymB,iBAAiB,eAAgBg8B,EAAgBJ,EAAa,IAKzE,OAHAV,EAAS5wC,SAAS7F,IACdA,EAAQub,iBAAiB,eAAgB67B,EAAgBD,EAAa,IAEnEv3C,CACX,CC/BA,MAAM63C,EAAgB,CAAC3gC,EAAQV,MACtBA,IAGIU,IAAWV,GAITqhC,EAAc3gC,EAAQV,EAAMshC,gBCfrCC,EAAoBj8B,GACI,UAAtBA,EAAMu7B,YACyB,iBAAjBv7B,EAAMk8B,QAAuBl8B,EAAMk8B,QAAU,GAWhC,IAApBl8B,EAAMm8B,UCbfC,EAAoB,IAAI5jD,IAAI,CAC9B,SACA,QACA,SACA,WACA,MCLE6jD,EAAa,IAAI/yC,QCKvB,SAAS,EAAaG,GAClB,OAAQuW,IACc,UAAdA,EAAMxuB,KAEViY,EAASuW,EAAM,CAEvB,CACA,SAASs8B,EAAiBljD,EAAQ7G,GAC9B6G,EAAOmjD,cAAc,IAAIC,aAAa,UAAYjqD,EAAM,CAAE4pD,WAAW,EAAMM,SAAS,IACxF,CACA,MAAMC,EAAsB,CAACC,EAAYlB,KACrC,MAAMn3C,EAAUq4C,EAAWC,cAC3B,IAAKt4C,EACD,OACJ,MAAMu4C,EAAgB,GAAa,KAC/B,GAAIR,EAAWziD,IAAI0K,GACf,OACJg4C,EAAiBh4C,EAAS,QAC1B,MAAMw4C,EAAc,GAAa,KAC7BR,EAAiBh4C,EAAS,KAAK,IAGnCA,EAAQub,iBAAiB,QAASi9B,EAAarB,GAC/Cn3C,EAAQub,iBAAiB,QAFN,IAAMy8B,EAAiBh4C,EAAS,WAENm3C,EAAa,IAE9Dn3C,EAAQub,iBAAiB,UAAWg9B,EAAepB,GAInDn3C,EAAQub,iBAAiB,QAAQ,IAAMvb,EAAQwb,oBAAoB,UAAW+8B,IAAgBpB,EAAa,ECtB/G,SAASsB,EAAkB/8B,GACvB,OAAOi8B,EAAiBj8B,KAAW46B,GACvC,CAoBA,SAASoC,EAAMlC,EAAmBmC,EAAcnpD,EAAU,CAAC,GACvD,MAAOinD,EAAUU,EAAcyB,GAAgBrC,EAAaC,EAAmBhnD,GACzEqpD,EAAcz8B,IAChB,MAAMpc,EAAUoc,EAAWk8B,cAC3B,IAAKG,EAAkBr8B,IAAe27B,EAAWziD,IAAI0K,GACjD,OACJ+3C,EAAWtyC,IAAIzF,GACf,MAAM84C,EAAaH,EAAav8B,GAC1B28B,EAAe,CAACza,EAAUC,KAC5BhvB,OAAOiM,oBAAoB,YAAaw9B,GACxCzpC,OAAOiM,oBAAoB,gBAAiBy9B,GACvCR,EAAkBna,IAAcyZ,EAAWziD,IAAI0K,KAGpD+3C,EAAWryC,OAAO1F,GACQ,mBAAf84C,GACPA,EAAWxa,EAAU,CAAEC,YAC3B,EAEEya,EAAeE,IACjBH,EAAaG,EAAS1pD,EAAQgvC,iBAC1BiZ,EAAcz3C,EAASk5C,EAAQpkD,QAAQ,EAEzCmkD,EAAmBE,IACrBJ,EAAaI,GAAa,EAAM,EAEpC5pC,OAAOgM,iBAAiB,YAAay9B,EAAa7B,GAClD5nC,OAAOgM,iBAAiB,gBAAiB09B,EAAiB9B,EAAa,EAW3E,OATAV,EAAS5wC,SAAS7F,KHxDtB,SAAqCA,GACjC,OAAQ83C,EAAkBxiD,IAAI0K,EAAQwxB,WACZ,IAAtBxxB,EAAQ6mC,QAChB,EGsDauS,CAA4Bp5C,IACQ,OAArCA,EAAQysC,aAAa,cACrBzsC,EAAQ6mC,SAAW,IAERr3C,EAAQgvC,gBAAkBjvB,OAASvP,GAC3Cub,iBAAiB,cAAes9B,EAAY1B,GACnDn3C,EAAQub,iBAAiB,SAAUG,GAAU08B,EAAoB18B,EAAOy7B,IAAeA,EAAa,IAEjGyB,CACX,CCvEA,SAASS,EAAY/6B,GACjB,MAAa,MAATA,GAAyB,MAATA,EACZwD,EAAWxD,GACJ,MAGPwD,EAAWxD,IAAQ,EACZ,KACHwD,EAAWxD,IAAQ,CAAK,GAK5BwD,EAAWre,GAAKqe,EAAW7U,EACpB,MAGP6U,EAAWre,EAAIqe,EAAW7U,GAAI,EACvB,KACH6U,EAAWre,EAAIqe,EAAW7U,GAAI,CAAK,EAInD,wECvBA,IAAIqsC,EAAU,IACVC,EAAY,oBCFhB,SAAShF,EAAKpvC,GACV,IAAI1M,EACJ,MAAO,UACY7D,IAAX6D,IACAA,EAAS0M,KACN1M,EAEf,mDCPA,MAAMkD,EAAQ69C,GAAQA,mCCYtB,MAAMp/C,EAAW,CAAClI,EAAMC,EAAIzD,KACxB,MAAM+qD,EAAmBtnD,EAAKD,EAC9B,OAA4B,IAArBunD,EAAyB,GAAK/qD,EAAQwD,GAAQunD,CAAgB,2CCRzE,MAAMC,EAAyBC,GAAsB,IAAVA,EAErCC,EAAyBC,GAAiBA,EAAe","sources":["webpack://my-3d-portfolio/./node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://my-3d-portfolio/./node_modules/react/jsx-runtime.js","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/components/create-factory.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/components/motion/create.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/use-motion-value.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/use-spring.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/animation/controls/Group.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/utils/supports/flags.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/utils/supports/memo.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/gestures/hover.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/gestures/press/index.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","webpack://my-3d-portfolio/./node_modules/motion-utils/dist/es/errors.mjs","webpack://my-3d-portfolio/./node_modules/motion-utils/dist/es/memo.mjs","webpack://my-3d-portfolio/./node_modules/motion-utils/dist/es/noop.mjs","webpack://my-3d-portfolio/./node_modules/motion-utils/dist/es/progress.mjs","webpack://my-3d-portfolio/./node_modules/motion-utils/dist/es/time-conversion.mjs"],"sourcesContent":["/**\r\n * @license React\r\n * react-jsx-runtime.production.min.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\r\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\r\n","'use strict';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\r\n} else {\r\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\r\n}\r\n","import { complex } from '../../value/types/complex/index.mjs';\r\n\r\n/**\r\n * Check if a value is animatable. Examples:\r\n *\r\n * ✅: 100, \"100px\", \"#fff\"\r\n * ❌: \"block\", \"url(2.jpg)\"\r\n * @param value\r\n *\r\n * @internal\r\n */\r\nconst isAnimatable = (value, name) => {\r\n    // If the list of keys tat might be non-animatable grows, replace with Set\r\n    if (name === \"zIndex\")\r\n        return false;\r\n    // If it's a number or a keyframes array, we can animate it. We might at some point\r\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\r\n    // but for now lets leave it like this for performance reasons\r\n    if (typeof value === \"number\" || Array.isArray(value))\r\n        return true;\r\n    if (typeof value === \"string\" && // It's animatable if we have a string\r\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\r\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\r\n    ) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nexport { isAnimatable };\r\n","import { time } from '../../frameloop/sync-time.mjs';\r\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\r\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\r\nimport { canAnimate } from './utils/can-animate.mjs';\r\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\r\n\r\n/**\r\n * Maximum time allowed between an animation being created and it being\r\n * resolved for us to use the latter as the start time.\r\n *\r\n * This is to ensure that while we prefer to \"start\" an animation as soon\r\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\r\n * between these two moments.\r\n */\r\nconst MAX_RESOLVE_DELAY = 40;\r\nclass BaseAnimation {\r\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\r\n        // Track whether the animation has been stopped. Stopped animations won't restart.\r\n        this.isStopped = false;\r\n        this.hasAttemptedResolve = false;\r\n        this.createdAt = time.now();\r\n        this.options = {\r\n            autoplay,\r\n            delay,\r\n            type,\r\n            repeat,\r\n            repeatDelay,\r\n            repeatType,\r\n            ...options,\r\n        };\r\n        this.updateFinishedPromise();\r\n    }\r\n    /**\r\n     * This method uses the createdAt and resolvedAt to calculate the\r\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\r\n     * as the following frame would then be the first frame of the animation in\r\n     * progress, which would feel snappier.\r\n     *\r\n     * However, if there's a delay (main thread work) between the creation of\r\n     * the animation and the first commited frame, we prefer to use resolvedAt\r\n     * to avoid a sudden jump into the animation.\r\n     */\r\n    calcStartTime() {\r\n        if (!this.resolvedAt)\r\n            return this.createdAt;\r\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\r\n            ? this.resolvedAt\r\n            : this.createdAt;\r\n    }\r\n    /**\r\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\r\n     * this.resolved will synchronously flush all pending keyframe resolvers.\r\n     * This is a deoptimisation, but at its worst still batches read/writes.\r\n     */\r\n    get resolved() {\r\n        if (!this._resolved && !this.hasAttemptedResolve) {\r\n            flushKeyframeResolvers();\r\n        }\r\n        return this._resolved;\r\n    }\r\n    /**\r\n     * A method to be called when the keyframes resolver completes. This method\r\n     * will check if its possible to run the animation and, if not, skip it.\r\n     * Otherwise, it will call initPlayback on the implementing class.\r\n     */\r\n    onKeyframesResolved(keyframes, finalKeyframe) {\r\n        this.resolvedAt = time.now();\r\n        this.hasAttemptedResolve = true;\r\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\r\n        /**\r\n         * If we can't animate this value with the resolved keyframes\r\n         * then we should complete it immediately.\r\n         */\r\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\r\n            // Finish immediately\r\n            if (instantAnimationState.current || !delay) {\r\n                onUpdate &&\r\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\r\n                onComplete && onComplete();\r\n                this.resolveFinishedPromise();\r\n                return;\r\n            }\r\n            // Finish after a delay\r\n            else {\r\n                this.options.duration = 0;\r\n            }\r\n        }\r\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\r\n        if (resolvedAnimation === false)\r\n            return;\r\n        this._resolved = {\r\n            keyframes,\r\n            finalKeyframe,\r\n            ...resolvedAnimation,\r\n        };\r\n        this.onPostResolved();\r\n    }\r\n    onPostResolved() { }\r\n    /**\r\n     * Allows the returned animation to be awaited or promise-chained. Currently\r\n     * resolves when the animation finishes at all but in a future update could/should\r\n     * reject if its cancels.\r\n     */\r\n    then(resolve, reject) {\r\n        return this.currentFinishedPromise.then(resolve, reject);\r\n    }\r\n    flatten() {\r\n        this.options.type = \"keyframes\";\r\n        this.options.ease = \"linear\";\r\n    }\r\n    updateFinishedPromise() {\r\n        this.currentFinishedPromise = new Promise((resolve) => {\r\n            this.resolveFinishedPromise = resolve;\r\n        });\r\n    }\r\n}\r\n\r\nexport { BaseAnimation };\r\n","import { isGenerator } from 'motion-dom';\r\nimport { warning } from 'motion-utils';\r\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\r\n\r\nfunction hasKeyframesChanged(keyframes) {\r\n    const current = keyframes[0];\r\n    if (keyframes.length === 1)\r\n        return true;\r\n    for (let i = 0; i < keyframes.length; i++) {\r\n        if (keyframes[i] !== current)\r\n            return true;\r\n    }\r\n}\r\nfunction canAnimate(keyframes, name, type, velocity) {\r\n    /**\r\n     * Check if we're able to animate between the start and end keyframes,\r\n     * and throw a warning if we're attempting to animate between one that's\r\n     * animatable and another that isn't.\r\n     */\r\n    const originKeyframe = keyframes[0];\r\n    if (originKeyframe === null)\r\n        return false;\r\n    /**\r\n     * These aren't traditionally animatable but we do support them.\r\n     * In future we could look into making this more generic or replacing\r\n     * this function with mix() === mixImmediate\r\n     */\r\n    if (name === \"display\" || name === \"visibility\")\r\n        return true;\r\n    const targetKeyframe = keyframes[keyframes.length - 1];\r\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\r\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\r\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\r\n    // Always skip if any of these are true\r\n    if (!isOriginAnimatable || !isTargetAnimatable) {\r\n        return false;\r\n    }\r\n    return (hasKeyframesChanged(keyframes) ||\r\n        ((type === \"spring\" || isGenerator(type)) && velocity));\r\n}\r\n\r\nexport { canAnimate };\r\n","// Adapted from https://gist.github.com/mjackson/5311256\r\nfunction hueToRgb(p, q, t) {\r\n    if (t < 0)\r\n        t += 1;\r\n    if (t > 1)\r\n        t -= 1;\r\n    if (t < 1 / 6)\r\n        return p + (q - p) * 6 * t;\r\n    if (t < 1 / 2)\r\n        return q;\r\n    if (t < 2 / 3)\r\n        return p + (q - p) * (2 / 3 - t) * 6;\r\n    return p;\r\n}\r\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\r\n    hue /= 360;\r\n    saturation /= 100;\r\n    lightness /= 100;\r\n    let red = 0;\r\n    let green = 0;\r\n    let blue = 0;\r\n    if (!saturation) {\r\n        red = green = blue = lightness;\r\n    }\r\n    else {\r\n        const q = lightness < 0.5\r\n            ? lightness * (1 + saturation)\r\n            : lightness + saturation - lightness * saturation;\r\n        const p = 2 * lightness - q;\r\n        red = hueToRgb(p, q, hue + 1 / 3);\r\n        green = hueToRgb(p, q, hue);\r\n        blue = hueToRgb(p, q, hue - 1 / 3);\r\n    }\r\n    return {\r\n        red: Math.round(red * 255),\r\n        green: Math.round(green * 255),\r\n        blue: Math.round(blue * 255),\r\n        alpha,\r\n    };\r\n}\r\n\r\nexport { hslaToRgba };\r\n","function mixImmediate(a, b) {\r\n    return (p) => (p > 0 ? b : a);\r\n}\r\n\r\nexport { mixImmediate };\r\n","import { mixNumber } from './number.mjs';\r\nimport { warning } from 'motion-utils';\r\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\r\nimport { hex } from '../../value/types/color/hex.mjs';\r\nimport { rgba } from '../../value/types/color/rgba.mjs';\r\nimport { hsla } from '../../value/types/color/hsla.mjs';\r\nimport { mixImmediate } from './immediate.mjs';\r\n\r\n// Linear color space blending\r\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\r\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\r\nconst mixLinearColor = (from, to, v) => {\r\n    const fromExpo = from * from;\r\n    const expo = v * (to * to - fromExpo) + fromExpo;\r\n    return expo < 0 ? 0 : Math.sqrt(expo);\r\n};\r\nconst colorTypes = [hex, rgba, hsla];\r\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\r\nfunction asRGBA(color) {\r\n    const type = getColorType(color);\r\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\r\n    if (!Boolean(type))\r\n        return false;\r\n    let model = type.parse(color);\r\n    if (type === hsla) {\r\n        // TODO Remove this cast - needed since Motion's stricter typing\r\n        model = hslaToRgba(model);\r\n    }\r\n    return model;\r\n}\r\nconst mixColor = (from, to) => {\r\n    const fromRGBA = asRGBA(from);\r\n    const toRGBA = asRGBA(to);\r\n    if (!fromRGBA || !toRGBA) {\r\n        return mixImmediate(from, to);\r\n    }\r\n    const blended = { ...fromRGBA };\r\n    return (v) => {\r\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\r\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\r\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\r\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\r\n        return rgba.transform(blended);\r\n    };\r\n};\r\n\r\nexport { mixColor, mixLinearColor };\r\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\r\n/**\r\n * Returns a function that, when provided a progress value between 0 and 1,\r\n * will return the \"none\" or \"hidden\" string only when the progress is that of\r\n * the origin or target.\r\n */\r\nfunction mixVisibility(origin, target) {\r\n    if (invisibleValues.has(origin)) {\r\n        return (p) => (p <= 0 ? origin : target);\r\n    }\r\n    else {\r\n        return (p) => (p >= 1 ? target : origin);\r\n    }\r\n}\r\n\r\nexport { invisibleValues, mixVisibility };\r\n","import { mixNumber as mixNumber$1 } from './number.mjs';\r\nimport { mixColor } from './color.mjs';\r\nimport { pipe } from '../pipe.mjs';\r\nimport { warning } from 'motion-utils';\r\nimport { color } from '../../value/types/color/index.mjs';\r\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\r\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\r\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\r\nimport { mixImmediate } from './immediate.mjs';\r\n\r\nfunction mixNumber(a, b) {\r\n    return (p) => mixNumber$1(a, b, p);\r\n}\r\nfunction getMixer(a) {\r\n    if (typeof a === \"number\") {\r\n        return mixNumber;\r\n    }\r\n    else if (typeof a === \"string\") {\r\n        return isCSSVariableToken(a)\r\n            ? mixImmediate\r\n            : color.test(a)\r\n                ? mixColor\r\n                : mixComplex;\r\n    }\r\n    else if (Array.isArray(a)) {\r\n        return mixArray;\r\n    }\r\n    else if (typeof a === \"object\") {\r\n        return color.test(a) ? mixColor : mixObject;\r\n    }\r\n    return mixImmediate;\r\n}\r\nfunction mixArray(a, b) {\r\n    const output = [...a];\r\n    const numValues = output.length;\r\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\r\n    return (p) => {\r\n        for (let i = 0; i < numValues; i++) {\r\n            output[i] = blendValue[i](p);\r\n        }\r\n        return output;\r\n    };\r\n}\r\nfunction mixObject(a, b) {\r\n    const output = { ...a, ...b };\r\n    const blendValue = {};\r\n    for (const key in output) {\r\n        if (a[key] !== undefined && b[key] !== undefined) {\r\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\r\n        }\r\n    }\r\n    return (v) => {\r\n        for (const key in blendValue) {\r\n            output[key] = blendValue[key](v);\r\n        }\r\n        return output;\r\n    };\r\n}\r\nfunction matchOrder(origin, target) {\r\n    var _a;\r\n    const orderedOrigin = [];\r\n    const pointers = { color: 0, var: 0, number: 0 };\r\n    for (let i = 0; i < target.values.length; i++) {\r\n        const type = target.types[i];\r\n        const originIndex = origin.indexes[type][pointers[type]];\r\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\r\n        orderedOrigin[i] = originValue;\r\n        pointers[type]++;\r\n    }\r\n    return orderedOrigin;\r\n}\r\nconst mixComplex = (origin, target) => {\r\n    const template = complex.createTransformer(target);\r\n    const originStats = analyseComplexValue(origin);\r\n    const targetStats = analyseComplexValue(target);\r\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\r\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\r\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\r\n    if (canInterpolate) {\r\n        if ((invisibleValues.has(origin) &&\r\n            !targetStats.values.length) ||\r\n            (invisibleValues.has(target) &&\r\n                !originStats.values.length)) {\r\n            return mixVisibility(origin, target);\r\n        }\r\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\r\n    }\r\n    else {\r\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\r\n        return mixImmediate(origin, target);\r\n    }\r\n};\r\n\r\nexport { getMixer, mixArray, mixComplex, mixObject };\r\n","import { getMixer } from './complex.mjs';\r\nimport { mixNumber } from './number.mjs';\r\n\r\nfunction mix(from, to, p) {\r\n    if (typeof from === \"number\" &&\r\n        typeof to === \"number\" &&\r\n        typeof p === \"number\") {\r\n        return mixNumber(from, to, p);\r\n    }\r\n    const mixer = getMixer(from);\r\n    return mixer(from, to);\r\n}\r\n\r\nexport { mix };\r\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\r\n\r\nconst velocitySampleDuration = 5; // ms\r\nfunction calcGeneratorVelocity(resolveValue, t, current) {\r\n    const prevT = Math.max(t - velocitySampleDuration, 0);\r\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\r\n}\r\n\r\nexport { calcGeneratorVelocity };\r\n","const springDefaults = {\r\n    // Default spring physics\r\n    stiffness: 100,\r\n    damping: 10,\r\n    mass: 1.0,\r\n    velocity: 0.0,\r\n    // Default duration/bounce-based options\r\n    duration: 800, // in ms\r\n    bounce: 0.3,\r\n    visualDuration: 0.3, // in seconds\r\n    // Rest thresholds\r\n    restSpeed: {\r\n        granular: 0.01,\r\n        default: 2,\r\n    },\r\n    restDelta: {\r\n        granular: 0.005,\r\n        default: 0.5,\r\n    },\r\n    // Limits\r\n    minDuration: 0.01, // in seconds\r\n    maxDuration: 10.0, // in seconds\r\n    minDamping: 0.05,\r\n    maxDamping: 1,\r\n};\r\n\r\nexport { springDefaults };\r\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\r\nimport { clamp } from '../../../utils/clamp.mjs';\r\nimport { springDefaults } from './defaults.mjs';\r\n\r\nconst safeMin = 0.001;\r\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\r\n    let envelope;\r\n    let derivative;\r\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\r\n    let dampingRatio = 1 - bounce;\r\n    /**\r\n     * Restrict dampingRatio and duration to within acceptable ranges.\r\n     */\r\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\r\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\r\n    if (dampingRatio < 1) {\r\n        /**\r\n         * Underdamped spring\r\n         */\r\n        envelope = (undampedFreq) => {\r\n            const exponentialDecay = undampedFreq * dampingRatio;\r\n            const delta = exponentialDecay * duration;\r\n            const a = exponentialDecay - velocity;\r\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\r\n            const c = Math.exp(-delta);\r\n            return safeMin - (a / b) * c;\r\n        };\r\n        derivative = (undampedFreq) => {\r\n            const exponentialDecay = undampedFreq * dampingRatio;\r\n            const delta = exponentialDecay * duration;\r\n            const d = delta * velocity + velocity;\r\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\r\n            const f = Math.exp(-delta);\r\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\r\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\r\n            return (factor * ((d - e) * f)) / g;\r\n        };\r\n    }\r\n    else {\r\n        /**\r\n         * Critically-damped spring\r\n         */\r\n        envelope = (undampedFreq) => {\r\n            const a = Math.exp(-undampedFreq * duration);\r\n            const b = (undampedFreq - velocity) * duration + 1;\r\n            return -safeMin + a * b;\r\n        };\r\n        derivative = (undampedFreq) => {\r\n            const a = Math.exp(-undampedFreq * duration);\r\n            const b = (velocity - undampedFreq) * (duration * duration);\r\n            return a * b;\r\n        };\r\n    }\r\n    const initialGuess = 5 / duration;\r\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\r\n    duration = secondsToMilliseconds(duration);\r\n    if (isNaN(undampedFreq)) {\r\n        return {\r\n            stiffness: springDefaults.stiffness,\r\n            damping: springDefaults.damping,\r\n            duration,\r\n        };\r\n    }\r\n    else {\r\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\r\n        return {\r\n            stiffness,\r\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\r\n            duration,\r\n        };\r\n    }\r\n}\r\nconst rootIterations = 12;\r\nfunction approximateRoot(envelope, derivative, initialGuess) {\r\n    let result = initialGuess;\r\n    for (let i = 1; i < rootIterations; i++) {\r\n        result = result - envelope(result) / derivative(result);\r\n    }\r\n    return result;\r\n}\r\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\r\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\r\n}\r\n\r\nexport { calcAngularFreq, findSpring };\r\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\r\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\r\nimport { clamp } from '../../../utils/clamp.mjs';\r\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\r\nimport { springDefaults } from './defaults.mjs';\r\nimport { findSpring, calcAngularFreq } from './find.mjs';\r\n\r\nconst durationKeys = [\"duration\", \"bounce\"];\r\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\r\nfunction isSpringType(options, keys) {\r\n    return keys.some((key) => options[key] !== undefined);\r\n}\r\nfunction getSpringOptions(options) {\r\n    let springOptions = {\r\n        velocity: springDefaults.velocity,\r\n        stiffness: springDefaults.stiffness,\r\n        damping: springDefaults.damping,\r\n        mass: springDefaults.mass,\r\n        isResolvedFromDuration: false,\r\n        ...options,\r\n    };\r\n    // stiffness/damping/mass overrides duration/bounce\r\n    if (!isSpringType(options, physicsKeys) &&\r\n        isSpringType(options, durationKeys)) {\r\n        if (options.visualDuration) {\r\n            const visualDuration = options.visualDuration;\r\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\r\n            const stiffness = root * root;\r\n            const damping = 2 *\r\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\r\n                Math.sqrt(stiffness);\r\n            springOptions = {\r\n                ...springOptions,\r\n                mass: springDefaults.mass,\r\n                stiffness,\r\n                damping,\r\n            };\r\n        }\r\n        else {\r\n            const derived = findSpring(options);\r\n            springOptions = {\r\n                ...springOptions,\r\n                ...derived,\r\n                mass: springDefaults.mass,\r\n            };\r\n            springOptions.isResolvedFromDuration = true;\r\n        }\r\n    }\r\n    return springOptions;\r\n}\r\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\r\n    const options = typeof optionsOrVisualDuration !== \"object\"\r\n        ? {\r\n            visualDuration: optionsOrVisualDuration,\r\n            keyframes: [0, 1],\r\n            bounce,\r\n        }\r\n        : optionsOrVisualDuration;\r\n    let { restSpeed, restDelta } = options;\r\n    const origin = options.keyframes[0];\r\n    const target = options.keyframes[options.keyframes.length - 1];\r\n    /**\r\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\r\n     * to reduce GC during animation.\r\n     */\r\n    const state = { done: false, value: origin };\r\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\r\n        ...options,\r\n        velocity: -millisecondsToSeconds(options.velocity || 0),\r\n    });\r\n    const initialVelocity = velocity || 0.0;\r\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\r\n    const initialDelta = target - origin;\r\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\r\n    /**\r\n     * If we're working on a granular scale, use smaller defaults for determining\r\n     * when the spring is finished.\r\n     *\r\n     * These defaults have been selected emprically based on what strikes a good\r\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\r\n     */\r\n    const isGranularScale = Math.abs(initialDelta) < 5;\r\n    restSpeed || (restSpeed = isGranularScale\r\n        ? springDefaults.restSpeed.granular\r\n        : springDefaults.restSpeed.default);\r\n    restDelta || (restDelta = isGranularScale\r\n        ? springDefaults.restDelta.granular\r\n        : springDefaults.restDelta.default);\r\n    let resolveSpring;\r\n    if (dampingRatio < 1) {\r\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\r\n        // Underdamped spring\r\n        resolveSpring = (t) => {\r\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\r\n            return (target -\r\n                envelope *\r\n                    (((initialVelocity +\r\n                        dampingRatio * undampedAngularFreq * initialDelta) /\r\n                        angularFreq) *\r\n                        Math.sin(angularFreq * t) +\r\n                        initialDelta * Math.cos(angularFreq * t)));\r\n        };\r\n    }\r\n    else if (dampingRatio === 1) {\r\n        // Critically damped spring\r\n        resolveSpring = (t) => target -\r\n            Math.exp(-undampedAngularFreq * t) *\r\n                (initialDelta +\r\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\r\n    }\r\n    else {\r\n        // Overdamped spring\r\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\r\n        resolveSpring = (t) => {\r\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\r\n            // When performing sinh or cosh values can hit Infinity so we cap them here\r\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\r\n            return (target -\r\n                (envelope *\r\n                    ((initialVelocity +\r\n                        dampingRatio * undampedAngularFreq * initialDelta) *\r\n                        Math.sinh(freqForT) +\r\n                        dampedAngularFreq *\r\n                            initialDelta *\r\n                            Math.cosh(freqForT))) /\r\n                    dampedAngularFreq);\r\n        };\r\n    }\r\n    const generator = {\r\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\r\n        next: (t) => {\r\n            const current = resolveSpring(t);\r\n            if (!isResolvedFromDuration) {\r\n                let currentVelocity = 0.0;\r\n                /**\r\n                 * We only need to calculate velocity for under-damped springs\r\n                 * as over- and critically-damped springs can't overshoot, so\r\n                 * checking only for displacement is enough.\r\n                 */\r\n                if (dampingRatio < 1) {\r\n                    currentVelocity =\r\n                        t === 0\r\n                            ? secondsToMilliseconds(initialVelocity)\r\n                            : calcGeneratorVelocity(resolveSpring, t, current);\r\n                }\r\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\r\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\r\n                state.done =\r\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\r\n            }\r\n            else {\r\n                state.done = t >= duration;\r\n            }\r\n            state.value = state.done ? target : current;\r\n            return state;\r\n        },\r\n        toString: () => {\r\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\r\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\r\n            return calculatedDuration + \"ms \" + easing;\r\n        },\r\n    };\r\n    return generator;\r\n}\r\n\r\nexport { spring };\r\n","import { spring } from './spring/index.mjs';\r\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\r\n\r\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\r\n    const origin = keyframes[0];\r\n    const state = {\r\n        done: false,\r\n        value: origin,\r\n    };\r\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\r\n    const nearestBoundary = (v) => {\r\n        if (min === undefined)\r\n            return max;\r\n        if (max === undefined)\r\n            return min;\r\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\r\n    };\r\n    let amplitude = power * velocity;\r\n    const ideal = origin + amplitude;\r\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\r\n    /**\r\n     * If the target has changed we need to re-calculate the amplitude, otherwise\r\n     * the animation will start from the wrong position.\r\n     */\r\n    if (target !== ideal)\r\n        amplitude = target - origin;\r\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\r\n    const calcLatest = (t) => target + calcDelta(t);\r\n    const applyFriction = (t) => {\r\n        const delta = calcDelta(t);\r\n        const latest = calcLatest(t);\r\n        state.done = Math.abs(delta) <= restDelta;\r\n        state.value = state.done ? target : latest;\r\n    };\r\n    /**\r\n     * Ideally this would resolve for t in a stateless way, we could\r\n     * do that by always precalculating the animation but as we know\r\n     * this will be done anyway we can assume that spring will\r\n     * be discovered during that.\r\n     */\r\n    let timeReachedBoundary;\r\n    let spring$1;\r\n    const checkCatchBoundary = (t) => {\r\n        if (!isOutOfBounds(state.value))\r\n            return;\r\n        timeReachedBoundary = t;\r\n        spring$1 = spring({\r\n            keyframes: [state.value, nearestBoundary(state.value)],\r\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\r\n            damping: bounceDamping,\r\n            stiffness: bounceStiffness,\r\n            restDelta,\r\n            restSpeed,\r\n        });\r\n    };\r\n    checkCatchBoundary(0);\r\n    return {\r\n        calculatedDuration: null,\r\n        next: (t) => {\r\n            /**\r\n             * We need to resolve the friction to figure out if we need a\r\n             * spring but we don't want to do this twice per frame. So here\r\n             * we flag if we updated for this frame and later if we did\r\n             * we can skip doing it again.\r\n             */\r\n            let hasUpdatedFrame = false;\r\n            if (!spring$1 && timeReachedBoundary === undefined) {\r\n                hasUpdatedFrame = true;\r\n                applyFriction(t);\r\n                checkCatchBoundary(t);\r\n            }\r\n            /**\r\n             * If we have a spring and the provided t is beyond the moment the friction\r\n             * animation crossed the min/max boundary, use the spring.\r\n             */\r\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\r\n                return spring$1.next(t - timeReachedBoundary);\r\n            }\r\n            else {\r\n                !hasUpdatedFrame && applyFriction(t);\r\n                return state;\r\n            }\r\n        },\r\n    };\r\n}\r\n\r\nexport { inertia };\r\n","import { cubicBezier } from './cubic-bezier.mjs';\r\n\r\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\r\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\r\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\r\n\r\nexport { easeIn, easeInOut, easeOut };\r\n","import { isBezierDefinition } from 'motion-dom';\r\nimport { invariant, noop } from 'motion-utils';\r\nimport { anticipate } from '../anticipate.mjs';\r\nimport { backIn, backInOut, backOut } from '../back.mjs';\r\nimport { circIn, circInOut, circOut } from '../circ.mjs';\r\nimport { cubicBezier } from '../cubic-bezier.mjs';\r\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\r\n\r\nconst easingLookup = {\r\n    linear: noop,\r\n    easeIn,\r\n    easeInOut,\r\n    easeOut,\r\n    circIn,\r\n    circInOut,\r\n    circOut,\r\n    backIn,\r\n    backInOut,\r\n    backOut,\r\n    anticipate,\r\n};\r\nconst easingDefinitionToFunction = (definition) => {\r\n    if (isBezierDefinition(definition)) {\r\n        // If cubic bezier definition, create bezier curve\r\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\r\n        const [x1, y1, x2, y2] = definition;\r\n        return cubicBezier(x1, y1, x2, y2);\r\n    }\r\n    else if (typeof definition === \"string\") {\r\n        // Else lookup from table\r\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\r\n        return easingLookup[definition];\r\n    }\r\n    return definition;\r\n};\r\n\r\nexport { easingDefinitionToFunction };\r\n","import { easeInOut } from '../../easing/ease.mjs';\r\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\r\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\r\nimport { interpolate } from '../../utils/interpolate.mjs';\r\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\r\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\r\n\r\nfunction defaultEasing(values, easing) {\r\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\r\n}\r\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\r\n    /**\r\n     * Easing functions can be externally defined as strings. Here we convert them\r\n     * into actual functions.\r\n     */\r\n    const easingFunctions = isEasingArray(ease)\r\n        ? ease.map(easingDefinitionToFunction)\r\n        : easingDefinitionToFunction(ease);\r\n    /**\r\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\r\n     * to reduce GC during animation.\r\n     */\r\n    const state = {\r\n        done: false,\r\n        value: keyframeValues[0],\r\n    };\r\n    /**\r\n     * Create a times array based on the provided 0-1 offsets\r\n     */\r\n    const absoluteTimes = convertOffsetToTimes(\r\n    // Only use the provided offsets if they're the correct length\r\n    // TODO Maybe we should warn here if there's a length mismatch\r\n    times && times.length === keyframeValues.length\r\n        ? times\r\n        : defaultOffset(keyframeValues), duration);\r\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\r\n        ease: Array.isArray(easingFunctions)\r\n            ? easingFunctions\r\n            : defaultEasing(keyframeValues, easingFunctions),\r\n    });\r\n    return {\r\n        calculatedDuration: duration,\r\n        next: (t) => {\r\n            state.value = mapTimeToKeyframe(t);\r\n            state.done = t >= duration;\r\n            return state;\r\n        },\r\n    };\r\n}\r\n\r\nexport { defaultEasing, keyframes };\r\n","const isEasingArray = (ease) => {\r\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\r\n};\r\n\r\nexport { isEasingArray };\r\n","function convertOffsetToTimes(offset, duration) {\r\n    return offset.map((o) => o * duration);\r\n}\r\n\r\nexport { convertOffsetToTimes };\r\n","import { fillOffset } from './fill.mjs';\r\n\r\nfunction defaultOffset(arr) {\r\n    const offset = [0];\r\n    fillOffset(offset, arr.length - 1);\r\n    return offset;\r\n}\r\n\r\nexport { defaultOffset };\r\n","import { progress } from 'motion-utils';\r\nimport { mixNumber } from '../mix/number.mjs';\r\n\r\nfunction fillOffset(offset, remaining) {\r\n    const min = offset[offset.length - 1];\r\n    for (let i = 1; i <= remaining; i++) {\r\n        const offsetProgress = progress(0, remaining, i);\r\n        offset.push(mixNumber(min, 1, offsetProgress));\r\n    }\r\n}\r\n\r\nexport { fillOffset };\r\n","import { invariant, noop, progress } from 'motion-utils';\r\nimport { clamp } from './clamp.mjs';\r\nimport { mix } from './mix/index.mjs';\r\nimport { pipe } from './pipe.mjs';\r\n\r\nfunction createMixers(output, ease, customMixer) {\r\n    const mixers = [];\r\n    const mixerFactory = customMixer || mix;\r\n    const numMixers = output.length - 1;\r\n    for (let i = 0; i < numMixers; i++) {\r\n        let mixer = mixerFactory(output[i], output[i + 1]);\r\n        if (ease) {\r\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\r\n            mixer = pipe(easingFunction, mixer);\r\n        }\r\n        mixers.push(mixer);\r\n    }\r\n    return mixers;\r\n}\r\n/**\r\n * Create a function that maps from a numerical input array to a generic output array.\r\n *\r\n * Accepts:\r\n *   - Numbers\r\n *   - Colors (hex, hsl, hsla, rgb, rgba)\r\n *   - Complex (combinations of one or more numbers or strings)\r\n *\r\n * ```jsx\r\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\r\n *\r\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\r\n * ```\r\n *\r\n * TODO Revist this approach once we've moved to data models for values,\r\n * probably not needed to pregenerate mixer functions.\r\n *\r\n * @public\r\n */\r\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\r\n    const inputLength = input.length;\r\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\r\n    /**\r\n     * If we're only provided a single input, we can just make a function\r\n     * that returns the output.\r\n     */\r\n    if (inputLength === 1)\r\n        return () => output[0];\r\n    if (inputLength === 2 && output[0] === output[1])\r\n        return () => output[1];\r\n    const isZeroDeltaRange = input[0] === input[1];\r\n    // If input runs highest -> lowest, reverse both arrays\r\n    if (input[0] > input[inputLength - 1]) {\r\n        input = [...input].reverse();\r\n        output = [...output].reverse();\r\n    }\r\n    const mixers = createMixers(output, ease, mixer);\r\n    const numMixers = mixers.length;\r\n    const interpolator = (v) => {\r\n        if (isZeroDeltaRange && v < input[0])\r\n            return output[0];\r\n        let i = 0;\r\n        if (numMixers > 1) {\r\n            for (; i < input.length - 2; i++) {\r\n                if (v < input[i + 1])\r\n                    break;\r\n            }\r\n        }\r\n        const progressInRange = progress(input[i], input[i + 1], v);\r\n        return mixers[i](progressInRange);\r\n    };\r\n    return isClamp\r\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\r\n        : interpolator;\r\n}\r\n\r\nexport { interpolate };\r\n","import { time } from '../../../frameloop/sync-time.mjs';\r\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\r\n\r\nconst frameloopDriver = (update) => {\r\n    const passTimestamp = ({ timestamp }) => update(timestamp);\r\n    return {\r\n        start: () => frame.update(passTimestamp, true),\r\n        stop: () => cancelFrame(passTimestamp),\r\n        /**\r\n         * If we're processing this frame we can use the\r\n         * framelocked timestamp to keep things in sync.\r\n         */\r\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\r\n    };\r\n};\r\n\r\nexport { frameloopDriver };\r\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\r\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\r\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\r\nimport { clamp } from '../../utils/clamp.mjs';\r\nimport { mix } from '../../utils/mix/index.mjs';\r\nimport { pipe } from '../../utils/pipe.mjs';\r\nimport { inertia } from '../generators/inertia.mjs';\r\nimport { keyframes } from '../generators/keyframes.mjs';\r\nimport { spring } from '../generators/spring/index.mjs';\r\nimport { BaseAnimation } from './BaseAnimation.mjs';\r\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\r\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\r\n\r\nconst generators = {\r\n    decay: inertia,\r\n    inertia,\r\n    tween: keyframes,\r\n    keyframes: keyframes,\r\n    spring,\r\n};\r\nconst percentToProgress = (percent) => percent / 100;\r\n/**\r\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\r\n * features we expose publically. Mostly the compatibility is to ensure visual identity\r\n * between both WAAPI and main thread animations.\r\n */\r\nclass MainThreadAnimation extends BaseAnimation {\r\n    constructor(options) {\r\n        super(options);\r\n        /**\r\n         * The time at which the animation was paused.\r\n         */\r\n        this.holdTime = null;\r\n        /**\r\n         * The time at which the animation was cancelled.\r\n         */\r\n        this.cancelTime = null;\r\n        /**\r\n         * The current time of the animation.\r\n         */\r\n        this.currentTime = 0;\r\n        /**\r\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\r\n         */\r\n        this.playbackSpeed = 1;\r\n        /**\r\n         * The state of the animation to apply when the animation is resolved. This\r\n         * allows calls to the public API to control the animation before it is resolved,\r\n         * without us having to resolve it first.\r\n         */\r\n        this.pendingPlayState = \"running\";\r\n        /**\r\n         * The time at which the animation was started.\r\n         */\r\n        this.startTime = null;\r\n        this.state = \"idle\";\r\n        /**\r\n         * This method is bound to the instance to fix a pattern where\r\n         * animation.stop is returned as a reference from a useEffect.\r\n         */\r\n        this.stop = () => {\r\n            this.resolver.cancel();\r\n            this.isStopped = true;\r\n            if (this.state === \"idle\")\r\n                return;\r\n            this.teardown();\r\n            const { onStop } = this.options;\r\n            onStop && onStop();\r\n        };\r\n        const { name, motionValue, element, keyframes } = this.options;\r\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\r\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\r\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\r\n        this.resolver.scheduleResolve();\r\n    }\r\n    flatten() {\r\n        super.flatten();\r\n        // If we've already resolved the animation, re-initialise it\r\n        if (this._resolved) {\r\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\r\n        }\r\n    }\r\n    initPlayback(keyframes$1) {\r\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\r\n        const generatorFactory = isGenerator(type)\r\n            ? type\r\n            : generators[type] || keyframes;\r\n        /**\r\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\r\n         * [0, 100] and then make a function that maps that to the actual keyframes.\r\n         *\r\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\r\n         */\r\n        let mapPercentToKeyframes;\r\n        let mirroredGenerator;\r\n        if (generatorFactory !== keyframes &&\r\n            typeof keyframes$1[0] !== \"number\") {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\r\n            }\r\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\r\n            keyframes$1 = [0, 100];\r\n        }\r\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\r\n        /**\r\n         * If we have a mirror repeat type we need to create a second generator that outputs the\r\n         * mirrored (not reversed) animation and later ping pong between the two generators.\r\n         */\r\n        if (repeatType === \"mirror\") {\r\n            mirroredGenerator = generatorFactory({\r\n                ...this.options,\r\n                keyframes: [...keyframes$1].reverse(),\r\n                velocity: -velocity,\r\n            });\r\n        }\r\n        /**\r\n         * If duration is undefined and we have repeat options,\r\n         * we need to calculate a duration from the generator.\r\n         *\r\n         * We set it to the generator itself to cache the duration.\r\n         * Any timeline resolver will need to have already precalculated\r\n         * the duration by this step.\r\n         */\r\n        if (generator.calculatedDuration === null) {\r\n            generator.calculatedDuration = calcGeneratorDuration(generator);\r\n        }\r\n        const { calculatedDuration } = generator;\r\n        const resolvedDuration = calculatedDuration + repeatDelay;\r\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\r\n        return {\r\n            generator,\r\n            mirroredGenerator,\r\n            mapPercentToKeyframes,\r\n            calculatedDuration,\r\n            resolvedDuration,\r\n            totalDuration,\r\n        };\r\n    }\r\n    onPostResolved() {\r\n        const { autoplay = true } = this.options;\r\n        this.play();\r\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\r\n            this.pause();\r\n        }\r\n        else {\r\n            this.state = this.pendingPlayState;\r\n        }\r\n    }\r\n    tick(timestamp, sample = false) {\r\n        const { resolved } = this;\r\n        // If the animations has failed to resolve, return the final keyframe.\r\n        if (!resolved) {\r\n            const { keyframes } = this.options;\r\n            return { done: true, value: keyframes[keyframes.length - 1] };\r\n        }\r\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\r\n        if (this.startTime === null)\r\n            return generator.next(0);\r\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\r\n        /**\r\n         * requestAnimationFrame timestamps can come through as lower than\r\n         * the startTime as set by performance.now(). Here we prevent this,\r\n         * though in the future it could be possible to make setting startTime\r\n         * a pending operation that gets resolved here.\r\n         */\r\n        if (this.speed > 0) {\r\n            this.startTime = Math.min(this.startTime, timestamp);\r\n        }\r\n        else if (this.speed < 0) {\r\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\r\n        }\r\n        // Update currentTime\r\n        if (sample) {\r\n            this.currentTime = timestamp;\r\n        }\r\n        else if (this.holdTime !== null) {\r\n            this.currentTime = this.holdTime;\r\n        }\r\n        else {\r\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\r\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\r\n            // example.\r\n            this.currentTime =\r\n                Math.round(timestamp - this.startTime) * this.speed;\r\n        }\r\n        // Rebase on delay\r\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\r\n        const isInDelayPhase = this.speed >= 0\r\n            ? timeWithoutDelay < 0\r\n            : timeWithoutDelay > totalDuration;\r\n        this.currentTime = Math.max(timeWithoutDelay, 0);\r\n        // If this animation has finished, set the current time  to the total duration.\r\n        if (this.state === \"finished\" && this.holdTime === null) {\r\n            this.currentTime = totalDuration;\r\n        }\r\n        let elapsed = this.currentTime;\r\n        let frameGenerator = generator;\r\n        if (repeat) {\r\n            /**\r\n             * Get the current progress (0-1) of the animation. If t is >\r\n             * than duration we'll get values like 2.5 (midway through the\r\n             * third iteration)\r\n             */\r\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\r\n            /**\r\n             * Get the current iteration (0 indexed). For instance the floor of\r\n             * 2.5 is 2.\r\n             */\r\n            let currentIteration = Math.floor(progress);\r\n            /**\r\n             * Get the current progress of the iteration by taking the remainder\r\n             * so 2.5 is 0.5 through iteration 2\r\n             */\r\n            let iterationProgress = progress % 1.0;\r\n            /**\r\n             * If iteration progress is 1 we count that as the end\r\n             * of the previous iteration.\r\n             */\r\n            if (!iterationProgress && progress >= 1) {\r\n                iterationProgress = 1;\r\n            }\r\n            iterationProgress === 1 && currentIteration--;\r\n            currentIteration = Math.min(currentIteration, repeat + 1);\r\n            /**\r\n             * Reverse progress if we're not running in \"normal\" direction\r\n             */\r\n            const isOddIteration = Boolean(currentIteration % 2);\r\n            if (isOddIteration) {\r\n                if (repeatType === \"reverse\") {\r\n                    iterationProgress = 1 - iterationProgress;\r\n                    if (repeatDelay) {\r\n                        iterationProgress -= repeatDelay / resolvedDuration;\r\n                    }\r\n                }\r\n                else if (repeatType === \"mirror\") {\r\n                    frameGenerator = mirroredGenerator;\r\n                }\r\n            }\r\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\r\n        }\r\n        /**\r\n         * If we're in negative time, set state as the initial keyframe.\r\n         * This prevents delay: x, duration: 0 animations from finishing\r\n         * instantly.\r\n         */\r\n        const state = isInDelayPhase\r\n            ? { done: false, value: keyframes[0] }\r\n            : frameGenerator.next(elapsed);\r\n        if (mapPercentToKeyframes) {\r\n            state.value = mapPercentToKeyframes(state.value);\r\n        }\r\n        let { done } = state;\r\n        if (!isInDelayPhase && calculatedDuration !== null) {\r\n            done =\r\n                this.speed >= 0\r\n                    ? this.currentTime >= totalDuration\r\n                    : this.currentTime <= 0;\r\n        }\r\n        const isAnimationFinished = this.holdTime === null &&\r\n            (this.state === \"finished\" || (this.state === \"running\" && done));\r\n        if (isAnimationFinished && finalKeyframe !== undefined) {\r\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\r\n        }\r\n        if (onUpdate) {\r\n            onUpdate(state.value);\r\n        }\r\n        if (isAnimationFinished) {\r\n            this.finish();\r\n        }\r\n        return state;\r\n    }\r\n    get duration() {\r\n        const { resolved } = this;\r\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\r\n    }\r\n    get time() {\r\n        return millisecondsToSeconds(this.currentTime);\r\n    }\r\n    set time(newTime) {\r\n        newTime = secondsToMilliseconds(newTime);\r\n        this.currentTime = newTime;\r\n        if (this.holdTime !== null || this.speed === 0) {\r\n            this.holdTime = newTime;\r\n        }\r\n        else if (this.driver) {\r\n            this.startTime = this.driver.now() - newTime / this.speed;\r\n        }\r\n    }\r\n    get speed() {\r\n        return this.playbackSpeed;\r\n    }\r\n    set speed(newSpeed) {\r\n        const hasChanged = this.playbackSpeed !== newSpeed;\r\n        this.playbackSpeed = newSpeed;\r\n        if (hasChanged) {\r\n            this.time = millisecondsToSeconds(this.currentTime);\r\n        }\r\n    }\r\n    play() {\r\n        if (!this.resolver.isScheduled) {\r\n            this.resolver.resume();\r\n        }\r\n        if (!this._resolved) {\r\n            this.pendingPlayState = \"running\";\r\n            return;\r\n        }\r\n        if (this.isStopped)\r\n            return;\r\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\r\n        if (!this.driver) {\r\n            this.driver = driver((timestamp) => this.tick(timestamp));\r\n        }\r\n        onPlay && onPlay();\r\n        const now = this.driver.now();\r\n        if (this.holdTime !== null) {\r\n            this.startTime = now - this.holdTime;\r\n        }\r\n        else if (!this.startTime) {\r\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\r\n        }\r\n        else if (this.state === \"finished\") {\r\n            this.startTime = now;\r\n        }\r\n        if (this.state === \"finished\") {\r\n            this.updateFinishedPromise();\r\n        }\r\n        this.cancelTime = this.startTime;\r\n        this.holdTime = null;\r\n        /**\r\n         * Set playState to running only after we've used it in\r\n         * the previous logic.\r\n         */\r\n        this.state = \"running\";\r\n        this.driver.start();\r\n    }\r\n    pause() {\r\n        var _a;\r\n        if (!this._resolved) {\r\n            this.pendingPlayState = \"paused\";\r\n            return;\r\n        }\r\n        this.state = \"paused\";\r\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\r\n    }\r\n    complete() {\r\n        if (this.state !== \"running\") {\r\n            this.play();\r\n        }\r\n        this.pendingPlayState = this.state = \"finished\";\r\n        this.holdTime = null;\r\n    }\r\n    finish() {\r\n        this.teardown();\r\n        this.state = \"finished\";\r\n        const { onComplete } = this.options;\r\n        onComplete && onComplete();\r\n    }\r\n    cancel() {\r\n        if (this.cancelTime !== null) {\r\n            this.tick(this.cancelTime);\r\n        }\r\n        this.teardown();\r\n        this.updateFinishedPromise();\r\n    }\r\n    teardown() {\r\n        this.state = \"idle\";\r\n        this.stopDriver();\r\n        this.resolveFinishedPromise();\r\n        this.updateFinishedPromise();\r\n        this.startTime = this.cancelTime = null;\r\n        this.resolver.cancel();\r\n    }\r\n    stopDriver() {\r\n        if (!this.driver)\r\n            return;\r\n        this.driver.stop();\r\n        this.driver = undefined;\r\n    }\r\n    sample(time) {\r\n        this.startTime = 0;\r\n        return this.tick(time, true);\r\n    }\r\n}\r\n// Legacy interface\r\nfunction animateValue(options) {\r\n    return new MainThreadAnimation(options);\r\n}\r\n\r\nexport { MainThreadAnimation, animateValue };\r\n","const isNotNull = (value) => value !== null;\r\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\r\n    const resolvedKeyframes = keyframes.filter(isNotNull);\r\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\r\n        ? 0\r\n        : resolvedKeyframes.length - 1;\r\n    return !index || finalKeyframe === undefined\r\n        ? resolvedKeyframes[index]\r\n        : finalKeyframe;\r\n}\r\n\r\nexport { getFinalKeyframe };\r\n","\"use client\";\r\nimport { createContext } from 'react';\r\n\r\n/**\r\n * @public\r\n */\r\nconst MotionConfigContext = createContext({\r\n    transformPagePoint: (p) => p,\r\n    isStatic: false,\r\n    reducedMotion: \"never\",\r\n});\r\n\r\nexport { MotionConfigContext };\r\n","import { backIn } from './back.mjs';\r\n\r\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\r\n\r\nexport { anticipate };\r\n","import { cubicBezier } from './cubic-bezier.mjs';\r\nimport { mirrorEasing } from './modifiers/mirror.mjs';\r\nimport { reverseEasing } from './modifiers/reverse.mjs';\r\n\r\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\r\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\r\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\r\n\r\nexport { backIn, backInOut, backOut };\r\n","import { mirrorEasing } from './modifiers/mirror.mjs';\r\nimport { reverseEasing } from './modifiers/reverse.mjs';\r\n\r\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\r\nconst circOut = reverseEasing(circIn);\r\nconst circInOut = mirrorEasing(circIn);\r\n\r\nexport { circIn, circInOut, circOut };\r\n","import { noop } from 'motion-utils';\r\n\r\n/*\r\n  Bezier function generator\r\n  This has been modified from Gaëtan Renaudeau's BezierEasing\r\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\r\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\r\n  \r\n  I've removed the newtonRaphsonIterate algo because in benchmarking it\r\n  wasn't noticiably faster than binarySubdivision, indeed removing it\r\n  usually improved times, depending on the curve.\r\n  I also removed the lookup table, as for the added bundle size and loop we're\r\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\r\n  to 12 to compensate and this still tended to be faster for no perceivable\r\n  loss in accuracy.\r\n  Usage\r\n    const easeOut = cubicBezier(.17,.67,.83,.67);\r\n    const x = easeOut(0.5); // returns 0.627...\r\n*/\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\r\n    t;\r\nconst subdivisionPrecision = 0.0000001;\r\nconst subdivisionMaxIterations = 12;\r\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\r\n    let currentX;\r\n    let currentT;\r\n    let i = 0;\r\n    do {\r\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\r\n        currentX = calcBezier(currentT, mX1, mX2) - x;\r\n        if (currentX > 0.0) {\r\n            upperBound = currentT;\r\n        }\r\n        else {\r\n            lowerBound = currentT;\r\n        }\r\n    } while (Math.abs(currentX) > subdivisionPrecision &&\r\n        ++i < subdivisionMaxIterations);\r\n    return currentT;\r\n}\r\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\r\n    // If this is a linear gradient, return linear easing\r\n    if (mX1 === mY1 && mX2 === mY2)\r\n        return noop;\r\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\r\n    // If animation is at start/end, return t without easing\r\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\r\n}\r\n\r\nexport { cubicBezier };\r\n","// Accepts an easing function and returns a new one that outputs mirrored values for\r\n// the second half of the animation. Turns easeIn into easeInOut.\r\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\r\n\r\nexport { mirrorEasing };\r\n","// Accepts an easing function and returns a new one that outputs reversed values.\r\n// Turns easeIn into easeOut.\r\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\r\n\r\nexport { reverseEasing };\r\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\r\nimport { createRenderStep } from './render-step.mjs';\r\n\r\nconst stepsOrder = [\r\n    \"read\", // Read\r\n    \"resolveKeyframes\", // Write/Read/Write/Read\r\n    \"update\", // Compute\r\n    \"preRender\", // Compute\r\n    \"render\", // Write\r\n    \"postRender\", // Compute\r\n];\r\nconst maxElapsed = 40;\r\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\r\n    let runNextFrame = false;\r\n    let useDefaultElapsed = true;\r\n    const state = {\r\n        delta: 0.0,\r\n        timestamp: 0.0,\r\n        isProcessing: false,\r\n    };\r\n    const flagRunNextFrame = () => (runNextFrame = true);\r\n    const steps = stepsOrder.reduce((acc, key) => {\r\n        acc[key] = createRenderStep(flagRunNextFrame);\r\n        return acc;\r\n    }, {});\r\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\r\n    const processBatch = () => {\r\n        const timestamp = MotionGlobalConfig.useManualTiming\r\n            ? state.timestamp\r\n            : performance.now();\r\n        runNextFrame = false;\r\n        state.delta = useDefaultElapsed\r\n            ? 1000 / 60\r\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\r\n        state.timestamp = timestamp;\r\n        state.isProcessing = true;\r\n        // Unrolled render loop for better per-frame performance\r\n        read.process(state);\r\n        resolveKeyframes.process(state);\r\n        update.process(state);\r\n        preRender.process(state);\r\n        render.process(state);\r\n        postRender.process(state);\r\n        state.isProcessing = false;\r\n        if (runNextFrame && allowKeepAlive) {\r\n            useDefaultElapsed = false;\r\n            scheduleNextBatch(processBatch);\r\n        }\r\n    };\r\n    const wake = () => {\r\n        runNextFrame = true;\r\n        useDefaultElapsed = true;\r\n        if (!state.isProcessing) {\r\n            scheduleNextBatch(processBatch);\r\n        }\r\n    };\r\n    const schedule = stepsOrder.reduce((acc, key) => {\r\n        const step = steps[key];\r\n        acc[key] = (process, keepAlive = false, immediate = false) => {\r\n            if (!runNextFrame)\r\n                wake();\r\n            return step.schedule(process, keepAlive, immediate);\r\n        };\r\n        return acc;\r\n    }, {});\r\n    const cancel = (process) => {\r\n        for (let i = 0; i < stepsOrder.length; i++) {\r\n            steps[stepsOrder[i]].cancel(process);\r\n        }\r\n    };\r\n    return { schedule, cancel, state, steps };\r\n}\r\n\r\nexport { createRenderBatcher, stepsOrder };\r\n","function createRenderStep(runNextFrame) {\r\n    /**\r\n     * We create and reuse two queues, one to queue jobs for the current frame\r\n     * and one for the next. We reuse to avoid triggering GC after x frames.\r\n     */\r\n    let thisFrame = new Set();\r\n    let nextFrame = new Set();\r\n    /**\r\n     * Track whether we're currently processing jobs in this step. This way\r\n     * we can decide whether to schedule new jobs for this frame or next.\r\n     */\r\n    let isProcessing = false;\r\n    let flushNextFrame = false;\r\n    /**\r\n     * A set of processes which were marked keepAlive when scheduled.\r\n     */\r\n    const toKeepAlive = new WeakSet();\r\n    let latestFrameData = {\r\n        delta: 0.0,\r\n        timestamp: 0.0,\r\n        isProcessing: false,\r\n    };\r\n    function triggerCallback(callback) {\r\n        if (toKeepAlive.has(callback)) {\r\n            step.schedule(callback);\r\n            runNextFrame();\r\n        }\r\n        callback(latestFrameData);\r\n    }\r\n    const step = {\r\n        /**\r\n         * Schedule a process to run on the next frame.\r\n         */\r\n        schedule: (callback, keepAlive = false, immediate = false) => {\r\n            const addToCurrentFrame = immediate && isProcessing;\r\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\r\n            if (keepAlive)\r\n                toKeepAlive.add(callback);\r\n            if (!queue.has(callback))\r\n                queue.add(callback);\r\n            return callback;\r\n        },\r\n        /**\r\n         * Cancel the provided callback from running on the next frame.\r\n         */\r\n        cancel: (callback) => {\r\n            nextFrame.delete(callback);\r\n            toKeepAlive.delete(callback);\r\n        },\r\n        /**\r\n         * Execute all schedule callbacks.\r\n         */\r\n        process: (frameData) => {\r\n            latestFrameData = frameData;\r\n            /**\r\n             * If we're already processing we've probably been triggered by a flushSync\r\n             * inside an existing process. Instead of executing, mark flushNextFrame\r\n             * as true and ensure we flush the following frame at the end of this one.\r\n             */\r\n            if (isProcessing) {\r\n                flushNextFrame = true;\r\n                return;\r\n            }\r\n            isProcessing = true;\r\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\r\n            // Execute this frame\r\n            thisFrame.forEach(triggerCallback);\r\n            // Clear the frame so no callbacks remain. This is to avoid\r\n            // memory leaks should this render step not run for a while.\r\n            thisFrame.clear();\r\n            isProcessing = false;\r\n            if (flushNextFrame) {\r\n                flushNextFrame = false;\r\n                step.process(frameData);\r\n            }\r\n        },\r\n    };\r\n    return step;\r\n}\r\n\r\nexport { createRenderStep };\r\n","import { noop } from 'motion-utils';\r\nimport { createRenderBatcher } from './batcher.mjs';\r\n\r\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\r\n\r\nexport { cancelFrame, frame, frameData, frameSteps };\r\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\r\nimport { frameData } from './frame.mjs';\r\n\r\nlet now;\r\nfunction clearTime() {\r\n    now = undefined;\r\n}\r\n/**\r\n * An eventloop-synchronous alternative to performance.now().\r\n *\r\n * Ensures that time measurements remain consistent within a synchronous context.\r\n * Usually calling performance.now() twice within the same synchronous context\r\n * will return different values which isn't useful for animations when we're usually\r\n * trying to sync animations to the same frame.\r\n */\r\nconst time = {\r\n    now: () => {\r\n        if (now === undefined) {\r\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\r\n                ? frameData.timestamp\r\n                : performance.now());\r\n        }\r\n        return now;\r\n    },\r\n    set: (newTime) => {\r\n        now = newTime;\r\n        queueMicrotask(clearTime);\r\n    },\r\n};\r\n\r\nexport { time };\r\n","import { warnOnce } from '../../utils/warn-once.mjs';\r\n\r\nfunction createDOMMotionComponentProxy(componentFactory) {\r\n    if (typeof Proxy === \"undefined\") {\r\n        return componentFactory;\r\n    }\r\n    /**\r\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\r\n     * Rather than generating them anew every render.\r\n     */\r\n    const componentCache = new Map();\r\n    const deprecatedFactoryFunction = (...args) => {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\r\n        }\r\n        return componentFactory(...args);\r\n    };\r\n    return new Proxy(deprecatedFactoryFunction, {\r\n        /**\r\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\r\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\r\n         * DOM component with that name.\r\n         */\r\n        get: (_target, key) => {\r\n            if (key === \"create\")\r\n                return componentFactory;\r\n            /**\r\n             * If this element doesn't exist in the component cache, create it and cache.\r\n             */\r\n            if (!componentCache.has(key)) {\r\n                componentCache.set(key, componentFactory(key));\r\n            }\r\n            return componentCache.get(key);\r\n        },\r\n    });\r\n}\r\n\r\nexport { createDOMMotionComponentProxy };\r\n","function isAnimationControls(v) {\r\n    return (v !== null &&\r\n        typeof v === \"object\" &&\r\n        typeof v.start === \"function\");\r\n}\r\n\r\nexport { isAnimationControls };\r\n","const isKeyframesTarget = (v) => {\r\n    return Array.isArray(v);\r\n};\r\n\r\nexport { isKeyframesTarget };\r\n","function shallowCompare(next, prev) {\r\n    if (!Array.isArray(prev))\r\n        return false;\r\n    const prevLength = prev.length;\r\n    if (prevLength !== next.length)\r\n        return false;\r\n    for (let i = 0; i < prevLength; i++) {\r\n        if (prev[i] !== next[i])\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport { shallowCompare };\r\n","/**\r\n * Decides if the supplied variable is variant label\r\n */\r\nfunction isVariantLabel(v) {\r\n    return typeof v === \"string\" || Array.isArray(v);\r\n}\r\n\r\nexport { isVariantLabel };\r\n","function getValueState(visualElement) {\r\n    const state = [{}, {}];\r\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\r\n        state[0][key] = value.get();\r\n        state[1][key] = value.getVelocity();\r\n    });\r\n    return state;\r\n}\r\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\r\n    /**\r\n     * If the variant definition is a function, resolve.\r\n     */\r\n    if (typeof definition === \"function\") {\r\n        const [current, velocity] = getValueState(visualElement);\r\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\r\n    }\r\n    /**\r\n     * If the variant definition is a variant label, or\r\n     * the function returned a variant label, resolve.\r\n     */\r\n    if (typeof definition === \"string\") {\r\n        definition = props.variants && props.variants[definition];\r\n    }\r\n    /**\r\n     * At this point we've resolved both functions and variant labels,\r\n     * but the resolved variant label might itself have been a function.\r\n     * If so, resolve. This can only have returned a valid target object.\r\n     */\r\n    if (typeof definition === \"function\") {\r\n        const [current, velocity] = getValueState(visualElement);\r\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\r\n    }\r\n    return definition;\r\n}\r\n\r\nexport { resolveVariantFromProps };\r\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\r\n\r\nfunction resolveVariant(visualElement, definition, custom) {\r\n    const props = visualElement.getProps();\r\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\r\n}\r\n\r\nexport { resolveVariant };\r\n","const variantPriorityOrder = [\r\n    \"animate\",\r\n    \"whileInView\",\r\n    \"whileFocus\",\r\n    \"whileHover\",\r\n    \"whileTap\",\r\n    \"whileDrag\",\r\n    \"exit\",\r\n];\r\nconst variantProps = [\"initial\", ...variantPriorityOrder];\r\n\r\nexport { variantPriorityOrder, variantProps };\r\n","import { transformPropOrder } from './keys-transform.mjs';\r\n\r\nconst positionalKeys = new Set([\r\n    \"width\",\r\n    \"height\",\r\n    \"top\",\r\n    \"left\",\r\n    \"right\",\r\n    \"bottom\",\r\n    ...transformPropOrder,\r\n]);\r\n\r\nexport { positionalKeys };\r\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\r\nimport { motionValue } from '../../value/index.mjs';\r\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\r\n\r\n/**\r\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\r\n * it doesn't exist.\r\n */\r\nfunction setMotionValue(visualElement, key, value) {\r\n    if (visualElement.hasValue(key)) {\r\n        visualElement.getValue(key).set(value);\r\n    }\r\n    else {\r\n        visualElement.addValue(key, motionValue(value));\r\n    }\r\n}\r\nfunction setTarget(visualElement, definition) {\r\n    const resolved = resolveVariant(visualElement, definition);\r\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\r\n    target = { ...target, ...transitionEnd };\r\n    for (const key in target) {\r\n        const value = resolveFinalValueInKeyframes(target[key]);\r\n        setMotionValue(visualElement, key, value);\r\n    }\r\n}\r\n\r\nexport { setTarget };\r\n","import { isWillChangeMotionValue } from './is.mjs';\r\n\r\nfunction addValueToWillChange(visualElement, key) {\r\n    const willChange = visualElement.getValue(\"willChange\");\r\n    /**\r\n     * It could be that a user has set willChange to a regular MotionValue,\r\n     * in which case we can't add the value to it.\r\n     */\r\n    if (isWillChangeMotionValue(willChange)) {\r\n        return willChange.add(key);\r\n    }\r\n}\r\n\r\nexport { addValueToWillChange };\r\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\r\n\r\nfunction isWillChangeMotionValue(value) {\r\n    return Boolean(isMotionValue(value) && value.add);\r\n}\r\n\r\nexport { isWillChangeMotionValue };\r\n","/**\r\n * Convert camelCase to dash-case properties.\r\n */\r\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\r\n\r\nexport { camelToDash };\r\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\r\n\r\nconst optimizedAppearDataId = \"framerAppearId\";\r\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\r\n\r\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\r\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\r\n\r\nfunction getOptimisedAppearId(visualElement) {\r\n    return visualElement.props[optimizedAppearDataAttribute];\r\n}\r\n\r\nexport { getOptimisedAppearId };\r\n","/**\r\n * Check if the value is a zero value string like \"0px\" or \"0%\"\r\n */\r\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\r\n\r\nexport { isZeroValueString };\r\n","import { complex } from './index.mjs';\r\nimport { floatRegex } from '../utils/float-regex.mjs';\r\n\r\n/**\r\n * Properties that should default to 1 or 100%\r\n */\r\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\r\nfunction applyDefaultFilter(v) {\r\n    const [name, value] = v.slice(0, -1).split(\"(\");\r\n    if (name === \"drop-shadow\")\r\n        return v;\r\n    const [number] = value.match(floatRegex) || [];\r\n    if (!number)\r\n        return v;\r\n    const unit = value.replace(number, \"\");\r\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\r\n    if (number !== value)\r\n        defaultValue *= 100;\r\n    return name + \"(\" + defaultValue + unit + \")\";\r\n}\r\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\r\nconst filter = {\r\n    ...complex,\r\n    getAnimatableNone: (v) => {\r\n        const functions = v.match(functionRegex);\r\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\r\n    },\r\n};\r\n\r\nexport { filter };\r\n","import { px } from '../../../value/types/numbers/units.mjs';\r\n\r\nconst browserNumberValueTypes = {\r\n    // Border props\r\n    borderWidth: px,\r\n    borderTopWidth: px,\r\n    borderRightWidth: px,\r\n    borderBottomWidth: px,\r\n    borderLeftWidth: px,\r\n    borderRadius: px,\r\n    radius: px,\r\n    borderTopLeftRadius: px,\r\n    borderTopRightRadius: px,\r\n    borderBottomRightRadius: px,\r\n    borderBottomLeftRadius: px,\r\n    // Positioning props\r\n    width: px,\r\n    maxWidth: px,\r\n    height: px,\r\n    maxHeight: px,\r\n    top: px,\r\n    right: px,\r\n    bottom: px,\r\n    left: px,\r\n    // Spacing props\r\n    padding: px,\r\n    paddingTop: px,\r\n    paddingRight: px,\r\n    paddingBottom: px,\r\n    paddingLeft: px,\r\n    margin: px,\r\n    marginTop: px,\r\n    marginRight: px,\r\n    marginBottom: px,\r\n    marginLeft: px,\r\n    // Misc\r\n    backgroundPositionX: px,\r\n    backgroundPositionY: px,\r\n};\r\n\r\nexport { browserNumberValueTypes };\r\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\r\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\r\n\r\nconst transformValueTypes = {\r\n    rotate: degrees,\r\n    rotateX: degrees,\r\n    rotateY: degrees,\r\n    rotateZ: degrees,\r\n    scale,\r\n    scaleX: scale,\r\n    scaleY: scale,\r\n    scaleZ: scale,\r\n    skew: degrees,\r\n    skewX: degrees,\r\n    skewY: degrees,\r\n    distance: px,\r\n    translateX: px,\r\n    translateY: px,\r\n    translateZ: px,\r\n    x: px,\r\n    y: px,\r\n    z: px,\r\n    perspective: px,\r\n    transformPerspective: px,\r\n    opacity: alpha,\r\n    originX: progressPercentage,\r\n    originY: progressPercentage,\r\n    originZ: px,\r\n};\r\n\r\nexport { transformValueTypes };\r\n","import { number } from '../../../value/types/numbers/index.mjs';\r\n\r\nconst int = {\r\n    ...number,\r\n    transform: Math.round,\r\n};\r\n\r\nexport { int };\r\n","import { alpha } from '../../../value/types/numbers/index.mjs';\r\nimport { px } from '../../../value/types/numbers/units.mjs';\r\nimport { browserNumberValueTypes } from './number-browser.mjs';\r\nimport { transformValueTypes } from './transform.mjs';\r\nimport { int } from './type-int.mjs';\r\n\r\nconst numberValueTypes = {\r\n    ...browserNumberValueTypes,\r\n    ...transformValueTypes,\r\n    zIndex: int,\r\n    size: px,\r\n    // SVG\r\n    fillOpacity: alpha,\r\n    strokeOpacity: alpha,\r\n    numOctaves: int,\r\n};\r\n\r\nexport { numberValueTypes };\r\n","import { color } from '../../../value/types/color/index.mjs';\r\nimport { filter } from '../../../value/types/complex/filter.mjs';\r\nimport { numberValueTypes } from './number.mjs';\r\n\r\n/**\r\n * A map of default value types for common values\r\n */\r\nconst defaultValueTypes = {\r\n    ...numberValueTypes,\r\n    // Color props\r\n    color,\r\n    backgroundColor: color,\r\n    outlineColor: color,\r\n    fill: color,\r\n    stroke: color,\r\n    // Border props\r\n    borderColor: color,\r\n    borderTopColor: color,\r\n    borderRightColor: color,\r\n    borderBottomColor: color,\r\n    borderLeftColor: color,\r\n    filter,\r\n    WebkitFilter: filter,\r\n};\r\n/**\r\n * Gets the default ValueType for the provided value key\r\n */\r\nconst getDefaultValueType = (key) => defaultValueTypes[key];\r\n\r\nexport { defaultValueTypes, getDefaultValueType };\r\n","import { complex } from '../../../value/types/complex/index.mjs';\r\nimport { filter } from '../../../value/types/complex/filter.mjs';\r\nimport { getDefaultValueType } from './defaults.mjs';\r\n\r\nfunction getAnimatableNone(key, value) {\r\n    let defaultValueType = getDefaultValueType(key);\r\n    if (defaultValueType !== filter)\r\n        defaultValueType = complex;\r\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\r\n    return defaultValueType.getAnimatableNone\r\n        ? defaultValueType.getAnimatableNone(value)\r\n        : undefined;\r\n}\r\n\r\nexport { getAnimatableNone };\r\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\r\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\r\n\r\n/**\r\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\r\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\r\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\r\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\r\n */\r\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\r\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\r\n    let i = 0;\r\n    let animatableTemplate = undefined;\r\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\r\n        const keyframe = unresolvedKeyframes[i];\r\n        if (typeof keyframe === \"string\" &&\r\n            !invalidTemplates.has(keyframe) &&\r\n            analyseComplexValue(keyframe).values.length) {\r\n            animatableTemplate = unresolvedKeyframes[i];\r\n        }\r\n        i++;\r\n    }\r\n    if (animatableTemplate && name) {\r\n        for (const noneIndex of noneKeyframeIndexes) {\r\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\r\n        }\r\n    }\r\n}\r\n\r\nexport { makeNoneKeyframesAnimatable };\r\n","/**\r\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\r\n */\r\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\r\n\r\nexport { isNumericalString };\r\n","import { invariant } from 'motion-utils';\r\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\r\nimport { isCSSVariableToken } from './is-css-variable.mjs';\r\n\r\n/**\r\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\r\n *\r\n * ```\r\n * `var(--foo, #fff)` => [`--foo`, '#fff']\r\n * ```\r\n *\r\n * @param current\r\n */\r\nconst splitCSSVariableRegex = \r\n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\r\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\r\nfunction parseCSSVariable(current) {\r\n    const match = splitCSSVariableRegex.exec(current);\r\n    if (!match)\r\n        return [,];\r\n    const [, token1, token2, fallback] = match;\r\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\r\n}\r\nconst maxDepth = 4;\r\nfunction getVariableValue(current, element, depth = 1) {\r\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\r\n    const [token, fallback] = parseCSSVariable(current);\r\n    // No CSS variable detected\r\n    if (!token)\r\n        return;\r\n    // Attempt to read this CSS variable off the element\r\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\r\n    if (resolved) {\r\n        const trimmed = resolved.trim();\r\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\r\n    }\r\n    return isCSSVariableToken(fallback)\r\n        ? getVariableValue(fallback, element, depth + 1)\r\n        : fallback;\r\n}\r\n\r\nexport { getVariableValue, parseCSSVariable };\r\n","/**\r\n * Tests a provided value against a ValueType\r\n */\r\nconst testValueType = (v) => (type) => type.test(v);\r\n\r\nexport { testValueType };\r\n","import { number } from '../../../value/types/numbers/index.mjs';\r\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\r\nimport { testValueType } from './test.mjs';\r\nimport { auto } from './type-auto.mjs';\r\n\r\n/**\r\n * A list of value types commonly used for dimensions\r\n */\r\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\r\n/**\r\n * Tests a dimensional value against the list of dimension ValueTypes\r\n */\r\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\r\n\r\nexport { dimensionValueTypes, findDimensionValueType };\r\n","/**\r\n * ValueType for \"auto\"\r\n */\r\nconst auto = {\r\n    test: (v) => v === \"auto\",\r\n    parse: (v) => v,\r\n};\r\n\r\nexport { auto };\r\n","import { isNone } from '../../animation/utils/is-none.mjs';\r\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\r\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\r\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\r\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\r\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\r\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\r\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\r\n\r\nclass DOMKeyframesResolver extends KeyframeResolver {\r\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\r\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\r\n    }\r\n    readKeyframes() {\r\n        const { unresolvedKeyframes, element, name } = this;\r\n        if (!element || !element.current)\r\n            return;\r\n        super.readKeyframes();\r\n        /**\r\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\r\n         */\r\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\r\n            let keyframe = unresolvedKeyframes[i];\r\n            if (typeof keyframe === \"string\") {\r\n                keyframe = keyframe.trim();\r\n                if (isCSSVariableToken(keyframe)) {\r\n                    const resolved = getVariableValue(keyframe, element.current);\r\n                    if (resolved !== undefined) {\r\n                        unresolvedKeyframes[i] = resolved;\r\n                    }\r\n                    if (i === unresolvedKeyframes.length - 1) {\r\n                        this.finalKeyframe = keyframe;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        /**\r\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\r\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\r\n         * have a far bigger performance impact.\r\n         */\r\n        this.resolveNoneKeyframes();\r\n        /**\r\n         * Check to see if unit type has changed. If so schedule jobs that will\r\n         * temporarily set styles to the destination keyframes.\r\n         * Skip if we have more than two keyframes or this isn't a positional value.\r\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\r\n         */\r\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\r\n            return;\r\n        }\r\n        const [origin, target] = unresolvedKeyframes;\r\n        const originType = findDimensionValueType(origin);\r\n        const targetType = findDimensionValueType(target);\r\n        /**\r\n         * Either we don't recognise these value types or we can animate between them.\r\n         */\r\n        if (originType === targetType)\r\n            return;\r\n        /**\r\n         * If both values are numbers or pixels, we can animate between them by\r\n         * converting them to numbers.\r\n         */\r\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\r\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\r\n                const value = unresolvedKeyframes[i];\r\n                if (typeof value === \"string\") {\r\n                    unresolvedKeyframes[i] = parseFloat(value);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            /**\r\n             * Else, the only way to resolve this is by measuring the element.\r\n             */\r\n            this.needsMeasurement = true;\r\n        }\r\n    }\r\n    resolveNoneKeyframes() {\r\n        const { unresolvedKeyframes, name } = this;\r\n        const noneKeyframeIndexes = [];\r\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\r\n            if (isNone(unresolvedKeyframes[i])) {\r\n                noneKeyframeIndexes.push(i);\r\n            }\r\n        }\r\n        if (noneKeyframeIndexes.length) {\r\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\r\n        }\r\n    }\r\n    measureInitialState() {\r\n        const { element, unresolvedKeyframes, name } = this;\r\n        if (!element || !element.current)\r\n            return;\r\n        if (name === \"height\") {\r\n            this.suspendedScrollY = window.pageYOffset;\r\n        }\r\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\r\n        unresolvedKeyframes[0] = this.measuredOrigin;\r\n        // Set final key frame to measure after next render\r\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\r\n        if (measureKeyframe !== undefined) {\r\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\r\n        }\r\n    }\r\n    measureEndState() {\r\n        var _a;\r\n        const { element, name, unresolvedKeyframes } = this;\r\n        if (!element || !element.current)\r\n            return;\r\n        const value = element.getValue(name);\r\n        value && value.jump(this.measuredOrigin, false);\r\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\r\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\r\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\r\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\r\n            this.finalKeyframe = finalKeyframe;\r\n        }\r\n        // If we removed transform values, reapply them before the next render\r\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\r\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\r\n                element\r\n                    .getValue(unsetTransformName)\r\n                    .set(unsetTransformValue);\r\n            });\r\n        }\r\n        this.resolveNoneKeyframes();\r\n    }\r\n}\r\n\r\nexport { DOMKeyframesResolver };\r\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\r\n\r\nfunction isNone(value) {\r\n    if (typeof value === \"number\") {\r\n        return value === 0;\r\n    }\r\n    else if (value !== null) {\r\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\r\n    }\r\n    else {\r\n        return true;\r\n    }\r\n}\r\n\r\nexport { isNone };\r\n","/**\r\n * A list of values that can be hardware-accelerated.\r\n */\r\nconst acceleratedValues = new Set([\r\n    \"opacity\",\r\n    \"clipPath\",\r\n    \"filter\",\r\n    \"transform\",\r\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\r\n    // or until we implement support for linear() easing.\r\n    // \"background-color\"\r\n]);\r\n\r\nexport { acceleratedValues };\r\n","import { memo } from 'motion-utils';\r\n\r\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\r\n\r\nexport { supportsWaapi };\r\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\r\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\r\nimport { anticipate } from '../../easing/anticipate.mjs';\r\nimport { backInOut } from '../../easing/back.mjs';\r\nimport { circInOut } from '../../easing/circ.mjs';\r\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\r\nimport { BaseAnimation } from './BaseAnimation.mjs';\r\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\r\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\r\nimport { startWaapiAnimation } from './waapi/index.mjs';\r\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\r\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\r\n\r\n/**\r\n * 10ms is chosen here as it strikes a balance between smooth\r\n * results (more than one keyframe per frame at 60fps) and\r\n * keyframe quantity.\r\n */\r\nconst sampleDelta = 10; //ms\r\n/**\r\n * Implement a practical max duration for keyframe generation\r\n * to prevent infinite loops\r\n */\r\nconst maxDuration = 20000;\r\n/**\r\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\r\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\r\n * handing off.\r\n */\r\nfunction requiresPregeneratedKeyframes(options) {\r\n    return (isGenerator(options.type) ||\r\n        options.type === \"spring\" ||\r\n        !isWaapiSupportedEasing(options.ease));\r\n}\r\nfunction pregenerateKeyframes(keyframes, options) {\r\n    /**\r\n     * Create a main-thread animation to pregenerate keyframes.\r\n     * We sample this at regular intervals to generate keyframes that we then\r\n     * linearly interpolate between.\r\n     */\r\n    const sampleAnimation = new MainThreadAnimation({\r\n        ...options,\r\n        keyframes,\r\n        repeat: 0,\r\n        delay: 0,\r\n        isGenerator: true,\r\n    });\r\n    let state = { done: false, value: keyframes[0] };\r\n    const pregeneratedKeyframes = [];\r\n    /**\r\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\r\n     * we're heading for an infinite loop.\r\n     */\r\n    let t = 0;\r\n    while (!state.done && t < maxDuration) {\r\n        state = sampleAnimation.sample(t);\r\n        pregeneratedKeyframes.push(state.value);\r\n        t += sampleDelta;\r\n    }\r\n    return {\r\n        times: undefined,\r\n        keyframes: pregeneratedKeyframes,\r\n        duration: t - sampleDelta,\r\n        ease: \"linear\",\r\n    };\r\n}\r\nconst unsupportedEasingFunctions = {\r\n    anticipate,\r\n    backInOut,\r\n    circInOut,\r\n};\r\nfunction isUnsupportedEase(key) {\r\n    return key in unsupportedEasingFunctions;\r\n}\r\nclass AcceleratedAnimation extends BaseAnimation {\r\n    constructor(options) {\r\n        super(options);\r\n        const { name, motionValue, element, keyframes } = this.options;\r\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\r\n        this.resolver.scheduleResolve();\r\n    }\r\n    initPlayback(keyframes, finalKeyframe) {\r\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\r\n        /**\r\n         * If element has since been unmounted, return false to indicate\r\n         * the animation failed to initialised.\r\n         */\r\n        if (!motionValue.owner || !motionValue.owner.current) {\r\n            return false;\r\n        }\r\n        /**\r\n         * If the user has provided an easing function name that isn't supported\r\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\r\n         * function. This will later get converted to a linear() easing function.\r\n         */\r\n        if (typeof ease === \"string\" &&\r\n            supportsLinearEasing() &&\r\n            isUnsupportedEase(ease)) {\r\n            ease = unsupportedEasingFunctions[ease];\r\n        }\r\n        /**\r\n         * If this animation needs pre-generated keyframes then generate.\r\n         */\r\n        if (requiresPregeneratedKeyframes(this.options)) {\r\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\r\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\r\n            keyframes = pregeneratedAnimation.keyframes;\r\n            // If this is a very short animation, ensure we have\r\n            // at least two keyframes to animate between as older browsers\r\n            // can't animate between a single keyframe.\r\n            if (keyframes.length === 1) {\r\n                keyframes[1] = keyframes[0];\r\n            }\r\n            duration = pregeneratedAnimation.duration;\r\n            times = pregeneratedAnimation.times;\r\n            ease = pregeneratedAnimation.ease;\r\n            type = \"keyframes\";\r\n        }\r\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\r\n        // Override the browser calculated startTime with one synchronised to other JS\r\n        // and WAAPI animations starting this event loop.\r\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\r\n        if (this.pendingTimeline) {\r\n            attachTimeline(animation, this.pendingTimeline);\r\n            this.pendingTimeline = undefined;\r\n        }\r\n        else {\r\n            /**\r\n             * Prefer the `onfinish` prop as it's more widely supported than\r\n             * the `finished` promise.\r\n             *\r\n             * Here, we synchronously set the provided MotionValue to the end\r\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\r\n             * be removed from the element which would then revert to its old styles.\r\n             */\r\n            animation.onfinish = () => {\r\n                const { onComplete } = this.options;\r\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\r\n                onComplete && onComplete();\r\n                this.cancel();\r\n                this.resolveFinishedPromise();\r\n            };\r\n        }\r\n        return {\r\n            animation,\r\n            duration,\r\n            times,\r\n            type,\r\n            ease,\r\n            keyframes: keyframes,\r\n        };\r\n    }\r\n    get duration() {\r\n        const { resolved } = this;\r\n        if (!resolved)\r\n            return 0;\r\n        const { duration } = resolved;\r\n        return millisecondsToSeconds(duration);\r\n    }\r\n    get time() {\r\n        const { resolved } = this;\r\n        if (!resolved)\r\n            return 0;\r\n        const { animation } = resolved;\r\n        return millisecondsToSeconds(animation.currentTime || 0);\r\n    }\r\n    set time(newTime) {\r\n        const { resolved } = this;\r\n        if (!resolved)\r\n            return;\r\n        const { animation } = resolved;\r\n        animation.currentTime = secondsToMilliseconds(newTime);\r\n    }\r\n    get speed() {\r\n        const { resolved } = this;\r\n        if (!resolved)\r\n            return 1;\r\n        const { animation } = resolved;\r\n        return animation.playbackRate;\r\n    }\r\n    set speed(newSpeed) {\r\n        const { resolved } = this;\r\n        if (!resolved)\r\n            return;\r\n        const { animation } = resolved;\r\n        animation.playbackRate = newSpeed;\r\n    }\r\n    get state() {\r\n        const { resolved } = this;\r\n        if (!resolved)\r\n            return \"idle\";\r\n        const { animation } = resolved;\r\n        return animation.playState;\r\n    }\r\n    get startTime() {\r\n        const { resolved } = this;\r\n        if (!resolved)\r\n            return null;\r\n        const { animation } = resolved;\r\n        // Coerce to number as TypeScript incorrectly types this\r\n        // as CSSNumberish\r\n        return animation.startTime;\r\n    }\r\n    /**\r\n     * Replace the default DocumentTimeline with another AnimationTimeline.\r\n     * Currently used for scroll animations.\r\n     */\r\n    attachTimeline(timeline) {\r\n        if (!this._resolved) {\r\n            this.pendingTimeline = timeline;\r\n        }\r\n        else {\r\n            const { resolved } = this;\r\n            if (!resolved)\r\n                return noop;\r\n            const { animation } = resolved;\r\n            attachTimeline(animation, timeline);\r\n        }\r\n        return noop;\r\n    }\r\n    play() {\r\n        if (this.isStopped)\r\n            return;\r\n        const { resolved } = this;\r\n        if (!resolved)\r\n            return;\r\n        const { animation } = resolved;\r\n        if (animation.playState === \"finished\") {\r\n            this.updateFinishedPromise();\r\n        }\r\n        animation.play();\r\n    }\r\n    pause() {\r\n        const { resolved } = this;\r\n        if (!resolved)\r\n            return;\r\n        const { animation } = resolved;\r\n        animation.pause();\r\n    }\r\n    stop() {\r\n        this.resolver.cancel();\r\n        this.isStopped = true;\r\n        if (this.state === \"idle\")\r\n            return;\r\n        this.resolveFinishedPromise();\r\n        this.updateFinishedPromise();\r\n        const { resolved } = this;\r\n        if (!resolved)\r\n            return;\r\n        const { animation, keyframes, duration, type, ease, times } = resolved;\r\n        if (animation.playState === \"idle\" ||\r\n            animation.playState === \"finished\") {\r\n            return;\r\n        }\r\n        /**\r\n         * WAAPI doesn't natively have any interruption capabilities.\r\n         *\r\n         * Rather than read commited styles back out of the DOM, we can\r\n         * create a renderless JS animation and sample it twice to calculate\r\n         * its current value, \"previous\" value, and therefore allow\r\n         * Motion to calculate velocity for any subsequent animation.\r\n         */\r\n        if (this.time) {\r\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\r\n            const sampleAnimation = new MainThreadAnimation({\r\n                ...options,\r\n                keyframes,\r\n                duration,\r\n                type,\r\n                ease,\r\n                times,\r\n                isGenerator: true,\r\n            });\r\n            const sampleTime = secondsToMilliseconds(this.time);\r\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\r\n        }\r\n        const { onStop } = this.options;\r\n        onStop && onStop();\r\n        this.cancel();\r\n    }\r\n    complete() {\r\n        const { resolved } = this;\r\n        if (!resolved)\r\n            return;\r\n        resolved.animation.finish();\r\n    }\r\n    cancel() {\r\n        const { resolved } = this;\r\n        if (!resolved)\r\n            return;\r\n        resolved.animation.cancel();\r\n    }\r\n    static supports(options) {\r\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\r\n        if (!motionValue ||\r\n            !motionValue.owner ||\r\n            !(motionValue.owner.current instanceof HTMLElement)) {\r\n            return false;\r\n        }\r\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\r\n        return (supportsWaapi() &&\r\n            name &&\r\n            acceleratedValues.has(name) &&\r\n            /**\r\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\r\n             * no way to read the value from WAAPI every frame.\r\n             */\r\n            !onUpdate &&\r\n            !transformTemplate &&\r\n            !repeatDelay &&\r\n            repeatType !== \"mirror\" &&\r\n            damping !== 0 &&\r\n            type !== \"inertia\");\r\n    }\r\n}\r\n\r\nexport { AcceleratedAnimation };\r\n","import { mapEasingToNativeEasing } from 'motion-dom';\r\n\r\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\r\n    const keyframeOptions = { [valueName]: keyframes };\r\n    if (times)\r\n        keyframeOptions.offset = times;\r\n    const easing = mapEasingToNativeEasing(ease, duration);\r\n    /**\r\n     * If this is an easing array, apply to keyframes, not animation as a whole\r\n     */\r\n    if (Array.isArray(easing))\r\n        keyframeOptions.easing = easing;\r\n    return element.animate(keyframeOptions, {\r\n        delay,\r\n        duration,\r\n        easing: !Array.isArray(easing) ? easing : \"linear\",\r\n        fill: \"both\",\r\n        iterations: repeat + 1,\r\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\r\n    });\r\n}\r\n\r\nexport { startWaapiAnimation };\r\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\r\n\r\nconst underDampedSpring = {\r\n    type: \"spring\",\r\n    stiffness: 500,\r\n    damping: 25,\r\n    restSpeed: 10,\r\n};\r\nconst criticallyDampedSpring = (target) => ({\r\n    type: \"spring\",\r\n    stiffness: 550,\r\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\r\n    restSpeed: 10,\r\n});\r\nconst keyframesTransition = {\r\n    type: \"keyframes\",\r\n    duration: 0.8,\r\n};\r\n/**\r\n * Default easing curve is a slightly shallower version of\r\n * the default browser easing curve.\r\n */\r\nconst ease = {\r\n    type: \"keyframes\",\r\n    ease: [0.25, 0.1, 0.35, 1],\r\n    duration: 0.3,\r\n};\r\nconst getDefaultTransition = (valueKey, { keyframes }) => {\r\n    if (keyframes.length > 2) {\r\n        return keyframesTransition;\r\n    }\r\n    else if (transformProps.has(valueKey)) {\r\n        return valueKey.startsWith(\"scale\")\r\n            ? criticallyDampedSpring(keyframes[1])\r\n            : underDampedSpring;\r\n    }\r\n    return ease;\r\n};\r\n\r\nexport { getDefaultTransition };\r\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\r\nimport { secondsToMilliseconds } from 'motion-utils';\r\nimport { frame } from '../../frameloop/frame.mjs';\r\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\r\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\r\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\r\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\r\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\r\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\r\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\r\n\r\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\r\n    const valueTransition = getValueTransition(transition, name) || {};\r\n    /**\r\n     * Most transition values are currently completely overwritten by value-specific\r\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\r\n     * delay actually does inherit from the root transition if not value-specific.\r\n     */\r\n    const delay = valueTransition.delay || transition.delay || 0;\r\n    /**\r\n     * Elapsed isn't a public transition option but can be passed through from\r\n     * optimized appear effects in milliseconds.\r\n     */\r\n    let { elapsed = 0 } = transition;\r\n    elapsed = elapsed - secondsToMilliseconds(delay);\r\n    let options = {\r\n        keyframes: Array.isArray(target) ? target : [null, target],\r\n        ease: \"easeOut\",\r\n        velocity: value.getVelocity(),\r\n        ...valueTransition,\r\n        delay: -elapsed,\r\n        onUpdate: (v) => {\r\n            value.set(v);\r\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\r\n        },\r\n        onComplete: () => {\r\n            onComplete();\r\n            valueTransition.onComplete && valueTransition.onComplete();\r\n        },\r\n        name,\r\n        motionValue: value,\r\n        element: isHandoff ? undefined : element,\r\n    };\r\n    /**\r\n     * If there's no transition defined for this value, we can generate\r\n     * unqiue transition settings for this value.\r\n     */\r\n    if (!isTransitionDefined(valueTransition)) {\r\n        options = {\r\n            ...options,\r\n            ...getDefaultTransition(name, options),\r\n        };\r\n    }\r\n    /**\r\n     * Both WAAPI and our internal animation functions use durations\r\n     * as defined by milliseconds, while our external API defines them\r\n     * as seconds.\r\n     */\r\n    if (options.duration) {\r\n        options.duration = secondsToMilliseconds(options.duration);\r\n    }\r\n    if (options.repeatDelay) {\r\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\r\n    }\r\n    if (options.from !== undefined) {\r\n        options.keyframes[0] = options.from;\r\n    }\r\n    let shouldSkip = false;\r\n    if (options.type === false ||\r\n        (options.duration === 0 && !options.repeatDelay)) {\r\n        options.duration = 0;\r\n        if (options.delay === 0) {\r\n            shouldSkip = true;\r\n        }\r\n    }\r\n    if (instantAnimationState.current ||\r\n        MotionGlobalConfig.skipAnimations) {\r\n        shouldSkip = true;\r\n        options.duration = 0;\r\n        options.delay = 0;\r\n    }\r\n    /**\r\n     * If we can or must skip creating the animation, and apply only\r\n     * the final keyframe, do so. We also check once keyframes are resolved but\r\n     * this early check prevents the need to create an animation at all.\r\n     */\r\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\r\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\r\n        if (finalKeyframe !== undefined) {\r\n            frame.update(() => {\r\n                options.onUpdate(finalKeyframe);\r\n                options.onComplete();\r\n            });\r\n            // We still want to return some animation controls here rather\r\n            // than returning undefined\r\n            return new GroupPlaybackControls([]);\r\n        }\r\n    }\r\n    /**\r\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\r\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\r\n     * optimised animation.\r\n     */\r\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\r\n        return new AcceleratedAnimation(options);\r\n    }\r\n    else {\r\n        return new MainThreadAnimation(options);\r\n    }\r\n};\r\n\r\nexport { animateMotionValue };\r\n","/**\r\n * Decide whether a transition is defined on a given Transition.\r\n * This filters out orchestration options and returns true\r\n * if any options are left.\r\n */\r\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\r\n    return !!Object.keys(transition).length;\r\n}\r\n\r\nexport { isTransitionDefined };\r\n","import { getValueTransition } from 'motion-dom';\r\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\r\nimport { setTarget } from '../../render/utils/setters.mjs';\r\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\r\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\r\nimport { animateMotionValue } from './motion-value.mjs';\r\nimport { frame } from '../../frameloop/frame.mjs';\r\n\r\n/**\r\n * Decide whether we should block this animation. Previously, we achieved this\r\n * just by checking whether the key was listed in protectedKeys, but this\r\n * posed problems if an animation was triggered by afterChildren and protectedKeys\r\n * had been set to true in the meantime.\r\n */\r\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\r\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\r\n    needsAnimating[key] = false;\r\n    return shouldBlock;\r\n}\r\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\r\n    var _a;\r\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\r\n    if (transitionOverride)\r\n        transition = transitionOverride;\r\n    const animations = [];\r\n    const animationTypeState = type &&\r\n        visualElement.animationState &&\r\n        visualElement.animationState.getState()[type];\r\n    for (const key in target) {\r\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\r\n        const valueTarget = target[key];\r\n        if (valueTarget === undefined ||\r\n            (animationTypeState &&\r\n                shouldBlockAnimation(animationTypeState, key))) {\r\n            continue;\r\n        }\r\n        const valueTransition = {\r\n            delay,\r\n            ...getValueTransition(transition || {}, key),\r\n        };\r\n        /**\r\n         * If this is the first time a value is being animated, check\r\n         * to see if we're handling off from an existing animation.\r\n         */\r\n        let isHandoff = false;\r\n        if (window.MotionHandoffAnimation) {\r\n            const appearId = getOptimisedAppearId(visualElement);\r\n            if (appearId) {\r\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\r\n                if (startTime !== null) {\r\n                    valueTransition.startTime = startTime;\r\n                    isHandoff = true;\r\n                }\r\n            }\r\n        }\r\n        addValueToWillChange(visualElement, key);\r\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\r\n            ? { type: false }\r\n            : valueTransition, visualElement, isHandoff));\r\n        const animation = value.animation;\r\n        if (animation) {\r\n            animations.push(animation);\r\n        }\r\n    }\r\n    if (transitionEnd) {\r\n        Promise.all(animations).then(() => {\r\n            frame.update(() => {\r\n                transitionEnd && setTarget(visualElement, transitionEnd);\r\n            });\r\n        });\r\n    }\r\n    return animations;\r\n}\r\n\r\nexport { animateTarget };\r\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\r\n\r\nconst isCustomValue = (v) => {\r\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\r\n};\r\nconst resolveFinalValueInKeyframes = (v) => {\r\n    // TODO maybe throw if v.length - 1 is placeholder token?\r\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\r\n};\r\n\r\nexport { isCustomValue, resolveFinalValueInKeyframes };\r\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\r\nimport { animateTarget } from './visual-element-target.mjs';\r\n\r\nfunction animateVariant(visualElement, variant, options = {}) {\r\n    var _a;\r\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\r\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\r\n        : undefined);\r\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\r\n    if (options.transitionOverride) {\r\n        transition = options.transitionOverride;\r\n    }\r\n    /**\r\n     * If we have a variant, create a callback that runs it as an animation.\r\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\r\n     */\r\n    const getAnimation = resolved\r\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\r\n        : () => Promise.resolve();\r\n    /**\r\n     * If we have children, create a callback that runs all their animations.\r\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\r\n     */\r\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\r\n        ? (forwardDelay = 0) => {\r\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\r\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\r\n        }\r\n        : () => Promise.resolve();\r\n    /**\r\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\r\n     * this animation or all children animations before playing the other.\r\n     */\r\n    const { when } = transition;\r\n    if (when) {\r\n        const [first, last] = when === \"beforeChildren\"\r\n            ? [getAnimation, getChildAnimations]\r\n            : [getChildAnimations, getAnimation];\r\n        return first().then(() => last());\r\n    }\r\n    else {\r\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\r\n    }\r\n}\r\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\r\n    const animations = [];\r\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\r\n    const generateStaggerDuration = staggerDirection === 1\r\n        ? (i = 0) => i * staggerChildren\r\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\r\n    Array.from(visualElement.variantChildren)\r\n        .sort(sortByTreeOrder)\r\n        .forEach((child, i) => {\r\n        child.notify(\"AnimationStart\", variant);\r\n        animations.push(animateVariant(child, variant, {\r\n            ...options,\r\n            delay: delayChildren + generateStaggerDuration(i),\r\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\r\n    });\r\n    return Promise.all(animations);\r\n}\r\nfunction sortByTreeOrder(a, b) {\r\n    return a.sortNodePosition(b);\r\n}\r\n\r\nexport { animateVariant, sortByTreeOrder };\r\n","import { isVariantLabel } from './is-variant-label.mjs';\r\nimport { variantProps } from './variant-props.mjs';\r\n\r\nconst numVariantProps = variantProps.length;\r\nfunction getVariantContext(visualElement) {\r\n    if (!visualElement)\r\n        return undefined;\r\n    if (!visualElement.isControllingVariants) {\r\n        const context = visualElement.parent\r\n            ? getVariantContext(visualElement.parent) || {}\r\n            : {};\r\n        if (visualElement.props.initial !== undefined) {\r\n            context.initial = visualElement.props.initial;\r\n        }\r\n        return context;\r\n    }\r\n    const context = {};\r\n    for (let i = 0; i < numVariantProps; i++) {\r\n        const name = variantProps[i];\r\n        const prop = visualElement.props[name];\r\n        if (isVariantLabel(prop) || prop === false) {\r\n            context[name] = prop;\r\n        }\r\n    }\r\n    return context;\r\n}\r\n\r\nexport { getVariantContext };\r\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\r\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\r\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\r\nimport { isVariantLabel } from './is-variant-label.mjs';\r\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\r\nimport { variantPriorityOrder } from './variant-props.mjs';\r\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\r\nimport { getVariantContext } from './get-variant-context.mjs';\r\n\r\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\r\nconst numAnimationTypes = variantPriorityOrder.length;\r\nfunction animateList(visualElement) {\r\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\r\n}\r\nfunction createAnimationState(visualElement) {\r\n    let animate = animateList(visualElement);\r\n    let state = createState();\r\n    let isInitialRender = true;\r\n    /**\r\n     * This function will be used to reduce the animation definitions for\r\n     * each active animation type into an object of resolved values for it.\r\n     */\r\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\r\n        var _a;\r\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\r\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\r\n            : undefined);\r\n        if (resolved) {\r\n            const { transition, transitionEnd, ...target } = resolved;\r\n            acc = { ...acc, ...target, ...transitionEnd };\r\n        }\r\n        return acc;\r\n    };\r\n    /**\r\n     * This just allows us to inject mocked animation functions\r\n     * @internal\r\n     */\r\n    function setAnimateFunction(makeAnimator) {\r\n        animate = makeAnimator(visualElement);\r\n    }\r\n    /**\r\n     * When we receive new props, we need to:\r\n     * 1. Create a list of protected keys for each type. This is a directory of\r\n     *    value keys that are currently being \"handled\" by types of a higher priority\r\n     *    so that whenever an animation is played of a given type, these values are\r\n     *    protected from being animated.\r\n     * 2. Determine if an animation type needs animating.\r\n     * 3. Determine if any values have been removed from a type and figure out\r\n     *    what to animate those to.\r\n     */\r\n    function animateChanges(changedActiveType) {\r\n        const { props } = visualElement;\r\n        const context = getVariantContext(visualElement.parent) || {};\r\n        /**\r\n         * A list of animations that we'll build into as we iterate through the animation\r\n         * types. This will get executed at the end of the function.\r\n         */\r\n        const animations = [];\r\n        /**\r\n         * Keep track of which values have been removed. Then, as we hit lower priority\r\n         * animation types, we can check if they contain removed values and animate to that.\r\n         */\r\n        const removedKeys = new Set();\r\n        /**\r\n         * A dictionary of all encountered keys. This is an object to let us build into and\r\n         * copy it without iteration. Each time we hit an animation type we set its protected\r\n         * keys - the keys its not allowed to animate - to the latest version of this object.\r\n         */\r\n        let encounteredKeys = {};\r\n        /**\r\n         * If a variant has been removed at a given index, and this component is controlling\r\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\r\n         */\r\n        let removedVariantIndex = Infinity;\r\n        /**\r\n         * Iterate through all animation types in reverse priority order. For each, we want to\r\n         * detect which values it's handling and whether or not they've changed (and therefore\r\n         * need to be animated). If any values have been removed, we want to detect those in\r\n         * lower priority props and flag for animation.\r\n         */\r\n        for (let i = 0; i < numAnimationTypes; i++) {\r\n            const type = reversePriorityOrder[i];\r\n            const typeState = state[type];\r\n            const prop = props[type] !== undefined\r\n                ? props[type]\r\n                : context[type];\r\n            const propIsVariant = isVariantLabel(prop);\r\n            /**\r\n             * If this type has *just* changed isActive status, set activeDelta\r\n             * to that status. Otherwise set to null.\r\n             */\r\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\r\n            if (activeDelta === false)\r\n                removedVariantIndex = i;\r\n            /**\r\n             * If this prop is an inherited variant, rather than been set directly on the\r\n             * component itself, we want to make sure we allow the parent to trigger animations.\r\n             *\r\n             * TODO: Can probably change this to a !isControllingVariants check\r\n             */\r\n            let isInherited = prop === context[type] &&\r\n                prop !== props[type] &&\r\n                propIsVariant;\r\n            /**\r\n             *\r\n             */\r\n            if (isInherited &&\r\n                isInitialRender &&\r\n                visualElement.manuallyAnimateOnMount) {\r\n                isInherited = false;\r\n            }\r\n            /**\r\n             * Set all encountered keys so far as the protected keys for this type. This will\r\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\r\n             */\r\n            typeState.protectedKeys = { ...encounteredKeys };\r\n            // Check if we can skip analysing this prop early\r\n            if (\r\n            // If it isn't active and hasn't *just* been set as inactive\r\n            (!typeState.isActive && activeDelta === null) ||\r\n                // If we didn't and don't have any defined prop for this animation type\r\n                (!prop && !typeState.prevProp) ||\r\n                // Or if the prop doesn't define an animation\r\n                isAnimationControls(prop) ||\r\n                typeof prop === \"boolean\") {\r\n                continue;\r\n            }\r\n            /**\r\n             * As we go look through the values defined on this type, if we detect\r\n             * a changed value or a value that was removed in a higher priority, we set\r\n             * this to true and add this prop to the animation list.\r\n             */\r\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\r\n            let shouldAnimateType = variantDidChange ||\r\n                // If we're making this variant active, we want to always make it active\r\n                (type === changedActiveType &&\r\n                    typeState.isActive &&\r\n                    !isInherited &&\r\n                    propIsVariant) ||\r\n                // If we removed a higher-priority variant (i is in reverse order)\r\n                (i > removedVariantIndex && propIsVariant);\r\n            let handledRemovedValues = false;\r\n            /**\r\n             * As animations can be set as variant lists, variants or target objects, we\r\n             * coerce everything to an array if it isn't one already\r\n             */\r\n            const definitionList = Array.isArray(prop) ? prop : [prop];\r\n            /**\r\n             * Build an object of all the resolved values. We'll use this in the subsequent\r\n             * animateChanges calls to determine whether a value has changed.\r\n             */\r\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\r\n            if (activeDelta === false)\r\n                resolvedValues = {};\r\n            /**\r\n             * Now we need to loop through all the keys in the prev prop and this prop,\r\n             * and decide:\r\n             * 1. If the value has changed, and needs animating\r\n             * 2. If it has been removed, and needs adding to the removedKeys set\r\n             * 3. If it has been removed in a higher priority type and needs animating\r\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\r\n             *    needs adding to the type's protectedKeys list.\r\n             */\r\n            const { prevResolvedValues = {} } = typeState;\r\n            const allKeys = {\r\n                ...prevResolvedValues,\r\n                ...resolvedValues,\r\n            };\r\n            const markToAnimate = (key) => {\r\n                shouldAnimateType = true;\r\n                if (removedKeys.has(key)) {\r\n                    handledRemovedValues = true;\r\n                    removedKeys.delete(key);\r\n                }\r\n                typeState.needsAnimating[key] = true;\r\n                const motionValue = visualElement.getValue(key);\r\n                if (motionValue)\r\n                    motionValue.liveStyle = false;\r\n            };\r\n            for (const key in allKeys) {\r\n                const next = resolvedValues[key];\r\n                const prev = prevResolvedValues[key];\r\n                // If we've already handled this we can just skip ahead\r\n                if (encounteredKeys.hasOwnProperty(key))\r\n                    continue;\r\n                /**\r\n                 * If the value has changed, we probably want to animate it.\r\n                 */\r\n                let valueHasChanged = false;\r\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\r\n                    valueHasChanged = !shallowCompare(next, prev);\r\n                }\r\n                else {\r\n                    valueHasChanged = next !== prev;\r\n                }\r\n                if (valueHasChanged) {\r\n                    if (next !== undefined && next !== null) {\r\n                        // If next is defined and doesn't equal prev, it needs animating\r\n                        markToAnimate(key);\r\n                    }\r\n                    else {\r\n                        // If it's undefined, it's been removed.\r\n                        removedKeys.add(key);\r\n                    }\r\n                }\r\n                else if (next !== undefined && removedKeys.has(key)) {\r\n                    /**\r\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\r\n                     * been removed by a higher priority\r\n                     */\r\n                    markToAnimate(key);\r\n                }\r\n                else {\r\n                    /**\r\n                     * If it hasn't changed, we add it to the list of protected values\r\n                     * to ensure it doesn't get animated.\r\n                     */\r\n                    typeState.protectedKeys[key] = true;\r\n                }\r\n            }\r\n            /**\r\n             * Update the typeState so next time animateChanges is called we can compare the\r\n             * latest prop and resolvedValues to these.\r\n             */\r\n            typeState.prevProp = prop;\r\n            typeState.prevResolvedValues = resolvedValues;\r\n            /**\r\n             *\r\n             */\r\n            if (typeState.isActive) {\r\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\r\n            }\r\n            if (isInitialRender && visualElement.blockInitialAnimation) {\r\n                shouldAnimateType = false;\r\n            }\r\n            /**\r\n             * If this is an inherited prop we want to skip this animation\r\n             * unless the inherited variants haven't changed on this render.\r\n             */\r\n            const willAnimateViaParent = isInherited && variantDidChange;\r\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\r\n            if (shouldAnimateType && needsAnimating) {\r\n                animations.push(...definitionList.map((animation) => ({\r\n                    animation: animation,\r\n                    options: { type },\r\n                })));\r\n            }\r\n        }\r\n        /**\r\n         * If there are some removed value that haven't been dealt with,\r\n         * we need to create a new animation that falls back either to the value\r\n         * defined in the style prop, or the last read value.\r\n         */\r\n        if (removedKeys.size) {\r\n            const fallbackAnimation = {};\r\n            removedKeys.forEach((key) => {\r\n                const fallbackTarget = visualElement.getBaseTarget(key);\r\n                const motionValue = visualElement.getValue(key);\r\n                if (motionValue)\r\n                    motionValue.liveStyle = true;\r\n                // @ts-expect-error - @mattgperry to figure if we should do something here\r\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\r\n            });\r\n            animations.push({ animation: fallbackAnimation });\r\n        }\r\n        let shouldAnimate = Boolean(animations.length);\r\n        if (isInitialRender &&\r\n            (props.initial === false || props.initial === props.animate) &&\r\n            !visualElement.manuallyAnimateOnMount) {\r\n            shouldAnimate = false;\r\n        }\r\n        isInitialRender = false;\r\n        return shouldAnimate ? animate(animations) : Promise.resolve();\r\n    }\r\n    /**\r\n     * Change whether a certain animation type is active.\r\n     */\r\n    function setActive(type, isActive) {\r\n        var _a;\r\n        // If the active state hasn't changed, we can safely do nothing here\r\n        if (state[type].isActive === isActive)\r\n            return Promise.resolve();\r\n        // Propagate active change to children\r\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\r\n        state[type].isActive = isActive;\r\n        const animations = animateChanges(type);\r\n        for (const key in state) {\r\n            state[key].protectedKeys = {};\r\n        }\r\n        return animations;\r\n    }\r\n    return {\r\n        animateChanges,\r\n        setActive,\r\n        setAnimateFunction,\r\n        getState: () => state,\r\n        reset: () => {\r\n            state = createState();\r\n            isInitialRender = true;\r\n        },\r\n    };\r\n}\r\nfunction checkVariantsDidChange(prev, next) {\r\n    if (typeof next === \"string\") {\r\n        return next !== prev;\r\n    }\r\n    else if (Array.isArray(next)) {\r\n        return !shallowCompare(next, prev);\r\n    }\r\n    return false;\r\n}\r\nfunction createTypeState(isActive = false) {\r\n    return {\r\n        isActive,\r\n        protectedKeys: {},\r\n        needsAnimating: {},\r\n        prevResolvedValues: {},\r\n    };\r\n}\r\nfunction createState() {\r\n    return {\r\n        animate: createTypeState(true),\r\n        whileInView: createTypeState(),\r\n        whileHover: createTypeState(),\r\n        whileTap: createTypeState(),\r\n        whileDrag: createTypeState(),\r\n        whileFocus: createTypeState(),\r\n        exit: createTypeState(),\r\n    };\r\n}\r\n\r\nexport { checkVariantsDidChange, createAnimationState };\r\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\r\nimport { animateTarget } from './visual-element-target.mjs';\r\nimport { animateVariant } from './visual-element-variant.mjs';\r\n\r\nfunction animateVisualElement(visualElement, definition, options = {}) {\r\n    visualElement.notify(\"AnimationStart\", definition);\r\n    let animation;\r\n    if (Array.isArray(definition)) {\r\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\r\n        animation = Promise.all(animations);\r\n    }\r\n    else if (typeof definition === \"string\") {\r\n        animation = animateVariant(visualElement, definition, options);\r\n    }\r\n    else {\r\n        const resolvedDefinition = typeof definition === \"function\"\r\n            ? resolveVariant(visualElement, definition, options.custom)\r\n            : definition;\r\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\r\n    }\r\n    return animation.then(() => {\r\n        visualElement.notify(\"AnimationComplete\", definition);\r\n    });\r\n}\r\n\r\nexport { animateVisualElement };\r\n","class Feature {\r\n    constructor(node) {\r\n        this.isMounted = false;\r\n        this.node = node;\r\n    }\r\n    update() { }\r\n}\r\n\r\nexport { Feature };\r\n","import { Feature } from '../Feature.mjs';\r\n\r\nlet id = 0;\r\nclass ExitAnimationFeature extends Feature {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.id = id++;\r\n    }\r\n    update() {\r\n        if (!this.node.presenceContext)\r\n            return;\r\n        const { isPresent, onExitComplete } = this.node.presenceContext;\r\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\r\n        if (!this.node.animationState || isPresent === prevIsPresent) {\r\n            return;\r\n        }\r\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\r\n        if (onExitComplete && !isPresent) {\r\n            exitAnimation.then(() => onExitComplete(this.id));\r\n        }\r\n    }\r\n    mount() {\r\n        const { register } = this.node.presenceContext || {};\r\n        if (register) {\r\n            this.unmount = register(this.id);\r\n        }\r\n    }\r\n    unmount() { }\r\n}\r\n\r\nexport { ExitAnimationFeature };\r\n","import { AnimationFeature } from './animation/index.mjs';\r\nimport { ExitAnimationFeature } from './animation/exit.mjs';\r\n\r\nconst animations = {\r\n    animation: {\r\n        Feature: AnimationFeature,\r\n    },\r\n    exit: {\r\n        Feature: ExitAnimationFeature,\r\n    },\r\n};\r\n\r\nexport { animations };\r\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\r\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\r\nimport { Feature } from '../Feature.mjs';\r\n\r\nclass AnimationFeature extends Feature {\r\n    /**\r\n     * We dynamically generate the AnimationState manager as it contains a reference\r\n     * to the underlying animation library. We only want to load that if we load this,\r\n     * so people can optionally code split it out using the `m` component.\r\n     */\r\n    constructor(node) {\r\n        super(node);\r\n        node.animationState || (node.animationState = createAnimationState(node));\r\n    }\r\n    updateAnimationControlsSubscription() {\r\n        const { animate } = this.node.getProps();\r\n        if (isAnimationControls(animate)) {\r\n            this.unmountControls = animate.subscribe(this.node);\r\n        }\r\n    }\r\n    /**\r\n     * Subscribe any provided AnimationControls to the component's VisualElement\r\n     */\r\n    mount() {\r\n        this.updateAnimationControlsSubscription();\r\n    }\r\n    update() {\r\n        const { animate } = this.node.getProps();\r\n        const { animate: prevAnimate } = this.node.prevProps || {};\r\n        if (animate !== prevAnimate) {\r\n            this.updateAnimationControlsSubscription();\r\n        }\r\n    }\r\n    unmount() {\r\n        var _a;\r\n        this.node.animationState.reset();\r\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\r\n    }\r\n}\r\n\r\nexport { AnimationFeature };\r\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\r\n    target.addEventListener(eventName, handler, options);\r\n    return () => target.removeEventListener(eventName, handler);\r\n}\r\n\r\nexport { addDomEvent };\r\n","import { isPrimaryPointer } from 'motion-dom';\r\n\r\nfunction extractEventInfo(event) {\r\n    return {\r\n        point: {\r\n            x: event.pageX,\r\n            y: event.pageY,\r\n        },\r\n    };\r\n}\r\nconst addPointerInfo = (handler) => {\r\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\r\n};\r\n\r\nexport { addPointerInfo, extractEventInfo };\r\n","import { addDomEvent } from './add-dom-event.mjs';\r\nimport { addPointerInfo } from './event-info.mjs';\r\n\r\nfunction addPointerEvent(target, eventName, handler, options) {\r\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\r\n}\r\n\r\nexport { addPointerEvent };\r\n","const distance = (a, b) => Math.abs(a - b);\r\nfunction distance2D(a, b) {\r\n    // Multi-dimensional\r\n    const xDelta = distance(a.x, b.x);\r\n    const yDelta = distance(a.y, b.y);\r\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\r\n}\r\n\r\nexport { distance, distance2D };\r\n","import { isPrimaryPointer } from 'motion-dom';\r\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\r\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\r\nimport { extractEventInfo } from '../../events/event-info.mjs';\r\nimport { distance2D } from '../../utils/distance.mjs';\r\nimport { pipe } from '../../utils/pipe.mjs';\r\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\r\n\r\n/**\r\n * @internal\r\n */\r\nclass PanSession {\r\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\r\n        /**\r\n         * @internal\r\n         */\r\n        this.startEvent = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.lastMoveEvent = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.lastMoveEventInfo = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.handlers = {};\r\n        /**\r\n         * @internal\r\n         */\r\n        this.contextWindow = window;\r\n        this.updatePoint = () => {\r\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\r\n                return;\r\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\r\n            const isPanStarted = this.startEvent !== null;\r\n            // Only start panning if the offset is larger than 3 pixels. If we make it\r\n            // any larger than this we'll want to reset the pointer history\r\n            // on the first update to avoid visual snapping to the cursoe.\r\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\r\n            if (!isPanStarted && !isDistancePastThreshold)\r\n                return;\r\n            const { point } = info;\r\n            const { timestamp } = frameData;\r\n            this.history.push({ ...point, timestamp });\r\n            const { onStart, onMove } = this.handlers;\r\n            if (!isPanStarted) {\r\n                onStart && onStart(this.lastMoveEvent, info);\r\n                this.startEvent = this.lastMoveEvent;\r\n            }\r\n            onMove && onMove(this.lastMoveEvent, info);\r\n        };\r\n        this.handlePointerMove = (event, info) => {\r\n            this.lastMoveEvent = event;\r\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\r\n            // Throttle mouse move event to once per frame\r\n            frame.update(this.updatePoint, true);\r\n        };\r\n        this.handlePointerUp = (event, info) => {\r\n            this.end();\r\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\r\n            if (this.dragSnapToOrigin)\r\n                resumeAnimation && resumeAnimation();\r\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\r\n                return;\r\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\r\n                ? this.lastMoveEventInfo\r\n                : transformPoint(info, this.transformPagePoint), this.history);\r\n            if (this.startEvent && onEnd) {\r\n                onEnd(event, panInfo);\r\n            }\r\n            onSessionEnd && onSessionEnd(event, panInfo);\r\n        };\r\n        // If we have more than one touch, don't start detecting this gesture\r\n        if (!isPrimaryPointer(event))\r\n            return;\r\n        this.dragSnapToOrigin = dragSnapToOrigin;\r\n        this.handlers = handlers;\r\n        this.transformPagePoint = transformPagePoint;\r\n        this.contextWindow = contextWindow || window;\r\n        const info = extractEventInfo(event);\r\n        const initialInfo = transformPoint(info, this.transformPagePoint);\r\n        const { point } = initialInfo;\r\n        const { timestamp } = frameData;\r\n        this.history = [{ ...point, timestamp }];\r\n        const { onSessionStart } = handlers;\r\n        onSessionStart &&\r\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\r\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\r\n    }\r\n    updateHandlers(handlers) {\r\n        this.handlers = handlers;\r\n    }\r\n    end() {\r\n        this.removeListeners && this.removeListeners();\r\n        cancelFrame(this.updatePoint);\r\n    }\r\n}\r\nfunction transformPoint(info, transformPagePoint) {\r\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\r\n}\r\nfunction subtractPoint(a, b) {\r\n    return { x: a.x - b.x, y: a.y - b.y };\r\n}\r\nfunction getPanInfo({ point }, history) {\r\n    return {\r\n        point,\r\n        delta: subtractPoint(point, lastDevicePoint(history)),\r\n        offset: subtractPoint(point, startDevicePoint(history)),\r\n        velocity: getVelocity(history, 0.1),\r\n    };\r\n}\r\nfunction startDevicePoint(history) {\r\n    return history[0];\r\n}\r\nfunction lastDevicePoint(history) {\r\n    return history[history.length - 1];\r\n}\r\nfunction getVelocity(history, timeDelta) {\r\n    if (history.length < 2) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    let i = history.length - 1;\r\n    let timestampedPoint = null;\r\n    const lastPoint = lastDevicePoint(history);\r\n    while (i >= 0) {\r\n        timestampedPoint = history[i];\r\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\r\n            secondsToMilliseconds(timeDelta)) {\r\n            break;\r\n        }\r\n        i--;\r\n    }\r\n    if (!timestampedPoint) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\r\n    if (time === 0) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    const currentVelocity = {\r\n        x: (lastPoint.x - timestampedPoint.x) / time,\r\n        y: (lastPoint.y - timestampedPoint.y) / time,\r\n    };\r\n    if (currentVelocity.x === Infinity) {\r\n        currentVelocity.x = 0;\r\n    }\r\n    if (currentVelocity.y === Infinity) {\r\n        currentVelocity.y = 0;\r\n    }\r\n    return currentVelocity;\r\n}\r\n\r\nexport { PanSession };\r\n","function isRefObject(ref) {\r\n    return (ref &&\r\n        typeof ref === \"object\" &&\r\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\r\n}\r\n\r\nexport { isRefObject };\r\n","import { mixNumber } from '../../utils/mix/number.mjs';\r\n\r\nconst SCALE_PRECISION = 0.0001;\r\nconst SCALE_MIN = 1 - SCALE_PRECISION;\r\nconst SCALE_MAX = 1 + SCALE_PRECISION;\r\nconst TRANSLATE_PRECISION = 0.01;\r\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\r\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\r\nfunction calcLength(axis) {\r\n    return axis.max - axis.min;\r\n}\r\nfunction isNear(value, target, maxDistance) {\r\n    return Math.abs(value - target) <= maxDistance;\r\n}\r\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\r\n    delta.origin = origin;\r\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\r\n    delta.scale = calcLength(target) / calcLength(source);\r\n    delta.translate =\r\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\r\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\r\n        isNaN(delta.scale)) {\r\n        delta.scale = 1.0;\r\n    }\r\n    if ((delta.translate >= TRANSLATE_MIN &&\r\n        delta.translate <= TRANSLATE_MAX) ||\r\n        isNaN(delta.translate)) {\r\n        delta.translate = 0.0;\r\n    }\r\n}\r\nfunction calcBoxDelta(delta, source, target, origin) {\r\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\r\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\r\n}\r\nfunction calcRelativeAxis(target, relative, parent) {\r\n    target.min = parent.min + relative.min;\r\n    target.max = target.min + calcLength(relative);\r\n}\r\nfunction calcRelativeBox(target, relative, parent) {\r\n    calcRelativeAxis(target.x, relative.x, parent.x);\r\n    calcRelativeAxis(target.y, relative.y, parent.y);\r\n}\r\nfunction calcRelativeAxisPosition(target, layout, parent) {\r\n    target.min = layout.min - parent.min;\r\n    target.max = target.min + calcLength(layout);\r\n}\r\nfunction calcRelativePosition(target, layout, parent) {\r\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\r\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\r\n}\r\n\r\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\r\n","import { progress } from 'motion-utils';\r\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\r\nimport { clamp } from '../../../utils/clamp.mjs';\r\nimport { mixNumber } from '../../../utils/mix/number.mjs';\r\n\r\n/**\r\n * Apply constraints to a point. These constraints are both physical along an\r\n * axis, and an elastic factor that determines how much to constrain the point\r\n * by if it does lie outside the defined parameters.\r\n */\r\nfunction applyConstraints(point, { min, max }, elastic) {\r\n    if (min !== undefined && point < min) {\r\n        // If we have a min point defined, and this is outside of that, constrain\r\n        point = elastic\r\n            ? mixNumber(min, point, elastic.min)\r\n            : Math.max(point, min);\r\n    }\r\n    else if (max !== undefined && point > max) {\r\n        // If we have a max point defined, and this is outside of that, constrain\r\n        point = elastic\r\n            ? mixNumber(max, point, elastic.max)\r\n            : Math.min(point, max);\r\n    }\r\n    return point;\r\n}\r\n/**\r\n * Calculate constraints in terms of the viewport when defined relatively to the\r\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\r\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\r\n */\r\nfunction calcRelativeAxisConstraints(axis, min, max) {\r\n    return {\r\n        min: min !== undefined ? axis.min + min : undefined,\r\n        max: max !== undefined\r\n            ? axis.max + max - (axis.max - axis.min)\r\n            : undefined,\r\n    };\r\n}\r\n/**\r\n * Calculate constraints in terms of the viewport when\r\n * defined relatively to the measured bounding box.\r\n */\r\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\r\n    return {\r\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\r\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\r\n    };\r\n}\r\n/**\r\n * Calculate viewport constraints when defined as another viewport-relative axis\r\n */\r\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\r\n    let min = constraintsAxis.min - layoutAxis.min;\r\n    let max = constraintsAxis.max - layoutAxis.max;\r\n    // If the constraints axis is actually smaller than the layout axis then we can\r\n    // flip the constraints\r\n    if (constraintsAxis.max - constraintsAxis.min <\r\n        layoutAxis.max - layoutAxis.min) {\r\n        [min, max] = [max, min];\r\n    }\r\n    return { min, max };\r\n}\r\n/**\r\n * Calculate viewport constraints when defined as another viewport-relative box\r\n */\r\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\r\n    return {\r\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\r\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\r\n    };\r\n}\r\n/**\r\n * Calculate a transform origin relative to the source axis, between 0-1, that results\r\n * in an asthetically pleasing scale/transform needed to project from source to target.\r\n */\r\nfunction calcOrigin(source, target) {\r\n    let origin = 0.5;\r\n    const sourceLength = calcLength(source);\r\n    const targetLength = calcLength(target);\r\n    if (targetLength > sourceLength) {\r\n        origin = progress(target.min, target.max - sourceLength, source.min);\r\n    }\r\n    else if (sourceLength > targetLength) {\r\n        origin = progress(source.min, source.max - targetLength, target.min);\r\n    }\r\n    return clamp(0, 1, origin);\r\n}\r\n/**\r\n * Rebase the calculated viewport constraints relative to the layout.min point.\r\n */\r\nfunction rebaseAxisConstraints(layout, constraints) {\r\n    const relativeConstraints = {};\r\n    if (constraints.min !== undefined) {\r\n        relativeConstraints.min = constraints.min - layout.min;\r\n    }\r\n    if (constraints.max !== undefined) {\r\n        relativeConstraints.max = constraints.max - layout.min;\r\n    }\r\n    return relativeConstraints;\r\n}\r\nconst defaultElastic = 0.35;\r\n/**\r\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\r\n */\r\nfunction resolveDragElastic(dragElastic = defaultElastic) {\r\n    if (dragElastic === false) {\r\n        dragElastic = 0;\r\n    }\r\n    else if (dragElastic === true) {\r\n        dragElastic = defaultElastic;\r\n    }\r\n    return {\r\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\r\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\r\n    };\r\n}\r\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\r\n    return {\r\n        min: resolvePointElastic(dragElastic, minLabel),\r\n        max: resolvePointElastic(dragElastic, maxLabel),\r\n    };\r\n}\r\nfunction resolvePointElastic(dragElastic, label) {\r\n    return typeof dragElastic === \"number\"\r\n        ? dragElastic\r\n        : dragElastic[label] || 0;\r\n}\r\n\r\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\r\n","const createAxisDelta = () => ({\r\n    translate: 0,\r\n    scale: 1,\r\n    origin: 0,\r\n    originPoint: 0,\r\n});\r\nconst createDelta = () => ({\r\n    x: createAxisDelta(),\r\n    y: createAxisDelta(),\r\n});\r\nconst createAxis = () => ({ min: 0, max: 0 });\r\nconst createBox = () => ({\r\n    x: createAxis(),\r\n    y: createAxis(),\r\n});\r\n\r\nexport { createAxis, createAxisDelta, createBox, createDelta };\r\n","function eachAxis(callback) {\r\n    return [callback(\"x\"), callback(\"y\")];\r\n}\r\n\r\nexport { eachAxis };\r\n","/**\r\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\r\n * it's easier to consider each axis individually. This function returns a bounding box\r\n * as a map of single-axis min/max values.\r\n */\r\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\r\n    return {\r\n        x: { min: left, max: right },\r\n        y: { min: top, max: bottom },\r\n    };\r\n}\r\nfunction convertBoxToBoundingBox({ x, y }) {\r\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\r\n}\r\n/**\r\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\r\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\r\n * when measuring DOM elements and DOM event points.\r\n */\r\nfunction transformBoxPoints(point, transformPoint) {\r\n    if (!transformPoint)\r\n        return point;\r\n    const topLeft = transformPoint({ x: point.left, y: point.top });\r\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\r\n    return {\r\n        top: topLeft.y,\r\n        left: topLeft.x,\r\n        bottom: bottomRight.y,\r\n        right: bottomRight.x,\r\n    };\r\n}\r\n\r\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\r\n","function isIdentityScale(scale) {\r\n    return scale === undefined || scale === 1;\r\n}\r\nfunction hasScale({ scale, scaleX, scaleY }) {\r\n    return (!isIdentityScale(scale) ||\r\n        !isIdentityScale(scaleX) ||\r\n        !isIdentityScale(scaleY));\r\n}\r\nfunction hasTransform(values) {\r\n    return (hasScale(values) ||\r\n        has2DTranslate(values) ||\r\n        values.z ||\r\n        values.rotate ||\r\n        values.rotateX ||\r\n        values.rotateY ||\r\n        values.skewX ||\r\n        values.skewY);\r\n}\r\nfunction has2DTranslate(values) {\r\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\r\n}\r\nfunction is2DTranslate(value) {\r\n    return value && value !== \"0%\";\r\n}\r\n\r\nexport { has2DTranslate, hasScale, hasTransform };\r\n","import { mixNumber } from '../../utils/mix/number.mjs';\r\nimport { hasTransform } from '../utils/has-transform.mjs';\r\n\r\n/**\r\n * Scales a point based on a factor and an originPoint\r\n */\r\nfunction scalePoint(point, scale, originPoint) {\r\n    const distanceFromOrigin = point - originPoint;\r\n    const scaled = scale * distanceFromOrigin;\r\n    return originPoint + scaled;\r\n}\r\n/**\r\n * Applies a translate/scale delta to a point\r\n */\r\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\r\n    if (boxScale !== undefined) {\r\n        point = scalePoint(point, boxScale, originPoint);\r\n    }\r\n    return scalePoint(point, scale, originPoint) + translate;\r\n}\r\n/**\r\n * Applies a translate/scale delta to an axis\r\n */\r\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\r\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\r\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\r\n}\r\n/**\r\n * Applies a translate/scale delta to a box\r\n */\r\nfunction applyBoxDelta(box, { x, y }) {\r\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\r\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\r\n}\r\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\r\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\r\n/**\r\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\r\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\r\n *\r\n * This is the final nested loop within updateLayoutDelta for future refactoring\r\n */\r\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\r\n    const treeLength = treePath.length;\r\n    if (!treeLength)\r\n        return;\r\n    // Reset the treeScale\r\n    treeScale.x = treeScale.y = 1;\r\n    let node;\r\n    let delta;\r\n    for (let i = 0; i < treeLength; i++) {\r\n        node = treePath[i];\r\n        delta = node.projectionDelta;\r\n        /**\r\n         * TODO: Prefer to remove this, but currently we have motion components with\r\n         * display: contents in Framer.\r\n         */\r\n        const { visualElement } = node.options;\r\n        if (visualElement &&\r\n            visualElement.props.style &&\r\n            visualElement.props.style.display === \"contents\") {\r\n            continue;\r\n        }\r\n        if (isSharedTransition &&\r\n            node.options.layoutScroll &&\r\n            node.scroll &&\r\n            node !== node.root) {\r\n            transformBox(box, {\r\n                x: -node.scroll.offset.x,\r\n                y: -node.scroll.offset.y,\r\n            });\r\n        }\r\n        if (delta) {\r\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\r\n            treeScale.x *= delta.x.scale;\r\n            treeScale.y *= delta.y.scale;\r\n            // Apply each ancestor's calculated delta into this component's recorded layout box\r\n            applyBoxDelta(box, delta);\r\n        }\r\n        if (isSharedTransition && hasTransform(node.latestValues)) {\r\n            transformBox(box, node.latestValues);\r\n        }\r\n    }\r\n    /**\r\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\r\n     * This will help reduce useless scales getting rendered.\r\n     */\r\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\r\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\r\n        treeScale.x = 1.0;\r\n    }\r\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\r\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\r\n        treeScale.y = 1.0;\r\n    }\r\n}\r\nfunction translateAxis(axis, distance) {\r\n    axis.min = axis.min + distance;\r\n    axis.max = axis.max + distance;\r\n}\r\n/**\r\n * Apply a transform to an axis from the latest resolved motion values.\r\n * This function basically acts as a bridge between a flat motion value map\r\n * and applyAxisDelta\r\n */\r\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\r\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\r\n    // Apply the axis delta to the final axis\r\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\r\n}\r\n/**\r\n * Apply a transform to a box from the latest resolved motion values.\r\n */\r\nfunction transformBox(box, transform) {\r\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\r\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\r\n}\r\n\r\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\r\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\r\nimport { translateAxis } from '../geometry/delta-apply.mjs';\r\n\r\nfunction measureViewportBox(instance, transformPoint) {\r\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\r\n}\r\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\r\n    const viewportBox = measureViewportBox(element, transformPagePoint);\r\n    const { scroll } = rootProjectionNode;\r\n    if (scroll) {\r\n        translateAxis(viewportBox.x, scroll.offset.x);\r\n        translateAxis(viewportBox.y, scroll.offset.y);\r\n    }\r\n    return viewportBox;\r\n}\r\n\r\nexport { measurePageBox, measureViewportBox };\r\n","// Fixes https://github.com/motiondivision/motion/issues/2270\r\nconst getContextWindow = ({ current }) => {\r\n    return current ? current.ownerDocument.defaultView : null;\r\n};\r\n\r\nexport { getContextWindow };\r\n","import { invariant } from 'motion-utils';\r\nimport { setDragLock } from 'motion-dom';\r\nimport { PanSession } from '../pan/PanSession.mjs';\r\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\r\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\r\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\r\nimport { createBox } from '../../projection/geometry/models.mjs';\r\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\r\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\r\nimport { extractEventInfo } from '../../events/event-info.mjs';\r\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\r\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\r\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\r\nimport { mixNumber } from '../../utils/mix/number.mjs';\r\nimport { percent } from '../../value/types/numbers/units.mjs';\r\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\r\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\r\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\r\nimport { frame } from '../../frameloop/frame.mjs';\r\n\r\nconst elementDragControls = new WeakMap();\r\n/**\r\n *\r\n */\r\n// let latestPointerEvent: PointerEvent\r\nclass VisualElementDragControls {\r\n    constructor(visualElement) {\r\n        this.openDragLock = null;\r\n        this.isDragging = false;\r\n        this.currentDirection = null;\r\n        this.originPoint = { x: 0, y: 0 };\r\n        /**\r\n         * The permitted boundaries of travel, in pixels.\r\n         */\r\n        this.constraints = false;\r\n        this.hasMutatedConstraints = false;\r\n        /**\r\n         * The per-axis resolved elastic values.\r\n         */\r\n        this.elastic = createBox();\r\n        this.visualElement = visualElement;\r\n    }\r\n    start(originEvent, { snapToCursor = false } = {}) {\r\n        /**\r\n         * Don't start dragging if this component is exiting\r\n         */\r\n        const { presenceContext } = this.visualElement;\r\n        if (presenceContext && presenceContext.isPresent === false)\r\n            return;\r\n        const onSessionStart = (event) => {\r\n            const { dragSnapToOrigin } = this.getProps();\r\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\r\n            // the component.\r\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\r\n            if (snapToCursor) {\r\n                this.snapToCursor(extractEventInfo(event).point);\r\n            }\r\n        };\r\n        const onStart = (event, info) => {\r\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\r\n            const { drag, dragPropagation, onDragStart } = this.getProps();\r\n            if (drag && !dragPropagation) {\r\n                if (this.openDragLock)\r\n                    this.openDragLock();\r\n                this.openDragLock = setDragLock(drag);\r\n                // If we don 't have the lock, don't start dragging\r\n                if (!this.openDragLock)\r\n                    return;\r\n            }\r\n            this.isDragging = true;\r\n            this.currentDirection = null;\r\n            this.resolveConstraints();\r\n            if (this.visualElement.projection) {\r\n                this.visualElement.projection.isAnimationBlocked = true;\r\n                this.visualElement.projection.target = undefined;\r\n            }\r\n            /**\r\n             * Record gesture origin\r\n             */\r\n            eachAxis((axis) => {\r\n                let current = this.getAxisMotionValue(axis).get() || 0;\r\n                /**\r\n                 * If the MotionValue is a percentage value convert to px\r\n                 */\r\n                if (percent.test(current)) {\r\n                    const { projection } = this.visualElement;\r\n                    if (projection && projection.layout) {\r\n                        const measuredAxis = projection.layout.layoutBox[axis];\r\n                        if (measuredAxis) {\r\n                            const length = calcLength(measuredAxis);\r\n                            current = length * (parseFloat(current) / 100);\r\n                        }\r\n                    }\r\n                }\r\n                this.originPoint[axis] = current;\r\n            });\r\n            // Fire onDragStart event\r\n            if (onDragStart) {\r\n                frame.postRender(() => onDragStart(event, info));\r\n            }\r\n            addValueToWillChange(this.visualElement, \"transform\");\r\n            const { animationState } = this.visualElement;\r\n            animationState && animationState.setActive(\"whileDrag\", true);\r\n        };\r\n        const onMove = (event, info) => {\r\n            // latestPointerEvent = event\r\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\r\n            // If we didn't successfully receive the gesture lock, early return.\r\n            if (!dragPropagation && !this.openDragLock)\r\n                return;\r\n            const { offset } = info;\r\n            // Attempt to detect drag direction if directionLock is true\r\n            if (dragDirectionLock && this.currentDirection === null) {\r\n                this.currentDirection = getCurrentDirection(offset);\r\n                // If we've successfully set a direction, notify listener\r\n                if (this.currentDirection !== null) {\r\n                    onDirectionLock && onDirectionLock(this.currentDirection);\r\n                }\r\n                return;\r\n            }\r\n            // Update each point with the latest position\r\n            this.updateAxis(\"x\", info.point, offset);\r\n            this.updateAxis(\"y\", info.point, offset);\r\n            /**\r\n             * Ideally we would leave the renderer to fire naturally at the end of\r\n             * this frame but if the element is about to change layout as the result\r\n             * of a re-render we want to ensure the browser can read the latest\r\n             * bounding box to ensure the pointer and element don't fall out of sync.\r\n             */\r\n            this.visualElement.render();\r\n            /**\r\n             * This must fire after the render call as it might trigger a state\r\n             * change which itself might trigger a layout update.\r\n             */\r\n            onDrag && onDrag(event, info);\r\n        };\r\n        const onSessionEnd = (event, info) => this.stop(event, info);\r\n        const resumeAnimation = () => eachAxis((axis) => {\r\n            var _a;\r\n            return this.getAnimationState(axis) === \"paused\" &&\r\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\r\n        });\r\n        const { dragSnapToOrigin } = this.getProps();\r\n        this.panSession = new PanSession(originEvent, {\r\n            onSessionStart,\r\n            onStart,\r\n            onMove,\r\n            onSessionEnd,\r\n            resumeAnimation,\r\n        }, {\r\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\r\n            dragSnapToOrigin,\r\n            contextWindow: getContextWindow(this.visualElement),\r\n        });\r\n    }\r\n    stop(event, info) {\r\n        const isDragging = this.isDragging;\r\n        this.cancel();\r\n        if (!isDragging)\r\n            return;\r\n        const { velocity } = info;\r\n        this.startAnimation(velocity);\r\n        const { onDragEnd } = this.getProps();\r\n        if (onDragEnd) {\r\n            frame.postRender(() => onDragEnd(event, info));\r\n        }\r\n    }\r\n    cancel() {\r\n        this.isDragging = false;\r\n        const { projection, animationState } = this.visualElement;\r\n        if (projection) {\r\n            projection.isAnimationBlocked = false;\r\n        }\r\n        this.panSession && this.panSession.end();\r\n        this.panSession = undefined;\r\n        const { dragPropagation } = this.getProps();\r\n        if (!dragPropagation && this.openDragLock) {\r\n            this.openDragLock();\r\n            this.openDragLock = null;\r\n        }\r\n        animationState && animationState.setActive(\"whileDrag\", false);\r\n    }\r\n    updateAxis(axis, _point, offset) {\r\n        const { drag } = this.getProps();\r\n        // If we're not dragging this axis, do an early return.\r\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\r\n            return;\r\n        const axisValue = this.getAxisMotionValue(axis);\r\n        let next = this.originPoint[axis] + offset[axis];\r\n        // Apply constraints\r\n        if (this.constraints && this.constraints[axis]) {\r\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\r\n        }\r\n        axisValue.set(next);\r\n    }\r\n    resolveConstraints() {\r\n        var _a;\r\n        const { dragConstraints, dragElastic } = this.getProps();\r\n        const layout = this.visualElement.projection &&\r\n            !this.visualElement.projection.layout\r\n            ? this.visualElement.projection.measure(false)\r\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\r\n        const prevConstraints = this.constraints;\r\n        if (dragConstraints && isRefObject(dragConstraints)) {\r\n            if (!this.constraints) {\r\n                this.constraints = this.resolveRefConstraints();\r\n            }\r\n        }\r\n        else {\r\n            if (dragConstraints && layout) {\r\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\r\n            }\r\n            else {\r\n                this.constraints = false;\r\n            }\r\n        }\r\n        this.elastic = resolveDragElastic(dragElastic);\r\n        /**\r\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\r\n         * from viewport-relative to component-relative.\r\n         */\r\n        if (prevConstraints !== this.constraints &&\r\n            layout &&\r\n            this.constraints &&\r\n            !this.hasMutatedConstraints) {\r\n            eachAxis((axis) => {\r\n                if (this.constraints !== false &&\r\n                    this.getAxisMotionValue(axis)) {\r\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    resolveRefConstraints() {\r\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\r\n        if (!constraints || !isRefObject(constraints))\r\n            return false;\r\n        const constraintsElement = constraints.current;\r\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\r\n        const { projection } = this.visualElement;\r\n        // TODO\r\n        if (!projection || !projection.layout)\r\n            return false;\r\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\r\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\r\n        /**\r\n         * If there's an onMeasureDragConstraints listener we call it and\r\n         * if different constraints are returned, set constraints to that\r\n         */\r\n        if (onMeasureDragConstraints) {\r\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\r\n            this.hasMutatedConstraints = !!userConstraints;\r\n            if (userConstraints) {\r\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\r\n            }\r\n        }\r\n        return measuredConstraints;\r\n    }\r\n    startAnimation(velocity) {\r\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\r\n        const constraints = this.constraints || {};\r\n        const momentumAnimations = eachAxis((axis) => {\r\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\r\n                return;\r\n            }\r\n            let transition = (constraints && constraints[axis]) || {};\r\n            if (dragSnapToOrigin)\r\n                transition = { min: 0, max: 0 };\r\n            /**\r\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\r\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\r\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\r\n             * using the value of `dragElastic`.\r\n             */\r\n            const bounceStiffness = dragElastic ? 200 : 1000000;\r\n            const bounceDamping = dragElastic ? 40 : 10000000;\r\n            const inertia = {\r\n                type: \"inertia\",\r\n                velocity: dragMomentum ? velocity[axis] : 0,\r\n                bounceStiffness,\r\n                bounceDamping,\r\n                timeConstant: 750,\r\n                restDelta: 1,\r\n                restSpeed: 10,\r\n                ...dragTransition,\r\n                ...transition,\r\n            };\r\n            // If we're not animating on an externally-provided `MotionValue` we can use the\r\n            // component's animation controls which will handle interactions with whileHover (etc),\r\n            // otherwise we just have to animate the `MotionValue` itself.\r\n            return this.startAxisValueAnimation(axis, inertia);\r\n        });\r\n        // Run all animations and then resolve the new drag constraints.\r\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\r\n    }\r\n    startAxisValueAnimation(axis, transition) {\r\n        const axisValue = this.getAxisMotionValue(axis);\r\n        addValueToWillChange(this.visualElement, axis);\r\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\r\n    }\r\n    stopAnimation() {\r\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\r\n    }\r\n    pauseAnimation() {\r\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\r\n    }\r\n    getAnimationState(axis) {\r\n        var _a;\r\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\r\n    }\r\n    /**\r\n     * Drag works differently depending on which props are provided.\r\n     *\r\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\r\n     * - Otherwise, we apply the delta to the x/y motion values.\r\n     */\r\n    getAxisMotionValue(axis) {\r\n        const dragKey = `_drag${axis.toUpperCase()}`;\r\n        const props = this.visualElement.getProps();\r\n        const externalMotionValue = props[dragKey];\r\n        return externalMotionValue\r\n            ? externalMotionValue\r\n            : this.visualElement.getValue(axis, (props.initial\r\n                ? props.initial[axis]\r\n                : undefined) || 0);\r\n    }\r\n    snapToCursor(point) {\r\n        eachAxis((axis) => {\r\n            const { drag } = this.getProps();\r\n            // If we're not dragging this axis, do an early return.\r\n            if (!shouldDrag(axis, drag, this.currentDirection))\r\n                return;\r\n            const { projection } = this.visualElement;\r\n            const axisValue = this.getAxisMotionValue(axis);\r\n            if (projection && projection.layout) {\r\n                const { min, max } = projection.layout.layoutBox[axis];\r\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * When the viewport resizes we want to check if the measured constraints\r\n     * have changed and, if so, reposition the element within those new constraints\r\n     * relative to where it was before the resize.\r\n     */\r\n    scalePositionWithinConstraints() {\r\n        if (!this.visualElement.current)\r\n            return;\r\n        const { drag, dragConstraints } = this.getProps();\r\n        const { projection } = this.visualElement;\r\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\r\n            return;\r\n        /**\r\n         * Stop current animations as there can be visual glitching if we try to do\r\n         * this mid-animation\r\n         */\r\n        this.stopAnimation();\r\n        /**\r\n         * Record the relative position of the dragged element relative to the\r\n         * constraints box and save as a progress value.\r\n         */\r\n        const boxProgress = { x: 0, y: 0 };\r\n        eachAxis((axis) => {\r\n            const axisValue = this.getAxisMotionValue(axis);\r\n            if (axisValue && this.constraints !== false) {\r\n                const latest = axisValue.get();\r\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\r\n            }\r\n        });\r\n        /**\r\n         * Update the layout of this element and resolve the latest drag constraints\r\n         */\r\n        const { transformTemplate } = this.visualElement.getProps();\r\n        this.visualElement.current.style.transform = transformTemplate\r\n            ? transformTemplate({}, \"\")\r\n            : \"none\";\r\n        projection.root && projection.root.updateScroll();\r\n        projection.updateLayout();\r\n        this.resolveConstraints();\r\n        /**\r\n         * For each axis, calculate the current progress of the layout axis\r\n         * within the new constraints.\r\n         */\r\n        eachAxis((axis) => {\r\n            if (!shouldDrag(axis, drag, null))\r\n                return;\r\n            /**\r\n             * Calculate a new transform based on the previous box progress\r\n             */\r\n            const axisValue = this.getAxisMotionValue(axis);\r\n            const { min, max } = this.constraints[axis];\r\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\r\n        });\r\n    }\r\n    addListeners() {\r\n        if (!this.visualElement.current)\r\n            return;\r\n        elementDragControls.set(this.visualElement, this);\r\n        const element = this.visualElement.current;\r\n        /**\r\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\r\n         */\r\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\r\n            const { drag, dragListener = true } = this.getProps();\r\n            drag && dragListener && this.start(event);\r\n        });\r\n        const measureDragConstraints = () => {\r\n            const { dragConstraints } = this.getProps();\r\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\r\n                this.constraints = this.resolveRefConstraints();\r\n            }\r\n        };\r\n        const { projection } = this.visualElement;\r\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\r\n        if (projection && !projection.layout) {\r\n            projection.root && projection.root.updateScroll();\r\n            projection.updateLayout();\r\n        }\r\n        frame.read(measureDragConstraints);\r\n        /**\r\n         * Attach a window resize listener to scale the draggable target within its defined\r\n         * constraints as the window resizes.\r\n         */\r\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\r\n        /**\r\n         * If the element's layout changes, calculate the delta and apply that to\r\n         * the drag gesture's origin point.\r\n         */\r\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\r\n            if (this.isDragging && hasLayoutChanged) {\r\n                eachAxis((axis) => {\r\n                    const motionValue = this.getAxisMotionValue(axis);\r\n                    if (!motionValue)\r\n                        return;\r\n                    this.originPoint[axis] += delta[axis].translate;\r\n                    motionValue.set(motionValue.get() + delta[axis].translate);\r\n                });\r\n                this.visualElement.render();\r\n            }\r\n        }));\r\n        return () => {\r\n            stopResizeListener();\r\n            stopPointerListener();\r\n            stopMeasureLayoutListener();\r\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\r\n        };\r\n    }\r\n    getProps() {\r\n        const props = this.visualElement.getProps();\r\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\r\n        return {\r\n            ...props,\r\n            drag,\r\n            dragDirectionLock,\r\n            dragPropagation,\r\n            dragConstraints,\r\n            dragElastic,\r\n            dragMomentum,\r\n        };\r\n    }\r\n}\r\nfunction shouldDrag(direction, drag, currentDirection) {\r\n    return ((drag === true || drag === direction) &&\r\n        (currentDirection === null || currentDirection === direction));\r\n}\r\n/**\r\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\r\n * than the provided threshold, return `null`.\r\n *\r\n * @param offset - The x/y offset from origin.\r\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\r\n */\r\nfunction getCurrentDirection(offset, lockThreshold = 10) {\r\n    let direction = null;\r\n    if (Math.abs(offset.y) > lockThreshold) {\r\n        direction = \"y\";\r\n    }\r\n    else if (Math.abs(offset.x) > lockThreshold) {\r\n        direction = \"x\";\r\n    }\r\n    return direction;\r\n}\r\n\r\nexport { VisualElementDragControls, elementDragControls };\r\n","import { PanSession } from './PanSession.mjs';\r\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\r\nimport { Feature } from '../../motion/features/Feature.mjs';\r\nimport { noop } from 'motion-utils';\r\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\r\nimport { frame } from '../../frameloop/frame.mjs';\r\n\r\nconst asyncHandler = (handler) => (event, info) => {\r\n    if (handler) {\r\n        frame.postRender(() => handler(event, info));\r\n    }\r\n};\r\nclass PanGesture extends Feature {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.removePointerDownListener = noop;\r\n    }\r\n    onPointerDown(pointerDownEvent) {\r\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\r\n            transformPagePoint: this.node.getTransformPagePoint(),\r\n            contextWindow: getContextWindow(this.node),\r\n        });\r\n    }\r\n    createPanHandlers() {\r\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\r\n        return {\r\n            onSessionStart: asyncHandler(onPanSessionStart),\r\n            onStart: asyncHandler(onPanStart),\r\n            onMove: onPan,\r\n            onEnd: (event, info) => {\r\n                delete this.session;\r\n                if (onPanEnd) {\r\n                    frame.postRender(() => onPanEnd(event, info));\r\n                }\r\n            },\r\n        };\r\n    }\r\n    mount() {\r\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\r\n    }\r\n    update() {\r\n        this.session && this.session.updateHandlers(this.createPanHandlers());\r\n    }\r\n    unmount() {\r\n        this.removePointerDownListener();\r\n        this.session && this.session.end();\r\n    }\r\n}\r\n\r\nexport { PanGesture };\r\n","\"use client\";\r\nimport { createContext } from 'react';\r\n\r\n/**\r\n * @public\r\n */\r\nconst PresenceContext = createContext(null);\r\n\r\nexport { PresenceContext };\r\n","\"use client\";\r\nimport { createContext } from 'react';\r\n\r\nconst LayoutGroupContext = createContext({});\r\n\r\nexport { LayoutGroupContext };\r\n","\"use client\";\r\nimport { createContext } from 'react';\r\n\r\n/**\r\n * Internal, exported only for usage in Framer\r\n */\r\nconst SwitchLayoutGroupContext = createContext({});\r\n\r\nexport { SwitchLayoutGroupContext };\r\n","/**\r\n * This should only ever be modified on the client otherwise it'll\r\n * persist through server requests. If we need instanced states we\r\n * could lazy-init via root.\r\n */\r\nconst globalProjectionState = {\r\n    /**\r\n     * Global flag as to whether the tree has animated since the last time\r\n     * we resized the window\r\n     */\r\n    hasAnimatedSinceResize: true,\r\n    /**\r\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\r\n     * update will be given a `data-projection-id` attribute.\r\n     */\r\n    hasEverUpdated: false,\r\n};\r\n\r\nexport { globalProjectionState };\r\n","import { px } from '../../value/types/numbers/units.mjs';\r\n\r\nfunction pixelsToPercent(pixels, axis) {\r\n    if (axis.max === axis.min)\r\n        return 0;\r\n    return (pixels / (axis.max - axis.min)) * 100;\r\n}\r\n/**\r\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\r\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\r\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\r\n * borderRadius in both states. If we animate between the two in pixels that will trigger\r\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\r\n */\r\nconst correctBorderRadius = {\r\n    correct: (latest, node) => {\r\n        if (!node.target)\r\n            return latest;\r\n        /**\r\n         * If latest is a string, if it's a percentage we can return immediately as it's\r\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\r\n         */\r\n        if (typeof latest === \"string\") {\r\n            if (px.test(latest)) {\r\n                latest = parseFloat(latest);\r\n            }\r\n            else {\r\n                return latest;\r\n            }\r\n        }\r\n        /**\r\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\r\n         * pixel value as a percentage of each axis\r\n         */\r\n        const x = pixelsToPercent(latest, node.target.x);\r\n        const y = pixelsToPercent(latest, node.target.y);\r\n        return `${x}% ${y}%`;\r\n    },\r\n};\r\n\r\nexport { correctBorderRadius, pixelsToPercent };\r\n","import { mixNumber } from '../../utils/mix/number.mjs';\r\nimport { complex } from '../../value/types/complex/index.mjs';\r\n\r\nconst correctBoxShadow = {\r\n    correct: (latest, { treeScale, projectionDelta }) => {\r\n        const original = latest;\r\n        const shadow = complex.parse(latest);\r\n        // TODO: Doesn't support multiple shadows\r\n        if (shadow.length > 5)\r\n            return original;\r\n        const template = complex.createTransformer(latest);\r\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\r\n        // Calculate the overall context scale\r\n        const xScale = projectionDelta.x.scale * treeScale.x;\r\n        const yScale = projectionDelta.y.scale * treeScale.y;\r\n        shadow[0 + offset] /= xScale;\r\n        shadow[1 + offset] /= yScale;\r\n        /**\r\n         * Ideally we'd correct x and y scales individually, but because blur and\r\n         * spread apply to both we have to take a scale average and apply that instead.\r\n         * We could potentially improve the outcome of this by incorporating the ratio between\r\n         * the two scales.\r\n         */\r\n        const averageScale = mixNumber(xScale, yScale, 0.5);\r\n        // Blur\r\n        if (typeof shadow[2 + offset] === \"number\")\r\n            shadow[2 + offset] /= averageScale;\r\n        // Spread\r\n        if (typeof shadow[3 + offset] === \"number\")\r\n            shadow[3 + offset] /= averageScale;\r\n        return template(shadow);\r\n    },\r\n};\r\n\r\nexport { correctBoxShadow };\r\n","const scaleCorrectors = {};\r\nfunction addScaleCorrector(correctors) {\r\n    Object.assign(scaleCorrectors, correctors);\r\n}\r\n\r\nexport { addScaleCorrector, scaleCorrectors };\r\n","import { createRenderBatcher } from './batcher.mjs';\r\n\r\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\r\n\r\nexport { cancelMicrotask, microtask };\r\n","\"use client\";\r\nimport { jsx } from 'react/jsx-runtime';\r\nimport { useContext, Component } from 'react';\r\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\r\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\r\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\r\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\r\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\r\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\r\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\r\nimport { microtask } from '../../../frameloop/microtask.mjs';\r\nimport { frame } from '../../../frameloop/frame.mjs';\r\n\r\nclass MeasureLayoutWithContext extends Component {\r\n    /**\r\n     * This only mounts projection nodes for components that\r\n     * need measuring, we might want to do it for all components\r\n     * in order to incorporate transforms\r\n     */\r\n    componentDidMount() {\r\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\r\n        const { projection } = visualElement;\r\n        addScaleCorrector(defaultScaleCorrectors);\r\n        if (projection) {\r\n            if (layoutGroup.group)\r\n                layoutGroup.group.add(projection);\r\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\r\n                switchLayoutGroup.register(projection);\r\n            }\r\n            projection.root.didUpdate();\r\n            projection.addEventListener(\"animationComplete\", () => {\r\n                this.safeToRemove();\r\n            });\r\n            projection.setOptions({\r\n                ...projection.options,\r\n                onExitComplete: () => this.safeToRemove(),\r\n            });\r\n        }\r\n        globalProjectionState.hasEverUpdated = true;\r\n    }\r\n    getSnapshotBeforeUpdate(prevProps) {\r\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\r\n        const projection = visualElement.projection;\r\n        if (!projection)\r\n            return null;\r\n        /**\r\n         * TODO: We use this data in relegate to determine whether to\r\n         * promote a previous element. There's no guarantee its presence data\r\n         * will have updated by this point - if a bug like this arises it will\r\n         * have to be that we markForRelegation and then find a new lead some other way,\r\n         * perhaps in didUpdate\r\n         */\r\n        projection.isPresent = isPresent;\r\n        if (drag ||\r\n            prevProps.layoutDependency !== layoutDependency ||\r\n            layoutDependency === undefined) {\r\n            projection.willUpdate();\r\n        }\r\n        else {\r\n            this.safeToRemove();\r\n        }\r\n        if (prevProps.isPresent !== isPresent) {\r\n            if (isPresent) {\r\n                projection.promote();\r\n            }\r\n            else if (!projection.relegate()) {\r\n                /**\r\n                 * If there's another stack member taking over from this one,\r\n                 * it's in charge of the exit animation and therefore should\r\n                 * be in charge of the safe to remove. Otherwise we call it here.\r\n                 */\r\n                frame.postRender(() => {\r\n                    const stack = projection.getStack();\r\n                    if (!stack || !stack.members.length) {\r\n                        this.safeToRemove();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    componentDidUpdate() {\r\n        const { projection } = this.props.visualElement;\r\n        if (projection) {\r\n            projection.root.didUpdate();\r\n            microtask.postRender(() => {\r\n                if (!projection.currentAnimation && projection.isLead()) {\r\n                    this.safeToRemove();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\r\n        const { projection } = visualElement;\r\n        if (projection) {\r\n            projection.scheduleCheckAfterUnmount();\r\n            if (layoutGroup && layoutGroup.group)\r\n                layoutGroup.group.remove(projection);\r\n            if (promoteContext && promoteContext.deregister)\r\n                promoteContext.deregister(projection);\r\n        }\r\n    }\r\n    safeToRemove() {\r\n        const { safeToRemove } = this.props;\r\n        safeToRemove && safeToRemove();\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\nfunction MeasureLayout(props) {\r\n    const [isPresent, safeToRemove] = usePresence();\r\n    const layoutGroup = useContext(LayoutGroupContext);\r\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\r\n}\r\nconst defaultScaleCorrectors = {\r\n    borderRadius: {\r\n        ...correctBorderRadius,\r\n        applyTo: [\r\n            \"borderTopLeftRadius\",\r\n            \"borderTopRightRadius\",\r\n            \"borderBottomLeftRadius\",\r\n            \"borderBottomRightRadius\",\r\n        ],\r\n    },\r\n    borderTopLeftRadius: correctBorderRadius,\r\n    borderTopRightRadius: correctBorderRadius,\r\n    borderBottomLeftRadius: correctBorderRadius,\r\n    borderBottomRightRadius: correctBorderRadius,\r\n    boxShadow: correctBoxShadow,\r\n};\r\n\r\nexport { MeasureLayout };\r\n","import { useContext, useId, useEffect, useCallback } from 'react';\r\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\r\n\r\n/**\r\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\r\n * to access information about whether it's still present in the React tree.\r\n *\r\n * ```jsx\r\n * import { usePresence } from \"framer-motion\"\r\n *\r\n * export const Component = () => {\r\n *   const [isPresent, safeToRemove] = usePresence()\r\n *\r\n *   useEffect(() => {\r\n *     !isPresent && setTimeout(safeToRemove, 1000)\r\n *   }, [isPresent])\r\n *\r\n *   return <div />\r\n * }\r\n * ```\r\n *\r\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\r\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\r\n *\r\n * @public\r\n */\r\nfunction usePresence(subscribe = true) {\r\n    const context = useContext(PresenceContext);\r\n    if (context === null)\r\n        return [true, null];\r\n    const { isPresent, onExitComplete, register } = context;\r\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\r\n    // either be null or non-null for the lifespan of the component.\r\n    const id = useId();\r\n    useEffect(() => {\r\n        if (subscribe)\r\n            register(id);\r\n    }, [subscribe]);\r\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\r\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\r\n}\r\n/**\r\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\r\n * There is no `safeToRemove` function.\r\n *\r\n * ```jsx\r\n * import { useIsPresent } from \"framer-motion\"\r\n *\r\n * export const Component = () => {\r\n *   const isPresent = useIsPresent()\r\n *\r\n *   useEffect(() => {\r\n *     !isPresent && console.log(\"I've been removed!\")\r\n *   }, [isPresent])\r\n *\r\n *   return <div />\r\n * }\r\n * ```\r\n *\r\n * @public\r\n */\r\nfunction useIsPresent() {\r\n    return isPresent(useContext(PresenceContext));\r\n}\r\nfunction isPresent(context) {\r\n    return context === null ? true : context.isPresent;\r\n}\r\n\r\nexport { isPresent, useIsPresent, usePresence };\r\n","const compareByDepth = (a, b) => a.depth - b.depth;\r\n\r\nexport { compareByDepth };\r\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\r\nimport { compareByDepth } from './compare-by-depth.mjs';\r\n\r\nclass FlatTree {\r\n    constructor() {\r\n        this.children = [];\r\n        this.isDirty = false;\r\n    }\r\n    add(child) {\r\n        addUniqueItem(this.children, child);\r\n        this.isDirty = true;\r\n    }\r\n    remove(child) {\r\n        removeItem(this.children, child);\r\n        this.isDirty = true;\r\n    }\r\n    forEach(callback) {\r\n        this.isDirty && this.children.sort(compareByDepth);\r\n        this.isDirty = false;\r\n        this.children.forEach(callback);\r\n    }\r\n}\r\n\r\nexport { FlatTree };\r\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\r\nimport { isMotionValue } from './is-motion-value.mjs';\r\n\r\n/**\r\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\r\n *\r\n * TODO: Remove and move to library\r\n */\r\nfunction resolveMotionValue(value) {\r\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\r\n    return isCustomValue(unwrappedValue)\r\n        ? unwrappedValue.toValue()\r\n        : unwrappedValue;\r\n}\r\n\r\nexport { resolveMotionValue };\r\n","import { progress, noop } from 'motion-utils';\r\nimport { circOut } from '../../easing/circ.mjs';\r\nimport { mixNumber } from '../../utils/mix/number.mjs';\r\nimport { percent, px } from '../../value/types/numbers/units.mjs';\r\n\r\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\r\nconst numBorders = borders.length;\r\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\r\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\r\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\r\n    if (shouldCrossfadeOpacity) {\r\n        target.opacity = mixNumber(0, \r\n        // TODO Reinstate this if only child\r\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\r\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\r\n    }\r\n    else if (isOnlyMember) {\r\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\r\n    }\r\n    /**\r\n     * Mix border radius\r\n     */\r\n    for (let i = 0; i < numBorders; i++) {\r\n        const borderLabel = `border${borders[i]}Radius`;\r\n        let followRadius = getRadius(follow, borderLabel);\r\n        let leadRadius = getRadius(lead, borderLabel);\r\n        if (followRadius === undefined && leadRadius === undefined)\r\n            continue;\r\n        followRadius || (followRadius = 0);\r\n        leadRadius || (leadRadius = 0);\r\n        const canMix = followRadius === 0 ||\r\n            leadRadius === 0 ||\r\n            isPx(followRadius) === isPx(leadRadius);\r\n        if (canMix) {\r\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\r\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\r\n                target[borderLabel] += \"%\";\r\n            }\r\n        }\r\n        else {\r\n            target[borderLabel] = leadRadius;\r\n        }\r\n    }\r\n    /**\r\n     * Mix rotation\r\n     */\r\n    if (follow.rotate || lead.rotate) {\r\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\r\n    }\r\n}\r\nfunction getRadius(values, radiusName) {\r\n    return values[radiusName] !== undefined\r\n        ? values[radiusName]\r\n        : values.borderRadius;\r\n}\r\n// /**\r\n//  * We only want to mix the background color if there's a follow element\r\n//  * that we're not crossfading opacity between. For instance with switch\r\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\r\n//  * element being animated but also cuts down on the number of paints triggered\r\n//  * for elements where opacity is doing that work for us.\r\n//  */\r\n// if (\r\n//     !hasFollowElement &&\r\n//     latestLeadValues.backgroundColor &&\r\n//     latestFollowValues.backgroundColor\r\n// ) {\r\n//     /**\r\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\r\n//      * We could probably create a mixer that runs at the start of the animation but\r\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\r\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\r\n//      */\r\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\r\n//         latestFollowValues.backgroundColor as string,\r\n//         latestLeadValues.backgroundColor as string\r\n//     )(p)\r\n// }\r\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\r\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\r\nfunction compress(min, max, easing) {\r\n    return (p) => {\r\n        // Could replace ifs with clamp\r\n        if (p < min)\r\n            return 0;\r\n        if (p > max)\r\n            return 1;\r\n        return easing(progress(min, max, p));\r\n    };\r\n}\r\n\r\nexport { mixValues };\r\n","/**\r\n * Reset an axis to the provided origin box.\r\n *\r\n * This is a mutative operation.\r\n */\r\nfunction copyAxisInto(axis, originAxis) {\r\n    axis.min = originAxis.min;\r\n    axis.max = originAxis.max;\r\n}\r\n/**\r\n * Reset a box to the provided origin box.\r\n *\r\n * This is a mutative operation.\r\n */\r\nfunction copyBoxInto(box, originBox) {\r\n    copyAxisInto(box.x, originBox.x);\r\n    copyAxisInto(box.y, originBox.y);\r\n}\r\n/**\r\n * Reset a delta to the provided origin box.\r\n *\r\n * This is a mutative operation.\r\n */\r\nfunction copyAxisDeltaInto(delta, originDelta) {\r\n    delta.translate = originDelta.translate;\r\n    delta.scale = originDelta.scale;\r\n    delta.originPoint = originDelta.originPoint;\r\n    delta.origin = originDelta.origin;\r\n}\r\n\r\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\r\n","import { mixNumber } from '../../utils/mix/number.mjs';\r\nimport { percent } from '../../value/types/numbers/units.mjs';\r\nimport { scalePoint } from './delta-apply.mjs';\r\n\r\n/**\r\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\r\n */\r\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\r\n    point -= translate;\r\n    point = scalePoint(point, 1 / scale, originPoint);\r\n    if (boxScale !== undefined) {\r\n        point = scalePoint(point, 1 / boxScale, originPoint);\r\n    }\r\n    return point;\r\n}\r\n/**\r\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\r\n */\r\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\r\n    if (percent.test(translate)) {\r\n        translate = parseFloat(translate);\r\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\r\n        translate = relativeProgress - sourceAxis.min;\r\n    }\r\n    if (typeof translate !== \"number\")\r\n        return;\r\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\r\n    if (axis === originAxis)\r\n        originPoint -= translate;\r\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\r\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\r\n}\r\n/**\r\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\r\n * and acts as a bridge between motion values and removeAxisDelta\r\n */\r\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\r\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\r\n}\r\n/**\r\n * The names of the motion values we want to apply as translation, scale and origin.\r\n */\r\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\r\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\r\n/**\r\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\r\n * and acts as a bridge between motion values and removeAxisDelta\r\n */\r\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\r\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\r\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\r\n}\r\n\r\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\r\n","import { calcLength } from './delta-calc.mjs';\r\n\r\nfunction isAxisDeltaZero(delta) {\r\n    return delta.translate === 0 && delta.scale === 1;\r\n}\r\nfunction isDeltaZero(delta) {\r\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\r\n}\r\nfunction axisEquals(a, b) {\r\n    return a.min === b.min && a.max === b.max;\r\n}\r\nfunction boxEquals(a, b) {\r\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\r\n}\r\nfunction axisEqualsRounded(a, b) {\r\n    return (Math.round(a.min) === Math.round(b.min) &&\r\n        Math.round(a.max) === Math.round(b.max));\r\n}\r\nfunction boxEqualsRounded(a, b) {\r\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\r\n}\r\nfunction aspectRatio(box) {\r\n    return calcLength(box.x) / calcLength(box.y);\r\n}\r\nfunction axisDeltaEquals(a, b) {\r\n    return (a.translate === b.translate &&\r\n        a.scale === b.scale &&\r\n        a.originPoint === b.originPoint);\r\n}\r\n\r\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\r\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\r\n\r\nclass NodeStack {\r\n    constructor() {\r\n        this.members = [];\r\n    }\r\n    add(node) {\r\n        addUniqueItem(this.members, node);\r\n        node.scheduleRender();\r\n    }\r\n    remove(node) {\r\n        removeItem(this.members, node);\r\n        if (node === this.prevLead) {\r\n            this.prevLead = undefined;\r\n        }\r\n        if (node === this.lead) {\r\n            const prevLead = this.members[this.members.length - 1];\r\n            if (prevLead) {\r\n                this.promote(prevLead);\r\n            }\r\n        }\r\n    }\r\n    relegate(node) {\r\n        const indexOfNode = this.members.findIndex((member) => node === member);\r\n        if (indexOfNode === 0)\r\n            return false;\r\n        /**\r\n         * Find the next projection node that is present\r\n         */\r\n        let prevLead;\r\n        for (let i = indexOfNode; i >= 0; i--) {\r\n            const member = this.members[i];\r\n            if (member.isPresent !== false) {\r\n                prevLead = member;\r\n                break;\r\n            }\r\n        }\r\n        if (prevLead) {\r\n            this.promote(prevLead);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    promote(node, preserveFollowOpacity) {\r\n        const prevLead = this.lead;\r\n        if (node === prevLead)\r\n            return;\r\n        this.prevLead = prevLead;\r\n        this.lead = node;\r\n        node.show();\r\n        if (prevLead) {\r\n            prevLead.instance && prevLead.scheduleRender();\r\n            node.scheduleRender();\r\n            node.resumeFrom = prevLead;\r\n            if (preserveFollowOpacity) {\r\n                node.resumeFrom.preserveOpacity = true;\r\n            }\r\n            if (prevLead.snapshot) {\r\n                node.snapshot = prevLead.snapshot;\r\n                node.snapshot.latestValues =\r\n                    prevLead.animationValues || prevLead.latestValues;\r\n            }\r\n            if (node.root && node.root.isUpdating) {\r\n                node.isLayoutDirty = true;\r\n            }\r\n            const { crossfade } = node.options;\r\n            if (crossfade === false) {\r\n                prevLead.hide();\r\n            }\r\n            /**\r\n             * TODO:\r\n             *   - Test border radius when previous node was deleted\r\n             *   - boxShadow mixing\r\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\r\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\r\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\r\n             * ---\r\n             *   - Crossfade opacity of root nodes\r\n             *   - layoutId changes after animation\r\n             *   - layoutId changes mid animation\r\n             */\r\n        }\r\n    }\r\n    exitAnimationComplete() {\r\n        this.members.forEach((node) => {\r\n            const { options, resumingFrom } = node;\r\n            options.onExitComplete && options.onExitComplete();\r\n            if (resumingFrom) {\r\n                resumingFrom.options.onExitComplete &&\r\n                    resumingFrom.options.onExitComplete();\r\n            }\r\n        });\r\n    }\r\n    scheduleRender() {\r\n        this.members.forEach((node) => {\r\n            node.instance && node.scheduleRender(false);\r\n        });\r\n    }\r\n    /**\r\n     * Clear any leads that have been removed this render to prevent them from being\r\n     * used in future animations and to prevent memory leaks\r\n     */\r\n    removeLeadSnapshot() {\r\n        if (this.lead && this.lead.snapshot) {\r\n            this.lead.snapshot = undefined;\r\n        }\r\n    }\r\n}\r\n\r\nexport { NodeStack };\r\n","import { getValueTransition } from 'motion-dom';\r\nimport { noop } from 'motion-utils';\r\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\r\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\r\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\r\nimport { microtask } from '../../frameloop/microtask.mjs';\r\nimport { time } from '../../frameloop/sync-time.mjs';\r\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\r\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\r\nimport { clamp } from '../../utils/clamp.mjs';\r\nimport { delay } from '../../utils/delay.mjs';\r\nimport { mixNumber } from '../../utils/mix/number.mjs';\r\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\r\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\r\nimport { mixValues } from '../animation/mix-values.mjs';\r\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\r\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\r\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\r\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\r\nimport { createBox, createDelta } from '../geometry/models.mjs';\r\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\r\nimport { NodeStack } from '../shared/stack.mjs';\r\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\r\nimport { buildProjectionTransform } from '../styles/transform.mjs';\r\nimport { eachAxis } from '../utils/each-axis.mjs';\r\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\r\nimport { globalProjectionState } from './state.mjs';\r\n\r\nconst metrics = {\r\n    type: \"projectionFrame\",\r\n    totalNodes: 0,\r\n    resolvedTargetDeltas: 0,\r\n    recalculatedProjection: 0,\r\n};\r\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\r\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\r\nconst hiddenVisibility = { visibility: \"hidden\" };\r\n/**\r\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\r\n * which has a noticeable difference in spring animations\r\n */\r\nconst animationTarget = 1000;\r\nlet id = 0;\r\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\r\n    const { latestValues } = visualElement;\r\n    // Record the distorting transform and then temporarily set it to 0\r\n    if (latestValues[key]) {\r\n        values[key] = latestValues[key];\r\n        visualElement.setStaticValue(key, 0);\r\n        if (sharedAnimationValues) {\r\n            sharedAnimationValues[key] = 0;\r\n        }\r\n    }\r\n}\r\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\r\n    projectionNode.hasCheckedOptimisedAppear = true;\r\n    if (projectionNode.root === projectionNode)\r\n        return;\r\n    const { visualElement } = projectionNode.options;\r\n    if (!visualElement)\r\n        return;\r\n    const appearId = getOptimisedAppearId(visualElement);\r\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\r\n        const { layout, layoutId } = projectionNode.options;\r\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\r\n    }\r\n    const { parent } = projectionNode;\r\n    if (parent && !parent.hasCheckedOptimisedAppear) {\r\n        cancelTreeOptimisedTransformAnimations(parent);\r\n    }\r\n}\r\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\r\n    return class ProjectionNode {\r\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\r\n            /**\r\n             * A unique ID generated for every projection node.\r\n             */\r\n            this.id = id++;\r\n            /**\r\n             * An id that represents a unique session instigated by startUpdate.\r\n             */\r\n            this.animationId = 0;\r\n            /**\r\n             * A Set containing all this component's children. This is used to iterate\r\n             * through the children.\r\n             *\r\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\r\n             */\r\n            this.children = new Set();\r\n            /**\r\n             * Options for the node. We use this to configure what kind of layout animations\r\n             * we should perform (if any).\r\n             */\r\n            this.options = {};\r\n            /**\r\n             * We use this to detect when its safe to shut down part of a projection tree.\r\n             * We have to keep projecting children for scale correction and relative projection\r\n             * until all their parents stop performing layout animations.\r\n             */\r\n            this.isTreeAnimating = false;\r\n            this.isAnimationBlocked = false;\r\n            /**\r\n             * Flag to true if we think this layout has been changed. We can't always know this,\r\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\r\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\r\n             * and if one node is dirtied, they all are.\r\n             */\r\n            this.isLayoutDirty = false;\r\n            /**\r\n             * Flag to true if we think the projection calculations for this node needs\r\n             * recalculating as a result of an updated transform or layout animation.\r\n             */\r\n            this.isProjectionDirty = false;\r\n            /**\r\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\r\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\r\n             */\r\n            this.isSharedProjectionDirty = false;\r\n            /**\r\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\r\n             * respected by shared nodes.\r\n             */\r\n            this.isTransformDirty = false;\r\n            /**\r\n             * Block layout updates for instant layout transitions throughout the tree.\r\n             */\r\n            this.updateManuallyBlocked = false;\r\n            this.updateBlockedByResize = false;\r\n            /**\r\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\r\n             * call.\r\n             */\r\n            this.isUpdating = false;\r\n            /**\r\n             * If this is an SVG element we currently disable projection transforms\r\n             */\r\n            this.isSVG = false;\r\n            /**\r\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\r\n             * its projection styles.\r\n             */\r\n            this.needsReset = false;\r\n            /**\r\n             * Flags whether this node should have its transform reset prior to measuring.\r\n             */\r\n            this.shouldResetTransform = false;\r\n            /**\r\n             * Store whether this node has been checked for optimised appear animations. As\r\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\r\n             * this makes sure we only check each path once, stopping at nodes that\r\n             * have already been checked.\r\n             */\r\n            this.hasCheckedOptimisedAppear = false;\r\n            /**\r\n             * An object representing the calculated contextual/accumulated/tree scale.\r\n             * This will be used to scale calculcated projection transforms, as these are\r\n             * calculated in screen-space but need to be scaled for elements to layoutly\r\n             * make it to their calculated destinations.\r\n             *\r\n             * TODO: Lazy-init\r\n             */\r\n            this.treeScale = { x: 1, y: 1 };\r\n            /**\r\n             *\r\n             */\r\n            this.eventHandlers = new Map();\r\n            this.hasTreeAnimated = false;\r\n            // Note: Currently only running on root node\r\n            this.updateScheduled = false;\r\n            this.scheduleUpdate = () => this.update();\r\n            this.projectionUpdateScheduled = false;\r\n            this.checkUpdateFailed = () => {\r\n                if (this.isUpdating) {\r\n                    this.isUpdating = false;\r\n                    this.clearAllSnapshots();\r\n                }\r\n            };\r\n            /**\r\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\r\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\r\n             * the next step.\r\n             */\r\n            this.updateProjection = () => {\r\n                this.projectionUpdateScheduled = false;\r\n                /**\r\n                 * Reset debug counts. Manually resetting rather than creating a new\r\n                 * object each frame.\r\n                 */\r\n                if (isDebug) {\r\n                    metrics.totalNodes =\r\n                        metrics.resolvedTargetDeltas =\r\n                            metrics.recalculatedProjection =\r\n                                0;\r\n                }\r\n                this.nodes.forEach(propagateDirtyNodes);\r\n                this.nodes.forEach(resolveTargetDelta);\r\n                this.nodes.forEach(calcProjection);\r\n                this.nodes.forEach(cleanDirtyNodes);\r\n                if (isDebug) {\r\n                    window.MotionDebug.record(metrics);\r\n                }\r\n            };\r\n            /**\r\n             * Frame calculations\r\n             */\r\n            this.resolvedRelativeTargetAt = 0.0;\r\n            this.hasProjected = false;\r\n            this.isVisible = true;\r\n            this.animationProgress = 0;\r\n            /**\r\n             * Shared layout\r\n             */\r\n            // TODO Only running on root node\r\n            this.sharedNodes = new Map();\r\n            this.latestValues = latestValues;\r\n            this.root = parent ? parent.root || parent : this;\r\n            this.path = parent ? [...parent.path, parent] : [];\r\n            this.parent = parent;\r\n            this.depth = parent ? parent.depth + 1 : 0;\r\n            for (let i = 0; i < this.path.length; i++) {\r\n                this.path[i].shouldResetTransform = true;\r\n            }\r\n            if (this.root === this)\r\n                this.nodes = new FlatTree();\r\n        }\r\n        addEventListener(name, handler) {\r\n            if (!this.eventHandlers.has(name)) {\r\n                this.eventHandlers.set(name, new SubscriptionManager());\r\n            }\r\n            return this.eventHandlers.get(name).add(handler);\r\n        }\r\n        notifyListeners(name, ...args) {\r\n            const subscriptionManager = this.eventHandlers.get(name);\r\n            subscriptionManager && subscriptionManager.notify(...args);\r\n        }\r\n        hasListeners(name) {\r\n            return this.eventHandlers.has(name);\r\n        }\r\n        /**\r\n         * Lifecycles\r\n         */\r\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\r\n            if (this.instance)\r\n                return;\r\n            this.isSVG = isSVGElement(instance);\r\n            this.instance = instance;\r\n            const { layoutId, layout, visualElement } = this.options;\r\n            if (visualElement && !visualElement.current) {\r\n                visualElement.mount(instance);\r\n            }\r\n            this.root.nodes.add(this);\r\n            this.parent && this.parent.children.add(this);\r\n            if (isLayoutDirty && (layout || layoutId)) {\r\n                this.isLayoutDirty = true;\r\n            }\r\n            if (attachResizeListener) {\r\n                let cancelDelay;\r\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\r\n                attachResizeListener(instance, () => {\r\n                    this.root.updateBlockedByResize = true;\r\n                    cancelDelay && cancelDelay();\r\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\r\n                    if (globalProjectionState.hasAnimatedSinceResize) {\r\n                        globalProjectionState.hasAnimatedSinceResize = false;\r\n                        this.nodes.forEach(finishAnimation);\r\n                    }\r\n                });\r\n            }\r\n            if (layoutId) {\r\n                this.root.registerSharedNode(layoutId, this);\r\n            }\r\n            // Only register the handler if it requires layout animation\r\n            if (this.options.animate !== false &&\r\n                visualElement &&\r\n                (layoutId || layout)) {\r\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\r\n                    if (this.isTreeAnimationBlocked()) {\r\n                        this.target = undefined;\r\n                        this.relativeTarget = undefined;\r\n                        return;\r\n                    }\r\n                    // TODO: Check here if an animation exists\r\n                    const layoutTransition = this.options.transition ||\r\n                        visualElement.getDefaultTransition() ||\r\n                        defaultLayoutTransition;\r\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\r\n                    /**\r\n                     * The target layout of the element might stay the same,\r\n                     * but its position relative to its parent has changed.\r\n                     */\r\n                    const targetChanged = !this.targetLayout ||\r\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\r\n                        hasRelativeTargetChanged;\r\n                    /**\r\n                     * If the layout hasn't seemed to have changed, it might be that the\r\n                     * element is visually in the same place in the document but its position\r\n                     * relative to its parent has indeed changed. So here we check for that.\r\n                     */\r\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\r\n                    if (this.options.layoutRoot ||\r\n                        (this.resumeFrom && this.resumeFrom.instance) ||\r\n                        hasOnlyRelativeTargetChanged ||\r\n                        (hasLayoutChanged &&\r\n                            (targetChanged || !this.currentAnimation))) {\r\n                        if (this.resumeFrom) {\r\n                            this.resumingFrom = this.resumeFrom;\r\n                            this.resumingFrom.resumingFrom = undefined;\r\n                        }\r\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\r\n                        const animationOptions = {\r\n                            ...getValueTransition(layoutTransition, \"layout\"),\r\n                            onPlay: onLayoutAnimationStart,\r\n                            onComplete: onLayoutAnimationComplete,\r\n                        };\r\n                        if (visualElement.shouldReduceMotion ||\r\n                            this.options.layoutRoot) {\r\n                            animationOptions.delay = 0;\r\n                            animationOptions.type = false;\r\n                        }\r\n                        this.startAnimation(animationOptions);\r\n                    }\r\n                    else {\r\n                        /**\r\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\r\n                         * finish it immediately. Otherwise it will be animating from a location\r\n                         * that was probably never commited to screen and look like a jumpy box.\r\n                         */\r\n                        if (!hasLayoutChanged) {\r\n                            finishAnimation(this);\r\n                        }\r\n                        if (this.isLead() && this.options.onExitComplete) {\r\n                            this.options.onExitComplete();\r\n                        }\r\n                    }\r\n                    this.targetLayout = newLayout;\r\n                });\r\n            }\r\n        }\r\n        unmount() {\r\n            this.options.layoutId && this.willUpdate();\r\n            this.root.nodes.remove(this);\r\n            const stack = this.getStack();\r\n            stack && stack.remove(this);\r\n            this.parent && this.parent.children.delete(this);\r\n            this.instance = undefined;\r\n            cancelFrame(this.updateProjection);\r\n        }\r\n        // only on the root\r\n        blockUpdate() {\r\n            this.updateManuallyBlocked = true;\r\n        }\r\n        unblockUpdate() {\r\n            this.updateManuallyBlocked = false;\r\n        }\r\n        isUpdateBlocked() {\r\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\r\n        }\r\n        isTreeAnimationBlocked() {\r\n            return (this.isAnimationBlocked ||\r\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\r\n                false);\r\n        }\r\n        // Note: currently only running on root node\r\n        startUpdate() {\r\n            if (this.isUpdateBlocked())\r\n                return;\r\n            this.isUpdating = true;\r\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\r\n            this.animationId++;\r\n        }\r\n        getTransformTemplate() {\r\n            const { visualElement } = this.options;\r\n            return visualElement && visualElement.getProps().transformTemplate;\r\n        }\r\n        willUpdate(shouldNotifyListeners = true) {\r\n            this.root.hasTreeAnimated = true;\r\n            if (this.root.isUpdateBlocked()) {\r\n                this.options.onExitComplete && this.options.onExitComplete();\r\n                return;\r\n            }\r\n            /**\r\n             * If we're running optimised appear animations then these must be\r\n             * cancelled before measuring the DOM. This is so we can measure\r\n             * the true layout of the element rather than the WAAPI animation\r\n             * which will be unaffected by the resetSkewAndRotate step.\r\n             *\r\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\r\n             * between other snapshot reads which will cause unnecessary style recalculations.\r\n             * This has to happen here though, as we don't yet know which nodes will need\r\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\r\n             * if a layout animation measurement is actually going to be affected by them.\r\n             */\r\n            if (window.MotionCancelOptimisedAnimation &&\r\n                !this.hasCheckedOptimisedAppear) {\r\n                cancelTreeOptimisedTransformAnimations(this);\r\n            }\r\n            !this.root.isUpdating && this.root.startUpdate();\r\n            if (this.isLayoutDirty)\r\n                return;\r\n            this.isLayoutDirty = true;\r\n            for (let i = 0; i < this.path.length; i++) {\r\n                const node = this.path[i];\r\n                node.shouldResetTransform = true;\r\n                node.updateScroll(\"snapshot\");\r\n                if (node.options.layoutRoot) {\r\n                    node.willUpdate(false);\r\n                }\r\n            }\r\n            const { layoutId, layout } = this.options;\r\n            if (layoutId === undefined && !layout)\r\n                return;\r\n            const transformTemplate = this.getTransformTemplate();\r\n            this.prevTransformTemplateValue = transformTemplate\r\n                ? transformTemplate(this.latestValues, \"\")\r\n                : undefined;\r\n            this.updateSnapshot();\r\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\r\n        }\r\n        update() {\r\n            this.updateScheduled = false;\r\n            const updateWasBlocked = this.isUpdateBlocked();\r\n            // When doing an instant transition, we skip the layout update,\r\n            // but should still clean up the measurements so that the next\r\n            // snapshot could be taken correctly.\r\n            if (updateWasBlocked) {\r\n                this.unblockUpdate();\r\n                this.clearAllSnapshots();\r\n                this.nodes.forEach(clearMeasurements);\r\n                return;\r\n            }\r\n            if (!this.isUpdating) {\r\n                this.nodes.forEach(clearIsLayoutDirty);\r\n            }\r\n            this.isUpdating = false;\r\n            /**\r\n             * Write\r\n             */\r\n            this.nodes.forEach(resetTransformStyle);\r\n            /**\r\n             * Read ==================\r\n             */\r\n            // Update layout measurements of updated children\r\n            this.nodes.forEach(updateLayout);\r\n            /**\r\n             * Write\r\n             */\r\n            // Notify listeners that the layout is updated\r\n            this.nodes.forEach(notifyLayoutUpdate);\r\n            this.clearAllSnapshots();\r\n            /**\r\n             * Manually flush any pending updates. Ideally\r\n             * we could leave this to the following requestAnimationFrame but this seems\r\n             * to leave a flash of incorrectly styled content.\r\n             */\r\n            const now = time.now();\r\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\r\n            frameData.timestamp = now;\r\n            frameData.isProcessing = true;\r\n            frameSteps.update.process(frameData);\r\n            frameSteps.preRender.process(frameData);\r\n            frameSteps.render.process(frameData);\r\n            frameData.isProcessing = false;\r\n        }\r\n        didUpdate() {\r\n            if (!this.updateScheduled) {\r\n                this.updateScheduled = true;\r\n                microtask.read(this.scheduleUpdate);\r\n            }\r\n        }\r\n        clearAllSnapshots() {\r\n            this.nodes.forEach(clearSnapshot);\r\n            this.sharedNodes.forEach(removeLeadSnapshots);\r\n        }\r\n        scheduleUpdateProjection() {\r\n            if (!this.projectionUpdateScheduled) {\r\n                this.projectionUpdateScheduled = true;\r\n                frame.preRender(this.updateProjection, false, true);\r\n            }\r\n        }\r\n        scheduleCheckAfterUnmount() {\r\n            /**\r\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\r\n             * we manually call didUpdate to give a chance to the siblings to animate.\r\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\r\n             */\r\n            frame.postRender(() => {\r\n                if (this.isLayoutDirty) {\r\n                    this.root.didUpdate();\r\n                }\r\n                else {\r\n                    this.root.checkUpdateFailed();\r\n                }\r\n            });\r\n        }\r\n        /**\r\n         * Update measurements\r\n         */\r\n        updateSnapshot() {\r\n            if (this.snapshot || !this.instance)\r\n                return;\r\n            this.snapshot = this.measure();\r\n        }\r\n        updateLayout() {\r\n            if (!this.instance)\r\n                return;\r\n            // TODO: Incorporate into a forwarded scroll offset\r\n            this.updateScroll();\r\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\r\n                !this.isLayoutDirty) {\r\n                return;\r\n            }\r\n            /**\r\n             * When a node is mounted, it simply resumes from the prevLead's\r\n             * snapshot instead of taking a new one, but the ancestors scroll\r\n             * might have updated while the prevLead is unmounted. We need to\r\n             * update the scroll again to make sure the layout we measure is\r\n             * up to date.\r\n             */\r\n            if (this.resumeFrom && !this.resumeFrom.instance) {\r\n                for (let i = 0; i < this.path.length; i++) {\r\n                    const node = this.path[i];\r\n                    node.updateScroll();\r\n                }\r\n            }\r\n            const prevLayout = this.layout;\r\n            this.layout = this.measure(false);\r\n            this.layoutCorrected = createBox();\r\n            this.isLayoutDirty = false;\r\n            this.projectionDelta = undefined;\r\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\r\n            const { visualElement } = this.options;\r\n            visualElement &&\r\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\r\n        }\r\n        updateScroll(phase = \"measure\") {\r\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\r\n            if (this.scroll &&\r\n                this.scroll.animationId === this.root.animationId &&\r\n                this.scroll.phase === phase) {\r\n                needsMeasurement = false;\r\n            }\r\n            if (needsMeasurement) {\r\n                const isRoot = checkIsScrollRoot(this.instance);\r\n                this.scroll = {\r\n                    animationId: this.root.animationId,\r\n                    phase,\r\n                    isRoot,\r\n                    offset: measureScroll(this.instance),\r\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\r\n                };\r\n            }\r\n        }\r\n        resetTransform() {\r\n            if (!resetTransform)\r\n                return;\r\n            const isResetRequested = this.isLayoutDirty ||\r\n                this.shouldResetTransform ||\r\n                this.options.alwaysMeasureLayout;\r\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\r\n            const transformTemplate = this.getTransformTemplate();\r\n            const transformTemplateValue = transformTemplate\r\n                ? transformTemplate(this.latestValues, \"\")\r\n                : undefined;\r\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\r\n            if (isResetRequested &&\r\n                (hasProjection ||\r\n                    hasTransform(this.latestValues) ||\r\n                    transformTemplateHasChanged)) {\r\n                resetTransform(this.instance, transformTemplateValue);\r\n                this.shouldResetTransform = false;\r\n                this.scheduleRender();\r\n            }\r\n        }\r\n        measure(removeTransform = true) {\r\n            const pageBox = this.measurePageBox();\r\n            let layoutBox = this.removeElementScroll(pageBox);\r\n            /**\r\n             * Measurements taken during the pre-render stage\r\n             * still have transforms applied so we remove them\r\n             * via calculation.\r\n             */\r\n            if (removeTransform) {\r\n                layoutBox = this.removeTransform(layoutBox);\r\n            }\r\n            roundBox(layoutBox);\r\n            return {\r\n                animationId: this.root.animationId,\r\n                measuredBox: pageBox,\r\n                layoutBox,\r\n                latestValues: {},\r\n                source: this.id,\r\n            };\r\n        }\r\n        measurePageBox() {\r\n            var _a;\r\n            const { visualElement } = this.options;\r\n            if (!visualElement)\r\n                return createBox();\r\n            const box = visualElement.measureViewportBox();\r\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\r\n            if (!wasInScrollRoot) {\r\n                // Remove viewport scroll to give page-relative coordinates\r\n                const { scroll } = this.root;\r\n                if (scroll) {\r\n                    translateAxis(box.x, scroll.offset.x);\r\n                    translateAxis(box.y, scroll.offset.y);\r\n                }\r\n            }\r\n            return box;\r\n        }\r\n        removeElementScroll(box) {\r\n            var _a;\r\n            const boxWithoutScroll = createBox();\r\n            copyBoxInto(boxWithoutScroll, box);\r\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\r\n                return boxWithoutScroll;\r\n            }\r\n            /**\r\n             * Performance TODO: Keep a cumulative scroll offset down the tree\r\n             * rather than loop back up the path.\r\n             */\r\n            for (let i = 0; i < this.path.length; i++) {\r\n                const node = this.path[i];\r\n                const { scroll, options } = node;\r\n                if (node !== this.root && scroll && options.layoutScroll) {\r\n                    /**\r\n                     * If this is a new scroll root, we want to remove all previous scrolls\r\n                     * from the viewport box.\r\n                     */\r\n                    if (scroll.wasRoot) {\r\n                        copyBoxInto(boxWithoutScroll, box);\r\n                    }\r\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\r\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\r\n                }\r\n            }\r\n            return boxWithoutScroll;\r\n        }\r\n        applyTransform(box, transformOnly = false) {\r\n            const withTransforms = createBox();\r\n            copyBoxInto(withTransforms, box);\r\n            for (let i = 0; i < this.path.length; i++) {\r\n                const node = this.path[i];\r\n                if (!transformOnly &&\r\n                    node.options.layoutScroll &&\r\n                    node.scroll &&\r\n                    node !== node.root) {\r\n                    transformBox(withTransforms, {\r\n                        x: -node.scroll.offset.x,\r\n                        y: -node.scroll.offset.y,\r\n                    });\r\n                }\r\n                if (!hasTransform(node.latestValues))\r\n                    continue;\r\n                transformBox(withTransforms, node.latestValues);\r\n            }\r\n            if (hasTransform(this.latestValues)) {\r\n                transformBox(withTransforms, this.latestValues);\r\n            }\r\n            return withTransforms;\r\n        }\r\n        removeTransform(box) {\r\n            const boxWithoutTransform = createBox();\r\n            copyBoxInto(boxWithoutTransform, box);\r\n            for (let i = 0; i < this.path.length; i++) {\r\n                const node = this.path[i];\r\n                if (!node.instance)\r\n                    continue;\r\n                if (!hasTransform(node.latestValues))\r\n                    continue;\r\n                hasScale(node.latestValues) && node.updateSnapshot();\r\n                const sourceBox = createBox();\r\n                const nodeBox = node.measurePageBox();\r\n                copyBoxInto(sourceBox, nodeBox);\r\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\r\n            }\r\n            if (hasTransform(this.latestValues)) {\r\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\r\n            }\r\n            return boxWithoutTransform;\r\n        }\r\n        setTargetDelta(delta) {\r\n            this.targetDelta = delta;\r\n            this.root.scheduleUpdateProjection();\r\n            this.isProjectionDirty = true;\r\n        }\r\n        setOptions(options) {\r\n            this.options = {\r\n                ...this.options,\r\n                ...options,\r\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\r\n            };\r\n        }\r\n        clearMeasurements() {\r\n            this.scroll = undefined;\r\n            this.layout = undefined;\r\n            this.snapshot = undefined;\r\n            this.prevTransformTemplateValue = undefined;\r\n            this.targetDelta = undefined;\r\n            this.target = undefined;\r\n            this.isLayoutDirty = false;\r\n        }\r\n        forceRelativeParentToResolveTarget() {\r\n            if (!this.relativeParent)\r\n                return;\r\n            /**\r\n             * If the parent target isn't up-to-date, force it to update.\r\n             * This is an unfortunate de-optimisation as it means any updating relative\r\n             * projection will cause all the relative parents to recalculate back\r\n             * up the tree.\r\n             */\r\n            if (this.relativeParent.resolvedRelativeTargetAt !==\r\n                frameData.timestamp) {\r\n                this.relativeParent.resolveTargetDelta(true);\r\n            }\r\n        }\r\n        resolveTargetDelta(forceRecalculation = false) {\r\n            var _a;\r\n            /**\r\n             * Once the dirty status of nodes has been spread through the tree, we also\r\n             * need to check if we have a shared node of a different depth that has itself\r\n             * been dirtied.\r\n             */\r\n            const lead = this.getLead();\r\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\r\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\r\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\r\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\r\n            /**\r\n             * We don't use transform for this step of processing so we don't\r\n             * need to check whether any nodes have changed transform.\r\n             */\r\n            const canSkip = !(forceRecalculation ||\r\n                (isShared && this.isSharedProjectionDirty) ||\r\n                this.isProjectionDirty ||\r\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\r\n                this.attemptToResolveRelativeTarget ||\r\n                this.root.updateBlockedByResize);\r\n            if (canSkip)\r\n                return;\r\n            const { layout, layoutId } = this.options;\r\n            /**\r\n             * If we have no layout, we can't perform projection, so early return\r\n             */\r\n            if (!this.layout || !(layout || layoutId))\r\n                return;\r\n            this.resolvedRelativeTargetAt = frameData.timestamp;\r\n            /**\r\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\r\n             * a relativeParent. This will allow a component to perform scale correction\r\n             * even if no animation has started.\r\n             */\r\n            if (!this.targetDelta && !this.relativeTarget) {\r\n                const relativeParent = this.getClosestProjectingParent();\r\n                if (relativeParent &&\r\n                    relativeParent.layout &&\r\n                    this.animationProgress !== 1) {\r\n                    this.relativeParent = relativeParent;\r\n                    this.forceRelativeParentToResolveTarget();\r\n                    this.relativeTarget = createBox();\r\n                    this.relativeTargetOrigin = createBox();\r\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\r\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\r\n                }\r\n                else {\r\n                    this.relativeParent = this.relativeTarget = undefined;\r\n                }\r\n            }\r\n            /**\r\n             * If we have no relative target or no target delta our target isn't valid\r\n             * for this frame.\r\n             */\r\n            if (!this.relativeTarget && !this.targetDelta)\r\n                return;\r\n            /**\r\n             * Lazy-init target data structure\r\n             */\r\n            if (!this.target) {\r\n                this.target = createBox();\r\n                this.targetWithTransforms = createBox();\r\n            }\r\n            /**\r\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\r\n             */\r\n            if (this.relativeTarget &&\r\n                this.relativeTargetOrigin &&\r\n                this.relativeParent &&\r\n                this.relativeParent.target) {\r\n                this.forceRelativeParentToResolveTarget();\r\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\r\n                /**\r\n                 * If we've only got a targetDelta, resolve it into a target\r\n                 */\r\n            }\r\n            else if (this.targetDelta) {\r\n                if (Boolean(this.resumingFrom)) {\r\n                    // TODO: This is creating a new object every frame\r\n                    this.target = this.applyTransform(this.layout.layoutBox);\r\n                }\r\n                else {\r\n                    copyBoxInto(this.target, this.layout.layoutBox);\r\n                }\r\n                applyBoxDelta(this.target, this.targetDelta);\r\n            }\r\n            else {\r\n                /**\r\n                 * If no target, use own layout as target\r\n                 */\r\n                copyBoxInto(this.target, this.layout.layoutBox);\r\n            }\r\n            /**\r\n             * If we've been told to attempt to resolve a relative target, do so.\r\n             */\r\n            if (this.attemptToResolveRelativeTarget) {\r\n                this.attemptToResolveRelativeTarget = false;\r\n                const relativeParent = this.getClosestProjectingParent();\r\n                if (relativeParent &&\r\n                    Boolean(relativeParent.resumingFrom) ===\r\n                        Boolean(this.resumingFrom) &&\r\n                    !relativeParent.options.layoutScroll &&\r\n                    relativeParent.target &&\r\n                    this.animationProgress !== 1) {\r\n                    this.relativeParent = relativeParent;\r\n                    this.forceRelativeParentToResolveTarget();\r\n                    this.relativeTarget = createBox();\r\n                    this.relativeTargetOrigin = createBox();\r\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\r\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\r\n                }\r\n                else {\r\n                    this.relativeParent = this.relativeTarget = undefined;\r\n                }\r\n            }\r\n            /**\r\n             * Increase debug counter for resolved target deltas\r\n             */\r\n            if (isDebug) {\r\n                metrics.resolvedTargetDeltas++;\r\n            }\r\n        }\r\n        getClosestProjectingParent() {\r\n            if (!this.parent ||\r\n                hasScale(this.parent.latestValues) ||\r\n                has2DTranslate(this.parent.latestValues)) {\r\n                return undefined;\r\n            }\r\n            if (this.parent.isProjecting()) {\r\n                return this.parent;\r\n            }\r\n            else {\r\n                return this.parent.getClosestProjectingParent();\r\n            }\r\n        }\r\n        isProjecting() {\r\n            return Boolean((this.relativeTarget ||\r\n                this.targetDelta ||\r\n                this.options.layoutRoot) &&\r\n                this.layout);\r\n        }\r\n        calcProjection() {\r\n            var _a;\r\n            const lead = this.getLead();\r\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\r\n            let canSkip = true;\r\n            /**\r\n             * If this is a normal layout animation and neither this node nor its nearest projecting\r\n             * is dirty then we can't skip.\r\n             */\r\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\r\n                canSkip = false;\r\n            }\r\n            /**\r\n             * If this is a shared layout animation and this node's shared projection is dirty then\r\n             * we can't skip.\r\n             */\r\n            if (isShared &&\r\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\r\n                canSkip = false;\r\n            }\r\n            /**\r\n             * If we have resolved the target this frame we must recalculate the\r\n             * projection to ensure it visually represents the internal calculations.\r\n             */\r\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\r\n                canSkip = false;\r\n            }\r\n            if (canSkip)\r\n                return;\r\n            const { layout, layoutId } = this.options;\r\n            /**\r\n             * If this section of the tree isn't animating we can\r\n             * delete our target sources for the following frame.\r\n             */\r\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\r\n                this.currentAnimation ||\r\n                this.pendingAnimation);\r\n            if (!this.isTreeAnimating) {\r\n                this.targetDelta = this.relativeTarget = undefined;\r\n            }\r\n            if (!this.layout || !(layout || layoutId))\r\n                return;\r\n            /**\r\n             * Reset the corrected box with the latest values from box, as we're then going\r\n             * to perform mutative operations on it.\r\n             */\r\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\r\n            /**\r\n             * Record previous tree scales before updating.\r\n             */\r\n            const prevTreeScaleX = this.treeScale.x;\r\n            const prevTreeScaleY = this.treeScale.y;\r\n            /**\r\n             * Apply all the parent deltas to this box to produce the corrected box. This\r\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\r\n             */\r\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\r\n            /**\r\n             * If this layer needs to perform scale correction but doesn't have a target,\r\n             * use the layout as the target.\r\n             */\r\n            if (lead.layout &&\r\n                !lead.target &&\r\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\r\n                lead.target = lead.layout.layoutBox;\r\n                lead.targetWithTransforms = createBox();\r\n            }\r\n            const { target } = lead;\r\n            if (!target) {\r\n                /**\r\n                 * If we don't have a target to project into, but we were previously\r\n                 * projecting, we want to remove the stored transform and schedule\r\n                 * a render to ensure the elements reflect the removed transform.\r\n                 */\r\n                if (this.prevProjectionDelta) {\r\n                    this.createProjectionDeltas();\r\n                    this.scheduleRender();\r\n                }\r\n                return;\r\n            }\r\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\r\n                this.createProjectionDeltas();\r\n            }\r\n            else {\r\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\r\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\r\n            }\r\n            /**\r\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\r\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\r\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\r\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\r\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\r\n             * to allow people to choose whether these styles are corrected based on just the\r\n             * layout reprojection or the final bounding box.\r\n             */\r\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\r\n            if (this.treeScale.x !== prevTreeScaleX ||\r\n                this.treeScale.y !== prevTreeScaleY ||\r\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\r\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\r\n                this.hasProjected = true;\r\n                this.scheduleRender();\r\n                this.notifyListeners(\"projectionUpdate\", target);\r\n            }\r\n            /**\r\n             * Increase debug counter for recalculated projections\r\n             */\r\n            if (isDebug) {\r\n                metrics.recalculatedProjection++;\r\n            }\r\n        }\r\n        hide() {\r\n            this.isVisible = false;\r\n            // TODO: Schedule render\r\n        }\r\n        show() {\r\n            this.isVisible = true;\r\n            // TODO: Schedule render\r\n        }\r\n        scheduleRender(notifyAll = true) {\r\n            var _a;\r\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\r\n            if (notifyAll) {\r\n                const stack = this.getStack();\r\n                stack && stack.scheduleRender();\r\n            }\r\n            if (this.resumingFrom && !this.resumingFrom.instance) {\r\n                this.resumingFrom = undefined;\r\n            }\r\n        }\r\n        createProjectionDeltas() {\r\n            this.prevProjectionDelta = createDelta();\r\n            this.projectionDelta = createDelta();\r\n            this.projectionDeltaWithTransform = createDelta();\r\n        }\r\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\r\n            const snapshot = this.snapshot;\r\n            const snapshotLatestValues = snapshot\r\n                ? snapshot.latestValues\r\n                : {};\r\n            const mixedValues = { ...this.latestValues };\r\n            const targetDelta = createDelta();\r\n            if (!this.relativeParent ||\r\n                !this.relativeParent.options.layoutRoot) {\r\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\r\n            }\r\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\r\n            const relativeLayout = createBox();\r\n            const snapshotSource = snapshot ? snapshot.source : undefined;\r\n            const layoutSource = this.layout ? this.layout.source : undefined;\r\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\r\n            const stack = this.getStack();\r\n            const isOnlyMember = !stack || stack.members.length <= 1;\r\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\r\n                !isOnlyMember &&\r\n                this.options.crossfade === true &&\r\n                !this.path.some(hasOpacityCrossfade));\r\n            this.animationProgress = 0;\r\n            let prevRelativeTarget;\r\n            this.mixTargetDelta = (latest) => {\r\n                const progress = latest / 1000;\r\n                mixAxisDelta(targetDelta.x, delta.x, progress);\r\n                mixAxisDelta(targetDelta.y, delta.y, progress);\r\n                this.setTargetDelta(targetDelta);\r\n                if (this.relativeTarget &&\r\n                    this.relativeTargetOrigin &&\r\n                    this.layout &&\r\n                    this.relativeParent &&\r\n                    this.relativeParent.layout) {\r\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\r\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\r\n                    /**\r\n                     * If this is an unchanged relative target we can consider the\r\n                     * projection not dirty.\r\n                     */\r\n                    if (prevRelativeTarget &&\r\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\r\n                        this.isProjectionDirty = false;\r\n                    }\r\n                    if (!prevRelativeTarget)\r\n                        prevRelativeTarget = createBox();\r\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\r\n                }\r\n                if (isSharedLayoutAnimation) {\r\n                    this.animationValues = mixedValues;\r\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\r\n                }\r\n                this.root.scheduleUpdateProjection();\r\n                this.scheduleRender();\r\n                this.animationProgress = progress;\r\n            };\r\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\r\n        }\r\n        startAnimation(options) {\r\n            this.notifyListeners(\"animationStart\");\r\n            this.currentAnimation && this.currentAnimation.stop();\r\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\r\n                this.resumingFrom.currentAnimation.stop();\r\n            }\r\n            if (this.pendingAnimation) {\r\n                cancelFrame(this.pendingAnimation);\r\n                this.pendingAnimation = undefined;\r\n            }\r\n            /**\r\n             * Start the animation in the next frame to have a frame with progress 0,\r\n             * where the target is the same as when the animation started, so we can\r\n             * calculate the relative positions correctly for instant transitions.\r\n             */\r\n            this.pendingAnimation = frame.update(() => {\r\n                globalProjectionState.hasAnimatedSinceResize = true;\r\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\r\n                    ...options,\r\n                    onUpdate: (latest) => {\r\n                        this.mixTargetDelta(latest);\r\n                        options.onUpdate && options.onUpdate(latest);\r\n                    },\r\n                    onComplete: () => {\r\n                        options.onComplete && options.onComplete();\r\n                        this.completeAnimation();\r\n                    },\r\n                });\r\n                if (this.resumingFrom) {\r\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\r\n                }\r\n                this.pendingAnimation = undefined;\r\n            });\r\n        }\r\n        completeAnimation() {\r\n            if (this.resumingFrom) {\r\n                this.resumingFrom.currentAnimation = undefined;\r\n                this.resumingFrom.preserveOpacity = undefined;\r\n            }\r\n            const stack = this.getStack();\r\n            stack && stack.exitAnimationComplete();\r\n            this.resumingFrom =\r\n                this.currentAnimation =\r\n                    this.animationValues =\r\n                        undefined;\r\n            this.notifyListeners(\"animationComplete\");\r\n        }\r\n        finishAnimation() {\r\n            if (this.currentAnimation) {\r\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\r\n                this.currentAnimation.stop();\r\n            }\r\n            this.completeAnimation();\r\n        }\r\n        applyTransformsToTarget() {\r\n            const lead = this.getLead();\r\n            let { targetWithTransforms, target, layout, latestValues } = lead;\r\n            if (!targetWithTransforms || !target || !layout)\r\n                return;\r\n            /**\r\n             * If we're only animating position, and this element isn't the lead element,\r\n             * then instead of projecting into the lead box we instead want to calculate\r\n             * a new target that aligns the two boxes but maintains the layout shape.\r\n             */\r\n            if (this !== lead &&\r\n                this.layout &&\r\n                layout &&\r\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\r\n                target = this.target || createBox();\r\n                const xLength = calcLength(this.layout.layoutBox.x);\r\n                target.x.min = lead.target.x.min;\r\n                target.x.max = target.x.min + xLength;\r\n                const yLength = calcLength(this.layout.layoutBox.y);\r\n                target.y.min = lead.target.y.min;\r\n                target.y.max = target.y.min + yLength;\r\n            }\r\n            copyBoxInto(targetWithTransforms, target);\r\n            /**\r\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\r\n             * This is the final box that we will then project into by calculating a transform delta and\r\n             * applying it to the corrected box.\r\n             */\r\n            transformBox(targetWithTransforms, latestValues);\r\n            /**\r\n             * Update the delta between the corrected box and the final target box, after\r\n             * user-set transforms are applied to it. This will be used by the renderer to\r\n             * create a transform style that will reproject the element from its layout layout\r\n             * into the desired bounding box.\r\n             */\r\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\r\n        }\r\n        registerSharedNode(layoutId, node) {\r\n            if (!this.sharedNodes.has(layoutId)) {\r\n                this.sharedNodes.set(layoutId, new NodeStack());\r\n            }\r\n            const stack = this.sharedNodes.get(layoutId);\r\n            stack.add(node);\r\n            const config = node.options.initialPromotionConfig;\r\n            node.promote({\r\n                transition: config ? config.transition : undefined,\r\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\r\n                    ? config.shouldPreserveFollowOpacity(node)\r\n                    : undefined,\r\n            });\r\n        }\r\n        isLead() {\r\n            const stack = this.getStack();\r\n            return stack ? stack.lead === this : true;\r\n        }\r\n        getLead() {\r\n            var _a;\r\n            const { layoutId } = this.options;\r\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\r\n        }\r\n        getPrevLead() {\r\n            var _a;\r\n            const { layoutId } = this.options;\r\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\r\n        }\r\n        getStack() {\r\n            const { layoutId } = this.options;\r\n            if (layoutId)\r\n                return this.root.sharedNodes.get(layoutId);\r\n        }\r\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\r\n            const stack = this.getStack();\r\n            if (stack)\r\n                stack.promote(this, preserveFollowOpacity);\r\n            if (needsReset) {\r\n                this.projectionDelta = undefined;\r\n                this.needsReset = true;\r\n            }\r\n            if (transition)\r\n                this.setOptions({ transition });\r\n        }\r\n        relegate() {\r\n            const stack = this.getStack();\r\n            if (stack) {\r\n                return stack.relegate(this);\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        resetSkewAndRotation() {\r\n            const { visualElement } = this.options;\r\n            if (!visualElement)\r\n                return;\r\n            // If there's no detected skew or rotation values, we can early return without a forced render.\r\n            let hasDistortingTransform = false;\r\n            /**\r\n             * An unrolled check for rotation values. Most elements don't have any rotation and\r\n             * skipping the nested loop and new object creation is 50% faster.\r\n             */\r\n            const { latestValues } = visualElement;\r\n            if (latestValues.z ||\r\n                latestValues.rotate ||\r\n                latestValues.rotateX ||\r\n                latestValues.rotateY ||\r\n                latestValues.rotateZ ||\r\n                latestValues.skewX ||\r\n                latestValues.skewY) {\r\n                hasDistortingTransform = true;\r\n            }\r\n            // If there's no distorting values, we don't need to do any more.\r\n            if (!hasDistortingTransform)\r\n                return;\r\n            const resetValues = {};\r\n            if (latestValues.z) {\r\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\r\n            }\r\n            // Check the skew and rotate value of all axes and reset to 0\r\n            for (let i = 0; i < transformAxes.length; i++) {\r\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\r\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\r\n            }\r\n            // Force a render of this element to apply the transform with all skews and rotations\r\n            // set to 0.\r\n            visualElement.render();\r\n            // Put back all the values we reset\r\n            for (const key in resetValues) {\r\n                visualElement.setStaticValue(key, resetValues[key]);\r\n                if (this.animationValues) {\r\n                    this.animationValues[key] = resetValues[key];\r\n                }\r\n            }\r\n            // Schedule a render for the next frame. This ensures we won't visually\r\n            // see the element with the reset rotate value applied.\r\n            visualElement.scheduleRender();\r\n        }\r\n        getProjectionStyles(styleProp) {\r\n            var _a, _b;\r\n            if (!this.instance || this.isSVG)\r\n                return undefined;\r\n            if (!this.isVisible) {\r\n                return hiddenVisibility;\r\n            }\r\n            const styles = {\r\n                visibility: \"\",\r\n            };\r\n            const transformTemplate = this.getTransformTemplate();\r\n            if (this.needsReset) {\r\n                this.needsReset = false;\r\n                styles.opacity = \"\";\r\n                styles.pointerEvents =\r\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\r\n                styles.transform = transformTemplate\r\n                    ? transformTemplate(this.latestValues, \"\")\r\n                    : \"none\";\r\n                return styles;\r\n            }\r\n            const lead = this.getLead();\r\n            if (!this.projectionDelta || !this.layout || !lead.target) {\r\n                const emptyStyles = {};\r\n                if (this.options.layoutId) {\r\n                    emptyStyles.opacity =\r\n                        this.latestValues.opacity !== undefined\r\n                            ? this.latestValues.opacity\r\n                            : 1;\r\n                    emptyStyles.pointerEvents =\r\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\r\n                }\r\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\r\n                    emptyStyles.transform = transformTemplate\r\n                        ? transformTemplate({}, \"\")\r\n                        : \"none\";\r\n                    this.hasProjected = false;\r\n                }\r\n                return emptyStyles;\r\n            }\r\n            const valuesToRender = lead.animationValues || lead.latestValues;\r\n            this.applyTransformsToTarget();\r\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\r\n            if (transformTemplate) {\r\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\r\n            }\r\n            const { x, y } = this.projectionDelta;\r\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\r\n            if (lead.animationValues) {\r\n                /**\r\n                 * If the lead component is animating, assign this either the entering/leaving\r\n                 * opacity\r\n                 */\r\n                styles.opacity =\r\n                    lead === this\r\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\r\n                        : this.preserveOpacity\r\n                            ? this.latestValues.opacity\r\n                            : valuesToRender.opacityExit;\r\n            }\r\n            else {\r\n                /**\r\n                 * Or we're not animating at all, set the lead component to its layout\r\n                 * opacity and other components to hidden.\r\n                 */\r\n                styles.opacity =\r\n                    lead === this\r\n                        ? valuesToRender.opacity !== undefined\r\n                            ? valuesToRender.opacity\r\n                            : \"\"\r\n                        : valuesToRender.opacityExit !== undefined\r\n                            ? valuesToRender.opacityExit\r\n                            : 0;\r\n            }\r\n            /**\r\n             * Apply scale correction\r\n             */\r\n            for (const key in scaleCorrectors) {\r\n                if (valuesToRender[key] === undefined)\r\n                    continue;\r\n                const { correct, applyTo } = scaleCorrectors[key];\r\n                /**\r\n                 * Only apply scale correction to the value if we have an\r\n                 * active projection transform. Otherwise these values become\r\n                 * vulnerable to distortion if the element changes size without\r\n                 * a corresponding layout animation.\r\n                 */\r\n                const corrected = styles.transform === \"none\"\r\n                    ? valuesToRender[key]\r\n                    : correct(valuesToRender[key], lead);\r\n                if (applyTo) {\r\n                    const num = applyTo.length;\r\n                    for (let i = 0; i < num; i++) {\r\n                        styles[applyTo[i]] = corrected;\r\n                    }\r\n                }\r\n                else {\r\n                    styles[key] = corrected;\r\n                }\r\n            }\r\n            /**\r\n             * Disable pointer events on follow components. This is to ensure\r\n             * that if a follow component covers a lead component it doesn't block\r\n             * pointer events on the lead.\r\n             */\r\n            if (this.options.layoutId) {\r\n                styles.pointerEvents =\r\n                    lead === this\r\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\r\n                        : \"none\";\r\n            }\r\n            return styles;\r\n        }\r\n        clearSnapshot() {\r\n            this.resumeFrom = this.snapshot = undefined;\r\n        }\r\n        // Only run on root\r\n        resetTree() {\r\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\r\n            this.root.nodes.forEach(clearMeasurements);\r\n            this.root.sharedNodes.clear();\r\n        }\r\n    };\r\n}\r\nfunction updateLayout(node) {\r\n    node.updateLayout();\r\n}\r\nfunction notifyLayoutUpdate(node) {\r\n    var _a;\r\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\r\n    if (node.isLead() &&\r\n        node.layout &&\r\n        snapshot &&\r\n        node.hasListeners(\"didUpdate\")) {\r\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\r\n        const { animationType } = node.options;\r\n        const isShared = snapshot.source !== node.layout.source;\r\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\r\n        // animations for instance if layout=\"size\" and an element has only changed position\r\n        if (animationType === \"size\") {\r\n            eachAxis((axis) => {\r\n                const axisSnapshot = isShared\r\n                    ? snapshot.measuredBox[axis]\r\n                    : snapshot.layoutBox[axis];\r\n                const length = calcLength(axisSnapshot);\r\n                axisSnapshot.min = layout[axis].min;\r\n                axisSnapshot.max = axisSnapshot.min + length;\r\n            });\r\n        }\r\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\r\n            eachAxis((axis) => {\r\n                const axisSnapshot = isShared\r\n                    ? snapshot.measuredBox[axis]\r\n                    : snapshot.layoutBox[axis];\r\n                const length = calcLength(layout[axis]);\r\n                axisSnapshot.max = axisSnapshot.min + length;\r\n                /**\r\n                 * Ensure relative target gets resized and rerendererd\r\n                 */\r\n                if (node.relativeTarget && !node.currentAnimation) {\r\n                    node.isProjectionDirty = true;\r\n                    node.relativeTarget[axis].max =\r\n                        node.relativeTarget[axis].min + length;\r\n                }\r\n            });\r\n        }\r\n        const layoutDelta = createDelta();\r\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\r\n        const visualDelta = createDelta();\r\n        if (isShared) {\r\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\r\n        }\r\n        else {\r\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\r\n        }\r\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\r\n        let hasRelativeTargetChanged = false;\r\n        if (!node.resumeFrom) {\r\n            const relativeParent = node.getClosestProjectingParent();\r\n            /**\r\n             * If the relativeParent is itself resuming from a different element then\r\n             * the relative snapshot is not relavent\r\n             */\r\n            if (relativeParent && !relativeParent.resumeFrom) {\r\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\r\n                if (parentSnapshot && parentLayout) {\r\n                    const relativeSnapshot = createBox();\r\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\r\n                    const relativeLayout = createBox();\r\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\r\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\r\n                        hasRelativeTargetChanged = true;\r\n                    }\r\n                    if (relativeParent.options.layoutRoot) {\r\n                        node.relativeTarget = relativeLayout;\r\n                        node.relativeTargetOrigin = relativeSnapshot;\r\n                        node.relativeParent = relativeParent;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        node.notifyListeners(\"didUpdate\", {\r\n            layout,\r\n            snapshot,\r\n            delta: visualDelta,\r\n            layoutDelta,\r\n            hasLayoutChanged,\r\n            hasRelativeTargetChanged,\r\n        });\r\n    }\r\n    else if (node.isLead()) {\r\n        const { onExitComplete } = node.options;\r\n        onExitComplete && onExitComplete();\r\n    }\r\n    /**\r\n     * Clearing transition\r\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\r\n     * and why we need it at all\r\n     */\r\n    node.options.transition = undefined;\r\n}\r\nfunction propagateDirtyNodes(node) {\r\n    /**\r\n     * Increase debug counter for nodes encountered this frame\r\n     */\r\n    if (isDebug) {\r\n        metrics.totalNodes++;\r\n    }\r\n    if (!node.parent)\r\n        return;\r\n    /**\r\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\r\n     * no performance impact but it will allow the next child that *is* projecting\r\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\r\n     * correcting.\r\n     */\r\n    if (!node.isProjecting()) {\r\n        node.isProjectionDirty = node.parent.isProjectionDirty;\r\n    }\r\n    /**\r\n     * Propagate isSharedProjectionDirty and isTransformDirty\r\n     * throughout the whole tree. A future revision can take another look at\r\n     * this but for safety we still recalcualte shared nodes.\r\n     */\r\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\r\n        node.parent.isProjectionDirty ||\r\n        node.parent.isSharedProjectionDirty));\r\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\r\n}\r\nfunction cleanDirtyNodes(node) {\r\n    node.isProjectionDirty =\r\n        node.isSharedProjectionDirty =\r\n            node.isTransformDirty =\r\n                false;\r\n}\r\nfunction clearSnapshot(node) {\r\n    node.clearSnapshot();\r\n}\r\nfunction clearMeasurements(node) {\r\n    node.clearMeasurements();\r\n}\r\nfunction clearIsLayoutDirty(node) {\r\n    node.isLayoutDirty = false;\r\n}\r\nfunction resetTransformStyle(node) {\r\n    const { visualElement } = node.options;\r\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\r\n        visualElement.notify(\"BeforeLayoutMeasure\");\r\n    }\r\n    node.resetTransform();\r\n}\r\nfunction finishAnimation(node) {\r\n    node.finishAnimation();\r\n    node.targetDelta = node.relativeTarget = node.target = undefined;\r\n    node.isProjectionDirty = true;\r\n}\r\nfunction resolveTargetDelta(node) {\r\n    node.resolveTargetDelta();\r\n}\r\nfunction calcProjection(node) {\r\n    node.calcProjection();\r\n}\r\nfunction resetSkewAndRotation(node) {\r\n    node.resetSkewAndRotation();\r\n}\r\nfunction removeLeadSnapshots(stack) {\r\n    stack.removeLeadSnapshot();\r\n}\r\nfunction mixAxisDelta(output, delta, p) {\r\n    output.translate = mixNumber(delta.translate, 0, p);\r\n    output.scale = mixNumber(delta.scale, 1, p);\r\n    output.origin = delta.origin;\r\n    output.originPoint = delta.originPoint;\r\n}\r\nfunction mixAxis(output, from, to, p) {\r\n    output.min = mixNumber(from.min, to.min, p);\r\n    output.max = mixNumber(from.max, to.max, p);\r\n}\r\nfunction mixBox(output, from, to, p) {\r\n    mixAxis(output.x, from.x, to.x, p);\r\n    mixAxis(output.y, from.y, to.y, p);\r\n}\r\nfunction hasOpacityCrossfade(node) {\r\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\r\n}\r\nconst defaultLayoutTransition = {\r\n    duration: 0.45,\r\n    ease: [0.4, 0, 0.1, 1],\r\n};\r\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\r\n    navigator.userAgent &&\r\n    navigator.userAgent.toLowerCase().includes(string);\r\n/**\r\n * Measured bounding boxes must be rounded in Safari and\r\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\r\n * can appear to jump.\r\n */\r\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\r\n    ? Math.round\r\n    : noop;\r\nfunction roundAxis(axis) {\r\n    // Round to the nearest .5 pixels to support subpixel layouts\r\n    axis.min = roundPoint(axis.min);\r\n    axis.max = roundPoint(axis.max);\r\n}\r\nfunction roundBox(box) {\r\n    roundAxis(box.x);\r\n    roundAxis(box.y);\r\n}\r\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\r\n    return (animationType === \"position\" ||\r\n        (animationType === \"preserve-aspect\" &&\r\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\r\n}\r\nfunction checkNodeWasScrollRoot(node) {\r\n    var _a;\r\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\r\n}\r\n\r\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\r\n","function isSVGElement(element) {\r\n    return element instanceof SVGElement && element.tagName !== \"svg\";\r\n}\r\n\r\nexport { isSVGElement };\r\n","import { secondsToMilliseconds } from 'motion-utils';\r\nimport { time } from '../frameloop/sync-time.mjs';\r\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\r\n\r\n/**\r\n * Timeout defined in ms\r\n */\r\nfunction delay(callback, timeout) {\r\n    const start = time.now();\r\n    const checkElapsed = ({ timestamp }) => {\r\n        const elapsed = timestamp - start;\r\n        if (elapsed >= timeout) {\r\n            cancelFrame(checkElapsed);\r\n            callback(elapsed - timeout);\r\n        }\r\n    };\r\n    frame.read(checkElapsed, true);\r\n    return () => cancelFrame(checkElapsed);\r\n}\r\nfunction delayInSeconds(callback, timeout) {\r\n    return delay(callback, secondsToMilliseconds(timeout));\r\n}\r\n\r\nexport { delay, delayInSeconds };\r\n","import { motionValue } from '../../value/index.mjs';\r\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\r\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\r\n\r\nfunction animateSingleValue(value, keyframes, options) {\r\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\r\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\r\n    return motionValue$1.animation;\r\n}\r\n\r\nexport { animateSingleValue };\r\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\r\n    let transform = \"\";\r\n    /**\r\n     * The translations we use to calculate are always relative to the viewport coordinate space.\r\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\r\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\r\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\r\n     */\r\n    const xTranslate = delta.x.translate / treeScale.x;\r\n    const yTranslate = delta.y.translate / treeScale.y;\r\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\r\n    if (xTranslate || yTranslate || zTranslate) {\r\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\r\n    }\r\n    /**\r\n     * Apply scale correction for the tree transform.\r\n     * This will apply scale to the screen-orientated axes.\r\n     */\r\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\r\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\r\n    }\r\n    if (latestTransform) {\r\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\r\n        if (transformPerspective)\r\n            transform = `perspective(${transformPerspective}px) ${transform}`;\r\n        if (rotate)\r\n            transform += `rotate(${rotate}deg) `;\r\n        if (rotateX)\r\n            transform += `rotateX(${rotateX}deg) `;\r\n        if (rotateY)\r\n            transform += `rotateY(${rotateY}deg) `;\r\n        if (skewX)\r\n            transform += `skewX(${skewX}deg) `;\r\n        if (skewY)\r\n            transform += `skewY(${skewY}deg) `;\r\n    }\r\n    /**\r\n     * Apply scale to match the size of the element to the size we want it.\r\n     * This will apply scale to the element-orientated axes.\r\n     */\r\n    const elementScaleX = delta.x.scale * treeScale.x;\r\n    const elementScaleY = delta.y.scale * treeScale.y;\r\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\r\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\r\n    }\r\n    return transform || \"none\";\r\n}\r\n\r\nexport { buildProjectionTransform };\r\n","import { createProjectionNode } from './create-projection-node.mjs';\r\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\r\n\r\nconst DocumentProjectionNode = createProjectionNode({\r\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\r\n    measureScroll: () => ({\r\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\r\n        y: document.documentElement.scrollTop || document.body.scrollTop,\r\n    }),\r\n    checkIsScrollRoot: () => true,\r\n});\r\n\r\nexport { DocumentProjectionNode };\r\n","import { createProjectionNode } from './create-projection-node.mjs';\r\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\r\n\r\nconst rootProjectionNode = {\r\n    current: undefined,\r\n};\r\nconst HTMLProjectionNode = createProjectionNode({\r\n    measureScroll: (instance) => ({\r\n        x: instance.scrollLeft,\r\n        y: instance.scrollTop,\r\n    }),\r\n    defaultParent: () => {\r\n        if (!rootProjectionNode.current) {\r\n            const documentNode = new DocumentProjectionNode({});\r\n            documentNode.mount(window);\r\n            documentNode.setOptions({ layoutScroll: true });\r\n            rootProjectionNode.current = documentNode;\r\n        }\r\n        return rootProjectionNode.current;\r\n    },\r\n    resetTransform: (instance, value) => {\r\n        instance.style.transform = value !== undefined ? value : \"none\";\r\n    },\r\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\r\n});\r\n\r\nexport { HTMLProjectionNode, rootProjectionNode };\r\n","import { DragGesture } from '../../gestures/drag/index.mjs';\r\nimport { PanGesture } from '../../gestures/pan/index.mjs';\r\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\r\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\r\n\r\nconst drag = {\r\n    pan: {\r\n        Feature: PanGesture,\r\n    },\r\n    drag: {\r\n        Feature: DragGesture,\r\n        ProjectionNode: HTMLProjectionNode,\r\n        MeasureLayout,\r\n    },\r\n};\r\n\r\nexport { drag };\r\n","import { Feature } from '../../motion/features/Feature.mjs';\r\nimport { noop } from 'motion-utils';\r\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\r\n\r\nclass DragGesture extends Feature {\r\n    constructor(node) {\r\n        super(node);\r\n        this.removeGroupControls = noop;\r\n        this.removeListeners = noop;\r\n        this.controls = new VisualElementDragControls(node);\r\n    }\r\n    mount() {\r\n        // If we've been provided a DragControls for manual control over the drag gesture,\r\n        // subscribe this component to it on mount.\r\n        const { dragControls } = this.node.getProps();\r\n        if (dragControls) {\r\n            this.removeGroupControls = dragControls.subscribe(this.controls);\r\n        }\r\n        this.removeListeners = this.controls.addListeners() || noop;\r\n    }\r\n    unmount() {\r\n        this.removeGroupControls();\r\n        this.removeListeners();\r\n    }\r\n}\r\n\r\nexport { DragGesture };\r\n","import { Feature } from '../motion/features/Feature.mjs';\r\nimport { hover } from 'motion-dom';\r\nimport { extractEventInfo } from '../events/event-info.mjs';\r\nimport { frame } from '../frameloop/frame.mjs';\r\n\r\nfunction handleHoverEvent(node, event, lifecycle) {\r\n    const { props } = node;\r\n    if (node.animationState && props.whileHover) {\r\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\r\n    }\r\n    const eventName = (\"onHover\" + lifecycle);\r\n    const callback = props[eventName];\r\n    if (callback) {\r\n        frame.postRender(() => callback(event, extractEventInfo(event)));\r\n    }\r\n}\r\nclass HoverGesture extends Feature {\r\n    mount() {\r\n        const { current } = this.node;\r\n        if (!current)\r\n            return;\r\n        this.unmount = hover(current, (startEvent) => {\r\n            handleHoverEvent(this.node, startEvent, \"Start\");\r\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\r\n        });\r\n    }\r\n    unmount() { }\r\n}\r\n\r\nexport { HoverGesture };\r\n","import { Feature } from '../motion/features/Feature.mjs';\r\nimport { press } from 'motion-dom';\r\nimport { extractEventInfo } from '../events/event-info.mjs';\r\nimport { frame } from '../frameloop/frame.mjs';\r\n\r\nfunction handlePressEvent(node, event, lifecycle) {\r\n    const { props } = node;\r\n    if (node.animationState && props.whileTap) {\r\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\r\n    }\r\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\r\n    const callback = props[eventName];\r\n    if (callback) {\r\n        frame.postRender(() => callback(event, extractEventInfo(event)));\r\n    }\r\n}\r\nclass PressGesture extends Feature {\r\n    mount() {\r\n        const { current } = this.node;\r\n        if (!current)\r\n            return;\r\n        this.unmount = press(current, (startEvent) => {\r\n            handlePressEvent(this.node, startEvent, \"Start\");\r\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\r\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\r\n    }\r\n    unmount() { }\r\n}\r\n\r\nexport { PressGesture };\r\n","/**\r\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\r\n * element, so even though these handlers might all be triggered by different\r\n * observers, we can keep them in the same map.\r\n */\r\nconst observerCallbacks = new WeakMap();\r\n/**\r\n * Multiple observers can be created for multiple element/document roots. Each with\r\n * different settings. So here we store dictionaries of observers to each root,\r\n * using serialised settings (threshold/margin) as lookup keys.\r\n */\r\nconst observers = new WeakMap();\r\nconst fireObserverCallback = (entry) => {\r\n    const callback = observerCallbacks.get(entry.target);\r\n    callback && callback(entry);\r\n};\r\nconst fireAllObserverCallbacks = (entries) => {\r\n    entries.forEach(fireObserverCallback);\r\n};\r\nfunction initIntersectionObserver({ root, ...options }) {\r\n    const lookupRoot = root || document;\r\n    /**\r\n     * If we don't have an observer lookup map for this root, create one.\r\n     */\r\n    if (!observers.has(lookupRoot)) {\r\n        observers.set(lookupRoot, {});\r\n    }\r\n    const rootObservers = observers.get(lookupRoot);\r\n    const key = JSON.stringify(options);\r\n    /**\r\n     * If we don't have an observer for this combination of root and settings,\r\n     * create one.\r\n     */\r\n    if (!rootObservers[key]) {\r\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\r\n    }\r\n    return rootObservers[key];\r\n}\r\nfunction observeIntersection(element, options, callback) {\r\n    const rootInteresectionObserver = initIntersectionObserver(options);\r\n    observerCallbacks.set(element, callback);\r\n    rootInteresectionObserver.observe(element);\r\n    return () => {\r\n        observerCallbacks.delete(element);\r\n        rootInteresectionObserver.unobserve(element);\r\n    };\r\n}\r\n\r\nexport { observeIntersection };\r\n","import { Feature } from '../Feature.mjs';\r\nimport { observeIntersection } from './observers.mjs';\r\n\r\nconst thresholdNames = {\r\n    some: 0,\r\n    all: 1,\r\n};\r\nclass InViewFeature extends Feature {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.hasEnteredView = false;\r\n        this.isInView = false;\r\n    }\r\n    startObserver() {\r\n        this.unmount();\r\n        const { viewport = {} } = this.node.getProps();\r\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\r\n        const options = {\r\n            root: root ? root.current : undefined,\r\n            rootMargin,\r\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\r\n        };\r\n        const onIntersectionUpdate = (entry) => {\r\n            const { isIntersecting } = entry;\r\n            /**\r\n             * If there's been no change in the viewport state, early return.\r\n             */\r\n            if (this.isInView === isIntersecting)\r\n                return;\r\n            this.isInView = isIntersecting;\r\n            /**\r\n             * Handle hasEnteredView. If this is only meant to run once, and\r\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\r\n             */\r\n            if (once && !isIntersecting && this.hasEnteredView) {\r\n                return;\r\n            }\r\n            else if (isIntersecting) {\r\n                this.hasEnteredView = true;\r\n            }\r\n            if (this.node.animationState) {\r\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\r\n            }\r\n            /**\r\n             * Use the latest committed props rather than the ones in scope\r\n             * when this observer is created\r\n             */\r\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\r\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\r\n            callback && callback(entry);\r\n        };\r\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\r\n    }\r\n    mount() {\r\n        this.startObserver();\r\n    }\r\n    update() {\r\n        if (typeof IntersectionObserver === \"undefined\")\r\n            return;\r\n        const { props, prevProps } = this.node;\r\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\r\n        if (hasOptionsChanged) {\r\n            this.startObserver();\r\n        }\r\n    }\r\n    unmount() { }\r\n}\r\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\r\n    return (name) => viewport[name] !== prevViewport[name];\r\n}\r\n\r\nexport { InViewFeature };\r\n","import { HoverGesture } from '../../gestures/hover.mjs';\r\nimport { FocusGesture } from '../../gestures/focus.mjs';\r\nimport { PressGesture } from '../../gestures/press.mjs';\r\nimport { InViewFeature } from './viewport/index.mjs';\r\n\r\nconst gestureAnimations = {\r\n    inView: {\r\n        Feature: InViewFeature,\r\n    },\r\n    tap: {\r\n        Feature: PressGesture,\r\n    },\r\n    focus: {\r\n        Feature: FocusGesture,\r\n    },\r\n    hover: {\r\n        Feature: HoverGesture,\r\n    },\r\n};\r\n\r\nexport { gestureAnimations };\r\n","import { addDomEvent } from '../events/add-dom-event.mjs';\r\nimport { Feature } from '../motion/features/Feature.mjs';\r\nimport { pipe } from '../utils/pipe.mjs';\r\n\r\nclass FocusGesture extends Feature {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.isActive = false;\r\n    }\r\n    onFocus() {\r\n        let isFocusVisible = false;\r\n        /**\r\n         * If this element doesn't match focus-visible then don't\r\n         * apply whileHover. But, if matches throws that focus-visible\r\n         * is not a valid selector then in that browser outline styles will be applied\r\n         * to the element by default and we want to match that behaviour with whileFocus.\r\n         */\r\n        try {\r\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\r\n        }\r\n        catch (e) {\r\n            isFocusVisible = true;\r\n        }\r\n        if (!isFocusVisible || !this.node.animationState)\r\n            return;\r\n        this.node.animationState.setActive(\"whileFocus\", true);\r\n        this.isActive = true;\r\n    }\r\n    onBlur() {\r\n        if (!this.isActive || !this.node.animationState)\r\n            return;\r\n        this.node.animationState.setActive(\"whileFocus\", false);\r\n        this.isActive = false;\r\n    }\r\n    mount() {\r\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\r\n    }\r\n    unmount() { }\r\n}\r\n\r\nexport { FocusGesture };\r\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\r\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\r\n\r\nconst layout = {\r\n    layout: {\r\n        ProjectionNode: HTMLProjectionNode,\r\n        MeasureLayout,\r\n    },\r\n};\r\n\r\nexport { layout };\r\n","\"use client\";\r\nimport { createContext } from 'react';\r\n\r\nconst LazyContext = createContext({ strict: false });\r\n\r\nexport { LazyContext };\r\n","\"use client\";\r\nimport { createContext } from 'react';\r\n\r\nconst MotionContext = createContext({});\r\n\r\nexport { MotionContext };\r\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\r\nimport { isVariantLabel } from './is-variant-label.mjs';\r\nimport { variantProps } from './variant-props.mjs';\r\n\r\nfunction isControllingVariants(props) {\r\n    return (isAnimationControls(props.animate) ||\r\n        variantProps.some((name) => isVariantLabel(props[name])));\r\n}\r\nfunction isVariantNode(props) {\r\n    return Boolean(isControllingVariants(props) || props.variants);\r\n}\r\n\r\nexport { isControllingVariants, isVariantNode };\r\n","import { useContext, useMemo } from 'react';\r\nimport { MotionContext } from './index.mjs';\r\nimport { getCurrentTreeVariants } from './utils.mjs';\r\n\r\nfunction useCreateMotionContext(props) {\r\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\r\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\r\n}\r\nfunction variantLabelsAsDependency(prop) {\r\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\r\n}\r\n\r\nexport { useCreateMotionContext };\r\n","const featureProps = {\r\n    animation: [\r\n        \"animate\",\r\n        \"variants\",\r\n        \"whileHover\",\r\n        \"whileTap\",\r\n        \"exit\",\r\n        \"whileInView\",\r\n        \"whileFocus\",\r\n        \"whileDrag\",\r\n    ],\r\n    exit: [\"exit\"],\r\n    drag: [\"drag\", \"dragControls\"],\r\n    focus: [\"whileFocus\"],\r\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\r\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\r\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\r\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\r\n    layout: [\"layout\", \"layoutId\"],\r\n};\r\nconst featureDefinitions = {};\r\nfor (const key in featureProps) {\r\n    featureDefinitions[key] = {\r\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\r\n    };\r\n}\r\n\r\nexport { featureDefinitions };\r\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\r\n\r\nexport { motionComponentSymbol };\r\n","import { useCallback } from 'react';\r\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\r\n\r\n/**\r\n * Creates a ref function that, when called, hydrates the provided\r\n * external ref and VisualElement.\r\n */\r\nfunction useMotionRef(visualState, visualElement, externalRef) {\r\n    return useCallback((instance) => {\r\n        if (instance) {\r\n            visualState.onMount && visualState.onMount(instance);\r\n        }\r\n        if (visualElement) {\r\n            if (instance) {\r\n                visualElement.mount(instance);\r\n            }\r\n            else {\r\n                visualElement.unmount();\r\n            }\r\n        }\r\n        if (externalRef) {\r\n            if (typeof externalRef === \"function\") {\r\n                externalRef(instance);\r\n            }\r\n            else if (isRefObject(externalRef)) {\r\n                externalRef.current = instance;\r\n            }\r\n        }\r\n    }, \r\n    /**\r\n     * Only pass a new ref callback to React if we've received a visual element\r\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\r\n     * or other dependencies change.\r\n     */\r\n    [visualElement]);\r\n}\r\n\r\nexport { useMotionRef };\r\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\r\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\r\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\r\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\r\nimport { LazyContext } from '../../context/LazyContext.mjs';\r\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\r\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\r\nimport { microtask } from '../../frameloop/microtask.mjs';\r\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\r\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\r\n\r\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\r\n    var _a, _b;\r\n    const { visualElement: parent } = useContext(MotionContext);\r\n    const lazyContext = useContext(LazyContext);\r\n    const presenceContext = useContext(PresenceContext);\r\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\r\n    const visualElementRef = useRef(null);\r\n    /**\r\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\r\n     */\r\n    createVisualElement = createVisualElement || lazyContext.renderer;\r\n    if (!visualElementRef.current && createVisualElement) {\r\n        visualElementRef.current = createVisualElement(Component, {\r\n            visualState,\r\n            parent,\r\n            props,\r\n            presenceContext,\r\n            blockInitialAnimation: presenceContext\r\n                ? presenceContext.initial === false\r\n                : false,\r\n            reducedMotionConfig,\r\n        });\r\n    }\r\n    const visualElement = visualElementRef.current;\r\n    /**\r\n     * Load Motion gesture and animation features. These are rendered as renderless\r\n     * components so each feature can optionally make use of React lifecycle methods.\r\n     */\r\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\r\n    if (visualElement &&\r\n        !visualElement.projection &&\r\n        ProjectionNodeConstructor &&\r\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\r\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\r\n    }\r\n    const isMounted = useRef(false);\r\n    useInsertionEffect(() => {\r\n        /**\r\n         * Check the component has already mounted before calling\r\n         * `update` unnecessarily. This ensures we skip the initial update.\r\n         */\r\n        if (visualElement && isMounted.current) {\r\n            visualElement.update(props, presenceContext);\r\n        }\r\n    });\r\n    /**\r\n     * Cache this value as we want to know whether HandoffAppearAnimations\r\n     * was present on initial render - it will be deleted after this.\r\n     */\r\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\r\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\r\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\r\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\r\n    useIsomorphicLayoutEffect(() => {\r\n        if (!visualElement)\r\n            return;\r\n        isMounted.current = true;\r\n        window.MotionIsMounted = true;\r\n        visualElement.updateFeatures();\r\n        microtask.render(visualElement.render);\r\n        /**\r\n         * Ideally this function would always run in a useEffect.\r\n         *\r\n         * However, if we have optimised appear animations to handoff from,\r\n         * it needs to happen synchronously to ensure there's no flash of\r\n         * incorrect styles in the event of a hydration error.\r\n         *\r\n         * So if we detect a situtation where optimised appear animations\r\n         * are running, we use useLayoutEffect to trigger animations.\r\n         */\r\n        if (wantsHandoff.current && visualElement.animationState) {\r\n            visualElement.animationState.animateChanges();\r\n        }\r\n    });\r\n    useEffect(() => {\r\n        if (!visualElement)\r\n            return;\r\n        if (!wantsHandoff.current && visualElement.animationState) {\r\n            visualElement.animationState.animateChanges();\r\n        }\r\n        if (wantsHandoff.current) {\r\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\r\n            queueMicrotask(() => {\r\n                var _a;\r\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\r\n            });\r\n            wantsHandoff.current = false;\r\n        }\r\n    });\r\n    return visualElement;\r\n}\r\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\r\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\r\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\r\n        ? undefined\r\n        : getClosestProjectingNode(visualElement.parent));\r\n    visualElement.projection.setOptions({\r\n        layoutId,\r\n        layout,\r\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\r\n        visualElement,\r\n        /**\r\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\r\n         * to update by the time layout animations run.\r\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\r\n         * ensuring it gets called if there's no potential layout animations.\r\n         *\r\n         */\r\n        animationType: typeof layout === \"string\" ? layout : \"both\",\r\n        initialPromotionConfig,\r\n        layoutScroll,\r\n        layoutRoot,\r\n    });\r\n}\r\nfunction getClosestProjectingNode(visualElement) {\r\n    if (!visualElement)\r\n        return undefined;\r\n    return visualElement.options.allowProjection !== false\r\n        ? visualElement.projection\r\n        : getClosestProjectingNode(visualElement.parent);\r\n}\r\n\r\nexport { useVisualElement };\r\n","\"use client\";\r\nimport { jsxs, jsx } from 'react/jsx-runtime';\r\nimport { warning, invariant } from 'motion-utils';\r\nimport { forwardRef, useContext } from 'react';\r\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\r\nimport { LazyContext } from '../context/LazyContext.mjs';\r\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\r\nimport { MotionContext } from '../context/MotionContext/index.mjs';\r\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\r\nimport { isBrowser } from '../utils/is-browser.mjs';\r\nimport { featureDefinitions } from './features/definitions.mjs';\r\nimport { loadFeatures } from './features/load-features.mjs';\r\nimport { motionComponentSymbol } from './utils/symbol.mjs';\r\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\r\nimport { useVisualElement } from './utils/use-visual-element.mjs';\r\n\r\n/**\r\n * Create a `motion` component.\r\n *\r\n * This function accepts a Component argument, which can be either a string (ie \"div\"\r\n * for `motion.div`), or an actual React component.\r\n *\r\n * Alongside this is a config option which provides a way of rendering the provided\r\n * component \"offline\", or outside the React render cycle.\r\n */\r\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\r\n    var _a, _b;\r\n    preloadedFeatures && loadFeatures(preloadedFeatures);\r\n    function MotionComponent(props, externalRef) {\r\n        /**\r\n         * If we need to measure the element we load this functionality in a\r\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\r\n         */\r\n        let MeasureLayout;\r\n        const configAndProps = {\r\n            ...useContext(MotionConfigContext),\r\n            ...props,\r\n            layoutId: useLayoutId(props),\r\n        };\r\n        const { isStatic } = configAndProps;\r\n        const context = useCreateMotionContext(props);\r\n        const visualState = useVisualState(props, isStatic);\r\n        if (!isStatic && isBrowser) {\r\n            useStrictMode(configAndProps, preloadedFeatures);\r\n            const layoutProjection = getProjectionFunctionality(configAndProps);\r\n            MeasureLayout = layoutProjection.MeasureLayout;\r\n            /**\r\n             * Create a VisualElement for this component. A VisualElement provides a common\r\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\r\n             * providing a way of rendering to these APIs outside of the React render loop\r\n             * for more performant animations and interactions\r\n             */\r\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\r\n        }\r\n        /**\r\n         * The mount order and hierarchy is specific to ensure our element ref\r\n         * is hydrated by the time features fire their effects.\r\n         */\r\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\r\n    }\r\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\r\n        ? Component\r\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\r\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\r\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\r\n    return ForwardRefMotionComponent;\r\n}\r\nfunction useLayoutId({ layoutId }) {\r\n    const layoutGroupId = useContext(LayoutGroupContext).id;\r\n    return layoutGroupId && layoutId !== undefined\r\n        ? layoutGroupId + \"-\" + layoutId\r\n        : layoutId;\r\n}\r\nfunction useStrictMode(configAndProps, preloadedFeatures) {\r\n    const isStrict = useContext(LazyContext).strict;\r\n    /**\r\n     * If we're in development mode, check to make sure we're not rendering a motion component\r\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\r\n     */\r\n    if (process.env.NODE_ENV !== \"production\" &&\r\n        preloadedFeatures &&\r\n        isStrict) {\r\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\r\n        configAndProps.ignoreStrict\r\n            ? warning(false, strictMessage)\r\n            : invariant(false, strictMessage);\r\n    }\r\n}\r\nfunction getProjectionFunctionality(props) {\r\n    const { drag, layout } = featureDefinitions;\r\n    if (!drag && !layout)\r\n        return {};\r\n    const combined = { ...drag, ...layout };\r\n    return {\r\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\r\n            ? combined.MeasureLayout\r\n            : undefined,\r\n        ProjectionNode: combined.ProjectionNode,\r\n    };\r\n}\r\n\r\nexport { createRendererMotionComponent };\r\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\r\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\r\n\r\nfunction getCurrentTreeVariants(props, context) {\r\n    if (isControllingVariants(props)) {\r\n        const { initial, animate } = props;\r\n        return {\r\n            initial: initial === false || isVariantLabel(initial)\r\n                ? initial\r\n                : undefined,\r\n            animate: isVariantLabel(animate) ? animate : undefined,\r\n        };\r\n    }\r\n    return props.inherit !== false ? context : {};\r\n}\r\n\r\nexport { getCurrentTreeVariants };\r\n","import { featureDefinitions } from './definitions.mjs';\r\n\r\nfunction loadFeatures(features) {\r\n    for (const key in features) {\r\n        featureDefinitions[key] = {\r\n            ...featureDefinitions[key],\r\n            ...features[key],\r\n        };\r\n    }\r\n}\r\n\r\nexport { loadFeatures };\r\n","/**\r\n * We keep these listed separately as we use the lowercase tag names as part\r\n * of the runtime bundle to detect SVG components\r\n */\r\nconst lowercaseSVGElements = [\r\n    \"animate\",\r\n    \"circle\",\r\n    \"defs\",\r\n    \"desc\",\r\n    \"ellipse\",\r\n    \"g\",\r\n    \"image\",\r\n    \"line\",\r\n    \"filter\",\r\n    \"marker\",\r\n    \"mask\",\r\n    \"metadata\",\r\n    \"path\",\r\n    \"pattern\",\r\n    \"polygon\",\r\n    \"polyline\",\r\n    \"rect\",\r\n    \"stop\",\r\n    \"switch\",\r\n    \"symbol\",\r\n    \"svg\",\r\n    \"text\",\r\n    \"tspan\",\r\n    \"use\",\r\n    \"view\",\r\n];\r\n\r\nexport { lowercaseSVGElements };\r\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\r\n\r\nfunction isSVGComponent(Component) {\r\n    if (\r\n    /**\r\n     * If it's not a string, it's a custom React component. Currently we only support\r\n     * HTML custom React components.\r\n     */\r\n    typeof Component !== \"string\" ||\r\n        /**\r\n         * If it contains a dash, the element is a custom HTML webcomponent.\r\n         */\r\n        Component.includes(\"-\")) {\r\n        return false;\r\n    }\r\n    else if (\r\n    /**\r\n     * If it's in our list of lowercase SVG tags, it's an SVG component\r\n     */\r\n    lowercaseSVGElements.indexOf(Component) > -1 ||\r\n        /**\r\n         * If it contains a capital letter, it's an SVG component\r\n         */\r\n        /[A-Z]/u.test(Component)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport { isSVGComponent };\r\n","import { useContext } from 'react';\r\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\r\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\r\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\r\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\r\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\r\nimport { useConstant } from '../../utils/use-constant.mjs';\r\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\r\n\r\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\r\n    const state = {\r\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\r\n        renderState: createRenderState(),\r\n    };\r\n    if (onUpdate) {\r\n        /**\r\n         * onMount works without the VisualElement because it could be\r\n         * called before the VisualElement payload has been hydrated.\r\n         * (e.g. if someone is using m components <m.circle />)\r\n         */\r\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\r\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\r\n    }\r\n    return state;\r\n}\r\nconst makeUseVisualState = (config) => (props, isStatic) => {\r\n    const context = useContext(MotionContext);\r\n    const presenceContext = useContext(PresenceContext);\r\n    const make = () => makeState(config, props, context, presenceContext);\r\n    return isStatic ? make() : useConstant(make);\r\n};\r\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\r\n    const values = {};\r\n    const motionValues = scrapeMotionValues(props, {});\r\n    for (const key in motionValues) {\r\n        values[key] = resolveMotionValue(motionValues[key]);\r\n    }\r\n    let { initial, animate } = props;\r\n    const isControllingVariants$1 = isControllingVariants(props);\r\n    const isVariantNode$1 = isVariantNode(props);\r\n    if (context &&\r\n        isVariantNode$1 &&\r\n        !isControllingVariants$1 &&\r\n        props.inherit !== false) {\r\n        if (initial === undefined)\r\n            initial = context.initial;\r\n        if (animate === undefined)\r\n            animate = context.animate;\r\n    }\r\n    let isInitialAnimationBlocked = presenceContext\r\n        ? presenceContext.initial === false\r\n        : false;\r\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\r\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\r\n    if (variantToSet &&\r\n        typeof variantToSet !== \"boolean\" &&\r\n        !isAnimationControls(variantToSet)) {\r\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\r\n        for (let i = 0; i < list.length; i++) {\r\n            const resolved = resolveVariantFromProps(props, list[i]);\r\n            if (resolved) {\r\n                const { transitionEnd, transition, ...target } = resolved;\r\n                for (const key in target) {\r\n                    let valueTarget = target[key];\r\n                    if (Array.isArray(valueTarget)) {\r\n                        /**\r\n                         * Take final keyframe if the initial animation is blocked because\r\n                         * we want to initialise at the end of that blocked animation.\r\n                         */\r\n                        const index = isInitialAnimationBlocked\r\n                            ? valueTarget.length - 1\r\n                            : 0;\r\n                        valueTarget = valueTarget[index];\r\n                    }\r\n                    if (valueTarget !== null) {\r\n                        values[key] = valueTarget;\r\n                    }\r\n                }\r\n                for (const key in transitionEnd) {\r\n                    values[key] = transitionEnd[key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return values;\r\n}\r\n\r\nexport { makeUseVisualState };\r\n","/**\r\n * Provided a value and a ValueType, returns the value as that value type.\r\n */\r\nconst getValueAsType = (value, type) => {\r\n    return type && typeof value === \"number\"\r\n        ? type.transform(value)\r\n        : value;\r\n};\r\n\r\nexport { getValueAsType };\r\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\r\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\r\nimport { transformPropOrder } from './keys-transform.mjs';\r\n\r\nconst translateAlias = {\r\n    x: \"translateX\",\r\n    y: \"translateY\",\r\n    z: \"translateZ\",\r\n    transformPerspective: \"perspective\",\r\n};\r\nconst numTransforms = transformPropOrder.length;\r\n/**\r\n * Build a CSS transform style from individual x/y/scale etc properties.\r\n *\r\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\r\n * providing a transformTemplate function.\r\n */\r\nfunction buildTransform(latestValues, transform, transformTemplate) {\r\n    // The transform string we're going to build into.\r\n    let transformString = \"\";\r\n    let transformIsDefault = true;\r\n    /**\r\n     * Loop over all possible transforms in order, adding the ones that\r\n     * are present to the transform string.\r\n     */\r\n    for (let i = 0; i < numTransforms; i++) {\r\n        const key = transformPropOrder[i];\r\n        const value = latestValues[key];\r\n        if (value === undefined)\r\n            continue;\r\n        let valueIsDefault = true;\r\n        if (typeof value === \"number\") {\r\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\r\n        }\r\n        else {\r\n            valueIsDefault = parseFloat(value) === 0;\r\n        }\r\n        if (!valueIsDefault || transformTemplate) {\r\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\r\n            if (!valueIsDefault) {\r\n                transformIsDefault = false;\r\n                const transformName = translateAlias[key] || key;\r\n                transformString += `${transformName}(${valueAsType}) `;\r\n            }\r\n            if (transformTemplate) {\r\n                transform[key] = valueAsType;\r\n            }\r\n        }\r\n    }\r\n    transformString = transformString.trim();\r\n    // If we have a custom `transform` template, pass our transform values and\r\n    // generated transformString to that before returning\r\n    if (transformTemplate) {\r\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\r\n    }\r\n    else if (transformIsDefault) {\r\n        transformString = \"none\";\r\n    }\r\n    return transformString;\r\n}\r\n\r\nexport { buildTransform };\r\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\r\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\r\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\r\nimport { buildTransform } from './build-transform.mjs';\r\nimport { transformProps } from './keys-transform.mjs';\r\n\r\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\r\n    const { style, vars, transformOrigin } = state;\r\n    // Track whether we encounter any transform or transformOrigin values.\r\n    let hasTransform = false;\r\n    let hasTransformOrigin = false;\r\n    /**\r\n     * Loop over all our latest animated values and decide whether to handle them\r\n     * as a style or CSS variable.\r\n     *\r\n     * Transforms and transform origins are kept separately for further processing.\r\n     */\r\n    for (const key in latestValues) {\r\n        const value = latestValues[key];\r\n        if (transformProps.has(key)) {\r\n            // If this is a transform, flag to enable further transform processing\r\n            hasTransform = true;\r\n            continue;\r\n        }\r\n        else if (isCSSVariableName(key)) {\r\n            vars[key] = value;\r\n            continue;\r\n        }\r\n        else {\r\n            // Convert the value to its default value type, ie 0 -> \"0px\"\r\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\r\n            if (key.startsWith(\"origin\")) {\r\n                // If this is a transform origin, flag and enable further transform-origin processing\r\n                hasTransformOrigin = true;\r\n                transformOrigin[key] =\r\n                    valueAsType;\r\n            }\r\n            else {\r\n                style[key] = valueAsType;\r\n            }\r\n        }\r\n    }\r\n    if (!latestValues.transform) {\r\n        if (hasTransform || transformTemplate) {\r\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\r\n        }\r\n        else if (style.transform) {\r\n            /**\r\n             * If we have previously created a transform but currently don't have any,\r\n             * reset transform style to none.\r\n             */\r\n            style.transform = \"none\";\r\n        }\r\n    }\r\n    /**\r\n     * Build a transformOrigin style. Uses the same defaults as the browser for\r\n     * undefined origins.\r\n     */\r\n    if (hasTransformOrigin) {\r\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\r\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\r\n    }\r\n}\r\n\r\nexport { buildHTMLStyles };\r\n","import { px } from '../../../value/types/numbers/units.mjs';\r\n\r\nconst dashKeys = {\r\n    offset: \"stroke-dashoffset\",\r\n    array: \"stroke-dasharray\",\r\n};\r\nconst camelKeys = {\r\n    offset: \"strokeDashoffset\",\r\n    array: \"strokeDasharray\",\r\n};\r\n/**\r\n * Build SVG path properties. Uses the path's measured length to convert\r\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\r\n * and stroke-dasharray attributes.\r\n *\r\n * This function is mutative to reduce per-frame GC.\r\n */\r\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\r\n    // Normalise path length by setting SVG attribute pathLength to 1\r\n    attrs.pathLength = 1;\r\n    // We use dash case when setting attributes directly to the DOM node and camel case\r\n    // when defining props on a React component.\r\n    const keys = useDashCase ? dashKeys : camelKeys;\r\n    // Build the dash offset\r\n    attrs[keys.offset] = px.transform(-offset);\r\n    // Build the dash array\r\n    const pathLength = px.transform(length);\r\n    const pathSpacing = px.transform(spacing);\r\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\r\n}\r\n\r\nexport { buildSVGPath };\r\n","import { px } from '../../../value/types/numbers/units.mjs';\r\n\r\nfunction calcOrigin(origin, offset, size) {\r\n    return typeof origin === \"string\"\r\n        ? origin\r\n        : px.transform(offset + size * origin);\r\n}\r\n/**\r\n * The SVG transform origin defaults are different to CSS and is less intuitive,\r\n * so we use the measured dimensions of the SVG to reconcile these.\r\n */\r\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\r\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\r\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\r\n    return `${pxOriginX} ${pxOriginY}`;\r\n}\r\n\r\nexport { calcSVGTransformOrigin };\r\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\r\nimport { buildSVGPath } from './path.mjs';\r\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\r\n\r\n/**\r\n * Build SVG visual attrbutes, like cx and style.transform\r\n */\r\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \r\n// This is object creation, which we try to avoid per-frame.\r\n...latest }, isSVGTag, transformTemplate) {\r\n    buildHTMLStyles(state, latest, transformTemplate);\r\n    /**\r\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\r\n     * as normal HTML tags.\r\n     */\r\n    if (isSVGTag) {\r\n        if (state.style.viewBox) {\r\n            state.attrs.viewBox = state.style.viewBox;\r\n        }\r\n        return;\r\n    }\r\n    state.attrs = state.style;\r\n    state.style = {};\r\n    const { attrs, style, dimensions } = state;\r\n    /**\r\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\r\n     * and copy it into style.\r\n     */\r\n    if (attrs.transform) {\r\n        if (dimensions)\r\n            style.transform = attrs.transform;\r\n        delete attrs.transform;\r\n    }\r\n    // Parse transformOrigin\r\n    if (dimensions &&\r\n        (originX !== undefined || originY !== undefined || style.transform)) {\r\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\r\n    }\r\n    // Render attrX/attrY/attrScale as attributes\r\n    if (attrX !== undefined)\r\n        attrs.x = attrX;\r\n    if (attrY !== undefined)\r\n        attrs.y = attrY;\r\n    if (attrScale !== undefined)\r\n        attrs.scale = attrScale;\r\n    // Build SVG path if one has been defined\r\n    if (pathLength !== undefined) {\r\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\r\n    }\r\n}\r\n\r\nexport { buildSVGAttrs };\r\n","const createHtmlRenderState = () => ({\r\n    style: {},\r\n    transform: {},\r\n    transformOrigin: {},\r\n    vars: {},\r\n});\r\n\r\nexport { createHtmlRenderState };\r\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\r\n\r\nexport { isSVGTag };\r\n","function renderHTML(element, { style, vars }, styleProp, projection) {\r\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\r\n    // Loop over any CSS variables and assign those.\r\n    for (const key in vars) {\r\n        element.style.setProperty(key, vars[key]);\r\n    }\r\n}\r\n\r\nexport { renderHTML };\r\n","/**\r\n * A set of attribute names that are always read/written as camel case.\r\n */\r\nconst camelCaseAttributes = new Set([\r\n    \"baseFrequency\",\r\n    \"diffuseConstant\",\r\n    \"kernelMatrix\",\r\n    \"kernelUnitLength\",\r\n    \"keySplines\",\r\n    \"keyTimes\",\r\n    \"limitingConeAngle\",\r\n    \"markerHeight\",\r\n    \"markerWidth\",\r\n    \"numOctaves\",\r\n    \"targetX\",\r\n    \"targetY\",\r\n    \"surfaceScale\",\r\n    \"specularConstant\",\r\n    \"specularExponent\",\r\n    \"stdDeviation\",\r\n    \"tableValues\",\r\n    \"viewBox\",\r\n    \"gradientTransform\",\r\n    \"pathLength\",\r\n    \"startOffset\",\r\n    \"textLength\",\r\n    \"lengthAdjust\",\r\n]);\r\n\r\nexport { camelCaseAttributes };\r\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\r\nimport { renderHTML } from '../../html/utils/render.mjs';\r\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\r\n\r\nfunction renderSVG(element, renderState, _styleProp, projection) {\r\n    renderHTML(element, renderState, undefined, projection);\r\n    for (const key in renderState.attrs) {\r\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\r\n    }\r\n}\r\n\r\nexport { renderSVG };\r\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\r\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\r\n\r\nfunction isForcedMotionValue(key, { layout, layoutId }) {\r\n    return (transformProps.has(key) ||\r\n        key.startsWith(\"origin\") ||\r\n        ((layout || layoutId !== undefined) &&\r\n            (!!scaleCorrectors[key] || key === \"opacity\")));\r\n}\r\n\r\nexport { isForcedMotionValue };\r\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\r\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\r\n\r\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\r\n    var _a;\r\n    const { style } = props;\r\n    const newValues = {};\r\n    for (const key in style) {\r\n        if (isMotionValue(style[key]) ||\r\n            (prevProps.style &&\r\n                isMotionValue(prevProps.style[key])) ||\r\n            isForcedMotionValue(key, props) ||\r\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\r\n            newValues[key] = style[key];\r\n        }\r\n    }\r\n    return newValues;\r\n}\r\n\r\nexport { scrapeMotionValuesFromProps };\r\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\r\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\r\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\r\n\r\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\r\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\r\n    for (const key in props) {\r\n        if (isMotionValue(props[key]) ||\r\n            isMotionValue(prevProps[key])) {\r\n            const targetKey = transformPropOrder.indexOf(key) !== -1\r\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\r\n                : key;\r\n            newValues[targetKey] = props[key];\r\n        }\r\n    }\r\n    return newValues;\r\n}\r\n\r\nexport { scrapeMotionValuesFromProps };\r\n","import { frame } from '../../frameloop/frame.mjs';\r\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\r\nimport { transformProps } from '../html/utils/keys-transform.mjs';\r\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\r\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\r\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\r\nimport { renderSVG } from './utils/render.mjs';\r\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\r\n\r\nfunction updateSVGDimensions(instance, renderState) {\r\n    try {\r\n        renderState.dimensions =\r\n            typeof instance.getBBox === \"function\"\r\n                ? instance.getBBox()\r\n                : instance.getBoundingClientRect();\r\n    }\r\n    catch (e) {\r\n        // Most likely trying to measure an unrendered element under Firefox\r\n        renderState.dimensions = {\r\n            x: 0,\r\n            y: 0,\r\n            width: 0,\r\n            height: 0,\r\n        };\r\n    }\r\n}\r\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\r\nconst svgMotionConfig = {\r\n    useVisualState: makeUseVisualState({\r\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\r\n        createRenderState: createSvgRenderState,\r\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\r\n            if (!current)\r\n                return;\r\n            let hasTransform = !!props.drag;\r\n            if (!hasTransform) {\r\n                for (const key in latestValues) {\r\n                    if (transformProps.has(key)) {\r\n                        hasTransform = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (!hasTransform)\r\n                return;\r\n            let needsMeasure = !prevProps;\r\n            if (prevProps) {\r\n                /**\r\n                 * Check the layout props for changes, if any are found we need to\r\n                 * measure the element again.\r\n                 */\r\n                for (let i = 0; i < layoutProps.length; i++) {\r\n                    const key = layoutProps[i];\r\n                    if (props[key] !==\r\n                        prevProps[key]) {\r\n                        needsMeasure = true;\r\n                    }\r\n                }\r\n            }\r\n            if (!needsMeasure)\r\n                return;\r\n            frame.read(() => {\r\n                updateSVGDimensions(current, renderState);\r\n                frame.render(() => {\r\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\r\n                    renderSVG(current, renderState);\r\n                });\r\n            });\r\n        },\r\n    }),\r\n};\r\n\r\nexport { svgMotionConfig };\r\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\r\n\r\nconst createSvgRenderState = () => ({\r\n    ...createHtmlRenderState(),\r\n    attrs: {},\r\n});\r\n\r\nexport { createSvgRenderState };\r\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\r\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\r\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\r\n\r\nconst htmlMotionConfig = {\r\n    useVisualState: makeUseVisualState({\r\n        scrapeMotionValuesFromProps,\r\n        createRenderState: createHtmlRenderState,\r\n    }),\r\n};\r\n\r\nexport { htmlMotionConfig };\r\n","import { useMemo } from 'react';\r\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\r\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\r\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\r\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\r\n\r\nfunction copyRawValuesOnly(target, source, props) {\r\n    for (const key in source) {\r\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\r\n            target[key] = source[key];\r\n        }\r\n    }\r\n}\r\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\r\n    return useMemo(() => {\r\n        const state = createHtmlRenderState();\r\n        buildHTMLStyles(state, visualState, transformTemplate);\r\n        return Object.assign({}, state.vars, state.style);\r\n    }, [visualState]);\r\n}\r\nfunction useStyle(props, visualState) {\r\n    const styleProp = props.style || {};\r\n    const style = {};\r\n    /**\r\n     * Copy non-Motion Values straight into style\r\n     */\r\n    copyRawValuesOnly(style, styleProp, props);\r\n    Object.assign(style, useInitialMotionValues(props, visualState));\r\n    return style;\r\n}\r\nfunction useHTMLProps(props, visualState) {\r\n    // The `any` isn't ideal but it is the type of createElement props argument\r\n    const htmlProps = {};\r\n    const style = useStyle(props, visualState);\r\n    if (props.drag && props.dragListener !== false) {\r\n        // Disable the ghost element when a user drags\r\n        htmlProps.draggable = false;\r\n        // Disable text selection\r\n        style.userSelect =\r\n            style.WebkitUserSelect =\r\n                style.WebkitTouchCallout =\r\n                    \"none\";\r\n        // Disable scrolling on the draggable direction\r\n        style.touchAction =\r\n            props.drag === true\r\n                ? \"none\"\r\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\r\n    }\r\n    if (props.tabIndex === undefined &&\r\n        (props.onTap || props.onTapStart || props.whileTap)) {\r\n        htmlProps.tabIndex = 0;\r\n    }\r\n    htmlProps.style = style;\r\n    return htmlProps;\r\n}\r\n\r\nexport { copyRawValuesOnly, useHTMLProps };\r\n","/**\r\n * A list of all valid MotionProps.\r\n *\r\n * @privateRemarks\r\n * This doesn't throw if a `MotionProp` name is missing - it should.\r\n */\r\nconst validMotionProps = new Set([\r\n    \"animate\",\r\n    \"exit\",\r\n    \"variants\",\r\n    \"initial\",\r\n    \"style\",\r\n    \"values\",\r\n    \"variants\",\r\n    \"transition\",\r\n    \"transformTemplate\",\r\n    \"custom\",\r\n    \"inherit\",\r\n    \"onBeforeLayoutMeasure\",\r\n    \"onAnimationStart\",\r\n    \"onAnimationComplete\",\r\n    \"onUpdate\",\r\n    \"onDragStart\",\r\n    \"onDrag\",\r\n    \"onDragEnd\",\r\n    \"onMeasureDragConstraints\",\r\n    \"onDirectionLock\",\r\n    \"onDragTransitionEnd\",\r\n    \"_dragX\",\r\n    \"_dragY\",\r\n    \"onHoverStart\",\r\n    \"onHoverEnd\",\r\n    \"onViewportEnter\",\r\n    \"onViewportLeave\",\r\n    \"globalTapTarget\",\r\n    \"ignoreStrict\",\r\n    \"viewport\",\r\n]);\r\n/**\r\n * Check whether a prop name is a valid `MotionProp` key.\r\n *\r\n * @param key - Name of the property to check\r\n * @returns `true` is key is a valid `MotionProp`.\r\n *\r\n * @public\r\n */\r\nfunction isValidMotionProp(key) {\r\n    return (key.startsWith(\"while\") ||\r\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\r\n        key.startsWith(\"layout\") ||\r\n        key.startsWith(\"onTap\") ||\r\n        key.startsWith(\"onPan\") ||\r\n        key.startsWith(\"onLayout\") ||\r\n        validMotionProps.has(key));\r\n}\r\n\r\nexport { isValidMotionProp };\r\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\r\n\r\nlet shouldForward = (key) => !isValidMotionProp(key);\r\nfunction loadExternalIsValidProp(isValidProp) {\r\n    if (!isValidProp)\r\n        return;\r\n    // Explicitly filter our events\r\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\r\n}\r\n/**\r\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\r\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\r\n * of these should be passed to the underlying DOM node.\r\n *\r\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\r\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\r\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\r\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\r\n *\r\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\r\n * actually required.\r\n */\r\ntry {\r\n    /**\r\n     * We attempt to import this package but require won't be defined in esm environments, in that case\r\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\r\n     * in favour of explicit injection.\r\n     */\r\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\r\n}\r\ncatch (_a) {\r\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\r\n}\r\nfunction filterProps(props, isDom, forwardMotionProps) {\r\n    const filteredProps = {};\r\n    for (const key in props) {\r\n        /**\r\n         * values is considered a valid prop by Emotion, so if it's present\r\n         * this will be rendered out to the DOM unless explicitly filtered.\r\n         *\r\n         * We check the type as it could be used with the `feColorMatrix`\r\n         * element, which we support.\r\n         */\r\n        if (key === \"values\" && typeof props.values === \"object\")\r\n            continue;\r\n        if (shouldForward(key) ||\r\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\r\n            (!isDom && !isValidMotionProp(key)) ||\r\n            // If trying to use native HTML drag events, forward drag listeners\r\n            (props[\"draggable\"] &&\r\n                key.startsWith(\"onDrag\"))) {\r\n            filteredProps[key] =\r\n                props[key];\r\n        }\r\n    }\r\n    return filteredProps;\r\n}\r\n\r\nexport { filterProps, loadExternalIsValidProp };\r\n","import { useMemo } from 'react';\r\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\r\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\r\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\r\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\r\n\r\nfunction useSVGProps(props, visualState, _isStatic, Component) {\r\n    const visualProps = useMemo(() => {\r\n        const state = createSvgRenderState();\r\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\r\n        return {\r\n            ...state.attrs,\r\n            style: { ...state.style },\r\n        };\r\n    }, [visualState]);\r\n    if (props.style) {\r\n        const rawStyles = {};\r\n        copyRawValuesOnly(rawStyles, props.style, props);\r\n        visualProps.style = { ...rawStyles, ...visualProps.style };\r\n    }\r\n    return visualProps;\r\n}\r\n\r\nexport { useSVGProps };\r\n","import { Fragment, useMemo, createElement } from 'react';\r\nimport { useHTMLProps } from '../html/use-props.mjs';\r\nimport { filterProps } from './utils/filter-props.mjs';\r\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\r\nimport { useSVGProps } from '../svg/use-props.mjs';\r\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\r\n\r\nfunction createUseRender(forwardMotionProps = false) {\r\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\r\n        const useVisualProps = isSVGComponent(Component)\r\n            ? useSVGProps\r\n            : useHTMLProps;\r\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\r\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\r\n        const elementProps = Component !== Fragment\r\n            ? { ...filteredProps, ...visualProps, ref }\r\n            : {};\r\n        /**\r\n         * If component has been handed a motion value as its child,\r\n         * memoise its initial value and render that. Subsequent updates\r\n         * will be handled by the onChange handler\r\n         */\r\n        const { children } = props;\r\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\r\n        return createElement(Component, {\r\n            ...elementProps,\r\n            children: renderedChildren,\r\n        });\r\n    };\r\n    return useRender;\r\n}\r\n\r\nexport { createUseRender };\r\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\r\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\r\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\r\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\r\nimport { createUseRender } from '../dom/use-render.mjs';\r\n\r\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\r\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\r\n        const baseConfig = isSVGComponent(Component)\r\n            ? svgMotionConfig\r\n            : htmlMotionConfig;\r\n        const config = {\r\n            ...baseConfig,\r\n            preloadedFeatures,\r\n            useRender: createUseRender(forwardMotionProps),\r\n            createVisualElement,\r\n            Component,\r\n        };\r\n        return createRendererMotionComponent(config);\r\n    };\r\n}\r\n\r\nexport { createMotionComponentFactory };\r\n","// Does this device prefer reduced motion? Returns `null` server-side.\r\nconst prefersReducedMotion = { current: null };\r\nconst hasReducedMotionListener = { current: false };\r\n\r\nexport { hasReducedMotionListener, prefersReducedMotion };\r\n","import { color } from '../../../value/types/color/index.mjs';\r\nimport { complex } from '../../../value/types/complex/index.mjs';\r\nimport { dimensionValueTypes } from './dimensions.mjs';\r\nimport { testValueType } from './test.mjs';\r\n\r\n/**\r\n * A list of all ValueTypes\r\n */\r\nconst valueTypes = [...dimensionValueTypes, color, complex];\r\n/**\r\n * Tests a value against the list of ValueTypes\r\n */\r\nconst findValueType = (v) => valueTypes.find(testValueType(v));\r\n\r\nexport { findValueType };\r\n","const visualElementStore = new WeakMap();\r\n\r\nexport { visualElementStore };\r\n","import { time } from '../frameloop/sync-time.mjs';\r\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\r\nimport { createBox } from '../projection/geometry/models.mjs';\r\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\r\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\r\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\r\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\r\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\r\nimport { warnOnce } from '../utils/warn-once.mjs';\r\nimport { motionValue } from '../value/index.mjs';\r\nimport { complex } from '../value/types/complex/index.mjs';\r\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\r\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\r\nimport { findValueType } from './dom/value-types/find.mjs';\r\nimport { transformProps } from './html/utils/keys-transform.mjs';\r\nimport { visualElementStore } from './store.mjs';\r\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\r\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\r\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\r\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\r\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\r\n\r\nconst propEventHandlers = [\r\n    \"AnimationStart\",\r\n    \"AnimationComplete\",\r\n    \"Update\",\r\n    \"BeforeLayoutMeasure\",\r\n    \"LayoutMeasure\",\r\n    \"LayoutAnimationStart\",\r\n    \"LayoutAnimationComplete\",\r\n];\r\n/**\r\n * A VisualElement is an imperative abstraction around UI elements such as\r\n * HTMLElement, SVGElement, Three.Object3D etc.\r\n */\r\nclass VisualElement {\r\n    /**\r\n     * This method takes React props and returns found MotionValues. For example, HTML\r\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\r\n     *\r\n     * This isn't an abstract method as it needs calling in the constructor, but it is\r\n     * intended to be one.\r\n     */\r\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\r\n        return {};\r\n    }\r\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\r\n        /**\r\n         * A reference to the current underlying Instance, e.g. a HTMLElement\r\n         * or Three.Mesh etc.\r\n         */\r\n        this.current = null;\r\n        /**\r\n         * A set containing references to this VisualElement's children.\r\n         */\r\n        this.children = new Set();\r\n        /**\r\n         * Determine what role this visual element should take in the variant tree.\r\n         */\r\n        this.isVariantNode = false;\r\n        this.isControllingVariants = false;\r\n        /**\r\n         * Decides whether this VisualElement should animate in reduced motion\r\n         * mode.\r\n         *\r\n         * TODO: This is currently set on every individual VisualElement but feels\r\n         * like it could be set globally.\r\n         */\r\n        this.shouldReduceMotion = null;\r\n        /**\r\n         * A map of all motion values attached to this visual element. Motion\r\n         * values are source of truth for any given animated value. A motion\r\n         * value might be provided externally by the component via props.\r\n         */\r\n        this.values = new Map();\r\n        this.KeyframeResolver = KeyframeResolver;\r\n        /**\r\n         * Cleanup functions for active features (hover/tap/exit etc)\r\n         */\r\n        this.features = {};\r\n        /**\r\n         * A map of every subscription that binds the provided or generated\r\n         * motion values onChange listeners to this visual element.\r\n         */\r\n        this.valueSubscriptions = new Map();\r\n        /**\r\n         * A reference to the previously-provided motion values as returned\r\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\r\n         * if any motion values need to be removed after props are updated.\r\n         */\r\n        this.prevMotionValues = {};\r\n        /**\r\n         * An object containing a SubscriptionManager for each active event.\r\n         */\r\n        this.events = {};\r\n        /**\r\n         * An object containing an unsubscribe function for each prop event subscription.\r\n         * For example, every \"Update\" event can have multiple subscribers via\r\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\r\n         */\r\n        this.propEventSubscriptions = {};\r\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\r\n        this.render = () => {\r\n            if (!this.current)\r\n                return;\r\n            this.triggerBuild();\r\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\r\n        };\r\n        this.renderScheduledAt = 0.0;\r\n        this.scheduleRender = () => {\r\n            const now = time.now();\r\n            if (this.renderScheduledAt < now) {\r\n                this.renderScheduledAt = now;\r\n                frame.render(this.render, false, true);\r\n            }\r\n        };\r\n        const { latestValues, renderState, onUpdate } = visualState;\r\n        this.onUpdate = onUpdate;\r\n        this.latestValues = latestValues;\r\n        this.baseTarget = { ...latestValues };\r\n        this.initialValues = props.initial ? { ...latestValues } : {};\r\n        this.renderState = renderState;\r\n        this.parent = parent;\r\n        this.props = props;\r\n        this.presenceContext = presenceContext;\r\n        this.depth = parent ? parent.depth + 1 : 0;\r\n        this.reducedMotionConfig = reducedMotionConfig;\r\n        this.options = options;\r\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\r\n        this.isControllingVariants = isControllingVariants(props);\r\n        this.isVariantNode = isVariantNode(props);\r\n        if (this.isVariantNode) {\r\n            this.variantChildren = new Set();\r\n        }\r\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\r\n        /**\r\n         * Any motion values that are provided to the element when created\r\n         * aren't yet bound to the element, as this would technically be impure.\r\n         * However, we iterate through the motion values and set them to the\r\n         * initial values for this component.\r\n         *\r\n         * TODO: This is impure and we should look at changing this to run on mount.\r\n         * Doing so will break some tests but this isn't necessarily a breaking change,\r\n         * more a reflection of the test.\r\n         */\r\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\r\n        for (const key in initialMotionValues) {\r\n            const value = initialMotionValues[key];\r\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\r\n                value.set(latestValues[key], false);\r\n            }\r\n        }\r\n    }\r\n    mount(instance) {\r\n        this.current = instance;\r\n        visualElementStore.set(instance, this);\r\n        if (this.projection && !this.projection.instance) {\r\n            this.projection.mount(instance);\r\n        }\r\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\r\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\r\n        }\r\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\r\n        if (!hasReducedMotionListener.current) {\r\n            initPrefersReducedMotion();\r\n        }\r\n        this.shouldReduceMotion =\r\n            this.reducedMotionConfig === \"never\"\r\n                ? false\r\n                : this.reducedMotionConfig === \"always\"\r\n                    ? true\r\n                    : prefersReducedMotion.current;\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\r\n        }\r\n        if (this.parent)\r\n            this.parent.children.add(this);\r\n        this.update(this.props, this.presenceContext);\r\n    }\r\n    unmount() {\r\n        visualElementStore.delete(this.current);\r\n        this.projection && this.projection.unmount();\r\n        cancelFrame(this.notifyUpdate);\r\n        cancelFrame(this.render);\r\n        this.valueSubscriptions.forEach((remove) => remove());\r\n        this.valueSubscriptions.clear();\r\n        this.removeFromVariantTree && this.removeFromVariantTree();\r\n        this.parent && this.parent.children.delete(this);\r\n        for (const key in this.events) {\r\n            this.events[key].clear();\r\n        }\r\n        for (const key in this.features) {\r\n            const feature = this.features[key];\r\n            if (feature) {\r\n                feature.unmount();\r\n                feature.isMounted = false;\r\n            }\r\n        }\r\n        this.current = null;\r\n    }\r\n    bindToMotionValue(key, value) {\r\n        if (this.valueSubscriptions.has(key)) {\r\n            this.valueSubscriptions.get(key)();\r\n        }\r\n        const valueIsTransform = transformProps.has(key);\r\n        const removeOnChange = value.on(\"change\", (latestValue) => {\r\n            this.latestValues[key] = latestValue;\r\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\r\n            if (valueIsTransform && this.projection) {\r\n                this.projection.isTransformDirty = true;\r\n            }\r\n        });\r\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\r\n        let removeSyncCheck;\r\n        if (window.MotionCheckAppearSync) {\r\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\r\n        }\r\n        this.valueSubscriptions.set(key, () => {\r\n            removeOnChange();\r\n            removeOnRenderRequest();\r\n            if (removeSyncCheck)\r\n                removeSyncCheck();\r\n            if (value.owner)\r\n                value.stop();\r\n        });\r\n    }\r\n    sortNodePosition(other) {\r\n        /**\r\n         * If these nodes aren't even of the same type we can't compare their depth.\r\n         */\r\n        if (!this.current ||\r\n            !this.sortInstanceNodePosition ||\r\n            this.type !== other.type) {\r\n            return 0;\r\n        }\r\n        return this.sortInstanceNodePosition(this.current, other.current);\r\n    }\r\n    updateFeatures() {\r\n        let key = \"animation\";\r\n        for (key in featureDefinitions) {\r\n            const featureDefinition = featureDefinitions[key];\r\n            if (!featureDefinition)\r\n                continue;\r\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\r\n            /**\r\n             * If this feature is enabled but not active, make a new instance.\r\n             */\r\n            if (!this.features[key] &&\r\n                FeatureConstructor &&\r\n                isEnabled(this.props)) {\r\n                this.features[key] = new FeatureConstructor(this);\r\n            }\r\n            /**\r\n             * If we have a feature, mount or update it.\r\n             */\r\n            if (this.features[key]) {\r\n                const feature = this.features[key];\r\n                if (feature.isMounted) {\r\n                    feature.update();\r\n                }\r\n                else {\r\n                    feature.mount();\r\n                    feature.isMounted = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    triggerBuild() {\r\n        this.build(this.renderState, this.latestValues, this.props);\r\n    }\r\n    /**\r\n     * Measure the current viewport box with or without transforms.\r\n     * Only measures axis-aligned boxes, rotate and skew must be manually\r\n     * removed with a re-render to work.\r\n     */\r\n    measureViewportBox() {\r\n        return this.current\r\n            ? this.measureInstanceViewportBox(this.current, this.props)\r\n            : createBox();\r\n    }\r\n    getStaticValue(key) {\r\n        return this.latestValues[key];\r\n    }\r\n    setStaticValue(key, value) {\r\n        this.latestValues[key] = value;\r\n    }\r\n    /**\r\n     * Update the provided props. Ensure any newly-added motion values are\r\n     * added to our map, old ones removed, and listeners updated.\r\n     */\r\n    update(props, presenceContext) {\r\n        if (props.transformTemplate || this.props.transformTemplate) {\r\n            this.scheduleRender();\r\n        }\r\n        this.prevProps = this.props;\r\n        this.props = props;\r\n        this.prevPresenceContext = this.presenceContext;\r\n        this.presenceContext = presenceContext;\r\n        /**\r\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\r\n         */\r\n        for (let i = 0; i < propEventHandlers.length; i++) {\r\n            const key = propEventHandlers[i];\r\n            if (this.propEventSubscriptions[key]) {\r\n                this.propEventSubscriptions[key]();\r\n                delete this.propEventSubscriptions[key];\r\n            }\r\n            const listenerName = (\"on\" + key);\r\n            const listener = props[listenerName];\r\n            if (listener) {\r\n                this.propEventSubscriptions[key] = this.on(key, listener);\r\n            }\r\n        }\r\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\r\n        if (this.handleChildMotionValue) {\r\n            this.handleChildMotionValue();\r\n        }\r\n        this.onUpdate && this.onUpdate(this);\r\n    }\r\n    getProps() {\r\n        return this.props;\r\n    }\r\n    /**\r\n     * Returns the variant definition with a given name.\r\n     */\r\n    getVariant(name) {\r\n        return this.props.variants ? this.props.variants[name] : undefined;\r\n    }\r\n    /**\r\n     * Returns the defined default transition on this component.\r\n     */\r\n    getDefaultTransition() {\r\n        return this.props.transition;\r\n    }\r\n    getTransformPagePoint() {\r\n        return this.props.transformPagePoint;\r\n    }\r\n    getClosestVariantNode() {\r\n        return this.isVariantNode\r\n            ? this\r\n            : this.parent\r\n                ? this.parent.getClosestVariantNode()\r\n                : undefined;\r\n    }\r\n    /**\r\n     * Add a child visual element to our set of children.\r\n     */\r\n    addVariantChild(child) {\r\n        const closestVariantNode = this.getClosestVariantNode();\r\n        if (closestVariantNode) {\r\n            closestVariantNode.variantChildren &&\r\n                closestVariantNode.variantChildren.add(child);\r\n            return () => closestVariantNode.variantChildren.delete(child);\r\n        }\r\n    }\r\n    /**\r\n     * Add a motion value and bind it to this visual element.\r\n     */\r\n    addValue(key, value) {\r\n        // Remove existing value if it exists\r\n        const existingValue = this.values.get(key);\r\n        if (value !== existingValue) {\r\n            if (existingValue)\r\n                this.removeValue(key);\r\n            this.bindToMotionValue(key, value);\r\n            this.values.set(key, value);\r\n            this.latestValues[key] = value.get();\r\n        }\r\n    }\r\n    /**\r\n     * Remove a motion value and unbind any active subscriptions.\r\n     */\r\n    removeValue(key) {\r\n        this.values.delete(key);\r\n        const unsubscribe = this.valueSubscriptions.get(key);\r\n        if (unsubscribe) {\r\n            unsubscribe();\r\n            this.valueSubscriptions.delete(key);\r\n        }\r\n        delete this.latestValues[key];\r\n        this.removeValueFromRenderState(key, this.renderState);\r\n    }\r\n    /**\r\n     * Check whether we have a motion value for this key\r\n     */\r\n    hasValue(key) {\r\n        return this.values.has(key);\r\n    }\r\n    getValue(key, defaultValue) {\r\n        if (this.props.values && this.props.values[key]) {\r\n            return this.props.values[key];\r\n        }\r\n        let value = this.values.get(key);\r\n        if (value === undefined && defaultValue !== undefined) {\r\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\r\n            this.addValue(key, value);\r\n        }\r\n        return value;\r\n    }\r\n    /**\r\n     * If we're trying to animate to a previously unencountered value,\r\n     * we need to check for it in our state and as a last resort read it\r\n     * directly from the instance (which might have performance implications).\r\n     */\r\n    readValue(key, target) {\r\n        var _a;\r\n        let value = this.latestValues[key] !== undefined || !this.current\r\n            ? this.latestValues[key]\r\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\r\n        if (value !== undefined && value !== null) {\r\n            if (typeof value === \"string\" &&\r\n                (isNumericalString(value) || isZeroValueString(value))) {\r\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\r\n                value = parseFloat(value);\r\n            }\r\n            else if (!findValueType(value) && complex.test(target)) {\r\n                value = getAnimatableNone(key, target);\r\n            }\r\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\r\n        }\r\n        return isMotionValue(value) ? value.get() : value;\r\n    }\r\n    /**\r\n     * Set the base target to later animate back to. This is currently\r\n     * only hydrated on creation and when we first read a value.\r\n     */\r\n    setBaseTarget(key, value) {\r\n        this.baseTarget[key] = value;\r\n    }\r\n    /**\r\n     * Find the base target for a value thats been removed from all animation\r\n     * props.\r\n     */\r\n    getBaseTarget(key) {\r\n        var _a;\r\n        const { initial } = this.props;\r\n        let valueFromInitial;\r\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\r\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\r\n            if (variant) {\r\n                valueFromInitial = variant[key];\r\n            }\r\n        }\r\n        /**\r\n         * If this value still exists in the current initial variant, read that.\r\n         */\r\n        if (initial && valueFromInitial !== undefined) {\r\n            return valueFromInitial;\r\n        }\r\n        /**\r\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\r\n         * so we can read the value from an alternative source, try that.\r\n         */\r\n        const target = this.getBaseTargetFromProps(this.props, key);\r\n        if (target !== undefined && !isMotionValue(target))\r\n            return target;\r\n        /**\r\n         * If the value was initially defined on initial, but it doesn't any more,\r\n         * return undefined. Otherwise return the value as initially read from the DOM.\r\n         */\r\n        return this.initialValues[key] !== undefined &&\r\n            valueFromInitial === undefined\r\n            ? undefined\r\n            : this.baseTarget[key];\r\n    }\r\n    on(eventName, callback) {\r\n        if (!this.events[eventName]) {\r\n            this.events[eventName] = new SubscriptionManager();\r\n        }\r\n        return this.events[eventName].add(callback);\r\n    }\r\n    notify(eventName, ...args) {\r\n        if (this.events[eventName]) {\r\n            this.events[eventName].notify(...args);\r\n        }\r\n    }\r\n}\r\n\r\nexport { VisualElement };\r\n","import { isBrowser } from '../is-browser.mjs';\r\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\r\n\r\nfunction initPrefersReducedMotion() {\r\n    hasReducedMotionListener.current = true;\r\n    if (!isBrowser)\r\n        return;\r\n    if (window.matchMedia) {\r\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\r\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\r\n        motionMediaQuery.addListener(setReducedMotionPreferences);\r\n        setReducedMotionPreferences();\r\n    }\r\n    else {\r\n        prefersReducedMotion.current = false;\r\n    }\r\n}\r\n\r\nexport { initPrefersReducedMotion };\r\n","import { warnOnce } from '../../utils/warn-once.mjs';\r\nimport { motionValue } from '../../value/index.mjs';\r\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\r\n\r\nfunction updateMotionValuesFromProps(element, next, prev) {\r\n    for (const key in next) {\r\n        const nextValue = next[key];\r\n        const prevValue = prev[key];\r\n        if (isMotionValue(nextValue)) {\r\n            /**\r\n             * If this is a motion value found in props or style, we want to add it\r\n             * to our visual element's motion value map.\r\n             */\r\n            element.addValue(key, nextValue);\r\n            /**\r\n             * Check the version of the incoming motion value with this version\r\n             * and warn against mismatches.\r\n             */\r\n            if (process.env.NODE_ENV === \"development\") {\r\n                warnOnce(nextValue.version === \"11.18.2\", `Attempting to mix Motion versions ${nextValue.version} with 11.18.2 may not work as expected.`);\r\n            }\r\n        }\r\n        else if (isMotionValue(prevValue)) {\r\n            /**\r\n             * If we're swapping from a motion value to a static value,\r\n             * create a new motion value from that\r\n             */\r\n            element.addValue(key, motionValue(nextValue, { owner: element }));\r\n        }\r\n        else if (prevValue !== nextValue) {\r\n            /**\r\n             * If this is a flat value that has changed, update the motion value\r\n             * or create one if it doesn't exist. We only want to do this if we're\r\n             * not handling the value with our animation state.\r\n             */\r\n            if (element.hasValue(key)) {\r\n                const existingValue = element.getValue(key);\r\n                if (existingValue.liveStyle === true) {\r\n                    existingValue.jump(nextValue);\r\n                }\r\n                else if (!existingValue.hasAnimated) {\r\n                    existingValue.set(nextValue);\r\n                }\r\n            }\r\n            else {\r\n                const latestValue = element.getStaticValue(key);\r\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\r\n            }\r\n        }\r\n    }\r\n    // Handle removed values\r\n    for (const key in prev) {\r\n        if (next[key] === undefined)\r\n            element.removeValue(key);\r\n    }\r\n    return next;\r\n}\r\n\r\nexport { updateMotionValuesFromProps };\r\n","import { VisualElement } from '../VisualElement.mjs';\r\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\r\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\r\n\r\nclass DOMVisualElement extends VisualElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.KeyframeResolver = DOMKeyframesResolver;\r\n    }\r\n    sortInstanceNodePosition(a, b) {\r\n        /**\r\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\r\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\r\n         * to true if b preceeds a.\r\n         */\r\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\r\n    }\r\n    getBaseTargetFromProps(props, key) {\r\n        return props.style\r\n            ? props.style[key]\r\n            : undefined;\r\n    }\r\n    removeValueFromRenderState(key, { vars, style }) {\r\n        delete vars[key];\r\n        delete style[key];\r\n    }\r\n    handleChildMotionValue() {\r\n        if (this.childSubscription) {\r\n            this.childSubscription();\r\n            delete this.childSubscription;\r\n        }\r\n        const { children } = this.props;\r\n        if (isMotionValue(children)) {\r\n            this.childSubscription = children.on(\"change\", (latest) => {\r\n                if (this.current) {\r\n                    this.current.textContent = `${latest}`;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport { DOMVisualElement };\r\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\r\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\r\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\r\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\r\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\r\nimport { transformProps } from './utils/keys-transform.mjs';\r\nimport { renderHTML } from './utils/render.mjs';\r\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\r\n\r\nfunction getComputedStyle(element) {\r\n    return window.getComputedStyle(element);\r\n}\r\nclass HTMLVisualElement extends DOMVisualElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.type = \"html\";\r\n        this.renderInstance = renderHTML;\r\n    }\r\n    readValueFromInstance(instance, key) {\r\n        if (transformProps.has(key)) {\r\n            const defaultType = getDefaultValueType(key);\r\n            return defaultType ? defaultType.default || 0 : 0;\r\n        }\r\n        else {\r\n            const computedStyle = getComputedStyle(instance);\r\n            const value = (isCSSVariableName(key)\r\n                ? computedStyle.getPropertyValue(key)\r\n                : computedStyle[key]) || 0;\r\n            return typeof value === \"string\" ? value.trim() : value;\r\n        }\r\n    }\r\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\r\n        return measureViewportBox(instance, transformPagePoint);\r\n    }\r\n    build(renderState, latestValues, props) {\r\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\r\n    }\r\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\r\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\r\n    }\r\n}\r\n\r\nexport { HTMLVisualElement, getComputedStyle };\r\n","import { createBox } from '../../projection/geometry/models.mjs';\r\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\r\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\r\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\r\nimport { transformProps } from '../html/utils/keys-transform.mjs';\r\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\r\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\r\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\r\nimport { renderSVG } from './utils/render.mjs';\r\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\r\n\r\nclass SVGVisualElement extends DOMVisualElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.type = \"svg\";\r\n        this.isSVGTag = false;\r\n        this.measureInstanceViewportBox = createBox;\r\n    }\r\n    getBaseTargetFromProps(props, key) {\r\n        return props[key];\r\n    }\r\n    readValueFromInstance(instance, key) {\r\n        if (transformProps.has(key)) {\r\n            const defaultType = getDefaultValueType(key);\r\n            return defaultType ? defaultType.default || 0 : 0;\r\n        }\r\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\r\n        return instance.getAttribute(key);\r\n    }\r\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\r\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\r\n    }\r\n    build(renderState, latestValues, props) {\r\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\r\n    }\r\n    renderInstance(instance, renderState, styleProp, projection) {\r\n        renderSVG(instance, renderState, styleProp, projection);\r\n    }\r\n    mount(instance) {\r\n        this.isSVGTag = isSVGTag(instance.tagName);\r\n        super.mount(instance);\r\n    }\r\n}\r\n\r\nexport { SVGVisualElement };\r\n","import { Fragment } from 'react';\r\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\r\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\r\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\r\n\r\nconst createDomVisualElement = (Component, options) => {\r\n    return isSVGComponent(Component)\r\n        ? new SVGVisualElement(options)\r\n        : new HTMLVisualElement(options, {\r\n            allowProjection: Component !== Fragment,\r\n        });\r\n};\r\n\r\nexport { createDomVisualElement };\r\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\r\nimport { createMotionComponent } from './create.mjs';\r\n\r\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\r\n\r\nexport { motion };\r\n","import { animations } from '../../../motion/features/animations.mjs';\r\nimport { drag } from '../../../motion/features/drag.mjs';\r\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\r\nimport { layout } from '../../../motion/features/layout.mjs';\r\nimport { createMotionComponentFactory } from '../create-factory.mjs';\r\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\r\n\r\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\r\n    ...animations,\r\n    ...gestureAnimations,\r\n    ...drag,\r\n    ...layout,\r\n}, createDomVisualElement);\r\n\r\nexport { createMotionComponent };\r\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\r\nconst isCSSVariableName = \r\n/*@__PURE__*/ checkStringStartsWith(\"--\");\r\nconst startsAsVariableToken = \r\n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\r\nconst isCSSVariableToken = (value) => {\r\n    const startsWithToken = startsAsVariableToken(value);\r\n    if (!startsWithToken)\r\n        return false;\r\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\r\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\r\n};\r\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\r\n\r\nexport { isCSSVariableName, isCSSVariableToken };\r\n","import { number } from '../../../value/types/numbers/index.mjs';\r\nimport { px } from '../../../value/types/numbers/units.mjs';\r\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\r\n\r\nconst isNumOrPxType = (v) => v === number || v === px;\r\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\r\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\r\n    if (transform === \"none\" || !transform)\r\n        return 0;\r\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\r\n    if (matrix3d) {\r\n        return getPosFromMatrix(matrix3d[1], pos3);\r\n    }\r\n    else {\r\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\r\n        if (matrix) {\r\n            return getPosFromMatrix(matrix[1], pos2);\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n};\r\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\r\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\r\nfunction removeNonTranslationalTransform(visualElement) {\r\n    const removedTransforms = [];\r\n    nonTranslationalTransformKeys.forEach((key) => {\r\n        const value = visualElement.getValue(key);\r\n        if (value !== undefined) {\r\n            removedTransforms.push([key, value.get()]);\r\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\r\n        }\r\n    });\r\n    return removedTransforms;\r\n}\r\nconst positionalValues = {\r\n    // Dimensions\r\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\r\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\r\n    top: (_bbox, { top }) => parseFloat(top),\r\n    left: (_bbox, { left }) => parseFloat(left),\r\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\r\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\r\n    // Transform\r\n    x: getTranslateFromMatrix(4, 13),\r\n    y: getTranslateFromMatrix(5, 14),\r\n};\r\n// Alias translate longform names\r\npositionalValues.translateX = positionalValues.x;\r\npositionalValues.translateY = positionalValues.y;\r\n\r\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\r\n","/**\r\n * Generate a list of every possible transform key.\r\n */\r\nconst transformPropOrder = [\r\n    \"transformPerspective\",\r\n    \"x\",\r\n    \"y\",\r\n    \"z\",\r\n    \"translateX\",\r\n    \"translateY\",\r\n    \"translateZ\",\r\n    \"scale\",\r\n    \"scaleX\",\r\n    \"scaleY\",\r\n    \"rotate\",\r\n    \"rotateX\",\r\n    \"rotateY\",\r\n    \"rotateZ\",\r\n    \"skew\",\r\n    \"skewX\",\r\n    \"skewY\",\r\n];\r\n/**\r\n * A quick lookup for transform props.\r\n */\r\nconst transformProps = new Set(transformPropOrder);\r\n\r\nexport { transformPropOrder, transformProps };\r\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\r\nimport { frame } from '../../frameloop/frame.mjs';\r\n\r\nconst toResolve = new Set();\r\nlet isScheduled = false;\r\nlet anyNeedsMeasurement = false;\r\nfunction measureAllKeyframes() {\r\n    if (anyNeedsMeasurement) {\r\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\r\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\r\n        const transformsToRestore = new Map();\r\n        /**\r\n         * Write pass\r\n         * If we're measuring elements we want to remove bounding box-changing transforms.\r\n         */\r\n        elementsToMeasure.forEach((element) => {\r\n            const removedTransforms = removeNonTranslationalTransform(element);\r\n            if (!removedTransforms.length)\r\n                return;\r\n            transformsToRestore.set(element, removedTransforms);\r\n            element.render();\r\n        });\r\n        // Read\r\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\r\n        // Write\r\n        elementsToMeasure.forEach((element) => {\r\n            element.render();\r\n            const restore = transformsToRestore.get(element);\r\n            if (restore) {\r\n                restore.forEach(([key, value]) => {\r\n                    var _a;\r\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\r\n                });\r\n            }\r\n        });\r\n        // Read\r\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\r\n        // Write\r\n        resolversToMeasure.forEach((resolver) => {\r\n            if (resolver.suspendedScrollY !== undefined) {\r\n                window.scrollTo(0, resolver.suspendedScrollY);\r\n            }\r\n        });\r\n    }\r\n    anyNeedsMeasurement = false;\r\n    isScheduled = false;\r\n    toResolve.forEach((resolver) => resolver.complete());\r\n    toResolve.clear();\r\n}\r\nfunction readAllKeyframes() {\r\n    toResolve.forEach((resolver) => {\r\n        resolver.readKeyframes();\r\n        if (resolver.needsMeasurement) {\r\n            anyNeedsMeasurement = true;\r\n        }\r\n    });\r\n}\r\nfunction flushKeyframeResolvers() {\r\n    readAllKeyframes();\r\n    measureAllKeyframes();\r\n}\r\nclass KeyframeResolver {\r\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\r\n        /**\r\n         * Track whether this resolver has completed. Once complete, it never\r\n         * needs to attempt keyframe resolution again.\r\n         */\r\n        this.isComplete = false;\r\n        /**\r\n         * Track whether this resolver is async. If it is, it'll be added to the\r\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\r\n         * to trigger read/write thrashing don't need to be async.\r\n         */\r\n        this.isAsync = false;\r\n        /**\r\n         * Track whether this resolver needs to perform a measurement\r\n         * to resolve its keyframes.\r\n         */\r\n        this.needsMeasurement = false;\r\n        /**\r\n         * Track whether this resolver is currently scheduled to resolve\r\n         * to allow it to be cancelled and resumed externally.\r\n         */\r\n        this.isScheduled = false;\r\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\r\n        this.onComplete = onComplete;\r\n        this.name = name;\r\n        this.motionValue = motionValue;\r\n        this.element = element;\r\n        this.isAsync = isAsync;\r\n    }\r\n    scheduleResolve() {\r\n        this.isScheduled = true;\r\n        if (this.isAsync) {\r\n            toResolve.add(this);\r\n            if (!isScheduled) {\r\n                isScheduled = true;\r\n                frame.read(readAllKeyframes);\r\n                frame.resolveKeyframes(measureAllKeyframes);\r\n            }\r\n        }\r\n        else {\r\n            this.readKeyframes();\r\n            this.complete();\r\n        }\r\n    }\r\n    readKeyframes() {\r\n        const { unresolvedKeyframes, name, element, motionValue } = this;\r\n        /**\r\n         * If a keyframe is null, we hydrate it either by reading it from\r\n         * the instance, or propagating from previous keyframes.\r\n         */\r\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\r\n            if (unresolvedKeyframes[i] === null) {\r\n                /**\r\n                 * If the first keyframe is null, we need to find its value by sampling the element\r\n                 */\r\n                if (i === 0) {\r\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\r\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\r\n                    if (currentValue !== undefined) {\r\n                        unresolvedKeyframes[0] = currentValue;\r\n                    }\r\n                    else if (element && name) {\r\n                        const valueAsRead = element.readValue(name, finalKeyframe);\r\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\r\n                            unresolvedKeyframes[0] = valueAsRead;\r\n                        }\r\n                    }\r\n                    if (unresolvedKeyframes[0] === undefined) {\r\n                        unresolvedKeyframes[0] = finalKeyframe;\r\n                    }\r\n                    if (motionValue && currentValue === undefined) {\r\n                        motionValue.set(unresolvedKeyframes[0]);\r\n                    }\r\n                }\r\n                else {\r\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    setFinalKeyframe() { }\r\n    measureInitialState() { }\r\n    renderEndStyles() { }\r\n    measureEndState() { }\r\n    complete() {\r\n        this.isComplete = true;\r\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\r\n        toResolve.delete(this);\r\n    }\r\n    cancel() {\r\n        if (!this.isComplete) {\r\n            this.isScheduled = false;\r\n            toResolve.delete(this);\r\n        }\r\n    }\r\n    resume() {\r\n        if (!this.isComplete)\r\n            this.scheduleResolve();\r\n    }\r\n}\r\n\r\nexport { KeyframeResolver, flushKeyframeResolvers };\r\n","const MotionGlobalConfig = {\r\n    skipAnimations: false,\r\n    useManualTiming: false,\r\n};\r\n\r\nexport { MotionGlobalConfig };\r\n","function addUniqueItem(arr, item) {\r\n    if (arr.indexOf(item) === -1)\r\n        arr.push(item);\r\n}\r\nfunction removeItem(arr, item) {\r\n    const index = arr.indexOf(item);\r\n    if (index > -1)\r\n        arr.splice(index, 1);\r\n}\r\n// Adapted from array-move\r\nfunction moveItem([...arr], fromIndex, toIndex) {\r\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\r\n    if (startIndex >= 0 && startIndex < arr.length) {\r\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\r\n        const [item] = arr.splice(fromIndex, 1);\r\n        arr.splice(endIndex, 0, item);\r\n    }\r\n    return arr;\r\n}\r\n\r\nexport { addUniqueItem, moveItem, removeItem };\r\n","const clamp = (min, max, v) => {\r\n    if (v > max)\r\n        return max;\r\n    if (v < min)\r\n        return min;\r\n    return v;\r\n};\r\n\r\nexport { clamp };\r\n","const isBrowser = typeof window !== \"undefined\";\r\n\r\nexport { isBrowser };\r\n","/*\r\n  Value in range from progress\r\n\r\n  Given a lower limit and an upper limit, we return the value within\r\n  that range as expressed by progress (usually a number from 0 to 1)\r\n\r\n  So progress = 0.5 would change\r\n\r\n  from -------- to\r\n\r\n  to\r\n\r\n  from ---- to\r\n\r\n  E.g. from = 10, to = 20, progress = 0.5 => 15\r\n\r\n  @param [number]: Lower limit of range\r\n  @param [number]: Upper limit of range\r\n  @param [number]: The progress between lower and upper limits expressed 0-1\r\n  @return [number]: Value as calculated from progress within range (not limited within range)\r\n*/\r\nconst mixNumber = (from, to, progress) => {\r\n    return from + (to - from) * progress;\r\n};\r\n\r\nexport { mixNumber };\r\n","/**\r\n * Pipe\r\n * Compose other transformers to run linearily\r\n * pipe(min(20), max(40))\r\n * @param  {...functions} transformers\r\n * @return {function}\r\n */\r\nconst combineFunctions = (a, b) => (v) => b(a(v));\r\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\r\n\r\nexport { pipe };\r\n","import { addUniqueItem, removeItem } from './array.mjs';\r\n\r\nclass SubscriptionManager {\r\n    constructor() {\r\n        this.subscriptions = [];\r\n    }\r\n    add(handler) {\r\n        addUniqueItem(this.subscriptions, handler);\r\n        return () => removeItem(this.subscriptions, handler);\r\n    }\r\n    notify(a, b, c) {\r\n        const numSubscriptions = this.subscriptions.length;\r\n        if (!numSubscriptions)\r\n            return;\r\n        if (numSubscriptions === 1) {\r\n            /**\r\n             * If there's only a single handler we can just call it without invoking a loop.\r\n             */\r\n            this.subscriptions[0](a, b, c);\r\n        }\r\n        else {\r\n            for (let i = 0; i < numSubscriptions; i++) {\r\n                /**\r\n                 * Check whether the handler exists before firing as it's possible\r\n                 * the subscriptions were modified during this loop running.\r\n                 */\r\n                const handler = this.subscriptions[i];\r\n                handler && handler(a, b, c);\r\n            }\r\n        }\r\n    }\r\n    getSize() {\r\n        return this.subscriptions.length;\r\n    }\r\n    clear() {\r\n        this.subscriptions.length = 0;\r\n    }\r\n}\r\n\r\nexport { SubscriptionManager };\r\n","import { useRef } from 'react';\r\n\r\n/**\r\n * Creates a constant value over the lifecycle of a component.\r\n *\r\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\r\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\r\n * you can ensure that initialisers don't execute twice or more.\r\n */\r\nfunction useConstant(init) {\r\n    const ref = useRef(null);\r\n    if (ref.current === null) {\r\n        ref.current = init();\r\n    }\r\n    return ref.current;\r\n}\r\n\r\nexport { useConstant };\r\n","const instantAnimationState = {\r\n    current: false,\r\n};\r\n\r\nexport { instantAnimationState };\r\n","import { useLayoutEffect, useEffect } from 'react';\r\nimport { isBrowser } from './is-browser.mjs';\r\n\r\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\r\n\r\nexport { useIsomorphicLayoutEffect };\r\n","/*\r\n  Convert velocity into velocity per second\r\n\r\n  @param [number]: Unit per frame\r\n  @param [number]: Frame duration in ms\r\n*/\r\nfunction velocityPerSecond(velocity, frameDuration) {\r\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\r\n}\r\n\r\nexport { velocityPerSecond };\r\n","import { time } from '../frameloop/sync-time.mjs';\r\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\r\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\r\nimport { warnOnce } from '../utils/warn-once.mjs';\r\nimport { frame } from '../frameloop/frame.mjs';\r\n\r\n/**\r\n * Maximum time between the value of two frames, beyond which we\r\n * assume the velocity has since been 0.\r\n */\r\nconst MAX_VELOCITY_DELTA = 30;\r\nconst isFloat = (value) => {\r\n    return !isNaN(parseFloat(value));\r\n};\r\nconst collectMotionValues = {\r\n    current: undefined,\r\n};\r\n/**\r\n * `MotionValue` is used to track the state and velocity of motion values.\r\n *\r\n * @public\r\n */\r\nclass MotionValue {\r\n    /**\r\n     * @param init - The initiating value\r\n     * @param config - Optional configuration options\r\n     *\r\n     * -  `transformer`: A function to transform incoming values with.\r\n     *\r\n     * @internal\r\n     */\r\n    constructor(init, options = {}) {\r\n        /**\r\n         * This will be replaced by the build step with the latest version number.\r\n         * When MotionValues are provided to motion components, warn if versions are mixed.\r\n         */\r\n        this.version = \"11.18.2\";\r\n        /**\r\n         * Tracks whether this value can output a velocity. Currently this is only true\r\n         * if the value is numerical, but we might be able to widen the scope here and support\r\n         * other value types.\r\n         *\r\n         * @internal\r\n         */\r\n        this.canTrackVelocity = null;\r\n        /**\r\n         * An object containing a SubscriptionManager for each active event.\r\n         */\r\n        this.events = {};\r\n        this.updateAndNotify = (v, render = true) => {\r\n            const currentTime = time.now();\r\n            /**\r\n             * If we're updating the value during another frame or eventloop\r\n             * than the previous frame, then the we set the previous frame value\r\n             * to current.\r\n             */\r\n            if (this.updatedAt !== currentTime) {\r\n                this.setPrevFrameValue();\r\n            }\r\n            this.prev = this.current;\r\n            this.setCurrent(v);\r\n            // Update update subscribers\r\n            if (this.current !== this.prev && this.events.change) {\r\n                this.events.change.notify(this.current);\r\n            }\r\n            // Update render subscribers\r\n            if (render && this.events.renderRequest) {\r\n                this.events.renderRequest.notify(this.current);\r\n            }\r\n        };\r\n        this.hasAnimated = false;\r\n        this.setCurrent(init);\r\n        this.owner = options.owner;\r\n    }\r\n    setCurrent(current) {\r\n        this.current = current;\r\n        this.updatedAt = time.now();\r\n        if (this.canTrackVelocity === null && current !== undefined) {\r\n            this.canTrackVelocity = isFloat(this.current);\r\n        }\r\n    }\r\n    setPrevFrameValue(prevFrameValue = this.current) {\r\n        this.prevFrameValue = prevFrameValue;\r\n        this.prevUpdatedAt = this.updatedAt;\r\n    }\r\n    /**\r\n     * Adds a function that will be notified when the `MotionValue` is updated.\r\n     *\r\n     * It returns a function that, when called, will cancel the subscription.\r\n     *\r\n     * When calling `onChange` inside a React component, it should be wrapped with the\r\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\r\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\r\n     *\r\n     * ```jsx\r\n     * export const MyComponent = () => {\r\n     *   const x = useMotionValue(0)\r\n     *   const y = useMotionValue(0)\r\n     *   const opacity = useMotionValue(1)\r\n     *\r\n     *   useEffect(() => {\r\n     *     function updateOpacity() {\r\n     *       const maxXY = Math.max(x.get(), y.get())\r\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\r\n     *       opacity.set(newOpacity)\r\n     *     }\r\n     *\r\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\r\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\r\n     *\r\n     *     return () => {\r\n     *       unsubscribeX()\r\n     *       unsubscribeY()\r\n     *     }\r\n     *   }, [])\r\n     *\r\n     *   return <motion.div style={{ x }} />\r\n     * }\r\n     * ```\r\n     *\r\n     * @param subscriber - A function that receives the latest value.\r\n     * @returns A function that, when called, will cancel this subscription.\r\n     *\r\n     * @deprecated\r\n     */\r\n    onChange(subscription) {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\r\n        }\r\n        return this.on(\"change\", subscription);\r\n    }\r\n    on(eventName, callback) {\r\n        if (!this.events[eventName]) {\r\n            this.events[eventName] = new SubscriptionManager();\r\n        }\r\n        const unsubscribe = this.events[eventName].add(callback);\r\n        if (eventName === \"change\") {\r\n            return () => {\r\n                unsubscribe();\r\n                /**\r\n                 * If we have no more change listeners by the start\r\n                 * of the next frame, stop active animations.\r\n                 */\r\n                frame.read(() => {\r\n                    if (!this.events.change.getSize()) {\r\n                        this.stop();\r\n                    }\r\n                });\r\n            };\r\n        }\r\n        return unsubscribe;\r\n    }\r\n    clearListeners() {\r\n        for (const eventManagers in this.events) {\r\n            this.events[eventManagers].clear();\r\n        }\r\n    }\r\n    /**\r\n     * Attaches a passive effect to the `MotionValue`.\r\n     *\r\n     * @internal\r\n     */\r\n    attach(passiveEffect, stopPassiveEffect) {\r\n        this.passiveEffect = passiveEffect;\r\n        this.stopPassiveEffect = stopPassiveEffect;\r\n    }\r\n    /**\r\n     * Sets the state of the `MotionValue`.\r\n     *\r\n     * @remarks\r\n     *\r\n     * ```jsx\r\n     * const x = useMotionValue(0)\r\n     * x.set(10)\r\n     * ```\r\n     *\r\n     * @param latest - Latest value to set.\r\n     * @param render - Whether to notify render subscribers. Defaults to `true`\r\n     *\r\n     * @public\r\n     */\r\n    set(v, render = true) {\r\n        if (!render || !this.passiveEffect) {\r\n            this.updateAndNotify(v, render);\r\n        }\r\n        else {\r\n            this.passiveEffect(v, this.updateAndNotify);\r\n        }\r\n    }\r\n    setWithVelocity(prev, current, delta) {\r\n        this.set(current);\r\n        this.prev = undefined;\r\n        this.prevFrameValue = prev;\r\n        this.prevUpdatedAt = this.updatedAt - delta;\r\n    }\r\n    /**\r\n     * Set the state of the `MotionValue`, stopping any active animations,\r\n     * effects, and resets velocity to `0`.\r\n     */\r\n    jump(v, endAnimation = true) {\r\n        this.updateAndNotify(v);\r\n        this.prev = v;\r\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\r\n        endAnimation && this.stop();\r\n        if (this.stopPassiveEffect)\r\n            this.stopPassiveEffect();\r\n    }\r\n    /**\r\n     * Returns the latest state of `MotionValue`\r\n     *\r\n     * @returns - The latest state of `MotionValue`\r\n     *\r\n     * @public\r\n     */\r\n    get() {\r\n        if (collectMotionValues.current) {\r\n            collectMotionValues.current.push(this);\r\n        }\r\n        return this.current;\r\n    }\r\n    /**\r\n     * @public\r\n     */\r\n    getPrevious() {\r\n        return this.prev;\r\n    }\r\n    /**\r\n     * Returns the latest velocity of `MotionValue`\r\n     *\r\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\r\n     *\r\n     * @public\r\n     */\r\n    getVelocity() {\r\n        const currentTime = time.now();\r\n        if (!this.canTrackVelocity ||\r\n            this.prevFrameValue === undefined ||\r\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\r\n            return 0;\r\n        }\r\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\r\n        // Casts because of parseFloat's poor typing\r\n        return velocityPerSecond(parseFloat(this.current) -\r\n            parseFloat(this.prevFrameValue), delta);\r\n    }\r\n    /**\r\n     * Registers a new animation to control this `MotionValue`. Only one\r\n     * animation can drive a `MotionValue` at one time.\r\n     *\r\n     * ```jsx\r\n     * value.start()\r\n     * ```\r\n     *\r\n     * @param animation - A function that starts the provided animation\r\n     *\r\n     * @internal\r\n     */\r\n    start(startAnimation) {\r\n        this.stop();\r\n        return new Promise((resolve) => {\r\n            this.hasAnimated = true;\r\n            this.animation = startAnimation(resolve);\r\n            if (this.events.animationStart) {\r\n                this.events.animationStart.notify();\r\n            }\r\n        }).then(() => {\r\n            if (this.events.animationComplete) {\r\n                this.events.animationComplete.notify();\r\n            }\r\n            this.clearAnimation();\r\n        });\r\n    }\r\n    /**\r\n     * Stop the currently active animation.\r\n     *\r\n     * @public\r\n     */\r\n    stop() {\r\n        if (this.animation) {\r\n            this.animation.stop();\r\n            if (this.events.animationCancel) {\r\n                this.events.animationCancel.notify();\r\n            }\r\n        }\r\n        this.clearAnimation();\r\n    }\r\n    /**\r\n     * Returns `true` if this value is currently animating.\r\n     *\r\n     * @public\r\n     */\r\n    isAnimating() {\r\n        return !!this.animation;\r\n    }\r\n    clearAnimation() {\r\n        delete this.animation;\r\n    }\r\n    /**\r\n     * Destroy and clean up subscribers to this `MotionValue`.\r\n     *\r\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\r\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\r\n     * created a `MotionValue` via the `motionValue` function.\r\n     *\r\n     * @public\r\n     */\r\n    destroy() {\r\n        this.clearListeners();\r\n        this.stop();\r\n        if (this.stopPassiveEffect) {\r\n            this.stopPassiveEffect();\r\n        }\r\n    }\r\n}\r\nfunction motionValue(init, options) {\r\n    return new MotionValue(init, options);\r\n}\r\n\r\nexport { MotionValue, collectMotionValues, motionValue };\r\n","import { rgba } from './rgba.mjs';\r\nimport { isColorString } from './utils.mjs';\r\n\r\nfunction parseHex(v) {\r\n    let r = \"\";\r\n    let g = \"\";\r\n    let b = \"\";\r\n    let a = \"\";\r\n    // If we have 6 characters, ie #FF0000\r\n    if (v.length > 5) {\r\n        r = v.substring(1, 3);\r\n        g = v.substring(3, 5);\r\n        b = v.substring(5, 7);\r\n        a = v.substring(7, 9);\r\n        // Or we have 3 characters, ie #F00\r\n    }\r\n    else {\r\n        r = v.substring(1, 2);\r\n        g = v.substring(2, 3);\r\n        b = v.substring(3, 4);\r\n        a = v.substring(4, 5);\r\n        r += r;\r\n        g += g;\r\n        b += b;\r\n        a += a;\r\n    }\r\n    return {\r\n        red: parseInt(r, 16),\r\n        green: parseInt(g, 16),\r\n        blue: parseInt(b, 16),\r\n        alpha: a ? parseInt(a, 16) / 255 : 1,\r\n    };\r\n}\r\nconst hex = {\r\n    test: /*@__PURE__*/ isColorString(\"#\"),\r\n    parse: parseHex,\r\n    transform: rgba.transform,\r\n};\r\n\r\nexport { hex };\r\n","import { alpha } from '../numbers/index.mjs';\r\nimport { percent } from '../numbers/units.mjs';\r\nimport { sanitize } from '../utils/sanitize.mjs';\r\nimport { isColorString, splitColor } from './utils.mjs';\r\n\r\nconst hsla = {\r\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\r\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\r\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\r\n        return (\"hsla(\" +\r\n            Math.round(hue) +\r\n            \", \" +\r\n            percent.transform(sanitize(saturation)) +\r\n            \", \" +\r\n            percent.transform(sanitize(lightness)) +\r\n            \", \" +\r\n            sanitize(alpha.transform(alpha$1)) +\r\n            \")\");\r\n    },\r\n};\r\n\r\nexport { hsla };\r\n","import { hex } from './hex.mjs';\r\nimport { hsla } from './hsla.mjs';\r\nimport { rgba } from './rgba.mjs';\r\n\r\nconst color = {\r\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\r\n    parse: (v) => {\r\n        if (rgba.test(v)) {\r\n            return rgba.parse(v);\r\n        }\r\n        else if (hsla.test(v)) {\r\n            return hsla.parse(v);\r\n        }\r\n        else {\r\n            return hex.parse(v);\r\n        }\r\n    },\r\n    transform: (v) => {\r\n        return typeof v === \"string\"\r\n            ? v\r\n            : v.hasOwnProperty(\"red\")\r\n                ? rgba.transform(v)\r\n                : hsla.transform(v);\r\n    },\r\n};\r\n\r\nexport { color };\r\n","import { clamp } from '../../../utils/clamp.mjs';\r\nimport { alpha, number } from '../numbers/index.mjs';\r\nimport { sanitize } from '../utils/sanitize.mjs';\r\nimport { isColorString, splitColor } from './utils.mjs';\r\n\r\nconst clampRgbUnit = (v) => clamp(0, 255, v);\r\nconst rgbUnit = {\r\n    ...number,\r\n    transform: (v) => Math.round(clampRgbUnit(v)),\r\n};\r\nconst rgba = {\r\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\r\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\r\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\r\n        rgbUnit.transform(red) +\r\n        \", \" +\r\n        rgbUnit.transform(green) +\r\n        \", \" +\r\n        rgbUnit.transform(blue) +\r\n        \", \" +\r\n        sanitize(alpha.transform(alpha$1)) +\r\n        \")\",\r\n};\r\n\r\nexport { rgbUnit, rgba };\r\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\r\n\r\nexport { singleColorRegex };\r\n","import { floatRegex } from '../utils/float-regex.mjs';\r\nimport { isNullish } from '../utils/is-nullish.mjs';\r\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\r\n\r\n/**\r\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\r\n * but false if a number or multiple colors\r\n */\r\nconst isColorString = (type, testProp) => (v) => {\r\n    return Boolean((typeof v === \"string\" &&\r\n        singleColorRegex.test(v) &&\r\n        v.startsWith(type)) ||\r\n        (testProp &&\r\n            !isNullish(v) &&\r\n            Object.prototype.hasOwnProperty.call(v, testProp)));\r\n};\r\nconst splitColor = (aName, bName, cName) => (v) => {\r\n    if (typeof v !== \"string\")\r\n        return v;\r\n    const [a, b, c, alpha] = v.match(floatRegex);\r\n    return {\r\n        [aName]: parseFloat(a),\r\n        [bName]: parseFloat(b),\r\n        [cName]: parseFloat(c),\r\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\r\n    };\r\n};\r\n\r\nexport { isColorString, splitColor };\r\n","function isNullish(v) {\r\n    return v == null;\r\n}\r\n\r\nexport { isNullish };\r\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\r\n\r\nexport { colorRegex };\r\n","import { color } from '../color/index.mjs';\r\nimport { colorRegex } from '../utils/color-regex.mjs';\r\nimport { floatRegex } from '../utils/float-regex.mjs';\r\nimport { sanitize } from '../utils/sanitize.mjs';\r\n\r\nfunction test(v) {\r\n    var _a, _b;\r\n    return (isNaN(v) &&\r\n        typeof v === \"string\" &&\r\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\r\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\r\n            0);\r\n}\r\nconst NUMBER_TOKEN = \"number\";\r\nconst COLOR_TOKEN = \"color\";\r\nconst VAR_TOKEN = \"var\";\r\nconst VAR_FUNCTION_TOKEN = \"var(\";\r\nconst SPLIT_TOKEN = \"${}\";\r\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\r\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\r\nfunction analyseComplexValue(value) {\r\n    const originalValue = value.toString();\r\n    const values = [];\r\n    const indexes = {\r\n        color: [],\r\n        number: [],\r\n        var: [],\r\n    };\r\n    const types = [];\r\n    let i = 0;\r\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\r\n        if (color.test(parsedValue)) {\r\n            indexes.color.push(i);\r\n            types.push(COLOR_TOKEN);\r\n            values.push(color.parse(parsedValue));\r\n        }\r\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\r\n            indexes.var.push(i);\r\n            types.push(VAR_TOKEN);\r\n            values.push(parsedValue);\r\n        }\r\n        else {\r\n            indexes.number.push(i);\r\n            types.push(NUMBER_TOKEN);\r\n            values.push(parseFloat(parsedValue));\r\n        }\r\n        ++i;\r\n        return SPLIT_TOKEN;\r\n    });\r\n    const split = tokenised.split(SPLIT_TOKEN);\r\n    return { values, split, indexes, types };\r\n}\r\nfunction parseComplexValue(v) {\r\n    return analyseComplexValue(v).values;\r\n}\r\nfunction createTransformer(source) {\r\n    const { split, types } = analyseComplexValue(source);\r\n    const numSections = split.length;\r\n    return (v) => {\r\n        let output = \"\";\r\n        for (let i = 0; i < numSections; i++) {\r\n            output += split[i];\r\n            if (v[i] !== undefined) {\r\n                const type = types[i];\r\n                if (type === NUMBER_TOKEN) {\r\n                    output += sanitize(v[i]);\r\n                }\r\n                else if (type === COLOR_TOKEN) {\r\n                    output += color.transform(v[i]);\r\n                }\r\n                else {\r\n                    output += v[i];\r\n                }\r\n            }\r\n        }\r\n        return output;\r\n    };\r\n}\r\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\r\nfunction getAnimatableNone(v) {\r\n    const parsed = parseComplexValue(v);\r\n    const transformer = createTransformer(v);\r\n    return transformer(parsed.map(convertNumbersToZero));\r\n}\r\nconst complex = {\r\n    test,\r\n    parse: parseComplexValue,\r\n    createTransformer,\r\n    getAnimatableNone,\r\n};\r\n\r\nexport { analyseComplexValue, complex };\r\n","import { clamp } from '../../../utils/clamp.mjs';\r\n\r\nconst number = {\r\n    test: (v) => typeof v === \"number\",\r\n    parse: parseFloat,\r\n    transform: (v) => v,\r\n};\r\nconst alpha = {\r\n    ...number,\r\n    transform: (v) => clamp(0, 1, v),\r\n};\r\nconst scale = {\r\n    ...number,\r\n    default: 1,\r\n};\r\n\r\nexport { alpha, number, scale };\r\n","const createUnitType = (unit) => ({\r\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\r\n    parse: parseFloat,\r\n    transform: (v) => `${v}${unit}`,\r\n});\r\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\r\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\r\nconst px = /*@__PURE__*/ createUnitType(\"px\");\r\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\r\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\r\nconst progressPercentage = {\r\n    ...percent,\r\n    parse: (v) => percent.parse(v) / 100,\r\n    transform: (v) => percent.transform(v * 100),\r\n};\r\n\r\nexport { degrees, percent, progressPercentage, px, vh, vw };\r\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\r\n\r\nexport { floatRegex };\r\n","// If this number is a decimal, make it just five decimal places\r\n// to avoid exponents\r\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\r\n\r\nexport { sanitize };\r\n","import { useContext, useState, useEffect } from 'react';\r\nimport { motionValue } from './index.mjs';\r\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\r\nimport { useConstant } from '../utils/use-constant.mjs';\r\n\r\n/**\r\n * Creates a `MotionValue` to track the state and velocity of a value.\r\n *\r\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\r\n *\r\n * ```jsx\r\n * export const MyComponent = () => {\r\n *   const scale = useMotionValue(1)\r\n *\r\n *   return <motion.div style={{ scale }} />\r\n * }\r\n * ```\r\n *\r\n * @param initial - The initial state.\r\n *\r\n * @public\r\n */\r\nfunction useMotionValue(initial) {\r\n    const value = useConstant(() => motionValue(initial));\r\n    /**\r\n     * If this motion value is being used in static mode, like on\r\n     * the Framer canvas, force components to rerender when the motion\r\n     * value is updated.\r\n     */\r\n    const { isStatic } = useContext(MotionConfigContext);\r\n    if (isStatic) {\r\n        const [, setLatest] = useState(initial);\r\n        useEffect(() => value.on(\"change\", setLatest), []);\r\n    }\r\n    return value;\r\n}\r\n\r\nexport { useMotionValue };\r\n","import { useContext, useRef, useInsertionEffect } from 'react';\r\nimport { animateValue } from '../animation/animators/MainThreadAnimation.mjs';\r\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\r\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\r\nimport { useMotionValue } from './use-motion-value.mjs';\r\nimport { isMotionValue } from './utils/is-motion-value.mjs';\r\nimport { frame, frameData } from '../frameloop/frame.mjs';\r\n\r\nfunction toNumber(v) {\r\n    if (typeof v === \"number\")\r\n        return v;\r\n    return parseFloat(v);\r\n}\r\n/**\r\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\r\n *\r\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\r\n * to another `MotionValue`.\r\n *\r\n * @remarks\r\n *\r\n * ```jsx\r\n * const x = useSpring(0, { stiffness: 300 })\r\n * const y = useSpring(x, { damping: 10 })\r\n * ```\r\n *\r\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\r\n * @param springConfig - Configuration options for the spring.\r\n * @returns `MotionValue`\r\n *\r\n * @public\r\n */\r\nfunction useSpring(source, config = {}) {\r\n    const { isStatic } = useContext(MotionConfigContext);\r\n    const activeSpringAnimation = useRef(null);\r\n    const value = useMotionValue(isMotionValue(source) ? toNumber(source.get()) : source);\r\n    const latestValue = useRef(value.get());\r\n    const latestSetter = useRef(() => { });\r\n    const startAnimation = () => {\r\n        /**\r\n         * If the previous animation hasn't had the chance to even render a frame, render it now.\r\n         */\r\n        const animation = activeSpringAnimation.current;\r\n        if (animation && animation.time === 0) {\r\n            animation.sample(frameData.delta);\r\n        }\r\n        stopAnimation();\r\n        activeSpringAnimation.current = animateValue({\r\n            keyframes: [value.get(), latestValue.current],\r\n            velocity: value.getVelocity(),\r\n            type: \"spring\",\r\n            restDelta: 0.001,\r\n            restSpeed: 0.01,\r\n            ...config,\r\n            onUpdate: latestSetter.current,\r\n        });\r\n    };\r\n    const stopAnimation = () => {\r\n        if (activeSpringAnimation.current) {\r\n            activeSpringAnimation.current.stop();\r\n        }\r\n    };\r\n    useInsertionEffect(() => {\r\n        return value.attach((v, set) => {\r\n            /**\r\n             * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\r\n             * at that level, but this will work for now\r\n             */\r\n            if (isStatic)\r\n                return set(v);\r\n            latestValue.current = v;\r\n            latestSetter.current = set;\r\n            frame.update(startAnimation);\r\n            return value.get();\r\n        }, stopAnimation);\r\n    }, [JSON.stringify(config)]);\r\n    useIsomorphicLayoutEffect(() => {\r\n        if (isMotionValue(source)) {\r\n            return source.on(\"change\", (v) => value.set(toNumber(v)));\r\n        }\r\n    }, [value]);\r\n    return value;\r\n}\r\n\r\nexport { useSpring };\r\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\r\n\r\nexport { isMotionValue };\r\n","import { memo } from 'motion-utils';\r\n\r\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\r\n\r\nexport { supportsScrollTimeline };\r\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\r\n\r\nclass BaseGroupPlaybackControls {\r\n    constructor(animations) {\r\n        // Bound to accomodate common `return animation.stop` pattern\r\n        this.stop = () => this.runAll(\"stop\");\r\n        this.animations = animations.filter(Boolean);\r\n    }\r\n    get finished() {\r\n        // Support for new finished Promise and legacy thennable API\r\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\r\n    }\r\n    /**\r\n     * TODO: Filter out cancelled or stopped animations before returning\r\n     */\r\n    getAll(propName) {\r\n        return this.animations[0][propName];\r\n    }\r\n    setAll(propName, newValue) {\r\n        for (let i = 0; i < this.animations.length; i++) {\r\n            this.animations[i][propName] = newValue;\r\n        }\r\n    }\r\n    attachTimeline(timeline, fallback) {\r\n        const subscriptions = this.animations.map((animation) => {\r\n            if (supportsScrollTimeline() && animation.attachTimeline) {\r\n                return animation.attachTimeline(timeline);\r\n            }\r\n            else if (typeof fallback === \"function\") {\r\n                return fallback(animation);\r\n            }\r\n        });\r\n        return () => {\r\n            subscriptions.forEach((cancel, i) => {\r\n                cancel && cancel();\r\n                this.animations[i].stop();\r\n            });\r\n        };\r\n    }\r\n    get time() {\r\n        return this.getAll(\"time\");\r\n    }\r\n    set time(time) {\r\n        this.setAll(\"time\", time);\r\n    }\r\n    get speed() {\r\n        return this.getAll(\"speed\");\r\n    }\r\n    set speed(speed) {\r\n        this.setAll(\"speed\", speed);\r\n    }\r\n    get startTime() {\r\n        return this.getAll(\"startTime\");\r\n    }\r\n    get duration() {\r\n        let max = 0;\r\n        for (let i = 0; i < this.animations.length; i++) {\r\n            max = Math.max(max, this.animations[i].duration);\r\n        }\r\n        return max;\r\n    }\r\n    runAll(methodName) {\r\n        this.animations.forEach((controls) => controls[methodName]());\r\n    }\r\n    flatten() {\r\n        this.runAll(\"flatten\");\r\n    }\r\n    play() {\r\n        this.runAll(\"play\");\r\n    }\r\n    pause() {\r\n        this.runAll(\"pause\");\r\n    }\r\n    cancel() {\r\n        this.runAll(\"cancel\");\r\n    }\r\n    complete() {\r\n        this.runAll(\"complete\");\r\n    }\r\n}\r\n\r\nexport { BaseGroupPlaybackControls };\r\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\r\n\r\n/**\r\n * TODO: This is a temporary class to support the legacy\r\n * thennable API\r\n */\r\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\r\n    then(onResolve, onReject) {\r\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\r\n    }\r\n}\r\n\r\nexport { GroupPlaybackControls };\r\n","function getValueTransition(transition, key) {\r\n    return transition\r\n        ? transition[key] ||\r\n            transition[\"default\"] ||\r\n            transition\r\n        : undefined;\r\n}\r\n\r\nexport { getValueTransition };\r\n","/**\r\n * Implement a practical max duration for keyframe generation\r\n * to prevent infinite loops\r\n */\r\nconst maxGeneratorDuration = 20000;\r\nfunction calcGeneratorDuration(generator) {\r\n    let duration = 0;\r\n    const timeStep = 50;\r\n    let state = generator.next(duration);\r\n    while (!state.done && duration < maxGeneratorDuration) {\r\n        duration += timeStep;\r\n        state = generator.next(duration);\r\n    }\r\n    return duration >= maxGeneratorDuration ? Infinity : duration;\r\n}\r\n\r\nexport { calcGeneratorDuration, maxGeneratorDuration };\r\n","function isGenerator(type) {\r\n    return typeof type === \"function\";\r\n}\r\n\r\nexport { isGenerator };\r\n","function attachTimeline(animation, timeline) {\r\n    animation.timeline = timeline;\r\n    animation.onfinish = null;\r\n}\r\n\r\nexport { attachTimeline };\r\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\r\n\r\nexport { isBezierDefinition };\r\n","/**\r\n * Add the ability for test suites to manually set support flags\r\n * to better test more environments.\r\n */\r\nconst supportsFlags = {\r\n    linearEasing: undefined,\r\n};\r\n\r\nexport { supportsFlags };\r\n","import { memo } from 'motion-utils';\r\nimport { supportsFlags } from './flags.mjs';\r\n\r\nfunction memoSupports(callback, supportsFlag) {\r\n    const memoized = memo(callback);\r\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\r\n}\r\n\r\nexport { memoSupports };\r\n","import { memoSupports } from './memo.mjs';\r\n\r\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\r\n    try {\r\n        document\r\n            .createElement(\"div\")\r\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n    return true;\r\n}, \"linearEasing\");\r\n\r\nexport { supportsLinearEasing };\r\n","import { progress } from 'motion-utils';\r\n\r\nconst generateLinearEasing = (easing, duration, // as milliseconds\r\nresolution = 10 // as milliseconds\r\n) => {\r\n    let points = \"\";\r\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\r\n    for (let i = 0; i < numPoints; i++) {\r\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\r\n    }\r\n    return `linear(${points.substring(0, points.length - 2)})`;\r\n};\r\n\r\nexport { generateLinearEasing };\r\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\r\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\r\nimport { generateLinearEasing } from './linear.mjs';\r\n\r\nfunction isWaapiSupportedEasing(easing) {\r\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\r\n        !easing ||\r\n        (typeof easing === \"string\" &&\r\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\r\n        isBezierDefinition(easing) ||\r\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\r\n}\r\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\r\nconst supportedWaapiEasing = {\r\n    linear: \"linear\",\r\n    ease: \"ease\",\r\n    easeIn: \"ease-in\",\r\n    easeOut: \"ease-out\",\r\n    easeInOut: \"ease-in-out\",\r\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\r\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\r\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\r\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\r\n};\r\nfunction mapEasingToNativeEasing(easing, duration) {\r\n    if (!easing) {\r\n        return undefined;\r\n    }\r\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\r\n        return generateLinearEasing(easing, duration);\r\n    }\r\n    else if (isBezierDefinition(easing)) {\r\n        return cubicBezierAsString(easing);\r\n    }\r\n    else if (Array.isArray(easing)) {\r\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\r\n            supportedWaapiEasing.easeOut);\r\n    }\r\n    else {\r\n        return supportedWaapiEasing[easing];\r\n    }\r\n}\r\n\r\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\r\n","const isDragging = {\r\n    x: false,\r\n    y: false,\r\n};\r\nfunction isDragActive() {\r\n    return isDragging.x || isDragging.y;\r\n}\r\n\r\nexport { isDragActive, isDragging };\r\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\r\n\r\nfunction setupGesture(elementOrSelector, options) {\r\n    const elements = resolveElements(elementOrSelector);\r\n    const gestureAbortController = new AbortController();\r\n    const eventOptions = {\r\n        passive: true,\r\n        ...options,\r\n        signal: gestureAbortController.signal,\r\n    };\r\n    const cancel = () => gestureAbortController.abort();\r\n    return [elements, eventOptions, cancel];\r\n}\r\n\r\nexport { setupGesture };\r\n","function resolveElements(elementOrSelector, scope, selectorCache) {\r\n    var _a;\r\n    if (elementOrSelector instanceof Element) {\r\n        return [elementOrSelector];\r\n    }\r\n    else if (typeof elementOrSelector === \"string\") {\r\n        let root = document;\r\n        if (scope) {\r\n            // TODO: Refactor to utils package\r\n            // invariant(\r\n            //     Boolean(scope.current),\r\n            //     \"Scope provided, but no element detected.\"\r\n            // )\r\n            root = scope.current;\r\n        }\r\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\r\n        return elements ? Array.from(elements) : [];\r\n    }\r\n    return Array.from(elementOrSelector);\r\n}\r\n\r\nexport { resolveElements };\r\n","import { isDragActive } from './drag/state/is-active.mjs';\r\nimport { setupGesture } from './utils/setup.mjs';\r\n\r\n/**\r\n * Filter out events that are not pointer events, or are triggering\r\n * while a Motion gesture is active.\r\n */\r\nfunction filterEvents(callback) {\r\n    return (event) => {\r\n        if (event.pointerType === \"touch\" || isDragActive())\r\n            return;\r\n        callback(event);\r\n    };\r\n}\r\n/**\r\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\r\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\r\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\r\n *\r\n * @public\r\n */\r\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\r\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\r\n    const onPointerEnter = filterEvents((enterEvent) => {\r\n        const { target } = enterEvent;\r\n        const onHoverEnd = onHoverStart(enterEvent);\r\n        if (typeof onHoverEnd !== \"function\" || !target)\r\n            return;\r\n        const onPointerLeave = filterEvents((leaveEvent) => {\r\n            onHoverEnd(leaveEvent);\r\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\r\n        });\r\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\r\n    });\r\n    elements.forEach((element) => {\r\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\r\n    });\r\n    return cancel;\r\n}\r\n\r\nexport { hover };\r\n","/**\r\n * Recursively traverse up the tree to check whether the provided child node\r\n * is the parent or a descendant of it.\r\n *\r\n * @param parent - Element to find\r\n * @param child - Element to test against parent\r\n */\r\nconst isNodeOrChild = (parent, child) => {\r\n    if (!child) {\r\n        return false;\r\n    }\r\n    else if (parent === child) {\r\n        return true;\r\n    }\r\n    else {\r\n        return isNodeOrChild(parent, child.parentElement);\r\n    }\r\n};\r\n\r\nexport { isNodeOrChild };\r\n","const isPrimaryPointer = (event) => {\r\n    if (event.pointerType === \"mouse\") {\r\n        return typeof event.button !== \"number\" || event.button <= 0;\r\n    }\r\n    else {\r\n        /**\r\n         * isPrimary is true for all mice buttons, whereas every touch point\r\n         * is regarded as its own input. So subsequent concurrent touch points\r\n         * will be false.\r\n         *\r\n         * Specifically match against false here as incomplete versions of\r\n         * PointerEvents in very old browser might have it set as undefined.\r\n         */\r\n        return event.isPrimary !== false;\r\n    }\r\n};\r\n\r\nexport { isPrimaryPointer };\r\n","const focusableElements = new Set([\r\n    \"BUTTON\",\r\n    \"INPUT\",\r\n    \"SELECT\",\r\n    \"TEXTAREA\",\r\n    \"A\",\r\n]);\r\nfunction isElementKeyboardAccessible(element) {\r\n    return (focusableElements.has(element.tagName) ||\r\n        element.tabIndex !== -1);\r\n}\r\n\r\nexport { isElementKeyboardAccessible };\r\n","const isPressing = new WeakSet();\r\n\r\nexport { isPressing };\r\n","import { isPressing } from './state.mjs';\r\n\r\n/**\r\n * Filter out events that are not \"Enter\" keys.\r\n */\r\nfunction filterEvents(callback) {\r\n    return (event) => {\r\n        if (event.key !== \"Enter\")\r\n            return;\r\n        callback(event);\r\n    };\r\n}\r\nfunction firePointerEvent(target, type) {\r\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\r\n}\r\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\r\n    const element = focusEvent.currentTarget;\r\n    if (!element)\r\n        return;\r\n    const handleKeydown = filterEvents(() => {\r\n        if (isPressing.has(element))\r\n            return;\r\n        firePointerEvent(element, \"down\");\r\n        const handleKeyup = filterEvents(() => {\r\n            firePointerEvent(element, \"up\");\r\n        });\r\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\r\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\r\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\r\n    });\r\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\r\n    /**\r\n     * Add an event listener that fires on blur to remove the keydown events.\r\n     */\r\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\r\n};\r\n\r\nexport { enableKeyboardPress };\r\n","import { isDragActive } from '../drag/state/is-active.mjs';\r\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\r\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\r\nimport { setupGesture } from '../utils/setup.mjs';\r\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\r\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\r\nimport { isPressing } from './utils/state.mjs';\r\n\r\n/**\r\n * Filter out events that are not primary pointer events, or are triggering\r\n * while a Motion gesture is active.\r\n */\r\nfunction isValidPressEvent(event) {\r\n    return isPrimaryPointer(event) && !isDragActive();\r\n}\r\n/**\r\n * Create a press gesture.\r\n *\r\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\r\n * automatically filters out secondary pointer events like right\r\n * click and multitouch.\r\n *\r\n * It also adds accessibility support for keyboards, where\r\n * an element with a press gesture will receive focus and\r\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\r\n *\r\n * This is different to a browser's `\"click\"` event, which does\r\n * respond to keyboards but only for the `\"click\"` itself, rather\r\n * than the press start and end/cancel. The element also needs\r\n * to be focusable for this to work, whereas a press gesture will\r\n * make an element focusable by default.\r\n *\r\n * @public\r\n */\r\nfunction press(elementOrSelector, onPressStart, options = {}) {\r\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\r\n    const startPress = (startEvent) => {\r\n        const element = startEvent.currentTarget;\r\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\r\n            return;\r\n        isPressing.add(element);\r\n        const onPressEnd = onPressStart(startEvent);\r\n        const onPointerEnd = (endEvent, success) => {\r\n            window.removeEventListener(\"pointerup\", onPointerUp);\r\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\r\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\r\n                return;\r\n            }\r\n            isPressing.delete(element);\r\n            if (typeof onPressEnd === \"function\") {\r\n                onPressEnd(endEvent, { success });\r\n            }\r\n        };\r\n        const onPointerUp = (upEvent) => {\r\n            onPointerEnd(upEvent, options.useGlobalTarget ||\r\n                isNodeOrChild(element, upEvent.target));\r\n        };\r\n        const onPointerCancel = (cancelEvent) => {\r\n            onPointerEnd(cancelEvent, false);\r\n        };\r\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\r\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\r\n    };\r\n    elements.forEach((element) => {\r\n        if (!isElementKeyboardAccessible(element) &&\r\n            element.getAttribute(\"tabindex\") === null) {\r\n            element.tabIndex = 0;\r\n        }\r\n        const target = options.useGlobalTarget ? window : element;\r\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\r\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\r\n    });\r\n    return cancelEvents;\r\n}\r\n\r\nexport { press };\r\n","import { isDragging } from './is-active.mjs';\r\n\r\nfunction setDragLock(axis) {\r\n    if (axis === \"x\" || axis === \"y\") {\r\n        if (isDragging[axis]) {\r\n            return null;\r\n        }\r\n        else {\r\n            isDragging[axis] = true;\r\n            return () => {\r\n                isDragging[axis] = false;\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        if (isDragging.x || isDragging.y) {\r\n            return null;\r\n        }\r\n        else {\r\n            isDragging.x = isDragging.y = true;\r\n            return () => {\r\n                isDragging.x = isDragging.y = false;\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport { setDragLock };\r\n","import { noop } from './noop.mjs';\r\n\r\nlet warning = noop;\r\nlet invariant = noop;\r\nif (process.env.NODE_ENV !== \"production\") {\r\n    warning = (check, message) => {\r\n        if (!check && typeof console !== \"undefined\") {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = (check, message) => {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\r\n\r\nexport { invariant, warning };\r\n","/*#__NO_SIDE_EFFECTS__*/\r\nfunction memo(callback) {\r\n    let result;\r\n    return () => {\r\n        if (result === undefined)\r\n            result = callback();\r\n        return result;\r\n    };\r\n}\r\n\r\nexport { memo };\r\n","/*#__NO_SIDE_EFFECTS__*/\r\nconst noop = (any) => any;\r\n\r\nexport { noop };\r\n","/*\r\n  Progress within given range\r\n\r\n  Given a lower limit and an upper limit, we return the progress\r\n  (expressed as a number 0-1) represented by the given value, and\r\n  limit that progress to within 0-1.\r\n\r\n  @param [number]: Lower limit\r\n  @param [number]: Upper limit\r\n  @param [number]: Value to find progress within given range\r\n  @return [number]: Progress of value within range as expressed 0-1\r\n*/\r\n/*#__NO_SIDE_EFFECTS__*/\r\nconst progress = (from, to, value) => {\r\n    const toFromDifference = to - from;\r\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\r\n};\r\n\r\nexport { progress };\r\n","/**\r\n * Converts seconds to milliseconds\r\n *\r\n * @param seconds - Time in seconds.\r\n * @return milliseconds - Converted time in milliseconds.\r\n */\r\n/*#__NO_SIDE_EFFECTS__*/\r\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\r\n/*#__NO_SIDE_EFFECTS__*/\r\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\r\n\r\nexport { millisecondsToSeconds, secondsToMilliseconds };\r\n"],"names":["f","k","Symbol","for","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","exports","jsx","jsxs","module","isAnimatable","value","name","Array","isArray","complex","test","startsWith","BaseAnimation","constructor","autoplay","delay","repeat","repeatDelay","repeatType","options","this","isStopped","hasAttemptedResolve","createdAt","now","updateFinishedPromise","calcStartTime","resolvedAt","resolved","_resolved","onKeyframesResolved","keyframes","finalKeyframe","velocity","onComplete","onUpdate","isGenerator","originKeyframe","targetKeyframe","length","isOriginAnimatable","isTargetAnimatable","i","hasKeyframesChanged","canAnimate","resolveFinishedPromise","duration","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","flatten","ease","Promise","hueToRgb","t","mixImmediate","mixLinearColor","from","to","v","fromExpo","expo","Math","sqrt","colorTypes","hex","rgba","hsla","asRGBA","color","find","Boolean","model","parse","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","transform","invisibleValues","Set","mixNumber","getMixer","mixComplex","mixArray","mixObject","output","numValues","blendValue","map","undefined","origin","target","template","createTransformer","originStats","targetStats","indexes","var","number","has","values","mixVisibility","pipe","_a","orderedOrigin","pointers","types","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","max","springDefaults","rootIterations","calcAngularFreq","undampedFreq","dampingRatio","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","bounce","visualDuration","restSpeed","restDelta","state","done","stiffness","damping","mass","isResolvedFromDuration","springOptions","root","PI","clamp","derived","envelope","derivative","exponentialDecay","delta","exp","pow","initialGuess","result","approximateRoot","isNaN","findSpring","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","generator","calculatedDuration","next","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toString","easing","progress","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","easingLookup","linear","noop","circIn","circInOut","circOut","backIn","backInOut","backOut","anticipate","easingDefinitionToFunction","definition","x1","y1","x2","y2","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","offset","o","convertOffsetToTimes","arr","remaining","offsetProgress","push","fillOffset","defaultOffset","mapTimeToKeyframe","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","interpolate","splice","frameloopDriver","update","passTimestamp","timestamp","start","stop","isProcessing","generators","decay","tween","percentToProgress","percent","MainThreadAnimation","super","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","resolver","cancel","teardown","onStop","motionValue","element","KeyframeResolver$1","KeyframeResolver","resolvedKeyframes","scheduleResolve","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","time","newTime","driver","newSpeed","hasChanged","isScheduled","resume","onPlay","complete","stopDriver","animateValue","isNotNull","getFinalKeyframe","filter","index","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","acos","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","x","lowerBound","upperBound","currentX","currentT","binarySubdivide","mirrorEasing","reverseEasing","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","step","schedule","keepAlive","immediate","queue","add","delete","process","frameData","forEach","clear","createRenderStep","read","resolveKeyframes","preRender","render","postRender","processBatch","useManualTiming","performance","frame","cancelFrame","frameSteps","requestAnimationFrame","clearTime","set","queueMicrotask","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","args","get","_target","isAnimationControls","isKeyframesTarget","shallowCompare","prev","prevLength","isVariantLabel","getValueState","visualElement","getVelocity","resolveVariantFromProps","custom","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","positionalKeys","setMotionValue","hasValue","getValue","addValue","addValueToWillChange","willChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","isZeroValueString","maxDefaults","applyDefaultFilter","slice","split","match","unit","defaultValue","functionRegex","getAnimatableNone","functions","join","browserNumberValueTypes","borderWidth","px","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","y","z","perspective","transformPerspective","opacity","originX","originY","originZ","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","token","fallback","exec","token1","token2","parseCSSVariable","window","getComputedStyle","getPropertyValue","trimmed","trim","parseFloat","testValueType","dimensionValueTypes","vw","vh","findDimensionValueType","DOMKeyframesResolver","unresolvedKeyframes","readKeyframes","keyframe","resolveNoneKeyframes","originType","targetType","needsMeasurement","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","measureInitialState","suspendedScrollY","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","measureEndState","finalKeyframeIndex","removedTransforms","unsetTransformName","unsetTransformValue","acceleratedValues","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","animation","valueName","keyframeOptions","animate","iterations","direction","startWaapiAnimation","pendingTimeline","onfinish","playbackRate","playState","attachTimeline","timeline","sampleTime","setWithVelocity","supports","HTMLElement","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","transition","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animations","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","all","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","notify","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","createAnimationState","resolvedDefinition","animateVisualElement","animateList","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","arguments","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","extractEventInfo","event","point","pageX","pageY","addPointerEvent","addPointerInfo","PanSession","handlers","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","calcLength","axis","calcAxisDelta","source","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","applyTo","boxShadow","compareByDepth","FlatTree","children","isDirty","resolveMotionValue","unwrappedValue","toValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","circ","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","_b","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","DocumentProjectionNode","document","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","observeIntersection","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","tap","endEvent","success","useGlobalTarget","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","LazyContext","strict","MotionContext","isVariantNode","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","useMotionRef","visualState","externalRef","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","inherit","getCurrentTreeVariants","useMemo","useCreateMotionContext","layoutProjection","combined","getProjectionFunctionality","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","lowercaseSVGElements","isSVGComponent","indexOf","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","renderState","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","vars","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","isForcedMotionValue","newValues","charAt","substring","layoutProps","svgMotionConfig","needsMeasure","getBBox","updateSVGDimensions","htmlMotionConfig","copyRawValuesOnly","useHTMLProps","htmlProps","useInitialMotionValues","useStyle","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","default","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createElement","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","getAttribute","motion","checkStringStartsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","positionalValues","transformPropOrder","transformProps","toResolve","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","elementsToMeasure","transformsToRestore","restore","scrollTo","readAllKeyframes","flushKeyframeResolvers","isAsync","isComplete","currentValue","valueAsRead","setFinalKeyframe","renderEndStyles","MotionGlobalConfig","addUniqueItem","item","removeItem","isBrowser","combineFunctions","transformers","SubscriptionManager","subscriptions","numSubscriptions","getSize","useConstant","init","instantAnimationState","useIsomorphicLayoutEffect","useLayoutEffect","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","prevFrameValue","prevUpdatedAt","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","r","parseInt","alpha$1","rgbUnit","clampRgbUnit","singleColorRegex","isColorString","testProp","isNullish","splitColor","aName","bName","cName","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","parsedValue","parseComplexValue","numSections","sanitize","convertNumbersToZero","parsed","transformer","createUnitType","endsWith","degrees","progressPercentage","floatRegex","useMotionValue","setLatest","useState","toNumber","useSpring","activeSpringAnimation","latestSetter","isMotionValue","supportsScrollTimeline","memo","ScrollTimeline","runAll","finished","getAll","propName","setAll","newValue","methodName","GroupPlaybackControls","onResolve","onReject","catch","maxGeneratorDuration","calcGeneratorDuration","isBezierDefinition","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","generateLinearEasing","resolution","points","numPoints","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","segmentEasing","isDragActive","setupGesture","elementOrSelector","elements","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","filterEvents","pointerType","onHoverStart","eventOptions","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","isNodeOrChild","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","firePointerEvent","dispatchEvent","PointerEvent","bubbles","enableKeyboardPress","focusEvent","currentTarget","handleKeydown","handleKeyup","isValidPressEvent","press","onPressStart","cancelEvents","startPress","onPressEnd","onPointerEnd","onPointerUp","onPointerCancel","upEvent","cancelEvent","isElementKeyboardAccessible","setDragLock","warning","invariant","any","toFromDifference","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds"],"sourceRoot":""}