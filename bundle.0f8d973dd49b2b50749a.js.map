{"version":3,"file":"bundle.0f8d973dd49b2b50749a.js","mappings":"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","sources":["webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/components/create-factory.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/components/motion/create.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/use-motion-value.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/use-spring.mjs","webpack://my-3d-portfolio/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/animation/controls/Group.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/utils/supports/flags.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/utils/supports/memo.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/gestures/hover.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/gestures/press/index.mjs","webpack://my-3d-portfolio/./node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","webpack://my-3d-portfolio/./node_modules/motion-utils/dist/es/errors.mjs","webpack://my-3d-portfolio/./node_modules/motion-utils/dist/es/memo.mjs","webpack://my-3d-portfolio/./node_modules/motion-utils/dist/es/noop.mjs","webpack://my-3d-portfolio/./node_modules/motion-utils/dist/es/progress.mjs","webpack://my-3d-portfolio/./node_modules/motion-utils/dist/es/time-conversion.mjs"],"sourcesContent":["import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.18.2\", `Attempting to mix Motion versions ${nextValue.version} with 11.18.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.18.2\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","import { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","import { useContext, useRef, useInsertionEffect } from 'react';\nimport { animateValue } from '../animation/animators/MainThreadAnimation.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../utils/use-isomorphic-effect.mjs';\nimport { useMotionValue } from './use-motion-value.mjs';\nimport { isMotionValue } from './utils/is-motion-value.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nfunction toNumber(v) {\n    if (typeof v === \"number\")\n        return v;\n    return parseFloat(v);\n}\n/**\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\n *\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\n * to another `MotionValue`.\n *\n * @remarks\n *\n * ```jsx\n * const x = useSpring(0, { stiffness: 300 })\n * const y = useSpring(x, { damping: 10 })\n * ```\n *\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\n * @param springConfig - Configuration options for the spring.\n * @returns `MotionValue`\n *\n * @public\n */\nfunction useSpring(source, config = {}) {\n    const { isStatic } = useContext(MotionConfigContext);\n    const activeSpringAnimation = useRef(null);\n    const value = useMotionValue(isMotionValue(source) ? toNumber(source.get()) : source);\n    const latestValue = useRef(value.get());\n    const latestSetter = useRef(() => { });\n    const startAnimation = () => {\n        /**\n         * If the previous animation hasn't had the chance to even render a frame, render it now.\n         */\n        const animation = activeSpringAnimation.current;\n        if (animation && animation.time === 0) {\n            animation.sample(frameData.delta);\n        }\n        stopAnimation();\n        activeSpringAnimation.current = animateValue({\n            keyframes: [value.get(), latestValue.current],\n            velocity: value.getVelocity(),\n            type: \"spring\",\n            restDelta: 0.001,\n            restSpeed: 0.01,\n            ...config,\n            onUpdate: latestSetter.current,\n        });\n    };\n    const stopAnimation = () => {\n        if (activeSpringAnimation.current) {\n            activeSpringAnimation.current.stop();\n        }\n    };\n    useInsertionEffect(() => {\n        return value.attach((v, set) => {\n            /**\n             * A more hollistic approach to this might be to use isStatic to fix VisualElement animations\n             * at that level, but this will work for now\n             */\n            if (isStatic)\n                return set(v);\n            latestValue.current = v;\n            latestSetter.current = set;\n            frame.update(startAnimation);\n            return value.get();\n        }, stopAnimation);\n    }, [JSON.stringify(config)]);\n    useIsomorphicLayoutEffect(() => {\n        if (isMotionValue(source)) {\n            return source.on(\"change\", (v) => value.set(toNumber(v)));\n        }\n    }, [value]);\n    return value;\n}\n\nexport { useSpring };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n"],"names":["isAnimatable","value","name","Array","isArray","complex","test","startsWith","BaseAnimation","constructor","autoplay","delay","type","repeat","repeatDelay","repeatType","options","this","isStopped","hasAttemptedResolve","createdAt","now","updateFinishedPromise","calcStartTime","resolvedAt","resolved","_resolved","onKeyframesResolved","keyframes","finalKeyframe","velocity","onComplete","onUpdate","isGenerator","originKeyframe","targetKeyframe","length","isOriginAnimatable","isTargetAnimatable","current","i","hasKeyframesChanged","canAnimate","resolveFinishedPromise","duration","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","flatten","ease","Promise","hueToRgb","p","q","t","mixImmediate","a","b","mixLinearColor","from","to","v","fromExpo","expo","Math","sqrt","colorTypes","hex","rgba","hsla","asRGBA","color","find","Boolean","model","parse","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","transform","invisibleValues","Set","mixNumber","getMixer","mixComplex","mixArray","mixObject","output","numValues","blendValue","map","key","undefined","origin","target","template","createTransformer","originStats","targetStats","indexes","var","number","has","values","mixVisibility","pipe","_a","orderedOrigin","pointers","types","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","max","springDefaults","rootIterations","calcAngularFreq","undampedFreq","dampingRatio","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","bounce","visualDuration","restSpeed","restDelta","state","done","stiffness","damping","mass","isResolvedFromDuration","springOptions","root","PI","clamp","derived","envelope","derivative","exponentialDecay","delta","exp","d","e","pow","f","g","initialGuess","result","approximateRoot","isNaN","findSpring","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","generator","calculatedDuration","next","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toString","easing","progress","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","easingLookup","linear","noop","circIn","circInOut","circOut","backIn","backInOut","backOut","anticipate","easingDefinitionToFunction","definition","x1","y1","x2","y2","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","offset","o","convertOffsetToTimes","arr","remaining","offsetProgress","push","fillOffset","defaultOffset","mapTimeToKeyframe","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","interpolate","splice","frameloopDriver","update","passTimestamp","timestamp","start","stop","isProcessing","generators","decay","tween","percentToProgress","percent","MainThreadAnimation","super","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","resolver","cancel","teardown","onStop","motionValue","element","KeyframeResolver$1","KeyframeResolver","resolvedKeyframes","scheduleResolve","Object","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","time","newTime","driver","newSpeed","hasChanged","isScheduled","resume","onPlay","complete","stopDriver","animateValue","isNotNull","getFinalKeyframe","filter","index","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","acos","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","x","lowerBound","upperBound","currentX","currentT","binarySubdivide","mirrorEasing","reverseEasing","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","step","schedule","keepAlive","immediate","queue","add","delete","process","frameData","forEach","clear","createRenderStep","read","resolveKeyframes","preRender","render","postRender","processBatch","useManualTiming","performance","frame","cancelFrame","frameSteps","requestAnimationFrame","clearTime","set","queueMicrotask","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","args","get","_target","isAnimationControls","isKeyframesTarget","shallowCompare","prev","prevLength","isVariantLabel","getValueState","visualElement","getVelocity","resolveVariantFromProps","props","custom","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","positionalKeys","setMotionValue","hasValue","getValue","addValue","addValueToWillChange","willChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","isZeroValueString","maxDefaults","applyDefaultFilter","slice","split","match","unit","defaultValue","functionRegex","getAnimatableNone","functions","join","browserNumberValueTypes","borderWidth","px","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","y","z","perspective","transformPerspective","opacity","originX","originY","originZ","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","token","fallback","exec","token1","token2","parseCSSVariable","window","getComputedStyle","getPropertyValue","trimmed","trim","parseFloat","testValueType","dimensionValueTypes","vw","vh","findDimensionValueType","DOMKeyframesResolver","unresolvedKeyframes","readKeyframes","keyframe","resolveNoneKeyframes","originType","targetType","needsMeasurement","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","measureInitialState","suspendedScrollY","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","measureEndState","finalKeyframeIndex","removedTransforms","unsetTransformName","unsetTransformValue","acceleratedValues","supportsWaapi","hasOwnProperty","call","Element","prototype","unsupportedEasingFunctions","AcceleratedAnimation","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","animation","valueName","keyframeOptions","animate","iterations","direction","startWaapiAnimation","pendingTimeline","onfinish","playbackRate","playState","attachTimeline","timeline","sampleTime","setWithVelocity","supports","HTMLElement","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","transition","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animations","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","all","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","notify","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","createAnimationState","resolvedDefinition","animateVisualElement","animateList","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","Infinity","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","arguments","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","extractEventInfo","event","point","pageX","pageY","addPointerEvent","addPointerInfo","PanSession","handlers","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","ref","calcLength","axis","calcAxisDelta","source","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","applyTo","boxShadow","compareByDepth","FlatTree","children","isDirty","resolveMotionValue","unwrappedValue","toValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","circ","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","_b","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","DocumentProjectionNode","document","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","observeIntersection","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","tap","endEvent","success","useGlobalTarget","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","LazyContext","strict","MotionContext","isVariantNode","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","inherit","getCurrentTreeVariants","useMemo","useCreateMotionContext","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","lowercaseSVGElements","isSVGComponent","indexOf","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","renderState","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","vars","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","isForcedMotionValue","newValues","charAt","substring","layoutProps","svgMotionConfig","needsMeasure","getBBox","updateSVGDimensions","htmlMotionConfig","copyRawValuesOnly","useHTMLProps","htmlProps","useInitialMotionValues","useStyle","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","default","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createElement","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","getAttribute","motion","checkStringStartsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","positionalValues","transformPropOrder","transformProps","toResolve","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","elementsToMeasure","transformsToRestore","restore","scrollTo","readAllKeyframes","flushKeyframeResolvers","isAsync","isComplete","currentValue","valueAsRead","setFinalKeyframe","renderEndStyles","MotionGlobalConfig","addUniqueItem","item","removeItem","isBrowser","combineFunctions","transformers","SubscriptionManager","subscriptions","c","numSubscriptions","getSize","useConstant","init","instantAnimationState","useIsomorphicLayoutEffect","useLayoutEffect","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","prevFrameValue","prevUpdatedAt","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","r","parseInt","alpha$1","rgbUnit","clampRgbUnit","singleColorRegex","isColorString","testProp","isNullish","splitColor","aName","bName","cName","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","parsedValue","parseComplexValue","numSections","sanitize","convertNumbersToZero","parsed","transformer","createUnitType","endsWith","degrees","progressPercentage","floatRegex","useMotionValue","setLatest","useState","toNumber","useSpring","activeSpringAnimation","latestSetter","isMotionValue","supportsScrollTimeline","memo","ScrollTimeline","runAll","finished","getAll","propName","setAll","newValue","methodName","GroupPlaybackControls","onResolve","onReject","catch","maxGeneratorDuration","calcGeneratorDuration","isBezierDefinition","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","generateLinearEasing","resolution","points","numPoints","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","segmentEasing","isDragActive","setupGesture","elementOrSelector","elements","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","filterEvents","pointerType","onHoverStart","eventOptions","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","isNodeOrChild","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","firePointerEvent","dispatchEvent","PointerEvent","bubbles","enableKeyboardPress","focusEvent","currentTarget","handleKeydown","handleKeyup","isValidPressEvent","press","onPressStart","cancelEvents","startPress","onPressEnd","onPointerEnd","onPointerUp","onPointerCancel","upEvent","cancelEvent","isElementKeyboardAccessible","setDragLock","warning","invariant","any","toFromDifference","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds"],"sourceRoot":""}