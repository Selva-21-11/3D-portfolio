{"version":3,"file":"277.3cc1de1918043c069d59.js","mappings":"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","sources":["webpack://my-3d-portfolio/./src/components/BMWScene.js","webpack://my-3d-portfolio/./src/components/BikeScene.js","webpack://my-3d-portfolio/./src/components/ModelViewer.js","webpack://my-3d-portfolio/./src/components/ModelsSection.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useGLTF, OrbitControls } from '@react-three/drei';\nimport { useThree } from '@react-three/fiber';\n\nconst BMWScene = () => {\n  const { scene, cameras } = useGLTF('./assets/BMW.glb');\n  const { set, camera } = useThree();\n\n  useEffect(() => {\n    if (cameras.length > 0) {\n      camera.position.copy(cameras[0].position);\n      camera.fov = cameras[0].fov;\n      camera.near = cameras[0].near;\n      camera.far = cameras[0].far;\n      camera.updateProjectionMatrix();\n      set({ camera });\n      console.log(\"üöÄ Using GLB Camera for BMW:\", camera);\n    } else {\n      camera.position.set(4, 3, 6);\n      camera.lookAt(0, 0, 0);\n      console.log(\"‚ö†Ô∏è No GLB Camera found! Using fallback.\");\n    }\n  }, [cameras, set, camera]);\n\n  return (\n    <>\n      <primitive object={scene} />\n      <OrbitControls enableZoom={true} />\n    </>\n  );\n};\n\nexport default BMWScene;\n","import React, { useEffect } from 'react';\nimport { useGLTF, OrbitControls } from '@react-three/drei';\nimport { useThree } from '@react-three/fiber';\n\nconst BikeScene = () => {\n  const { scene, cameras, lights, environment } = useGLTF('./assets/Bike.glb');\n  const { set, camera, gl } = useThree();\n\n  useEffect(() => {\n    // Use the camera from the GLB model if available\n    if (cameras.length > 0) {\n      set({ camera: cameras[0] });\n      console.log(\"üöÄ Using GLB Camera for Bike:\", {\n        fov: cameras[0].fov,\n        position: cameras[0].position.toArray(),\n        near: cameras[0].near,\n        far: cameras[0].far\n      });\n    } else {\n      // Fallback to a default camera if no camera is found in the GLB model\n      camera.position.set(3, 2, 5);\n      camera.lookAt(0, 0, 0);\n      console.log(\"‚ö†Ô∏è No GLB Camera found! Using fallback camera:\", {\n        fov: camera.fov,\n        position: camera.position.toArray(),\n        near: camera.near,\n        far: camera.far\n      });\n    }\n\n    // Traverse through the scene and add punctual lights from GLB model\n    scene.traverse((child) => {\n      if (child.isLight) {\n        // Check if the light is punctual (e.g., point, spot, or directional light)\n        if (child.isPointLight || child.isSpotLight || child.isDirectionalLight) {\n          // Adjust intensity (you can customize the intensity control here)\n          child.intensity = 1.5; // Set the intensity to a desired level (you can change this value)\n          console.log(`üí° Adjusted light intensity: ${child.intensity}`);\n        }\n        scene.add(child); // Add the light to the scene as it is in the GLB\n      }\n    });\n\n    // Apply environment map if available in the GLB\n    if (environment) {\n      scene.environment = environment;\n      gl.setEnvironmentMap(scene.environment);\n      console.log(\"üåç Environment Map Applied from GLB!\");\n    }\n\n  }, [cameras, set, camera, scene, lights, environment, gl]);\n\n  return (\n    <>\n      <primitive object={scene} />\n      <OrbitControls enableZoom={true} />\n    </>\n  );\n};\n\nexport default BikeScene;\n","import React from 'react';\nimport BMWScene from './BMWScene';\nimport BikeScene from './BikeScene';\n\nconst ModelViewer = ({ modelName }) => {\n  return (\n    <>\n      {modelName === 'bmw' && <BMWScene />}\n      {modelName === 'bike' && <BikeScene />}\n    </>\n  );\n};\n\nexport default ModelViewer;\n","import React, { useState } from \"react\";\nimport ModelViewer from \"./ModelViewer\"; // Assuming you already have this\nimport { Canvas } from \"@react-three/fiber\";\nimport { Suspense } from \"react\";\n\nconst models = [\n    {\n        name: \"BMW Car\",\n        thumbnail: \"./assets/BMW_thumbnail.png\",\n        modelName: \"bmw\",\n        metadata: \"Modeled in Blender | 2024\",\n    },\n    {\n        name: \"Sport Bike\",\n        thumbnail: \"./assets/Bike_thumbnail.png\",\n        modelName: \"bike\",\n        metadata: \"Modeled in Blender | 2023\",\n    },\n    {\n        name: \"Spaceship\",\n        thumbnail: \"./assets/spaceship_thumbnail.png\",\n        modelName: \"spaceship\",\n        metadata: \"Modeled in Blender | 2023\",\n    }\n];\n\nconst ModelsSection = () => {\n    const [selectedModel, setSelectedModel] = useState(null);\n\n    const handleModelClick = (model) => {\n        setSelectedModel(model);\n    };\n\n    const handleClose = () => {\n        setSelectedModel(null);\n    };\n\n    return (\n        <div className=\"models-section\">\n            <h2 className=\"section-title\">3D Models Showcase</h2>\n            <div className=\"models-grid\">\n                {models.map((model, index) => (\n                    <div \n                        key={index} \n                        className=\"model-card\"\n                        onClick={() => handleModelClick(model)}\n                    >\n                        <img src={model.thumbnail} alt={model.name} className=\"thumbnail\" />\n                        <div className=\"overlay\">\n                            <h3>{model.name}</h3>\n                            <p>{model.metadata}</p>\n                        </div>\n                    </div>\n                ))}\n            </div>\n\n            {/* Popup with no animation */}\n            {selectedModel && (\n                <>\n                    <div className=\"popup-overlay\" onClick={handleClose}></div>\n                    <div className=\"model-popup\">\n                        <button className=\"close-btn\" onClick={handleClose}>‚úñ</button>\n                        <div className=\"canvas-box\">\n                            <Suspense fallback={<div>Loading 3D Model...</div>}>\n                                <Canvas camera={{ position: [0, 1, 5] }}>\n                                    <ModelViewer modelName={selectedModel.modelName} />\n                                </Canvas>\n                            </Suspense>\n                        </div>\n                    </div>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default ModelsSection;\n"],"names":["BMWScene","scene","cameras","useGLTF","set","camera","useThree","useEffect","length","position","copy","fov","near","far","updateProjectionMatrix","console","log","lookAt","React","object","OrbitControls","enableZoom","BikeScene","lights","environment","gl","toArray","traverse","child","isLight","isPointLight","isSpotLight","isDirectionalLight","intensity","concat","add","setEnvironmentMap","_ref","modelName","models","name","thumbnail","metadata","ModelsSection","selectedModel","setSelectedModel","useState","handleClose","className","map","model","index","key","onClick","handleModelClick","src","alt","Suspense","fallback","Canvas","ModelViewer"],"sourceRoot":""}