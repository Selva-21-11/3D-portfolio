{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport * as THREE from 'three';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader';\nimport { gsap } from 'gsap';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { FilmPass } from 'three/examples/jsm/postprocessing/FilmPass';\nconst TitleBG = () => {\n  _s();\n  const sceneRef = useRef(null);\n  const rendererRef = useRef(null);\n  const cameraRef = useRef(null);\n  const bigSphereRef = useRef(null);\n  const smallSphereRef = useRef(null);\n  const composerRef = useRef(null);\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const aspect = window.innerWidth / window.innerHeight;\n    const camera = new THREE.OrthographicCamera(-2 * aspect,\n    // left\n    2 * aspect,\n    // right\n    2,\n    // top\n    -2,\n    // bottom\n    0.1,\n    // near\n    1000 // far\n    );\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.outputEncoding = THREE.sRGBEncoding;\n    renderer.physicallyCorrectLights = true;\n    document.getElementById('hero').appendChild(renderer.domElement);\n    rendererRef.current = renderer;\n    cameraRef.current = camera;\n    sceneRef.current = scene;\n    camera.position.z = 5;\n\n    // Load HDR for lighting\n    const rgbeLoader = new RGBELoader();\n    rgbeLoader.load('/assets/hdri_image.hdr', texture => {\n      texture.mapping = THREE.EquirectangularReflectionMapping;\n      scene.environment = texture;\n      scene.background = texture;\n    });\n\n    // Big Sphere (Stationary) with Matte Material and Subtle Shine\n    const bigSphereGeometry = new THREE.SphereGeometry(1, 32, 32);\n    const bigSphereMaterial = new THREE.MeshStandardMaterial({\n      color: 0x000000,\n      metalness: 0.05,\n      roughness: 0.85,\n      clearcoat: 0.1,\n      clearcoatRoughness: 0.2\n    });\n    const bigSphere = new THREE.Mesh(bigSphereGeometry, bigSphereMaterial);\n    scene.add(bigSphere);\n    bigSphereRef.current = bigSphere;\n\n    // Small Sphere (Will rotate around Z-axis) with Matte Material and Subtle Shine\n    const smallSphereGeometry = new THREE.SphereGeometry(0.3, 32, 32);\n    const smallSphereMaterial = new THREE.MeshStandardMaterial({\n      color: 0xff0000,\n      metalness: 0.05,\n      roughness: 0.85,\n      clearcoat: 0.1,\n      clearcoatRoughness: 0.2\n    });\n    const smallSphere = new THREE.Mesh(smallSphereGeometry, smallSphereMaterial);\n    smallSphere.position.set(2, 0, 0);\n    scene.add(smallSphere);\n    smallSphereRef.current = smallSphere;\n    const handleMouseMove = event => {\n      const mouseXPosition = event.clientX / window.innerWidth * 2 - 1;\n      const angle = mouseXPosition * Math.PI;\n      const radius = 1;\n      const targetX = radius * Math.cos(angle);\n      const targetY = radius * Math.sin(angle);\n      const targetZ = -1;\n      gsap.to(smallSphere.position, {\n        x: targetX,\n        y: targetY,\n        z: targetZ,\n        duration: 0.5,\n        ease: 'power3.out'\n      });\n    };\n    window.addEventListener('mousemove', handleMouseMove);\n\n    // Post-processing setup\n    const composer = new EffectComposer(renderer);\n    const renderPass = new RenderPass(scene, camera);\n    composer.addPass(renderPass);\n    const filmPass = new FilmPass(0.35, 0.025, 648, false);\n    composer.addPass(filmPass);\n    composerRef.current = composer;\n\n    // Animation Loop\n    const animate = () => {\n      if (bigSphereRef.current) {\n        bigSphereRef.current.rotation.y += 0.01;\n      }\n      composer.render();\n      requestAnimationFrame(animate);\n    };\n    animate();\n\n    // Resize Event Listener\n    const onWindowResize = () => {\n      const aspect = window.innerWidth / window.innerHeight;\n      camera.left = -2 * aspect;\n      camera.right = 2 * aspect;\n      camera.top = 2;\n      camera.bottom = -2;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', onWindowResize);\n    return () => {\n      window.removeEventListener('resize', onWindowResize);\n      window.removeEventListener('mousemove', handleMouseMove);\n      renderer.dispose();\n      bigSphereGeometry.dispose();\n      bigSphereMaterial.dispose();\n      smallSphereGeometry.dispose();\n      smallSphereMaterial.dispose();\n      scene.clear();\n    };\n  }, []);\n  return null;\n};\n_s(TitleBG, \"PQQqMr0DFQTW5vKSRBQfYl+2+4U=\");\n_c = TitleBG;\nexport default TitleBG;\nvar _c;\n$RefreshReg$(_c, \"TitleBG\");","map":{"version":3,"names":["React","useRef","useEffect","THREE","RGBELoader","gsap","EffectComposer","RenderPass","FilmPass","TitleBG","_s","sceneRef","rendererRef","cameraRef","bigSphereRef","smallSphereRef","composerRef","scene","Scene","aspect","window","innerWidth","innerHeight","camera","OrthographicCamera","renderer","WebGLRenderer","antialias","setSize","outputEncoding","sRGBEncoding","physicallyCorrectLights","document","getElementById","appendChild","domElement","current","position","z","rgbeLoader","load","texture","mapping","EquirectangularReflectionMapping","environment","background","bigSphereGeometry","SphereGeometry","bigSphereMaterial","MeshStandardMaterial","color","metalness","roughness","clearcoat","clearcoatRoughness","bigSphere","Mesh","add","smallSphereGeometry","smallSphereMaterial","smallSphere","set","handleMouseMove","event","mouseXPosition","clientX","angle","Math","PI","radius","targetX","cos","targetY","sin","targetZ","to","x","y","duration","ease","addEventListener","composer","renderPass","addPass","filmPass","animate","rotation","render","requestAnimationFrame","onWindowResize","left","right","top","bottom","updateProjectionMatrix","removeEventListener","dispose","clear","_c","$RefreshReg$"],"sources":["F:/Portfolio/3D-portfolio/src/components/TitleBG.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport * as THREE from 'three';\r\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader';\r\nimport { gsap } from 'gsap';\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\r\nimport { FilmPass } from 'three/examples/jsm/postprocessing/FilmPass';\r\n\r\nconst TitleBG = () => {\r\n  const sceneRef = useRef(null);\r\n  const rendererRef = useRef(null);\r\n  const cameraRef = useRef(null);\r\n  const bigSphereRef = useRef(null);\r\n  const smallSphereRef = useRef(null);\r\n  const composerRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const scene = new THREE.Scene();\r\n    const aspect = window.innerWidth / window.innerHeight;\r\n    const camera = new THREE.OrthographicCamera(\r\n      -2 * aspect, // left\r\n      2 * aspect,  // right\r\n      2,           // top\r\n      -2,          // bottom\r\n      0.1,          // near\r\n      1000          // far\r\n    );\r\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.outputEncoding = THREE.sRGBEncoding;\r\n    renderer.physicallyCorrectLights = true;\r\n    document.getElementById('hero').appendChild(renderer.domElement);\r\n    rendererRef.current = renderer;\r\n    cameraRef.current = camera;\r\n    sceneRef.current = scene;\r\n\r\n    camera.position.z = 5;\r\n\r\n    // Load HDR for lighting\r\n    const rgbeLoader = new RGBELoader();\r\n    rgbeLoader.load('/assets/hdri_image.hdr', (texture) => {\r\n      texture.mapping = THREE.EquirectangularReflectionMapping;\r\n      scene.environment = texture;\r\n      scene.background = texture;\r\n    });\r\n\r\n    // Big Sphere (Stationary) with Matte Material and Subtle Shine\r\n    const bigSphereGeometry = new THREE.SphereGeometry(1, 32, 32);\r\n    const bigSphereMaterial = new THREE.MeshStandardMaterial({\r\n      color: 0x000000,\r\n      metalness: 0.05,\r\n      roughness: 0.85,\r\n      clearcoat: 0.1,\r\n      clearcoatRoughness: 0.2,\r\n    });\r\n    const bigSphere = new THREE.Mesh(bigSphereGeometry, bigSphereMaterial);\r\n    scene.add(bigSphere);\r\n    bigSphereRef.current = bigSphere;\r\n\r\n    // Small Sphere (Will rotate around Z-axis) with Matte Material and Subtle Shine\r\n    const smallSphereGeometry = new THREE.SphereGeometry(0.3, 32, 32);\r\n    const smallSphereMaterial = new THREE.MeshStandardMaterial({\r\n      color: 0xff0000,\r\n      metalness: 0.05,\r\n      roughness: 0.85,\r\n      clearcoat: 0.1,\r\n      clearcoatRoughness: 0.2,\r\n    });\r\n    const smallSphere = new THREE.Mesh(smallSphereGeometry, smallSphereMaterial);\r\n    smallSphere.position.set(2, 0, 0);\r\n    scene.add(smallSphere);\r\n    smallSphereRef.current = smallSphere;\r\n\r\n    const handleMouseMove = (event) => {\r\n      const mouseXPosition = (event.clientX / window.innerWidth) * 2 - 1;\r\n      const angle = mouseXPosition * Math.PI;\r\n      const radius = 1;\r\n      const targetX = radius * Math.cos(angle);\r\n      const targetY = radius * Math.sin(angle);\r\n      const targetZ = -1;\r\n      \r\n      gsap.to(smallSphere.position, {\r\n        x: targetX,\r\n        y: targetY,\r\n        z: targetZ,\r\n        duration: 0.5,\r\n        ease: 'power3.out',\r\n      });\r\n    };\r\n\r\n    window.addEventListener('mousemove', handleMouseMove);\r\n\r\n    // Post-processing setup\r\n    const composer = new EffectComposer(renderer);\r\n    const renderPass = new RenderPass(scene, camera);\r\n    composer.addPass(renderPass);\r\n\r\n    const filmPass = new FilmPass(0.35, 0.025, 648, false);\r\n    composer.addPass(filmPass);\r\n\r\n    composerRef.current = composer;\r\n\r\n    // Animation Loop\r\n    const animate = () => {\r\n      if (bigSphereRef.current) {\r\n        bigSphereRef.current.rotation.y += 0.01;\r\n      }\r\n      composer.render();\r\n      requestAnimationFrame(animate);\r\n    };\r\n    animate();\r\n\r\n    // Resize Event Listener\r\n    const onWindowResize = () => {\r\n      const aspect = window.innerWidth / window.innerHeight;\r\n      camera.left = -2 * aspect;\r\n      camera.right = 2 * aspect;\r\n      camera.top = 2;\r\n      camera.bottom = -2;\r\n      camera.updateProjectionMatrix();\r\n      renderer.setSize(window.innerWidth, window.innerHeight);\r\n    };\r\n    window.addEventListener('resize', onWindowResize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', onWindowResize);\r\n      window.removeEventListener('mousemove', handleMouseMove);\r\n      renderer.dispose();\r\n      bigSphereGeometry.dispose();\r\n      bigSphereMaterial.dispose();\r\n      smallSphereGeometry.dispose();\r\n      smallSphereMaterial.dispose();\r\n      scene.clear();\r\n    };\r\n  }, []);\r\n\r\n  return null;\r\n};\r\n\r\nexport default TitleBG;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,uCAAuC;AAClE,SAASC,IAAI,QAAQ,MAAM;AAC3B,SAASC,cAAc,QAAQ,kDAAkD;AACjF,SAASC,UAAU,QAAQ,8CAA8C;AACzE,SAASC,QAAQ,QAAQ,4CAA4C;AAErE,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,QAAQ,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMW,WAAW,GAAGX,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMY,SAAS,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMa,YAAY,GAAGb,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMc,cAAc,GAAGd,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMe,WAAW,GAAGf,MAAM,CAAC,IAAI,CAAC;EAEhCC,SAAS,CAAC,MAAM;IACd,MAAMe,KAAK,GAAG,IAAId,KAAK,CAACe,KAAK,CAAC,CAAC;IAC/B,MAAMC,MAAM,GAAGC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW;IACrD,MAAMC,MAAM,GAAG,IAAIpB,KAAK,CAACqB,kBAAkB,CACzC,CAAC,CAAC,GAAGL,MAAM;IAAE;IACb,CAAC,GAAGA,MAAM;IAAG;IACb,CAAC;IAAY;IACb,CAAC,CAAC;IAAW;IACb,GAAG;IAAW;IACd,IAAI,CAAU;IAChB,CAAC;IACD,MAAMM,QAAQ,GAAG,IAAItB,KAAK,CAACuB,aAAa,CAAC;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC;IAC7DF,QAAQ,CAACG,OAAO,CAACR,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACvDG,QAAQ,CAACI,cAAc,GAAG1B,KAAK,CAAC2B,YAAY;IAC5CL,QAAQ,CAACM,uBAAuB,GAAG,IAAI;IACvCC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAACC,WAAW,CAACT,QAAQ,CAACU,UAAU,CAAC;IAChEvB,WAAW,CAACwB,OAAO,GAAGX,QAAQ;IAC9BZ,SAAS,CAACuB,OAAO,GAAGb,MAAM;IAC1BZ,QAAQ,CAACyB,OAAO,GAAGnB,KAAK;IAExBM,MAAM,CAACc,QAAQ,CAACC,CAAC,GAAG,CAAC;;IAErB;IACA,MAAMC,UAAU,GAAG,IAAInC,UAAU,CAAC,CAAC;IACnCmC,UAAU,CAACC,IAAI,CAAC,wBAAwB,EAAGC,OAAO,IAAK;MACrDA,OAAO,CAACC,OAAO,GAAGvC,KAAK,CAACwC,gCAAgC;MACxD1B,KAAK,CAAC2B,WAAW,GAAGH,OAAO;MAC3BxB,KAAK,CAAC4B,UAAU,GAAGJ,OAAO;IAC5B,CAAC,CAAC;;IAEF;IACA,MAAMK,iBAAiB,GAAG,IAAI3C,KAAK,CAAC4C,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IAC7D,MAAMC,iBAAiB,GAAG,IAAI7C,KAAK,CAAC8C,oBAAoB,CAAC;MACvDC,KAAK,EAAE,QAAQ;MACfC,SAAS,EAAE,IAAI;MACfC,SAAS,EAAE,IAAI;MACfC,SAAS,EAAE,GAAG;MACdC,kBAAkB,EAAE;IACtB,CAAC,CAAC;IACF,MAAMC,SAAS,GAAG,IAAIpD,KAAK,CAACqD,IAAI,CAACV,iBAAiB,EAAEE,iBAAiB,CAAC;IACtE/B,KAAK,CAACwC,GAAG,CAACF,SAAS,CAAC;IACpBzC,YAAY,CAACsB,OAAO,GAAGmB,SAAS;;IAEhC;IACA,MAAMG,mBAAmB,GAAG,IAAIvD,KAAK,CAAC4C,cAAc,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC;IACjE,MAAMY,mBAAmB,GAAG,IAAIxD,KAAK,CAAC8C,oBAAoB,CAAC;MACzDC,KAAK,EAAE,QAAQ;MACfC,SAAS,EAAE,IAAI;MACfC,SAAS,EAAE,IAAI;MACfC,SAAS,EAAE,GAAG;MACdC,kBAAkB,EAAE;IACtB,CAAC,CAAC;IACF,MAAMM,WAAW,GAAG,IAAIzD,KAAK,CAACqD,IAAI,CAACE,mBAAmB,EAAEC,mBAAmB,CAAC;IAC5EC,WAAW,CAACvB,QAAQ,CAACwB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjC5C,KAAK,CAACwC,GAAG,CAACG,WAAW,CAAC;IACtB7C,cAAc,CAACqB,OAAO,GAAGwB,WAAW;IAEpC,MAAME,eAAe,GAAIC,KAAK,IAAK;MACjC,MAAMC,cAAc,GAAID,KAAK,CAACE,OAAO,GAAG7C,MAAM,CAACC,UAAU,GAAI,CAAC,GAAG,CAAC;MAClE,MAAM6C,KAAK,GAAGF,cAAc,GAAGG,IAAI,CAACC,EAAE;MACtC,MAAMC,MAAM,GAAG,CAAC;MAChB,MAAMC,OAAO,GAAGD,MAAM,GAAGF,IAAI,CAACI,GAAG,CAACL,KAAK,CAAC;MACxC,MAAMM,OAAO,GAAGH,MAAM,GAAGF,IAAI,CAACM,GAAG,CAACP,KAAK,CAAC;MACxC,MAAMQ,OAAO,GAAG,CAAC,CAAC;MAElBrE,IAAI,CAACsE,EAAE,CAACf,WAAW,CAACvB,QAAQ,EAAE;QAC5BuC,CAAC,EAAEN,OAAO;QACVO,CAAC,EAAEL,OAAO;QACVlC,CAAC,EAAEoC,OAAO;QACVI,QAAQ,EAAE,GAAG;QACbC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ,CAAC;IAED3D,MAAM,CAAC4D,gBAAgB,CAAC,WAAW,EAAElB,eAAe,CAAC;;IAErD;IACA,MAAMmB,QAAQ,GAAG,IAAI3E,cAAc,CAACmB,QAAQ,CAAC;IAC7C,MAAMyD,UAAU,GAAG,IAAI3E,UAAU,CAACU,KAAK,EAAEM,MAAM,CAAC;IAChD0D,QAAQ,CAACE,OAAO,CAACD,UAAU,CAAC;IAE5B,MAAME,QAAQ,GAAG,IAAI5E,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC;IACtDyE,QAAQ,CAACE,OAAO,CAACC,QAAQ,CAAC;IAE1BpE,WAAW,CAACoB,OAAO,GAAG6C,QAAQ;;IAE9B;IACA,MAAMI,OAAO,GAAGA,CAAA,KAAM;MACpB,IAAIvE,YAAY,CAACsB,OAAO,EAAE;QACxBtB,YAAY,CAACsB,OAAO,CAACkD,QAAQ,CAACT,CAAC,IAAI,IAAI;MACzC;MACAI,QAAQ,CAACM,MAAM,CAAC,CAAC;MACjBC,qBAAqB,CAACH,OAAO,CAAC;IAChC,CAAC;IACDA,OAAO,CAAC,CAAC;;IAET;IACA,MAAMI,cAAc,GAAGA,CAAA,KAAM;MAC3B,MAAMtE,MAAM,GAAGC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW;MACrDC,MAAM,CAACmE,IAAI,GAAG,CAAC,CAAC,GAAGvE,MAAM;MACzBI,MAAM,CAACoE,KAAK,GAAG,CAAC,GAAGxE,MAAM;MACzBI,MAAM,CAACqE,GAAG,GAAG,CAAC;MACdrE,MAAM,CAACsE,MAAM,GAAG,CAAC,CAAC;MAClBtE,MAAM,CAACuE,sBAAsB,CAAC,CAAC;MAC/BrE,QAAQ,CAACG,OAAO,CAACR,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACzD,CAAC;IACDF,MAAM,CAAC4D,gBAAgB,CAAC,QAAQ,EAAES,cAAc,CAAC;IAEjD,OAAO,MAAM;MACXrE,MAAM,CAAC2E,mBAAmB,CAAC,QAAQ,EAAEN,cAAc,CAAC;MACpDrE,MAAM,CAAC2E,mBAAmB,CAAC,WAAW,EAAEjC,eAAe,CAAC;MACxDrC,QAAQ,CAACuE,OAAO,CAAC,CAAC;MAClBlD,iBAAiB,CAACkD,OAAO,CAAC,CAAC;MAC3BhD,iBAAiB,CAACgD,OAAO,CAAC,CAAC;MAC3BtC,mBAAmB,CAACsC,OAAO,CAAC,CAAC;MAC7BrC,mBAAmB,CAACqC,OAAO,CAAC,CAAC;MAC7B/E,KAAK,CAACgF,KAAK,CAAC,CAAC;IACf,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,IAAI;AACb,CAAC;AAACvF,EAAA,CAjIID,OAAO;AAAAyF,EAAA,GAAPzF,OAAO;AAmIb,eAAeA,OAAO;AAAC,IAAAyF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}